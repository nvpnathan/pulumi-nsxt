{
    "name": "nsxt",
    "description": "A Pulumi package for creating and managing nsxt cloud resources.",
    "keywords": [
        "pulumi",
        "nsxt"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`nsxt` Terraform Provider](https://github.com/terraform-providers/terraform-provider-nsxt).",
    "repository": "https://github.com/pulumi/pulumi-nsxt",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "allowUnverifiedSsl": {
                "type": "boolean",
                "defaultInfo": {
                    "environment": [
                        "NSXT_ALLOW_UNVERIFIED_SSL"
                    ]
                }
            },
            "caFile": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "NSXT_CA_FILE"
                    ]
                }
            },
            "clientAuthCertFile": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "NSXT_CLIENT_AUTH_CERT_FILE"
                    ]
                }
            },
            "clientAuthKeyFile": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "NSXT_CLIENT_AUTH_KEY_FILE"
                    ]
                }
            },
            "enforcementPoint": {
                "type": "string",
                "description": "Enforcement Point for NSXT Policy\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_POLICY_ENFORCEMENT_POINT"
                    ]
                }
            },
            "globalManager": {
                "type": "boolean",
                "description": "Is this a policy global manager endpoint\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_GLOBAL_MANAGER"
                    ]
                }
            },
            "host": {
                "type": "string",
                "description": "The hostname or IP address of the NSX manager.\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_MANAGER_HOST"
                    ]
                }
            },
            "maxRetries": {
                "type": "integer",
                "description": "Maximum number of HTTP client retries\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_MAX_RETRIES"
                    ]
                }
            },
            "password": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "NSXT_PASSWORD"
                    ]
                }
            },
            "remoteAuth": {
                "type": "boolean",
                "defaultInfo": {
                    "environment": [
                        "NSXT_REMOTE_AUTH"
                    ]
                }
            },
            "retryMaxDelay": {
                "type": "integer",
                "description": "Maximum delay in milliseconds between retries of a request\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_RETRY_MAX_DELAY"
                    ]
                }
            },
            "retryMinDelay": {
                "type": "integer",
                "description": "Minimum delay in milliseconds between retries of a request\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_RETRY_MIN_DELAY"
                    ]
                }
            },
            "retryOnStatusCodes": {
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "description": "HTTP replies status codes to retry on\n"
            },
            "toleratePartialSuccess": {
                "type": "boolean",
                "description": "Treat partial success status as success\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_TOLERATE_PARTIAL_SUCCESS"
                    ]
                }
            },
            "username": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "NSXT_USERNAME"
                    ]
                }
            },
            "vmcAuthHost": {
                "type": "string",
                "description": "URL for VMC authorization service (CSP)\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_VMC_AUTH_HOST"
                    ]
                }
            },
            "vmcToken": {
                "type": "string",
                "description": "Long-living API token for VMC authorization\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_VMC_TOKEN"
                    ]
                }
            }
        }
    },
    "types": {
        "nsxt:/AlgorithmTypeNSServiceTag:AlgorithmTypeNSServiceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/DHCPRelayProfileTag:DHCPRelayProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/DHCPRelayServiceTag:DHCPRelayServiceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/DHCPServerIPPoolDhcpGenericOption:DHCPServerIPPoolDhcpGenericOption": {
            "properties": {
                "code": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code",
                "values"
            ]
        },
        "nsxt:/DHCPServerIPPoolDhcpOption121:DHCPServerIPPoolDhcpOption121": {
            "properties": {
                "network": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nextHop": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "network",
                "nextHop"
            ]
        },
        "nsxt:/DHCPServerIPPoolIpRange:DHCPServerIPPoolIpRange": {
            "properties": {
                "end": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "nsxt:/DHCPServerIPPoolTag:DHCPServerIPPoolTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/DHCPServerProfileTag:DHCPServerProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/EtherTypeNSServiceTag:EtherTypeNSServiceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/FirewallSectionAppliedTo:FirewallSectionAppliedTo": {
            "properties": {
                "isValid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isValid",
                        "targetDisplayName"
                    ]
                }
            }
        },
        "nsxt:/FirewallSectionRule:FirewallSectionRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appliedTos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/FirewallSectionRuleAppliedTo:FirewallSectionRuleAppliedTo"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/FirewallSectionRuleDestination:FirewallSectionRuleDestination"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationsExcluded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "direction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleTag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/FirewallSectionRuleService:FirewallSectionRuleService"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/FirewallSectionRuleSource:FirewallSectionRuleSource"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourcesExcluded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "id",
                        "revision"
                    ]
                }
            }
        },
        "nsxt:/FirewallSectionRuleAppliedTo:FirewallSectionRuleAppliedTo": {
            "properties": {
                "isValid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isValid",
                        "targetDisplayName"
                    ]
                }
            }
        },
        "nsxt:/FirewallSectionRuleDestination:FirewallSectionRuleDestination": {
            "properties": {
                "isValid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isValid",
                        "targetDisplayName"
                    ]
                }
            }
        },
        "nsxt:/FirewallSectionRuleService:FirewallSectionRuleService": {
            "properties": {
                "isValid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isValid",
                        "targetDisplayName"
                    ]
                }
            }
        },
        "nsxt:/FirewallSectionRuleSource:FirewallSectionRuleSource": {
            "properties": {
                "isValid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isValid",
                        "targetDisplayName"
                    ]
                }
            }
        },
        "nsxt:/FirewallSectionTag:FirewallSectionTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/ICMPTypeNSServiceTag:ICMPTypeNSServiceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/IGMPTypeNSServiceTag:IGMPTypeNSServiceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/IPBlockSubnetAllocationRange:IPBlockSubnetAllocationRange": {
            "properties": {
                "end": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "end",
                        "start"
                    ]
                }
            }
        },
        "nsxt:/IPBlockSubnetTag:IPBlockSubnetTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/IPBlockTag:IPBlockTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/IPDiscoverySwitchingProfileTag:IPDiscoverySwitchingProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/IPPoolSubnet:IPPoolSubnet": {
            "properties": {
                "allocationRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsNameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsSuffix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatewayIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allocationRanges",
                "cidr"
            ]
        },
        "nsxt:/IPPoolTag:IPPoolTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/IPProtocolNSServiceTag:IPProtocolNSServiceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/IPSetTag:IPSetTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/L4PortSetNSServiceTag:L4PortSetNSServiceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBClientSSLProfileTag:LBClientSSLProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBCookiePersistenceProfileInsertModeParams:LBCookiePersistenceProfileInsertModeParams": {
            "properties": {
                "cookieDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieExpiryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookiePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIdleTime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxLifeTime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxIdleTime",
                        "maxLifeTime"
                    ]
                }
            }
        },
        "nsxt:/LBCookiePersistenceProfileTag:LBCookiePersistenceProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBFastTCPApplicationProfileTag:LBFastTCPApplicationProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBFastUDPApplicationProfileTag:LBFastUDPApplicationProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBHTTPApplicationProfileTag:LBHTTPApplicationProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBHTTPForwardingRuleBodyCondition:LBHTTPForwardingRuleBodyCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "value"
            ]
        },
        "nsxt:/LBHTTPForwardingRuleCookieCondition:LBHTTPForwardingRuleCookieCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "name",
                "value"
            ]
        },
        "nsxt:/LBHTTPForwardingRuleHeaderCondition:LBHTTPForwardingRuleHeaderCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "name",
                "value"
            ]
        },
        "nsxt:/LBHTTPForwardingRuleHttpRedirectAction:LBHTTPForwardingRuleHttpRedirectAction": {
            "properties": {
                "redirectStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redirectUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "redirectStatus",
                "redirectUrl"
            ]
        },
        "nsxt:/LBHTTPForwardingRuleHttpRejectAction:LBHTTPForwardingRuleHttpRejectAction": {
            "properties": {
                "replyMessage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replyStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "replyMessage",
                "replyStatus"
            ]
        },
        "nsxt:/LBHTTPForwardingRuleIpCondition:LBHTTPForwardingRuleIpCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceAddress"
            ]
        },
        "nsxt:/LBHTTPForwardingRuleMethodCondition:LBHTTPForwardingRuleMethodCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "nsxt:/LBHTTPForwardingRuleSelectPoolAction:LBHTTPForwardingRuleSelectPoolAction": {
            "properties": {
                "poolId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "poolId"
            ]
        },
        "nsxt:/LBHTTPForwardingRuleTag:LBHTTPForwardingRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBHTTPForwardingRuleTcpCondition:LBHTTPForwardingRuleTcpCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourcePort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourcePort"
            ]
        },
        "nsxt:/LBHTTPForwardingRuleUriCondition:LBHTTPForwardingRuleUriCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "uri"
            ]
        },
        "nsxt:/LBHTTPForwardingRuleVersionCondition:LBHTTPForwardingRuleVersionCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "version"
            ]
        },
        "nsxt:/LBHTTPMonitorRequestHeader:LBHTTPMonitorRequestHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "nsxt:/LBHTTPMonitorTag:LBHTTPMonitorTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBHTTPRequestRewriteRuleBodyCondition:LBHTTPRequestRewriteRuleBodyCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "value"
            ]
        },
        "nsxt:/LBHTTPRequestRewriteRuleCookieCondition:LBHTTPRequestRewriteRuleCookieCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "name",
                "value"
            ]
        },
        "nsxt:/LBHTTPRequestRewriteRuleHeaderCondition:LBHTTPRequestRewriteRuleHeaderCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "name",
                "value"
            ]
        },
        "nsxt:/LBHTTPRequestRewriteRuleHeaderRewriteAction:LBHTTPRequestRewriteRuleHeaderRewriteAction": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nsxt:/LBHTTPRequestRewriteRuleIpCondition:LBHTTPRequestRewriteRuleIpCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceAddress"
            ]
        },
        "nsxt:/LBHTTPRequestRewriteRuleMethodCondition:LBHTTPRequestRewriteRuleMethodCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "nsxt:/LBHTTPRequestRewriteRuleTag:LBHTTPRequestRewriteRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBHTTPRequestRewriteRuleTcpCondition:LBHTTPRequestRewriteRuleTcpCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourcePort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourcePort"
            ]
        },
        "nsxt:/LBHTTPRequestRewriteRuleUriArgumentsCondition:LBHTTPRequestRewriteRuleUriArgumentsCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uriArguments": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "uriArguments"
            ]
        },
        "nsxt:/LBHTTPRequestRewriteRuleUriCondition:LBHTTPRequestRewriteRuleUriCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "uri"
            ]
        },
        "nsxt:/LBHTTPRequestRewriteRuleUriRewriteAction:LBHTTPRequestRewriteRuleUriRewriteAction": {
            "properties": {
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uriArguments": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "uri"
            ]
        },
        "nsxt:/LBHTTPRequestRewriteRuleVersionCondition:LBHTTPRequestRewriteRuleVersionCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "version"
            ]
        },
        "nsxt:/LBHTTPResponseRewriteRuleCookieCondition:LBHTTPResponseRewriteRuleCookieCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "name",
                "value"
            ]
        },
        "nsxt:/LBHTTPResponseRewriteRuleHeaderRewriteAction:LBHTTPResponseRewriteRuleHeaderRewriteAction": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nsxt:/LBHTTPResponseRewriteRuleIpCondition:LBHTTPResponseRewriteRuleIpCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceAddress"
            ]
        },
        "nsxt:/LBHTTPResponseRewriteRuleMethodCondition:LBHTTPResponseRewriteRuleMethodCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "nsxt:/LBHTTPResponseRewriteRuleRequestHeaderCondition:LBHTTPResponseRewriteRuleRequestHeaderCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "name",
                "value"
            ]
        },
        "nsxt:/LBHTTPResponseRewriteRuleResponseHeaderCondition:LBHTTPResponseRewriteRuleResponseHeaderCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "name",
                "value"
            ]
        },
        "nsxt:/LBHTTPResponseRewriteRuleTag:LBHTTPResponseRewriteRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBHTTPResponseRewriteRuleTcpCondition:LBHTTPResponseRewriteRuleTcpCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourcePort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourcePort"
            ]
        },
        "nsxt:/LBHTTPResponseRewriteRuleUriArgumentsCondition:LBHTTPResponseRewriteRuleUriArgumentsCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uriArguments": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "uriArguments"
            ]
        },
        "nsxt:/LBHTTPResponseRewriteRuleUriCondition:LBHTTPResponseRewriteRuleUriCondition": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "uri"
            ]
        },
        "nsxt:/LBHTTPResponseRewriteRuleVersionCondition:LBHTTPResponseRewriteRuleVersionCondition": {
            "properties": {
                "inverse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "version"
            ]
        },
        "nsxt:/LBHTTPSMonitorRequestHeader:LBHTTPSMonitorRequestHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "nsxt:/LBHTTPSMonitorTag:LBHTTPSMonitorTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBHTTPVirtualServerClientSsl:LBHTTPVirtualServerClientSsl": {
            "properties": {
                "caIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificateChainDepth": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSslProfileId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "crlIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultCertificateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sniCertificateIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clientSslProfileId",
                "defaultCertificateId"
            ]
        },
        "nsxt:/LBHTTPVirtualServerServerSsl:LBHTTPVirtualServerServerSsl": {
            "properties": {
                "caIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificateChainDepth": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientCertificateId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "crlIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSslProfileId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serverSslProfileId"
            ]
        },
        "nsxt:/LBHTTPVirtualServerTag:LBHTTPVirtualServerTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBICMPMonitorTag:LBICMPMonitorTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBPassiveMonitorTag:LBPassiveMonitorTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBPoolMember:LBPoolMember": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMember": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConcurrentConnections": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "ipAddress"
                    ]
                }
            }
        },
        "nsxt:/LBPoolMemberGroup:LBPoolMemberGroup": {
            "properties": {
                "groupingObject": {
                    "$ref": "#/types/nsxt:/LBPoolMemberGroupGroupingObject:LBPoolMemberGroupGroupingObject",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVersionFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limitIpListSize": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIpListSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "groupingObject"
            ]
        },
        "nsxt:/LBPoolMemberGroupGroupingObject:LBPoolMemberGroupGroupingObject": {
            "properties": {
                "isValid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isValid",
                        "targetDisplayName"
                    ]
                }
            }
        },
        "nsxt:/LBPoolSnatTranslation:LBPoolSnatTranslation": {
            "properties": {
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBPoolTag:LBPoolTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBServerSSLProfileTag:LBServerSSLProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBServiceTag:LBServiceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBSourceIPPersistenceProfileTag:LBSourceIPPersistenceProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBTCPMonitorTag:LBTCPMonitorTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBTCPVirtualServerTag:LBTCPVirtualServerTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBUDPMonitorTag:LBUDPMonitorTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LBUDPVirtualServerTag:LBUDPVirtualServerTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalDHCPPortTag:LogicalDHCPPortTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalDHCPerverDhcpGenericOption:LogicalDHCPerverDhcpGenericOption": {
            "properties": {
                "code": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code",
                "values"
            ]
        },
        "nsxt:/LogicalDHCPerverDhcpOption121:LogicalDHCPerverDhcpOption121": {
            "properties": {
                "network": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nextHop": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "network",
                "nextHop"
            ]
        },
        "nsxt:/LogicalDHCPerverTag:LogicalDHCPerverTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalPortSwitchingProfileId:LogicalPortSwitchingProfileId": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "nsxt:/LogicalPortTag:LogicalPortTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalRouterCentralizedServicePortTag:LogicalRouterCentralizedServicePortTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalRouterDownlinkPortServiceBinding:LogicalRouterDownlinkPortServiceBinding": {
            "properties": {
                "isValid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isValid",
                        "targetDisplayName"
                    ]
                }
            }
        },
        "nsxt:/LogicalRouterDownlinkPortTag:LogicalRouterDownlinkPortTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalRouterLinkPortOnTier0Tag:LogicalRouterLinkPortOnTier0Tag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalRouterLinkPortOnTier1Tag:LogicalRouterLinkPortOnTier1Tag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalSwitchAddressBinding:LogicalSwitchAddressBinding": {
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "macAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlan": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalSwitchSwitchingProfileId:LogicalSwitchSwitchingProfileId": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "nsxt:/LogicalSwitchTag:LogicalSwitchTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalTier0RouterFirewallSection:LogicalTier0RouterFirewallSection": {
            "properties": {
                "isValid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isValid",
                        "targetDisplayName"
                    ]
                }
            }
        },
        "nsxt:/LogicalTier0RouterTag:LogicalTier0RouterTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/LogicalTier1RouterFirewallSection:LogicalTier1RouterFirewallSection": {
            "properties": {
                "isValid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isValid",
                        "targetDisplayName"
                    ]
                }
            }
        },
        "nsxt:/LogicalTier1RouterTag:LogicalTier1RouterTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/MACManagementSwitchingProfileMacLearning:MACManagementSwitchingProfileMacLearning": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limitPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unicastFloodingAllowed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/MACManagementSwitchingProfileTag:MACManagementSwitchingProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/NATRuleTag:NATRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/NSServiceGroupTag:NSServiceGroupTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/NSroupMember:NSroupMember": {
            "properties": {
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "targetType",
                "value"
            ]
        },
        "nsxt:/NSroupMembershipCriteria:NSroupMembershipCriteria": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopeOp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagOp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "targetType"
            ]
        },
        "nsxt:/NSroupTag:NSroupTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyBGPConfigRouteAggregation:PolicyBGPConfigRouteAggregation": {
            "properties": {
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyBGPConfigTag:PolicyBGPConfigTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyBGPNeighborBfdConfig:PolicyBGPNeighborBfdConfig": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiple": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyBGPNeighborRouteFiltering:PolicyBGPNeighborRouteFiltering": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inRouteFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRoutes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "outRouteFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addressFamily"
            ]
        },
        "nsxt:/PolicyBGPNeighborTag:PolicyBGPNeighborTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyContextProfileAppId:PolicyContextProfileAppId": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isAlgType": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subAttribute": {
                    "$ref": "#/types/nsxt:/PolicyContextProfileAppIdSubAttribute:PolicyContextProfileAppIdSubAttribute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isAlgType",
                        "values"
                    ]
                }
            }
        },
        "nsxt:/PolicyContextProfileAppIdSubAttribute:PolicyContextProfileAppIdSubAttribute": {
            "properties": {
                "cifsSmbVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsCipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyContextProfileDomainName:PolicyContextProfileDomainName": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ]
        },
        "nsxt:/PolicyContextProfileTag:PolicyContextProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyContextProfileUrlCategory:PolicyContextProfileUrlCategory": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "values"
            ]
        },
        "nsxt:/PolicyDHCPRelayTag:PolicyDHCPRelayTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyDHCPServerTag:PolicyDHCPServerTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyGatewayPolicyRule:PolicyGatewayPolicyRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationsExcluded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "direction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nsxId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sequenceNumber": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourcesExcluded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGatewayPolicyRuleTag:PolicyGatewayPolicyRuleTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "scopes"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "nsxId",
                        "revision",
                        "ruleId",
                        "scopes",
                        "sequenceNumber"
                    ]
                }
            }
        },
        "nsxt:/PolicyGatewayPolicyRuleTag:PolicyGatewayPolicyRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyGatewayPolicyTag:PolicyGatewayPolicyTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyGatewayPrefixListPrefix:PolicyGatewayPrefixListPrefix": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "le": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyGatewayPrefixListTag:PolicyGatewayPrefixListTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyGroupConjunction:PolicyGroupConjunction": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator"
            ]
        },
        "nsxt:/PolicyGroupCriteria:PolicyGroupCriteria": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGroupCriteriaCondition:PolicyGroupCriteriaCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipaddressExpression": {
                    "$ref": "#/types/nsxt:/PolicyGroupCriteriaIpaddressExpression:PolicyGroupCriteriaIpaddressExpression",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "macaddressExpression": {
                    "$ref": "#/types/nsxt:/PolicyGroupCriteriaMacaddressExpression:PolicyGroupCriteriaMacaddressExpression",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pathExpression": {
                    "$ref": "#/types/nsxt:/PolicyGroupCriteriaPathExpression:PolicyGroupCriteriaPathExpression",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyGroupCriteriaCondition:PolicyGroupCriteriaCondition": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memberType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "memberType",
                "operator",
                "value"
            ]
        },
        "nsxt:/PolicyGroupCriteriaIpaddressExpression:PolicyGroupCriteriaIpaddressExpression": {
            "properties": {
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ipAddresses"
            ]
        },
        "nsxt:/PolicyGroupCriteriaMacaddressExpression:PolicyGroupCriteriaMacaddressExpression": {
            "properties": {
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "macAddresses"
            ]
        },
        "nsxt:/PolicyGroupCriteriaPathExpression:PolicyGroupCriteriaPathExpression": {
            "properties": {
                "memberPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "memberPaths"
            ]
        },
        "nsxt:/PolicyGroupExtendedCriteria:PolicyGroupExtendedCriteria": {
            "properties": {
                "identityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGroupExtendedCriteriaIdentityGroup:PolicyGroupExtendedCriteriaIdentityGroup"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyGroupExtendedCriteriaIdentityGroup:PolicyGroupExtendedCriteriaIdentityGroup": {
            "properties": {
                "distinguishedName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainBaseDistinguishedName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyGroupTag:PolicyGroupTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyIPAddressAllocationTag:PolicyIPAddressAllocationTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyIPBlockTag:PolicyIPBlockTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyIPPoolBlockSubnetTag:PolicyIPPoolBlockSubnetTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyIPPoolStaticSubnetAllocationRange:PolicyIPPoolStaticSubnetAllocationRange": {
            "properties": {
                "end": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "nsxt:/PolicyIPPoolStaticSubnetTag:PolicyIPPoolStaticSubnetTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyIPPoolTag:PolicyIPPoolTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyLBPoolMember:PolicyLBPoolMember": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "backupMember": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxConcurrentConnections": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "ipAddress"
                    ]
                }
            }
        },
        "nsxt:/PolicyLBPoolMemberGroup:PolicyLBPoolMemberGroup": {
            "properties": {
                "allowIpv4": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowIpv6": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxIpListSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "groupPath"
            ]
        },
        "nsxt:/PolicyLBPoolSnat:PolicyLBPoolSnat": {
            "properties": {
                "ipPoolAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyLBPoolTag:PolicyLBPoolTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyLBServiceTag:PolicyLBServiceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyLBVirtualServerAccessListControl:PolicyLBVirtualServerAccessListControl": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "groupPath"
            ]
        },
        "nsxt:/PolicyLBVirtualServerClientSsl:PolicyLBVirtualServerClientSsl": {
            "properties": {
                "caPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificateChainDepth": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientAuth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "crlPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultCertificatePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sniPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultCertificatePath"
            ]
        },
        "nsxt:/PolicyLBVirtualServerServerSsl:PolicyLBVirtualServerServerSsl": {
            "properties": {
                "caPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificateChainDepth": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientCertificatePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "crlPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverAuth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyLBVirtualServerTag:PolicyLBVirtualServerTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyNatRuleTag:PolicyNatRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyPredefinedGatewayPolicyDefaultRule:PolicyPredefinedGatewayPolicyDefaultRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nsxId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sequenceNumber": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyDefaultRuleTag:PolicyPredefinedGatewayPolicyDefaultRuleTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "scope"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "nsxId",
                        "path",
                        "revision",
                        "scope",
                        "sequenceNumber"
                    ]
                }
            }
        },
        "nsxt:/PolicyPredefinedGatewayPolicyDefaultRuleTag:PolicyPredefinedGatewayPolicyDefaultRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyPredefinedGatewayPolicyRule:PolicyPredefinedGatewayPolicyRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationsExcluded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "direction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nsxId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sequenceNumber": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourcesExcluded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyRuleTag:PolicyPredefinedGatewayPolicyRuleTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "scopes"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "nsxId",
                        "revision",
                        "ruleId",
                        "scopes",
                        "sequenceNumber"
                    ]
                }
            }
        },
        "nsxt:/PolicyPredefinedGatewayPolicyRuleTag:PolicyPredefinedGatewayPolicyRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyPredefinedGatewayPolicyTag:PolicyPredefinedGatewayPolicyTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyPredefinedSecurityPolicyDefaultRule:PolicyPredefinedSecurityPolicyDefaultRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nsxId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sequenceNumber": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyDefaultRuleTag:PolicyPredefinedSecurityPolicyDefaultRuleTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "nsxId",
                        "path",
                        "revision",
                        "scope",
                        "sequenceNumber"
                    ]
                }
            }
        },
        "nsxt:/PolicyPredefinedSecurityPolicyDefaultRuleTag:PolicyPredefinedSecurityPolicyDefaultRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyPredefinedSecurityPolicyRule:PolicyPredefinedSecurityPolicyRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationsExcluded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "direction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nsxId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sequenceNumber": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourcesExcluded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyRuleTag:PolicyPredefinedSecurityPolicyRuleTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "displayName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "nsxId",
                        "revision",
                        "ruleId",
                        "sequenceNumber"
                    ]
                }
            }
        },
        "nsxt:/PolicyPredefinedSecurityPolicyRuleTag:PolicyPredefinedSecurityPolicyRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyPredefinedSecurityPolicyTag:PolicyPredefinedSecurityPolicyTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicySecurityPolicyRule:PolicySecurityPolicyRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationsExcluded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "direction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logged": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nsxId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sequenceNumber": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourcesExcluded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySecurityPolicyRuleTag:PolicySecurityPolicyRuleTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "displayName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "nsxId",
                        "revision",
                        "ruleId",
                        "sequenceNumber"
                    ]
                }
            }
        },
        "nsxt:/PolicySecurityPolicyRuleTag:PolicySecurityPolicyRuleTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicySecurityPolicyTag:PolicySecurityPolicyTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicySegmentAdvancedConfig:PolicySegmentAdvancedConfig": {
            "properties": {
                "addressPoolPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hybrid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localEgress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uplinkTeamingPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicySegmentDiscoveryProfile:PolicySegmentDiscoveryProfile": {
            "properties": {
                "bindingMapPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipDiscoveryProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "macDiscoveryProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bindingMapPath",
                        "revision"
                    ]
                }
            }
        },
        "nsxt:/PolicySegmentL2Extension:PolicySegmentL2Extension": {
            "properties": {
                "l2vpnPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tunnelId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicySegmentQosProfile:PolicySegmentQosProfile": {
            "properties": {
                "bindingMapPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "qosProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "qosProfilePath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bindingMapPath",
                        "qosProfilePath",
                        "revision"
                    ]
                }
            }
        },
        "nsxt:/PolicySegmentSecurityProfile:PolicySegmentSecurityProfile": {
            "properties": {
                "bindingMapPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spoofguardProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bindingMapPath",
                        "revision"
                    ]
                }
            }
        },
        "nsxt:/PolicySegmentSubnet:PolicySegmentSubnet": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dhcpRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dhcpV4Config": {
                    "$ref": "#/types/nsxt:/PolicySegmentSubnetDhcpV4Config:PolicySegmentSubnetDhcpV4Config",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dhcpV6Config": {
                    "$ref": "#/types/nsxt:/PolicySegmentSubnetDhcpV6Config:PolicySegmentSubnetDhcpV6Config",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cidr"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidr",
                        "network"
                    ]
                }
            }
        },
        "nsxt:/PolicySegmentSubnetDhcpV4Config:PolicySegmentSubnetDhcpV4Config": {
            "properties": {
                "dhcpGenericOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption:PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dhcpOption121s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySegmentSubnetDhcpV4ConfigDhcpOption121:PolicySegmentSubnetDhcpV4ConfigDhcpOption121"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaseTime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption:PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption": {
            "properties": {
                "code": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code",
                "values"
            ]
        },
        "nsxt:/PolicySegmentSubnetDhcpV4ConfigDhcpOption121:PolicySegmentSubnetDhcpV4ConfigDhcpOption121": {
            "properties": {
                "network": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nextHop": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "network",
                "nextHop"
            ]
        },
        "nsxt:/PolicySegmentSubnetDhcpV6Config:PolicySegmentSubnetDhcpV6Config": {
            "properties": {
                "dnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySegmentSubnetDhcpV6ConfigExcludedRange:PolicySegmentSubnetDhcpV6ConfigExcludedRange"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaseTime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preferredTime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sntpServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicySegmentSubnetDhcpV6ConfigExcludedRange:PolicySegmentSubnetDhcpV6ConfigExcludedRange": {
            "properties": {
                "end": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "nsxt:/PolicySegmentTag:PolicySegmentTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyServiceAlgorithmEntry:PolicyServiceAlgorithmEntry": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationPort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourcePorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "destinationPort"
            ]
        },
        "nsxt:/PolicyServiceEtherTypeEntry:PolicyServiceEtherTypeEntry": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "etherType": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "etherType"
            ]
        },
        "nsxt:/PolicyServiceIcmpEntry:PolicyServiceIcmpEntry": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "icmpCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "icmpType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ]
        },
        "nsxt:/PolicyServiceIgmpEntry:PolicyServiceIgmpEntry": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyServiceIpProtocolEntry:PolicyServiceIpProtocolEntry": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ]
        },
        "nsxt:/PolicyServiceL4PortSetEntry:PolicyServiceL4PortSetEntry": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourcePorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ]
        },
        "nsxt:/PolicyServiceTag:PolicyServiceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyStaticRouteNextHop:PolicyStaticRouteNextHop": {
            "properties": {
                "adminDistance": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interface": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "nsxt:/PolicyStaticRouteTag:PolicyStaticRouteTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier0GatewayBgpConfig:PolicyTier0GatewayBgpConfig": {
            "properties": {
                "ecmp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracefulRestartMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracefulRestartStaleRouteTimer": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracefulRestartTimer": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interSrIbgp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localAsNum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multipathRelax": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routeAggregations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayBgpConfigRouteAggregation:PolicyTier0GatewayBgpConfigRouteAggregation"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayBgpConfigTag:PolicyTier0GatewayBgpConfigTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "path",
                        "revision"
                    ]
                }
            }
        },
        "nsxt:/PolicyTier0GatewayBgpConfigRouteAggregation:PolicyTier0GatewayBgpConfigRouteAggregation": {
            "properties": {
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier0GatewayBgpConfigTag:PolicyTier0GatewayBgpConfigTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier0GatewayHAVIPConfigConfig:PolicyTier0GatewayHAVIPConfigConfig": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "externalInterfacePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vipSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "externalInterfacePaths",
                "vipSubnets"
            ]
        },
        "nsxt:/PolicyTier0GatewayInterfaceTag:PolicyTier0GatewayInterfaceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier0GatewayIntersiteConfig:PolicyTier0GatewayIntersiteConfig": {
            "properties": {
                "fallbackSitePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primarySitePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transitSubnet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "transitSubnet"
                    ]
                }
            }
        },
        "nsxt:/PolicyTier0GatewayLocaleService:PolicyTier0GatewayLocaleService": {
            "properties": {
                "edgeClusterPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preferredEdgePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redistributionConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier0GatewayLocaleServiceRedistributionConfig:PolicyTier0GatewayLocaleServiceRedistributionConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "edgeClusterPath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "edgeClusterPath",
                        "path",
                        "revision"
                    ]
                }
            }
        },
        "nsxt:/PolicyTier0GatewayLocaleServiceRedistributionConfig:PolicyTier0GatewayLocaleServiceRedistributionConfig": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayLocaleServiceRedistributionConfigRule:PolicyTier0GatewayLocaleServiceRedistributionConfigRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier0GatewayLocaleServiceRedistributionConfigRule:PolicyTier0GatewayLocaleServiceRedistributionConfigRule": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routeMapPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier0GatewayRedistributionConfig:PolicyTier0GatewayRedistributionConfig": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayRedistributionConfigRule:PolicyTier0GatewayRedistributionConfigRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier0GatewayRedistributionConfigRule:PolicyTier0GatewayRedistributionConfigRule": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routeMapPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier0GatewayTag:PolicyTier0GatewayTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier0GatewayVrfConfig:PolicyTier0GatewayVrfConfig": {
            "properties": {
                "evpnTransitVni": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gatewayPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routeDistinguisher": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routeTarget": {
                    "$ref": "#/types/nsxt:/PolicyTier0GatewayVrfConfigRouteTarget:PolicyTier0GatewayVrfConfigRouteTarget",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayVrfConfigTag:PolicyTier0GatewayVrfConfigTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "gatewayPath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "gatewayPath",
                        "path"
                    ]
                }
            }
        },
        "nsxt:/PolicyTier0GatewayVrfConfigRouteTarget:PolicyTier0GatewayVrfConfigRouteTarget": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoMode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exportTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "importTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier0GatewayVrfConfigTag:PolicyTier0GatewayVrfConfigTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier1GatewayInterfaceTag:PolicyTier1GatewayInterfaceTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyTier1GatewayIntersiteConfig:PolicyTier1GatewayIntersiteConfig": {
            "properties": {
                "fallbackSitePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primarySitePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transitSubnet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "transitSubnet"
                    ]
                }
            }
        },
        "nsxt:/PolicyTier1GatewayLocaleService:PolicyTier1GatewayLocaleService": {
            "properties": {
                "edgeClusterPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preferredEdgePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "edgeClusterPath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "edgeClusterPath",
                        "path",
                        "revision"
                    ]
                }
            }
        },
        "nsxt:/PolicyTier1GatewayRouteAdvertisementRule:PolicyTier1GatewayRouteAdvertisementRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefixOperator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routeAdvertisementTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "subnets"
            ]
        },
        "nsxt:/PolicyTier1GatewayTag:PolicyTier1GatewayTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyVMTagsPort:PolicyVMTagsPort": {
            "properties": {
                "segmentPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVMTagsPortTag:PolicyVMTagsPortTag"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "segmentPath"
            ]
        },
        "nsxt:/PolicyVMTagsPortTag:PolicyVMTagsPortTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyVMTagsTag:PolicyVMTagsTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyVlanSegmentAdvancedConfig:PolicyVlanSegmentAdvancedConfig": {
            "properties": {
                "addressPoolPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectivity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hybrid": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localEgress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uplinkTeamingPolicy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyVlanSegmentDiscoveryProfile:PolicyVlanSegmentDiscoveryProfile": {
            "properties": {
                "bindingMapPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipDiscoveryProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "macDiscoveryProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bindingMapPath",
                        "revision"
                    ]
                }
            }
        },
        "nsxt:/PolicyVlanSegmentL2Extension:PolicyVlanSegmentL2Extension": {
            "properties": {
                "l2vpnPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tunnelId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyVlanSegmentQosProfile:PolicyVlanSegmentQosProfile": {
            "properties": {
                "bindingMapPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "qosProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "qosProfilePath"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bindingMapPath",
                        "qosProfilePath",
                        "revision"
                    ]
                }
            }
        },
        "nsxt:/PolicyVlanSegmentSecurityProfile:PolicyVlanSegmentSecurityProfile": {
            "properties": {
                "bindingMapPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "revision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spoofguardProfilePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bindingMapPath",
                        "revision"
                    ]
                }
            }
        },
        "nsxt:/PolicyVlanSegmentSubnet:PolicyVlanSegmentSubnet": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dhcpRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dhcpV4Config": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentSubnetDhcpV4Config:PolicyVlanSegmentSubnetDhcpV4Config",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dhcpV6Config": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentSubnetDhcpV6Config:PolicyVlanSegmentSubnetDhcpV6Config",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cidr"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidr",
                        "network"
                    ]
                }
            }
        },
        "nsxt:/PolicyVlanSegmentSubnetDhcpV4Config:PolicyVlanSegmentSubnetDhcpV4Config": {
            "properties": {
                "dhcpGenericOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption:PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dhcpOption121s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121:PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaseTime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption:PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption": {
            "properties": {
                "code": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code",
                "values"
            ]
        },
        "nsxt:/PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121:PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121": {
            "properties": {
                "network": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nextHop": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "network",
                "nextHop"
            ]
        },
        "nsxt:/PolicyVlanSegmentSubnetDhcpV6Config:PolicyVlanSegmentSubnetDhcpV6Config": {
            "properties": {
                "dnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange:PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leaseTime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preferredTime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sntpServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange:PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange": {
            "properties": {
                "end": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "nsxt:/PolicyVlanSegmentTag:PolicyVlanSegmentTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/QOSSwitchingProfileEgressRateShaper:QOSSwitchingProfileEgressRateShaper": {
            "properties": {
                "averageBwMbps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "burstSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "peakBwMbps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/QOSSwitchingProfileIngressBroadcastRateShaper:QOSSwitchingProfileIngressBroadcastRateShaper": {
            "properties": {
                "averageBwKbps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "burstSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "peakBwKbps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/QOSSwitchingProfileIngressRateShaper:QOSSwitchingProfileIngressRateShaper": {
            "properties": {
                "averageBwMbps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "burstSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "peakBwMbps": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/QOSSwitchingProfileTag:QOSSwitchingProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/SpoofguardSwitchingProfileTag:SpoofguardSwitchingProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/StaticRouteNextHop:StaticRouteNextHop": {
            "properties": {
                "administrativeDistance": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bfdEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blackholeAction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logicalRouterPortId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bfdEnabled",
                        "blackholeAction"
                    ]
                }
            }
        },
        "nsxt:/StaticRouteTag:StaticRouteTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/SwitchSecuritySwitchingProfileRateLimits:SwitchSecuritySwitchingProfileRateLimits": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rxBroadcast": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rxMulticast": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "txBroadcast": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "txMulticast": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/SwitchSecuritySwitchingProfileTag:SwitchSecuritySwitchingProfileTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/VMTagsLogicalPortTag:VMTagsLogicalPortTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/VMTagsTag:VMTagsTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/VlanLogicalSwitchAddressBinding:VlanLogicalSwitchAddressBinding": {
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "macAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlan": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nsxt:/VlanLogicalSwitchSwitchingProfileId:VlanLogicalSwitchSwitchingProfileId": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "nsxt:/VlanLogicalSwitchTag:VlanLogicalSwitchTag": {
            "properties": {
                "scope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the nsxt package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "allowUnverifiedSsl": {
                "type": "boolean",
                "defaultInfo": {
                    "environment": [
                        "NSXT_ALLOW_UNVERIFIED_SSL"
                    ]
                }
            },
            "caFile": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "NSXT_CA_FILE"
                    ]
                }
            },
            "clientAuthCertFile": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "NSXT_CLIENT_AUTH_CERT_FILE"
                    ]
                }
            },
            "clientAuthKeyFile": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "NSXT_CLIENT_AUTH_KEY_FILE"
                    ]
                }
            },
            "enforcementPoint": {
                "type": "string",
                "description": "Enforcement Point for NSXT Policy\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_POLICY_ENFORCEMENT_POINT"
                    ]
                }
            },
            "globalManager": {
                "type": "boolean",
                "description": "Is this a policy global manager endpoint\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_GLOBAL_MANAGER"
                    ]
                }
            },
            "host": {
                "type": "string",
                "description": "The hostname or IP address of the NSX manager.\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_MANAGER_HOST"
                    ]
                }
            },
            "maxRetries": {
                "type": "integer",
                "description": "Maximum number of HTTP client retries\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_MAX_RETRIES"
                    ]
                }
            },
            "password": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "NSXT_PASSWORD"
                    ]
                }
            },
            "remoteAuth": {
                "type": "boolean",
                "defaultInfo": {
                    "environment": [
                        "NSXT_REMOTE_AUTH"
                    ]
                }
            },
            "retryMaxDelay": {
                "type": "integer",
                "description": "Maximum delay in milliseconds between retries of a request\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_RETRY_MAX_DELAY"
                    ]
                }
            },
            "retryMinDelay": {
                "type": "integer",
                "description": "Minimum delay in milliseconds between retries of a request\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_RETRY_MIN_DELAY"
                    ]
                }
            },
            "retryOnStatusCodes": {
                "type": "array",
                "items": {
                    "type": "integer"
                },
                "description": "HTTP replies status codes to retry on\n"
            },
            "toleratePartialSuccess": {
                "type": "boolean",
                "description": "Treat partial success status as success\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_TOLERATE_PARTIAL_SUCCESS"
                    ]
                }
            },
            "username": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "NSXT_USERNAME"
                    ]
                }
            },
            "vmcAuthHost": {
                "type": "string",
                "description": "URL for VMC authorization service (CSP)\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_VMC_AUTH_HOST"
                    ]
                }
            },
            "vmcToken": {
                "type": "string",
                "description": "Long-living API token for VMC authorization\n",
                "defaultInfo": {
                    "environment": [
                        "NSXT_VMC_TOKEN"
                    ]
                }
            }
        }
    },
    "resources": {
        "nsxt:index/algorithmTypeNSService:AlgorithmTypeNSService": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm\n"
                },
                "defaultService": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "destinationPort": {
                    "type": "string",
                    "description": "A single destination port\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "sourcePorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of source ports or ranges\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/AlgorithmTypeNSServiceTag:AlgorithmTypeNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "algorithm",
                "defaultService",
                "destinationPort",
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "destinationPort": {
                    "type": "string",
                    "description": "A single destination port\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "sourcePorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of source ports or ranges\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/AlgorithmTypeNSServiceTag:AlgorithmTypeNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "algorithm",
                "destinationPort"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlgorithmTypeNSService resources.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "Algorithm\n"
                    },
                    "defaultService": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "destinationPort": {
                        "type": "string",
                        "description": "A single destination port\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "sourcePorts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of source ports or ranges\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/AlgorithmTypeNSServiceTag:AlgorithmTypeNSServiceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/dHCPRelayProfile:DHCPRelayProfile": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "serverAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of dhcp relay server addresses\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPRelayProfileTag:DHCPRelayProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "revision",
                "serverAddresses"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "serverAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of dhcp relay server addresses\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPRelayProfileTag:DHCPRelayProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "serverAddresses"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DHCPRelayProfile resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "serverAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of dhcp relay server addresses\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/DHCPRelayProfileTag:DHCPRelayProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/dHCPRelayService:DHCPRelayService": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "dhcpRelayProfileId": {
                    "type": "string",
                    "description": "DHCP relay profile referenced by the dhcp relay service\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPRelayServiceTag:DHCPRelayServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "dhcpRelayProfileId",
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "dhcpRelayProfileId": {
                    "type": "string",
                    "description": "DHCP relay profile referenced by the dhcp relay service\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPRelayServiceTag:DHCPRelayServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "dhcpRelayProfileId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DHCPRelayService resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "dhcpRelayProfileId": {
                        "type": "string",
                        "description": "DHCP relay profile referenced by the dhcp relay service\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/DHCPRelayServiceTag:DHCPRelayServiceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/dHCPServerIPPool:DHCPServerIPPool": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "dhcpGenericOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPServerIPPoolDhcpGenericOption:DHCPServerIPPoolDhcpGenericOption"
                    },
                    "description": "Generic DHCP options\n"
                },
                "dhcpOption121s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPServerIPPoolDhcpOption121:DHCPServerIPPoolDhcpOption121"
                    },
                    "description": "DHCP classless static routes\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "errorThreshold": {
                    "type": "integer",
                    "description": "Error threshold\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Gateway ip\n"
                },
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPServerIPPoolIpRange:DHCPServerIPPoolIpRange"
                    },
                    "description": "List of IP Ranges\n"
                },
                "leaseTime": {
                    "type": "integer",
                    "description": "Lease time, in seconds\n"
                },
                "logicalDhcpServerId": {
                    "type": "string",
                    "description": "Id of dhcp server this pool is serving\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPServerIPPoolTag:DHCPServerIPPoolTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "warningThreshold": {
                    "type": "integer",
                    "description": "Warning threshold\n"
                }
            },
            "required": [
                "displayName",
                "logicalDhcpServerId",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "dhcpGenericOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPServerIPPoolDhcpGenericOption:DHCPServerIPPoolDhcpGenericOption"
                    },
                    "description": "Generic DHCP options\n"
                },
                "dhcpOption121s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPServerIPPoolDhcpOption121:DHCPServerIPPoolDhcpOption121"
                    },
                    "description": "DHCP classless static routes\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "errorThreshold": {
                    "type": "integer",
                    "description": "Error threshold\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Gateway ip\n"
                },
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPServerIPPoolIpRange:DHCPServerIPPoolIpRange"
                    },
                    "description": "List of IP Ranges\n"
                },
                "leaseTime": {
                    "type": "integer",
                    "description": "Lease time, in seconds\n"
                },
                "logicalDhcpServerId": {
                    "type": "string",
                    "description": "Id of dhcp server this pool is serving\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPServerIPPoolTag:DHCPServerIPPoolTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "warningThreshold": {
                    "type": "integer",
                    "description": "Warning threshold\n"
                }
            },
            "requiredInputs": [
                "logicalDhcpServerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DHCPServerIPPool resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "dhcpGenericOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/DHCPServerIPPoolDhcpGenericOption:DHCPServerIPPoolDhcpGenericOption"
                        },
                        "description": "Generic DHCP options\n"
                    },
                    "dhcpOption121s": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/DHCPServerIPPoolDhcpOption121:DHCPServerIPPoolDhcpOption121"
                        },
                        "description": "DHCP classless static routes\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "errorThreshold": {
                        "type": "integer",
                        "description": "Error threshold\n"
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "Gateway ip\n"
                    },
                    "ipRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/DHCPServerIPPoolIpRange:DHCPServerIPPoolIpRange"
                        },
                        "description": "List of IP Ranges\n"
                    },
                    "leaseTime": {
                        "type": "integer",
                        "description": "Lease time, in seconds\n"
                    },
                    "logicalDhcpServerId": {
                        "type": "string",
                        "description": "Id of dhcp server this pool is serving\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/DHCPServerIPPoolTag:DHCPServerIPPoolTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "warningThreshold": {
                        "type": "integer",
                        "description": "Warning threshold\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/dHCPServerProfile:DHCPServerProfile": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "edgeClusterId": {
                    "type": "string",
                    "description": "Edge cluster uuid\n"
                },
                "edgeClusterMemberIndexes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Edge nodes from the given cluster\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPServerProfileTag:DHCPServerProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "edgeClusterId",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "edgeClusterId": {
                    "type": "string",
                    "description": "Edge cluster uuid\n"
                },
                "edgeClusterMemberIndexes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Edge nodes from the given cluster\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/DHCPServerProfileTag:DHCPServerProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "edgeClusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DHCPServerProfile resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "edgeClusterId": {
                        "type": "string",
                        "description": "Edge cluster uuid\n"
                    },
                    "edgeClusterMemberIndexes": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Edge nodes from the given cluster\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/DHCPServerProfileTag:DHCPServerProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/etherTypeNSService:EtherTypeNSService": {
            "properties": {
                "defaultService": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "etherType": {
                    "type": "integer",
                    "description": "Type of the encapsulated protocol\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/EtherTypeNSServiceTag:EtherTypeNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "defaultService",
                "displayName",
                "etherType",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "etherType": {
                    "type": "integer",
                    "description": "Type of the encapsulated protocol\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/EtherTypeNSServiceTag:EtherTypeNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "etherType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EtherTypeNSService resources.\n",
                "properties": {
                    "defaultService": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "etherType": {
                        "type": "integer",
                        "description": "Type of the encapsulated protocol\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/EtherTypeNSServiceTag:EtherTypeNSServiceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/firewallSection:FirewallSection": {
            "properties": {
                "appliedTos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/FirewallSectionAppliedTo:FirewallSectionAppliedTo"
                    },
                    "description": "List of objects where the rules in this section will be enforced. This will take precedence over rule level appliedTo\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "insertBefore": {
                    "type": "string",
                    "description": "Id of section that should come after this one\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether a firewall section is default section or not\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/FirewallSectionRule:FirewallSectionRule"
                    },
                    "description": "List of firewall rules in the section. Only homogeneous rules are supported\n"
                },
                "sectionType": {
                    "type": "string",
                    "description": "Type of the rules which a section can contain. Only homogeneous sections are supported\n"
                },
                "stateful": {
                    "type": "boolean",
                    "description": "Stateful or Stateless nature of firewall section is enforced on all rules inside the section\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/FirewallSectionTag:FirewallSectionTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "isDefault",
                "revision",
                "sectionType",
                "stateful"
            ],
            "inputProperties": {
                "appliedTos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/FirewallSectionAppliedTo:FirewallSectionAppliedTo"
                    },
                    "description": "List of objects where the rules in this section will be enforced. This will take precedence over rule level appliedTo\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "insertBefore": {
                    "type": "string",
                    "description": "Id of section that should come after this one\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/FirewallSectionRule:FirewallSectionRule"
                    },
                    "description": "List of firewall rules in the section. Only homogeneous rules are supported\n"
                },
                "sectionType": {
                    "type": "string",
                    "description": "Type of the rules which a section can contain. Only homogeneous sections are supported\n"
                },
                "stateful": {
                    "type": "boolean",
                    "description": "Stateful or Stateless nature of firewall section is enforced on all rules inside the section\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/FirewallSectionTag:FirewallSectionTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "sectionType",
                "stateful"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallSection resources.\n",
                "properties": {
                    "appliedTos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/FirewallSectionAppliedTo:FirewallSectionAppliedTo"
                        },
                        "description": "List of objects where the rules in this section will be enforced. This will take precedence over rule level appliedTo\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "insertBefore": {
                        "type": "string",
                        "description": "Id of section that should come after this one\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether a firewall section is default section or not\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/FirewallSectionRule:FirewallSectionRule"
                        },
                        "description": "List of firewall rules in the section. Only homogeneous rules are supported\n"
                    },
                    "sectionType": {
                        "type": "string",
                        "description": "Type of the rules which a section can contain. Only homogeneous sections are supported\n"
                    },
                    "stateful": {
                        "type": "boolean",
                        "description": "Stateful or Stateless nature of firewall section is enforced on all rules inside the section\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/FirewallSectionTag:FirewallSectionTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/iCMPTypeNSService:ICMPTypeNSService": {
            "properties": {
                "defaultService": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "icmpCode": {
                    "type": "integer",
                    "description": "ICMP message code\n"
                },
                "icmpType": {
                    "type": "integer",
                    "description": "ICMP message type\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Version of ICMP protocol (ICMPv4/ICMPv6)\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/ICMPTypeNSServiceTag:ICMPTypeNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "defaultService",
                "displayName",
                "protocol",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "icmpCode": {
                    "type": "integer",
                    "description": "ICMP message code\n"
                },
                "icmpType": {
                    "type": "integer",
                    "description": "ICMP message type\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Version of ICMP protocol (ICMPv4/ICMPv6)\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/ICMPTypeNSServiceTag:ICMPTypeNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ICMPTypeNSService resources.\n",
                "properties": {
                    "defaultService": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "icmpCode": {
                        "type": "integer",
                        "description": "ICMP message code\n"
                    },
                    "icmpType": {
                        "type": "integer",
                        "description": "ICMP message type\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Version of ICMP protocol (ICMPv4/ICMPv6)\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/ICMPTypeNSServiceTag:ICMPTypeNSServiceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/iGMPTypeNSService:IGMPTypeNSService": {
            "properties": {
                "defaultService": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IGMPTypeNSServiceTag:IGMPTypeNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "defaultService",
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IGMPTypeNSServiceTag:IGMPTypeNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IGMPTypeNSService resources.\n",
                "properties": {
                    "defaultService": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/IGMPTypeNSServiceTag:IGMPTypeNSServiceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/iPBlock:IPBlock": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "Represents network address and the prefix length which will be associated with a layer-2 broadcast domain\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPBlockTag:IPBlockTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "cidr",
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "cidr": {
                    "type": "string",
                    "description": "Represents network address and the prefix length which will be associated with a layer-2 broadcast domain\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPBlockTag:IPBlockTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "cidr"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPBlock resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "Represents network address and the prefix length which will be associated with a layer-2 broadcast domain\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/IPBlockTag:IPBlockTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/iPBlockSubnet:IPBlockSubnet": {
            "properties": {
                "allocationRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPBlockSubnetAllocationRange:IPBlockSubnetAllocationRange"
                    },
                    "description": "A collection of IPv4 Pool Ranges\n"
                },
                "blockId": {
                    "type": "string",
                    "description": "Block id for which the subnet is created\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "Represents network address and the prefix length which will be associated with a layer-2 broadcast domain\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Represents the size or number of ip addresses in the subnet\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPBlockSubnetTag:IPBlockSubnetTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "allocationRanges",
                "blockId",
                "cidr",
                "displayName",
                "revision",
                "size"
            ],
            "inputProperties": {
                "blockId": {
                    "type": "string",
                    "description": "Block id for which the subnet is created\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Represents the size or number of ip addresses in the subnet\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPBlockSubnetTag:IPBlockSubnetTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "blockId",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPBlockSubnet resources.\n",
                "properties": {
                    "allocationRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/IPBlockSubnetAllocationRange:IPBlockSubnetAllocationRange"
                        },
                        "description": "A collection of IPv4 Pool Ranges\n"
                    },
                    "blockId": {
                        "type": "string",
                        "description": "Block id for which the subnet is created\n"
                    },
                    "cidr": {
                        "type": "string",
                        "description": "Represents network address and the prefix length which will be associated with a layer-2 broadcast domain\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Represents the size or number of ip addresses in the subnet\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/IPBlockSubnetTag:IPBlockSubnetTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/iPDiscoverySwitchingProfile:IPDiscoverySwitchingProfile": {
            "properties": {
                "arpBindingsLimit": {
                    "type": "integer",
                    "description": "Limit for the amount of ARP bindings\n"
                },
                "arpSnoopingEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether ARP snooping is enabled\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "dhcpSnoopingEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether DHCP snooping is enabled\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPDiscoverySwitchingProfileTag:IPDiscoverySwitchingProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "vmToolsEnabled": {
                    "type": "boolean",
                    "description": "Indicating whether VM tools will be enabled. This option is only supported on ESX where vm-tools is installed\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "arpBindingsLimit": {
                    "type": "integer",
                    "description": "Limit for the amount of ARP bindings\n"
                },
                "arpSnoopingEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether ARP snooping is enabled\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "dhcpSnoopingEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether DHCP snooping is enabled\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPDiscoverySwitchingProfileTag:IPDiscoverySwitchingProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "vmToolsEnabled": {
                    "type": "boolean",
                    "description": "Indicating whether VM tools will be enabled. This option is only supported on ESX where vm-tools is installed\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPDiscoverySwitchingProfile resources.\n",
                "properties": {
                    "arpBindingsLimit": {
                        "type": "integer",
                        "description": "Limit for the amount of ARP bindings\n"
                    },
                    "arpSnoopingEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether ARP snooping is enabled\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "dhcpSnoopingEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether DHCP snooping is enabled\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/IPDiscoverySwitchingProfileTag:IPDiscoverySwitchingProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "vmToolsEnabled": {
                        "type": "boolean",
                        "description": "Indicating whether VM tools will be enabled. This option is only supported on ESX where vm-tools is installed\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/iPPool:IPPool": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPPoolSubnet:IPPoolSubnet"
                    },
                    "description": "List of IPv4 subnets\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPPoolTag:IPPoolTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPPoolSubnet:IPPoolSubnet"
                    },
                    "description": "List of IPv4 subnets\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPPoolTag:IPPoolTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPPool resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/IPPoolSubnet:IPPoolSubnet"
                        },
                        "description": "List of IPv4 subnets\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/IPPoolTag:IPPoolTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/iPPoolAllocationIPAddress:IPPoolAllocationIPAddress": {
            "properties": {
                "allocationId": {
                    "type": "string",
                    "description": "IP Address that is allocated from the pool\n"
                },
                "ipPoolId": {
                    "type": "string",
                    "description": "ID of IP pool that allocation belongs to\n"
                }
            },
            "required": [
                "allocationId",
                "ipPoolId"
            ],
            "inputProperties": {
                "allocationId": {
                    "type": "string",
                    "description": "IP Address that is allocated from the pool\n"
                },
                "ipPoolId": {
                    "type": "string",
                    "description": "ID of IP pool that allocation belongs to\n"
                }
            },
            "requiredInputs": [
                "ipPoolId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPPoolAllocationIPAddress resources.\n",
                "properties": {
                    "allocationId": {
                        "type": "string",
                        "description": "IP Address that is allocated from the pool\n"
                    },
                    "ipPoolId": {
                        "type": "string",
                        "description": "ID of IP pool that allocation belongs to\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/iPProtocolNSService:IPProtocolNSService": {
            "properties": {
                "defaultService": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "protocol": {
                    "type": "integer",
                    "description": "IP protocol number\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPProtocolNSServiceTag:IPProtocolNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "defaultService",
                "displayName",
                "protocol",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "protocol": {
                    "type": "integer",
                    "description": "IP protocol number\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPProtocolNSServiceTag:IPProtocolNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPProtocolNSService resources.\n",
                "properties": {
                    "defaultService": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "protocol": {
                        "type": "integer",
                        "description": "IP protocol number\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/IPProtocolNSServiceTag:IPProtocolNSServiceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/iPSet:IPSet": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of IP addresses\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPSetTag:IPSetTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of IP addresses\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/IPSetTag:IPSetTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPSet resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of IP addresses\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/IPSetTag:IPSetTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/l4PortSetNSService:L4PortSetNSService": {
            "properties": {
                "defaultService": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "destinationPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of destination ports\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "L4 Protocol\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "sourcePorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of source ports\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/L4PortSetNSServiceTag:L4PortSetNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "defaultService",
                "displayName",
                "protocol",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "destinationPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of destination ports\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "L4 Protocol\n"
                },
                "sourcePorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of source ports\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/L4PortSetNSServiceTag:L4PortSetNSServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering L4PortSetNSService resources.\n",
                "properties": {
                    "defaultService": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "destinationPorts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of destination ports\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "L4 Protocol\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "sourcePorts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of source ports\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/L4PortSetNSServiceTag:L4PortSetNSServiceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBClientSSLProfile:LBClientSSLProfile": {
            "properties": {
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported SSL cipher list\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "isSecure": {
                    "type": "boolean",
                    "description": "This flag is set to true when all the ciphers and protocols are secure. It is set to false when one of the ciphers or\nprotocols is insecure\n"
                },
                "preferServerCiphers": {
                    "type": "boolean",
                    "description": "Allow server to override the client's preference\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSL versions TLS1.1 and TLS1.2 are supported and enabled by default. SSLv2, SSLv3, and TLS1.0 are supported, but\ndisabled by default\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "sessionCacheEnabled": {
                    "type": "boolean",
                    "description": "Reuse previously negotiated security parameters during handshake\n"
                },
                "sessionCacheTimeout": {
                    "type": "integer",
                    "description": "For how long the SSL session parameters can be reused\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBClientSSLProfileTag:LBClientSSLProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "ciphers",
                "displayName",
                "isSecure",
                "protocols",
                "revision"
            ],
            "inputProperties": {
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported SSL cipher list\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "preferServerCiphers": {
                    "type": "boolean",
                    "description": "Allow server to override the client's preference\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSL versions TLS1.1 and TLS1.2 are supported and enabled by default. SSLv2, SSLv3, and TLS1.0 are supported, but\ndisabled by default\n"
                },
                "sessionCacheEnabled": {
                    "type": "boolean",
                    "description": "Reuse previously negotiated security parameters during handshake\n"
                },
                "sessionCacheTimeout": {
                    "type": "integer",
                    "description": "For how long the SSL session parameters can be reused\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBClientSSLProfileTag:LBClientSSLProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBClientSSLProfile resources.\n",
                "properties": {
                    "ciphers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Supported SSL cipher list\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "isSecure": {
                        "type": "boolean",
                        "description": "This flag is set to true when all the ciphers and protocols are secure. It is set to false when one of the ciphers or\nprotocols is insecure\n"
                    },
                    "preferServerCiphers": {
                        "type": "boolean",
                        "description": "Allow server to override the client's preference\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "SSL versions TLS1.1 and TLS1.2 are supported and enabled by default. SSLv2, SSLv3, and TLS1.0 are supported, but\ndisabled by default\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "sessionCacheEnabled": {
                        "type": "boolean",
                        "description": "Reuse previously negotiated security parameters during handshake\n"
                    },
                    "sessionCacheTimeout": {
                        "type": "integer",
                        "description": "For how long the SSL session parameters can be reused\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBClientSSLProfileTag:LBClientSSLProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBCookiePersistenceProfile:LBCookiePersistenceProfile": {
            "properties": {
                "cookieFallback": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether once the server points by this cookie is down, a new server is selected, or the\nrequests will be rejected\n"
                },
                "cookieGarble": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether the cookie value (server IP and port) would be encrypted or in plain text\n"
                },
                "cookieMode": {
                    "type": "string",
                    "description": "The cookie persistence mode\n"
                },
                "cookieName": {
                    "type": "string",
                    "description": "The name of the cookie\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "insertModeParams": {
                    "$ref": "#/types/nsxt:/LBCookiePersistenceProfileInsertModeParams:LBCookiePersistenceProfileInsertModeParams",
                    "description": "Additional parameters for the INSERT cookie mode\n"
                },
                "persistenceShared": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether the cookie persistence is private or shared\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBCookiePersistenceProfileTag:LBCookiePersistenceProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "cookieName",
                "displayName",
                "insertModeParams",
                "revision"
            ],
            "inputProperties": {
                "cookieFallback": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether once the server points by this cookie is down, a new server is selected, or the\nrequests will be rejected\n"
                },
                "cookieGarble": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether the cookie value (server IP and port) would be encrypted or in plain text\n"
                },
                "cookieMode": {
                    "type": "string",
                    "description": "The cookie persistence mode\n"
                },
                "cookieName": {
                    "type": "string",
                    "description": "The name of the cookie\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "insertModeParams": {
                    "$ref": "#/types/nsxt:/LBCookiePersistenceProfileInsertModeParams:LBCookiePersistenceProfileInsertModeParams",
                    "description": "Additional parameters for the INSERT cookie mode\n"
                },
                "persistenceShared": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether the cookie persistence is private or shared\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBCookiePersistenceProfileTag:LBCookiePersistenceProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "cookieName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBCookiePersistenceProfile resources.\n",
                "properties": {
                    "cookieFallback": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether once the server points by this cookie is down, a new server is selected, or the\nrequests will be rejected\n"
                    },
                    "cookieGarble": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether the cookie value (server IP and port) would be encrypted or in plain text\n"
                    },
                    "cookieMode": {
                        "type": "string",
                        "description": "The cookie persistence mode\n"
                    },
                    "cookieName": {
                        "type": "string",
                        "description": "The name of the cookie\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "insertModeParams": {
                        "$ref": "#/types/nsxt:/LBCookiePersistenceProfileInsertModeParams:LBCookiePersistenceProfileInsertModeParams",
                        "description": "Additional parameters for the INSERT cookie mode\n"
                    },
                    "persistenceShared": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether the cookie persistence is private or shared\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBCookiePersistenceProfileTag:LBCookiePersistenceProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBFastTCPApplicationProfile:LBFastTCPApplicationProfile": {
            "properties": {
                "closeTimeout": {
                    "type": "integer",
                    "description": "Timeout in seconds to specify how long a closed TCP connection should be kept for this application before cleaning up\nthe connection\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "haFlowMirroring": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether flow mirroring is enabled, and all the flows to the bounded virtual server are\nmirrored to the standby node\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Timeout in seconds to specify how long an idle TCP connection in ESTABLISHED state should be kept for this application\nbefore cleaning up\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBFastTCPApplicationProfileTag:LBFastTCPApplicationProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "closeTimeout": {
                    "type": "integer",
                    "description": "Timeout in seconds to specify how long a closed TCP connection should be kept for this application before cleaning up\nthe connection\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "haFlowMirroring": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether flow mirroring is enabled, and all the flows to the bounded virtual server are\nmirrored to the standby node\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Timeout in seconds to specify how long an idle TCP connection in ESTABLISHED state should be kept for this application\nbefore cleaning up\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBFastTCPApplicationProfileTag:LBFastTCPApplicationProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBFastTCPApplicationProfile resources.\n",
                "properties": {
                    "closeTimeout": {
                        "type": "integer",
                        "description": "Timeout in seconds to specify how long a closed TCP connection should be kept for this application before cleaning up\nthe connection\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "haFlowMirroring": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether flow mirroring is enabled, and all the flows to the bounded virtual server are\nmirrored to the standby node\n"
                    },
                    "idleTimeout": {
                        "type": "integer",
                        "description": "Timeout in seconds to specify how long an idle TCP connection in ESTABLISHED state should be kept for this application\nbefore cleaning up\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBFastTCPApplicationProfileTag:LBFastTCPApplicationProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBFastUDPApplicationProfile:LBFastUDPApplicationProfile": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "haFlowMirroring": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether flow mirroring is enabled, and all the flows to the bounded virtual server are\nmirrored to the standby node\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Timeout in seconds to specify how long an idle UDP connection in ESTABLISHED state should be kept for this application\nbefore cleaning up\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBFastUDPApplicationProfileTag:LBFastUDPApplicationProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "haFlowMirroring": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether flow mirroring is enabled, and all the flows to the bounded virtual server are\nmirrored to the standby node\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Timeout in seconds to specify how long an idle UDP connection in ESTABLISHED state should be kept for this application\nbefore cleaning up\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBFastUDPApplicationProfileTag:LBFastUDPApplicationProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBFastUDPApplicationProfile resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "haFlowMirroring": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether flow mirroring is enabled, and all the flows to the bounded virtual server are\nmirrored to the standby node\n"
                    },
                    "idleTimeout": {
                        "type": "integer",
                        "description": "Timeout in seconds to specify how long an idle UDP connection in ESTABLISHED state should be kept for this application\nbefore cleaning up\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBFastUDPApplicationProfileTag:LBFastUDPApplicationProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBHTTPApplicationProfile:LBHTTPApplicationProfile": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "httpRedirectTo": {
                    "type": "string",
                    "description": "A URL that incoming requests for that virtual server can be temporarily redirected to, If a website is temporarily down\nor has moved\n"
                },
                "httpRedirectToHttps": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether the client will automatically be redirected to use SSL\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Timeout in seconds to specify how long an HTTP application can remain idle\n"
                },
                "ntlm": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether NTLM challenge/response methodology will be used over HTTP\n"
                },
                "requestBodySize": {
                    "type": "integer",
                    "description": "Maximum request body size in bytes (Unlimited if not specified)\n"
                },
                "requestHeaderSize": {
                    "type": "integer",
                    "description": "Maximum request header size in bytes. Requests with larger header size will be processed as best effort whereas a\nrequest with header below this specified size is guaranteed to be processed\n"
                },
                "responseTimeout": {
                    "type": "integer",
                    "description": "Number of seconds waiting for the server response before the connection is closed\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPApplicationProfileTag:LBHTTPApplicationProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "xForwardedFor": {
                    "type": "string",
                    "description": "When this value is set, the x_forwarded_for header in the incoming request will be inserted or replaced\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "httpRedirectTo": {
                    "type": "string",
                    "description": "A URL that incoming requests for that virtual server can be temporarily redirected to, If a website is temporarily down\nor has moved\n"
                },
                "httpRedirectToHttps": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether the client will automatically be redirected to use SSL\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Timeout in seconds to specify how long an HTTP application can remain idle\n"
                },
                "ntlm": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether NTLM challenge/response methodology will be used over HTTP\n"
                },
                "requestBodySize": {
                    "type": "integer",
                    "description": "Maximum request body size in bytes (Unlimited if not specified)\n"
                },
                "requestHeaderSize": {
                    "type": "integer",
                    "description": "Maximum request header size in bytes. Requests with larger header size will be processed as best effort whereas a\nrequest with header below this specified size is guaranteed to be processed\n"
                },
                "responseTimeout": {
                    "type": "integer",
                    "description": "Number of seconds waiting for the server response before the connection is closed\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPApplicationProfileTag:LBHTTPApplicationProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "xForwardedFor": {
                    "type": "string",
                    "description": "When this value is set, the x_forwarded_for header in the incoming request will be inserted or replaced\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBHTTPApplicationProfile resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "httpRedirectTo": {
                        "type": "string",
                        "description": "A URL that incoming requests for that virtual server can be temporarily redirected to, If a website is temporarily down\nor has moved\n"
                    },
                    "httpRedirectToHttps": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether the client will automatically be redirected to use SSL\n"
                    },
                    "idleTimeout": {
                        "type": "integer",
                        "description": "Timeout in seconds to specify how long an HTTP application can remain idle\n"
                    },
                    "ntlm": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether NTLM challenge/response methodology will be used over HTTP\n"
                    },
                    "requestBodySize": {
                        "type": "integer",
                        "description": "Maximum request body size in bytes (Unlimited if not specified)\n"
                    },
                    "requestHeaderSize": {
                        "type": "integer",
                        "description": "Maximum request header size in bytes. Requests with larger header size will be processed as best effort whereas a\nrequest with header below this specified size is guaranteed to be processed\n"
                    },
                    "responseTimeout": {
                        "type": "integer",
                        "description": "Number of seconds waiting for the server response before the connection is closed\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPApplicationProfileTag:LBHTTPApplicationProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "xForwardedFor": {
                        "type": "string",
                        "description": "When this value is set, the x_forwarded_for header in the incoming request will be inserted or replaced\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBHTTPForwardingRule:LBHTTPForwardingRule": {
            "properties": {
                "bodyConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleBodyCondition:LBHTTPForwardingRuleBodyCondition"
                    },
                    "description": "Rule condition based on http request body\n"
                },
                "cookieConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleCookieCondition:LBHTTPForwardingRuleCookieCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "headerConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleHeaderCondition:LBHTTPForwardingRuleHeaderCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "httpRedirectAction": {
                    "$ref": "#/types/nsxt:/LBHTTPForwardingRuleHttpRedirectAction:LBHTTPForwardingRuleHttpRedirectAction",
                    "description": "Redirect the request with a defined status and url\n"
                },
                "httpRejectAction": {
                    "$ref": "#/types/nsxt:/LBHTTPForwardingRuleHttpRejectAction:LBHTTPForwardingRuleHttpRejectAction",
                    "description": "Reject the request with a defined status and message\n"
                },
                "ipConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleIpCondition:LBHTTPForwardingRuleIpCondition"
                    },
                    "description": "Rule condition based on IP settings of the message\n"
                },
                "matchStrategy": {
                    "type": "string",
                    "description": "Strategy when multiple match conditions are specified in one rule (ANY vs ALL)\n"
                },
                "methodConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleMethodCondition:LBHTTPForwardingRuleMethodCondition"
                    },
                    "description": "Rule condition based on http request method\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "selectPoolAction": {
                    "$ref": "#/types/nsxt:/LBHTTPForwardingRuleSelectPoolAction:LBHTTPForwardingRuleSelectPoolAction",
                    "description": "Forward the request to the a defined pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleTag:LBHTTPForwardingRuleTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleTcpCondition:LBHTTPForwardingRuleTcpCondition"
                    },
                    "description": "Rule condition based on TCP settings of the message\n"
                },
                "uriConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleUriCondition:LBHTTPForwardingRuleUriCondition"
                    },
                    "description": "Rule condition based on http request URI\n"
                },
                "versionCondition": {
                    "$ref": "#/types/nsxt:/LBHTTPForwardingRuleVersionCondition:LBHTTPForwardingRuleVersionCondition",
                    "description": "Rule condition based on http request version\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "bodyConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleBodyCondition:LBHTTPForwardingRuleBodyCondition"
                    },
                    "description": "Rule condition based on http request body\n"
                },
                "cookieConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleCookieCondition:LBHTTPForwardingRuleCookieCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "headerConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleHeaderCondition:LBHTTPForwardingRuleHeaderCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "httpRedirectAction": {
                    "$ref": "#/types/nsxt:/LBHTTPForwardingRuleHttpRedirectAction:LBHTTPForwardingRuleHttpRedirectAction",
                    "description": "Redirect the request with a defined status and url\n"
                },
                "httpRejectAction": {
                    "$ref": "#/types/nsxt:/LBHTTPForwardingRuleHttpRejectAction:LBHTTPForwardingRuleHttpRejectAction",
                    "description": "Reject the request with a defined status and message\n"
                },
                "ipConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleIpCondition:LBHTTPForwardingRuleIpCondition"
                    },
                    "description": "Rule condition based on IP settings of the message\n"
                },
                "matchStrategy": {
                    "type": "string",
                    "description": "Strategy when multiple match conditions are specified in one rule (ANY vs ALL)\n"
                },
                "methodConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleMethodCondition:LBHTTPForwardingRuleMethodCondition"
                    },
                    "description": "Rule condition based on http request method\n"
                },
                "selectPoolAction": {
                    "$ref": "#/types/nsxt:/LBHTTPForwardingRuleSelectPoolAction:LBHTTPForwardingRuleSelectPoolAction",
                    "description": "Forward the request to the a defined pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleTag:LBHTTPForwardingRuleTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleTcpCondition:LBHTTPForwardingRuleTcpCondition"
                    },
                    "description": "Rule condition based on TCP settings of the message\n"
                },
                "uriConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleUriCondition:LBHTTPForwardingRuleUriCondition"
                    },
                    "description": "Rule condition based on http request URI\n"
                },
                "versionCondition": {
                    "$ref": "#/types/nsxt:/LBHTTPForwardingRuleVersionCondition:LBHTTPForwardingRuleVersionCondition",
                    "description": "Rule condition based on http request version\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBHTTPForwardingRule resources.\n",
                "properties": {
                    "bodyConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPForwardingRuleBodyCondition:LBHTTPForwardingRuleBodyCondition"
                        },
                        "description": "Rule condition based on http request body\n"
                    },
                    "cookieConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPForwardingRuleCookieCondition:LBHTTPForwardingRuleCookieCondition"
                        },
                        "description": "Rule condition based on http header\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "headerConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPForwardingRuleHeaderCondition:LBHTTPForwardingRuleHeaderCondition"
                        },
                        "description": "Rule condition based on http header\n"
                    },
                    "httpRedirectAction": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleHttpRedirectAction:LBHTTPForwardingRuleHttpRedirectAction",
                        "description": "Redirect the request with a defined status and url\n"
                    },
                    "httpRejectAction": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleHttpRejectAction:LBHTTPForwardingRuleHttpRejectAction",
                        "description": "Reject the request with a defined status and message\n"
                    },
                    "ipConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPForwardingRuleIpCondition:LBHTTPForwardingRuleIpCondition"
                        },
                        "description": "Rule condition based on IP settings of the message\n"
                    },
                    "matchStrategy": {
                        "type": "string",
                        "description": "Strategy when multiple match conditions are specified in one rule (ANY vs ALL)\n"
                    },
                    "methodConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPForwardingRuleMethodCondition:LBHTTPForwardingRuleMethodCondition"
                        },
                        "description": "Rule condition based on http request method\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "selectPoolAction": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleSelectPoolAction:LBHTTPForwardingRuleSelectPoolAction",
                        "description": "Forward the request to the a defined pool\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPForwardingRuleTag:LBHTTPForwardingRuleTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "tcpConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPForwardingRuleTcpCondition:LBHTTPForwardingRuleTcpCondition"
                        },
                        "description": "Rule condition based on TCP settings of the message\n"
                    },
                    "uriConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPForwardingRuleUriCondition:LBHTTPForwardingRuleUriCondition"
                        },
                        "description": "Rule condition based on http request URI\n"
                    },
                    "versionCondition": {
                        "$ref": "#/types/nsxt:/LBHTTPForwardingRuleVersionCondition:LBHTTPForwardingRuleVersionCondition",
                        "description": "Rule condition based on http request version\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBHTTPMonitor:LBHTTPMonitor": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "fallCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must fail before marking it down\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                },
                "monitorPort": {
                    "type": "string",
                    "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                },
                "requestBody": {
                    "type": "string",
                    "description": "String to send as HTTP health check request body. Valid only for certain HTTP methods like POST\n"
                },
                "requestHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPMonitorRequestHeader:LBHTTPMonitorRequestHeader"
                    },
                    "description": "Array of HTTP request headers\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "Health check method for HTTP monitor type\n"
                },
                "requestUrl": {
                    "type": "string",
                    "description": "URL used for HTTP monitor\n"
                },
                "requestVersion": {
                    "type": "string",
                    "description": "HTTP request version\n"
                },
                "responseBody": {
                    "type": "string",
                    "description": "If HTTP specified, healthcheck HTTP response body is matched against the specified string (regular expressions not\nsupported), and succeeds only if there is a match\n"
                },
                "responseStatusCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The HTTP response status code should be a valid HTTP status code\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "riseCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must pass before marking it up\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPMonitorTag:LBHTTPMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Number of seconds the target has to respond to the monitor request\n"
                }
            },
            "required": [
                "displayName",
                "responseStatusCodes",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "fallCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must fail before marking it down\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                },
                "monitorPort": {
                    "type": "string",
                    "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                },
                "requestBody": {
                    "type": "string",
                    "description": "String to send as HTTP health check request body. Valid only for certain HTTP methods like POST\n"
                },
                "requestHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPMonitorRequestHeader:LBHTTPMonitorRequestHeader"
                    },
                    "description": "Array of HTTP request headers\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "Health check method for HTTP monitor type\n"
                },
                "requestUrl": {
                    "type": "string",
                    "description": "URL used for HTTP monitor\n"
                },
                "requestVersion": {
                    "type": "string",
                    "description": "HTTP request version\n"
                },
                "responseBody": {
                    "type": "string",
                    "description": "If HTTP specified, healthcheck HTTP response body is matched against the specified string (regular expressions not\nsupported), and succeeds only if there is a match\n"
                },
                "responseStatusCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The HTTP response status code should be a valid HTTP status code\n"
                },
                "riseCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must pass before marking it up\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPMonitorTag:LBHTTPMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Number of seconds the target has to respond to the monitor request\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBHTTPMonitor resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "fallCount": {
                        "type": "integer",
                        "description": "Number of consecutive checks that must fail before marking it down\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                    },
                    "monitorPort": {
                        "type": "string",
                        "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                    },
                    "requestBody": {
                        "type": "string",
                        "description": "String to send as HTTP health check request body. Valid only for certain HTTP methods like POST\n"
                    },
                    "requestHeaders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPMonitorRequestHeader:LBHTTPMonitorRequestHeader"
                        },
                        "description": "Array of HTTP request headers\n"
                    },
                    "requestMethod": {
                        "type": "string",
                        "description": "Health check method for HTTP monitor type\n"
                    },
                    "requestUrl": {
                        "type": "string",
                        "description": "URL used for HTTP monitor\n"
                    },
                    "requestVersion": {
                        "type": "string",
                        "description": "HTTP request version\n"
                    },
                    "responseBody": {
                        "type": "string",
                        "description": "If HTTP specified, healthcheck HTTP response body is matched against the specified string (regular expressions not\nsupported), and succeeds only if there is a match\n"
                    },
                    "responseStatusCodes": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The HTTP response status code should be a valid HTTP status code\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "riseCount": {
                        "type": "integer",
                        "description": "Number of consecutive checks that must pass before marking it up\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPMonitorTag:LBHTTPMonitorTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Number of seconds the target has to respond to the monitor request\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBHTTPRequestRewriteRule:LBHTTPRequestRewriteRule": {
            "properties": {
                "bodyConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleBodyCondition:LBHTTPRequestRewriteRuleBodyCondition"
                    },
                    "description": "Rule condition based on http request body\n"
                },
                "cookieConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleCookieCondition:LBHTTPRequestRewriteRuleCookieCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "headerConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleHeaderCondition:LBHTTPRequestRewriteRuleHeaderCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "headerRewriteAction": {
                    "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleHeaderRewriteAction:LBHTTPRequestRewriteRuleHeaderRewriteAction",
                    "description": "Header to replace original header in outgoing message\n"
                },
                "ipConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleIpCondition:LBHTTPRequestRewriteRuleIpCondition"
                    },
                    "description": "Rule condition based on IP settings of the message\n"
                },
                "matchStrategy": {
                    "type": "string",
                    "description": "Strategy when multiple match conditions are specified in one rule (ANY vs ALL)\n"
                },
                "methodConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleMethodCondition:LBHTTPRequestRewriteRuleMethodCondition"
                    },
                    "description": "Rule condition based on http request method\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleTag:LBHTTPRequestRewriteRuleTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleTcpCondition:LBHTTPRequestRewriteRuleTcpCondition"
                    },
                    "description": "Rule condition based on TCP settings of the message\n"
                },
                "uriArgumentsConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleUriArgumentsCondition:LBHTTPRequestRewriteRuleUriArgumentsCondition"
                    },
                    "description": "Rule condition based on http request URI arguments (query string)\n"
                },
                "uriConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleUriCondition:LBHTTPRequestRewriteRuleUriCondition"
                    },
                    "description": "Rule condition based on http request URI\n"
                },
                "uriRewriteAction": {
                    "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleUriRewriteAction:LBHTTPRequestRewriteRuleUriRewriteAction",
                    "description": "Uri to replace original URI in outgoing request\n"
                },
                "versionCondition": {
                    "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleVersionCondition:LBHTTPRequestRewriteRuleVersionCondition",
                    "description": "Rule condition based on http request version\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "bodyConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleBodyCondition:LBHTTPRequestRewriteRuleBodyCondition"
                    },
                    "description": "Rule condition based on http request body\n"
                },
                "cookieConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleCookieCondition:LBHTTPRequestRewriteRuleCookieCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "headerConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleHeaderCondition:LBHTTPRequestRewriteRuleHeaderCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "headerRewriteAction": {
                    "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleHeaderRewriteAction:LBHTTPRequestRewriteRuleHeaderRewriteAction",
                    "description": "Header to replace original header in outgoing message\n"
                },
                "ipConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleIpCondition:LBHTTPRequestRewriteRuleIpCondition"
                    },
                    "description": "Rule condition based on IP settings of the message\n"
                },
                "matchStrategy": {
                    "type": "string",
                    "description": "Strategy when multiple match conditions are specified in one rule (ANY vs ALL)\n"
                },
                "methodConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleMethodCondition:LBHTTPRequestRewriteRuleMethodCondition"
                    },
                    "description": "Rule condition based on http request method\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleTag:LBHTTPRequestRewriteRuleTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleTcpCondition:LBHTTPRequestRewriteRuleTcpCondition"
                    },
                    "description": "Rule condition based on TCP settings of the message\n"
                },
                "uriArgumentsConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleUriArgumentsCondition:LBHTTPRequestRewriteRuleUriArgumentsCondition"
                    },
                    "description": "Rule condition based on http request URI arguments (query string)\n"
                },
                "uriConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleUriCondition:LBHTTPRequestRewriteRuleUriCondition"
                    },
                    "description": "Rule condition based on http request URI\n"
                },
                "uriRewriteAction": {
                    "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleUriRewriteAction:LBHTTPRequestRewriteRuleUriRewriteAction",
                    "description": "Uri to replace original URI in outgoing request\n"
                },
                "versionCondition": {
                    "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleVersionCondition:LBHTTPRequestRewriteRuleVersionCondition",
                    "description": "Rule condition based on http request version\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBHTTPRequestRewriteRule resources.\n",
                "properties": {
                    "bodyConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleBodyCondition:LBHTTPRequestRewriteRuleBodyCondition"
                        },
                        "description": "Rule condition based on http request body\n"
                    },
                    "cookieConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleCookieCondition:LBHTTPRequestRewriteRuleCookieCondition"
                        },
                        "description": "Rule condition based on http header\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "headerConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleHeaderCondition:LBHTTPRequestRewriteRuleHeaderCondition"
                        },
                        "description": "Rule condition based on http header\n"
                    },
                    "headerRewriteAction": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleHeaderRewriteAction:LBHTTPRequestRewriteRuleHeaderRewriteAction",
                        "description": "Header to replace original header in outgoing message\n"
                    },
                    "ipConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleIpCondition:LBHTTPRequestRewriteRuleIpCondition"
                        },
                        "description": "Rule condition based on IP settings of the message\n"
                    },
                    "matchStrategy": {
                        "type": "string",
                        "description": "Strategy when multiple match conditions are specified in one rule (ANY vs ALL)\n"
                    },
                    "methodConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleMethodCondition:LBHTTPRequestRewriteRuleMethodCondition"
                        },
                        "description": "Rule condition based on http request method\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleTag:LBHTTPRequestRewriteRuleTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "tcpConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleTcpCondition:LBHTTPRequestRewriteRuleTcpCondition"
                        },
                        "description": "Rule condition based on TCP settings of the message\n"
                    },
                    "uriArgumentsConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleUriArgumentsCondition:LBHTTPRequestRewriteRuleUriArgumentsCondition"
                        },
                        "description": "Rule condition based on http request URI arguments (query string)\n"
                    },
                    "uriConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleUriCondition:LBHTTPRequestRewriteRuleUriCondition"
                        },
                        "description": "Rule condition based on http request URI\n"
                    },
                    "uriRewriteAction": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleUriRewriteAction:LBHTTPRequestRewriteRuleUriRewriteAction",
                        "description": "Uri to replace original URI in outgoing request\n"
                    },
                    "versionCondition": {
                        "$ref": "#/types/nsxt:/LBHTTPRequestRewriteRuleVersionCondition:LBHTTPRequestRewriteRuleVersionCondition",
                        "description": "Rule condition based on http request version\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBHTTPResponseRewriteRule:LBHTTPResponseRewriteRule": {
            "properties": {
                "cookieConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleCookieCondition:LBHTTPResponseRewriteRuleCookieCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "headerRewriteAction": {
                    "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleHeaderRewriteAction:LBHTTPResponseRewriteRuleHeaderRewriteAction",
                    "description": "Header to replace original header in outgoing message\n"
                },
                "ipConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleIpCondition:LBHTTPResponseRewriteRuleIpCondition"
                    },
                    "description": "Rule condition based on IP settings of the message\n"
                },
                "matchStrategy": {
                    "type": "string",
                    "description": "Strategy when multiple match conditions are specified in one rule (ANY vs ALL)\n"
                },
                "methodConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleMethodCondition:LBHTTPResponseRewriteRuleMethodCondition"
                    },
                    "description": "Rule condition based on http request method\n"
                },
                "requestHeaderConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleRequestHeaderCondition:LBHTTPResponseRewriteRuleRequestHeaderCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "responseHeaderConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleResponseHeaderCondition:LBHTTPResponseRewriteRuleResponseHeaderCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleTag:LBHTTPResponseRewriteRuleTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleTcpCondition:LBHTTPResponseRewriteRuleTcpCondition"
                    },
                    "description": "Rule condition based on TCP settings of the message\n"
                },
                "uriArgumentsConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleUriArgumentsCondition:LBHTTPResponseRewriteRuleUriArgumentsCondition"
                    },
                    "description": "Rule condition based on http request URI arguments (query string)\n"
                },
                "uriConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleUriCondition:LBHTTPResponseRewriteRuleUriCondition"
                    },
                    "description": "Rule condition based on http request URI\n"
                },
                "versionCondition": {
                    "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleVersionCondition:LBHTTPResponseRewriteRuleVersionCondition",
                    "description": "Rule condition based on http request version\n"
                }
            },
            "required": [
                "displayName",
                "headerRewriteAction",
                "revision"
            ],
            "inputProperties": {
                "cookieConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleCookieCondition:LBHTTPResponseRewriteRuleCookieCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "headerRewriteAction": {
                    "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleHeaderRewriteAction:LBHTTPResponseRewriteRuleHeaderRewriteAction",
                    "description": "Header to replace original header in outgoing message\n"
                },
                "ipConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleIpCondition:LBHTTPResponseRewriteRuleIpCondition"
                    },
                    "description": "Rule condition based on IP settings of the message\n"
                },
                "matchStrategy": {
                    "type": "string",
                    "description": "Strategy when multiple match conditions are specified in one rule (ANY vs ALL)\n"
                },
                "methodConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleMethodCondition:LBHTTPResponseRewriteRuleMethodCondition"
                    },
                    "description": "Rule condition based on http request method\n"
                },
                "requestHeaderConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleRequestHeaderCondition:LBHTTPResponseRewriteRuleRequestHeaderCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "responseHeaderConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleResponseHeaderCondition:LBHTTPResponseRewriteRuleResponseHeaderCondition"
                    },
                    "description": "Rule condition based on http header\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleTag:LBHTTPResponseRewriteRuleTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleTcpCondition:LBHTTPResponseRewriteRuleTcpCondition"
                    },
                    "description": "Rule condition based on TCP settings of the message\n"
                },
                "uriArgumentsConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleUriArgumentsCondition:LBHTTPResponseRewriteRuleUriArgumentsCondition"
                    },
                    "description": "Rule condition based on http request URI arguments (query string)\n"
                },
                "uriConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleUriCondition:LBHTTPResponseRewriteRuleUriCondition"
                    },
                    "description": "Rule condition based on http request URI\n"
                },
                "versionCondition": {
                    "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleVersionCondition:LBHTTPResponseRewriteRuleVersionCondition",
                    "description": "Rule condition based on http request version\n"
                }
            },
            "requiredInputs": [
                "headerRewriteAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBHTTPResponseRewriteRule resources.\n",
                "properties": {
                    "cookieConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleCookieCondition:LBHTTPResponseRewriteRuleCookieCondition"
                        },
                        "description": "Rule condition based on http header\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "headerRewriteAction": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleHeaderRewriteAction:LBHTTPResponseRewriteRuleHeaderRewriteAction",
                        "description": "Header to replace original header in outgoing message\n"
                    },
                    "ipConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleIpCondition:LBHTTPResponseRewriteRuleIpCondition"
                        },
                        "description": "Rule condition based on IP settings of the message\n"
                    },
                    "matchStrategy": {
                        "type": "string",
                        "description": "Strategy when multiple match conditions are specified in one rule (ANY vs ALL)\n"
                    },
                    "methodConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleMethodCondition:LBHTTPResponseRewriteRuleMethodCondition"
                        },
                        "description": "Rule condition based on http request method\n"
                    },
                    "requestHeaderConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleRequestHeaderCondition:LBHTTPResponseRewriteRuleRequestHeaderCondition"
                        },
                        "description": "Rule condition based on http header\n"
                    },
                    "responseHeaderConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleResponseHeaderCondition:LBHTTPResponseRewriteRuleResponseHeaderCondition"
                        },
                        "description": "Rule condition based on http header\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleTag:LBHTTPResponseRewriteRuleTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "tcpConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleTcpCondition:LBHTTPResponseRewriteRuleTcpCondition"
                        },
                        "description": "Rule condition based on TCP settings of the message\n"
                    },
                    "uriArgumentsConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleUriArgumentsCondition:LBHTTPResponseRewriteRuleUriArgumentsCondition"
                        },
                        "description": "Rule condition based on http request URI arguments (query string)\n"
                    },
                    "uriConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleUriCondition:LBHTTPResponseRewriteRuleUriCondition"
                        },
                        "description": "Rule condition based on http request URI\n"
                    },
                    "versionCondition": {
                        "$ref": "#/types/nsxt:/LBHTTPResponseRewriteRuleVersionCondition:LBHTTPResponseRewriteRuleVersionCondition",
                        "description": "Rule condition based on http request version\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBHTTPSMonitor:LBHTTPSMonitor": {
            "properties": {
                "certificateChainDepth": {
                    "type": "integer",
                    "description": "Verification depth in the server certificate chain\n"
                },
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported SSL cipher list\n"
                },
                "clientCertificateId": {
                    "type": "string",
                    "description": "client certificate can be specified to support client authentication\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "fallCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must fail before marking it down\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                },
                "isSecure": {
                    "type": "boolean",
                    "description": "This flag is set to true when all the ciphers and protocols are secure. It is set to false when one of the ciphers or\nprotocols is insecure\n"
                },
                "monitorPort": {
                    "type": "string",
                    "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSL versions TLS1.1 and TLS1.2 are supported and enabled by default. SSLv2, SSLv3, and TLS1.0 are supported, but\ndisabled by default\n"
                },
                "requestBody": {
                    "type": "string",
                    "description": "String to send as HTTP health check request body. Valid only for certain HTTP methods like POST\n"
                },
                "requestHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPSMonitorRequestHeader:LBHTTPSMonitorRequestHeader"
                    },
                    "description": "Array of HTTP request headers\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "Health check method for HTTP monitor type\n"
                },
                "requestUrl": {
                    "type": "string",
                    "description": "URL used for HTTP monitor\n"
                },
                "requestVersion": {
                    "type": "string",
                    "description": "HTTP request version\n"
                },
                "responseBody": {
                    "type": "string",
                    "description": "If HTTP specified, healthcheck HTTP response body is matched against the specified string (regular expressions not\nsupported), and succeeds only if there is a match\n"
                },
                "responseStatusCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The HTTP response status code should be a valid HTTP status code\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "riseCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must pass before marking it up\n"
                },
                "serverAuth": {
                    "type": "string",
                    "description": "Server authentication mode\n"
                },
                "serverAuthCaIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If server auth type is REQUIRED, server certificate must be signed by one of the CAs\n"
                },
                "serverAuthCrlIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Certificate Revocation List (CRL) to disallow compromised server certificates\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPSMonitorTag:LBHTTPSMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Number of seconds the target has to respond to the monitor request\n"
                }
            },
            "required": [
                "ciphers",
                "displayName",
                "isSecure",
                "protocols",
                "responseStatusCodes",
                "revision"
            ],
            "inputProperties": {
                "certificateChainDepth": {
                    "type": "integer",
                    "description": "Verification depth in the server certificate chain\n"
                },
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported SSL cipher list\n"
                },
                "clientCertificateId": {
                    "type": "string",
                    "description": "client certificate can be specified to support client authentication\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "fallCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must fail before marking it down\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                },
                "monitorPort": {
                    "type": "string",
                    "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSL versions TLS1.1 and TLS1.2 are supported and enabled by default. SSLv2, SSLv3, and TLS1.0 are supported, but\ndisabled by default\n"
                },
                "requestBody": {
                    "type": "string",
                    "description": "String to send as HTTP health check request body. Valid only for certain HTTP methods like POST\n"
                },
                "requestHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPSMonitorRequestHeader:LBHTTPSMonitorRequestHeader"
                    },
                    "description": "Array of HTTP request headers\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "Health check method for HTTP monitor type\n"
                },
                "requestUrl": {
                    "type": "string",
                    "description": "URL used for HTTP monitor\n"
                },
                "requestVersion": {
                    "type": "string",
                    "description": "HTTP request version\n"
                },
                "responseBody": {
                    "type": "string",
                    "description": "If HTTP specified, healthcheck HTTP response body is matched against the specified string (regular expressions not\nsupported), and succeeds only if there is a match\n"
                },
                "responseStatusCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The HTTP response status code should be a valid HTTP status code\n"
                },
                "riseCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must pass before marking it up\n"
                },
                "serverAuth": {
                    "type": "string",
                    "description": "Server authentication mode\n"
                },
                "serverAuthCaIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If server auth type is REQUIRED, server certificate must be signed by one of the CAs\n"
                },
                "serverAuthCrlIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Certificate Revocation List (CRL) to disallow compromised server certificates\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPSMonitorTag:LBHTTPSMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Number of seconds the target has to respond to the monitor request\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBHTTPSMonitor resources.\n",
                "properties": {
                    "certificateChainDepth": {
                        "type": "integer",
                        "description": "Verification depth in the server certificate chain\n"
                    },
                    "ciphers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Supported SSL cipher list\n"
                    },
                    "clientCertificateId": {
                        "type": "string",
                        "description": "client certificate can be specified to support client authentication\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "fallCount": {
                        "type": "integer",
                        "description": "Number of consecutive checks that must fail before marking it down\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                    },
                    "isSecure": {
                        "type": "boolean",
                        "description": "This flag is set to true when all the ciphers and protocols are secure. It is set to false when one of the ciphers or\nprotocols is insecure\n"
                    },
                    "monitorPort": {
                        "type": "string",
                        "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "SSL versions TLS1.1 and TLS1.2 are supported and enabled by default. SSLv2, SSLv3, and TLS1.0 are supported, but\ndisabled by default\n"
                    },
                    "requestBody": {
                        "type": "string",
                        "description": "String to send as HTTP health check request body. Valid only for certain HTTP methods like POST\n"
                    },
                    "requestHeaders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPSMonitorRequestHeader:LBHTTPSMonitorRequestHeader"
                        },
                        "description": "Array of HTTP request headers\n"
                    },
                    "requestMethod": {
                        "type": "string",
                        "description": "Health check method for HTTP monitor type\n"
                    },
                    "requestUrl": {
                        "type": "string",
                        "description": "URL used for HTTP monitor\n"
                    },
                    "requestVersion": {
                        "type": "string",
                        "description": "HTTP request version\n"
                    },
                    "responseBody": {
                        "type": "string",
                        "description": "If HTTP specified, healthcheck HTTP response body is matched against the specified string (regular expressions not\nsupported), and succeeds only if there is a match\n"
                    },
                    "responseStatusCodes": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The HTTP response status code should be a valid HTTP status code\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "riseCount": {
                        "type": "integer",
                        "description": "Number of consecutive checks that must pass before marking it up\n"
                    },
                    "serverAuth": {
                        "type": "string",
                        "description": "Server authentication mode\n"
                    },
                    "serverAuthCaIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "If server auth type is REQUIRED, server certificate must be signed by one of the CAs\n"
                    },
                    "serverAuthCrlIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Certificate Revocation List (CRL) to disallow compromised server certificates\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPSMonitorTag:LBHTTPSMonitorTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Number of seconds the target has to respond to the monitor request\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBHTTPVirtualServer:LBHTTPVirtualServer": {
            "properties": {
                "accessLogEnabled": {
                    "type": "boolean",
                    "description": "Whether access log is enabled\n"
                },
                "applicationProfileId": {
                    "type": "string",
                    "description": "The http application profile defines the application protocol characteristics\n"
                },
                "clientSsl": {
                    "$ref": "#/types/nsxt:/LBHTTPVirtualServerClientSsl:LBHTTPVirtualServerClientSsl",
                    "description": "Client SSL settings for Virtual Server\n"
                },
                "defaultPoolMemberPort": {
                    "type": "string",
                    "description": "Default pool member port\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the virtual server is enabled\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "Virtual server IP address\n"
                },
                "maxConcurrentConnections": {
                    "type": "integer",
                    "description": "If not specified, connections are unlimited\n"
                },
                "maxNewConnectionRate": {
                    "type": "integer",
                    "description": "If not specified, connection rate is unlimited\n"
                },
                "persistenceProfileId": {
                    "type": "string",
                    "description": "Persistence profile is used to allow related client connections to be sent to the same backend server\n"
                },
                "poolId": {
                    "type": "string",
                    "description": "Server pool for backend connections\n"
                },
                "port": {
                    "type": "string",
                    "description": "Virtual server port\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "ruleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Customization of load balancing behavior using match/action rules\n"
                },
                "serverSsl": {
                    "$ref": "#/types/nsxt:/LBHTTPVirtualServerServerSsl:LBHTTPVirtualServerServerSsl",
                    "description": "Server SSL settings for Virtual Server\n"
                },
                "sorryPoolId": {
                    "type": "string",
                    "description": "When load balancer can not select a backend server to serve the request in default pool or pool in rules, the request\nwould be served by sorry server pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPVirtualServerTag:LBHTTPVirtualServerTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "applicationProfileId",
                "displayName",
                "ipAddress",
                "port",
                "revision"
            ],
            "inputProperties": {
                "accessLogEnabled": {
                    "type": "boolean",
                    "description": "Whether access log is enabled\n"
                },
                "applicationProfileId": {
                    "type": "string",
                    "description": "The http application profile defines the application protocol characteristics\n"
                },
                "clientSsl": {
                    "$ref": "#/types/nsxt:/LBHTTPVirtualServerClientSsl:LBHTTPVirtualServerClientSsl",
                    "description": "Client SSL settings for Virtual Server\n"
                },
                "defaultPoolMemberPort": {
                    "type": "string",
                    "description": "Default pool member port\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the virtual server is enabled\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "Virtual server IP address\n"
                },
                "maxConcurrentConnections": {
                    "type": "integer",
                    "description": "If not specified, connections are unlimited\n"
                },
                "maxNewConnectionRate": {
                    "type": "integer",
                    "description": "If not specified, connection rate is unlimited\n"
                },
                "persistenceProfileId": {
                    "type": "string",
                    "description": "Persistence profile is used to allow related client connections to be sent to the same backend server\n"
                },
                "poolId": {
                    "type": "string",
                    "description": "Server pool for backend connections\n"
                },
                "port": {
                    "type": "string",
                    "description": "Virtual server port\n"
                },
                "ruleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Customization of load balancing behavior using match/action rules\n"
                },
                "serverSsl": {
                    "$ref": "#/types/nsxt:/LBHTTPVirtualServerServerSsl:LBHTTPVirtualServerServerSsl",
                    "description": "Server SSL settings for Virtual Server\n"
                },
                "sorryPoolId": {
                    "type": "string",
                    "description": "When load balancer can not select a backend server to serve the request in default pool or pool in rules, the request\nwould be served by sorry server pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBHTTPVirtualServerTag:LBHTTPVirtualServerTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "applicationProfileId",
                "ipAddress",
                "port"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBHTTPVirtualServer resources.\n",
                "properties": {
                    "accessLogEnabled": {
                        "type": "boolean",
                        "description": "Whether access log is enabled\n"
                    },
                    "applicationProfileId": {
                        "type": "string",
                        "description": "The http application profile defines the application protocol characteristics\n"
                    },
                    "clientSsl": {
                        "$ref": "#/types/nsxt:/LBHTTPVirtualServerClientSsl:LBHTTPVirtualServerClientSsl",
                        "description": "Client SSL settings for Virtual Server\n"
                    },
                    "defaultPoolMemberPort": {
                        "type": "string",
                        "description": "Default pool member port\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the virtual server is enabled\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "Virtual server IP address\n"
                    },
                    "maxConcurrentConnections": {
                        "type": "integer",
                        "description": "If not specified, connections are unlimited\n"
                    },
                    "maxNewConnectionRate": {
                        "type": "integer",
                        "description": "If not specified, connection rate is unlimited\n"
                    },
                    "persistenceProfileId": {
                        "type": "string",
                        "description": "Persistence profile is used to allow related client connections to be sent to the same backend server\n"
                    },
                    "poolId": {
                        "type": "string",
                        "description": "Server pool for backend connections\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Virtual server port\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "ruleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Customization of load balancing behavior using match/action rules\n"
                    },
                    "serverSsl": {
                        "$ref": "#/types/nsxt:/LBHTTPVirtualServerServerSsl:LBHTTPVirtualServerServerSsl",
                        "description": "Server SSL settings for Virtual Server\n"
                    },
                    "sorryPoolId": {
                        "type": "string",
                        "description": "When load balancer can not select a backend server to serve the request in default pool or pool in rules, the request\nwould be served by sorry server pool\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBHTTPVirtualServerTag:LBHTTPVirtualServerTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBICMPMonitor:LBICMPMonitor": {
            "properties": {
                "dataLength": {
                    "type": "integer",
                    "description": "The data size (in bytes) of the ICMP healthcheck packet\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "fallCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must fail before marking it down\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                },
                "monitorPort": {
                    "type": "string",
                    "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "riseCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must pass before marking it up\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBICMPMonitorTag:LBICMPMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Number of seconds the target has to respond to the monitor request\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "dataLength": {
                    "type": "integer",
                    "description": "The data size (in bytes) of the ICMP healthcheck packet\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "fallCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must fail before marking it down\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                },
                "monitorPort": {
                    "type": "string",
                    "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                },
                "riseCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must pass before marking it up\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBICMPMonitorTag:LBICMPMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Number of seconds the target has to respond to the monitor request\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBICMPMonitor resources.\n",
                "properties": {
                    "dataLength": {
                        "type": "integer",
                        "description": "The data size (in bytes) of the ICMP healthcheck packet\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "fallCount": {
                        "type": "integer",
                        "description": "Number of consecutive checks that must fail before marking it down\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                    },
                    "monitorPort": {
                        "type": "string",
                        "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "riseCount": {
                        "type": "integer",
                        "description": "Number of consecutive checks that must pass before marking it up\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBICMPMonitorTag:LBICMPMonitorTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Number of seconds the target has to respond to the monitor request\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBPassiveMonitor:LBPassiveMonitor": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "maxFails": {
                    "type": "integer",
                    "description": "When the consecutive failures reach this value, then the member is considered temporarily unavailable for a configurable\nperiod\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBPassiveMonitorTag:LBPassiveMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "After this timeout period, the member is tried again for a new connection to see if it is available\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "maxFails": {
                    "type": "integer",
                    "description": "When the consecutive failures reach this value, then the member is considered temporarily unavailable for a configurable\nperiod\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBPassiveMonitorTag:LBPassiveMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "After this timeout period, the member is tried again for a new connection to see if it is available\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBPassiveMonitor resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "maxFails": {
                        "type": "integer",
                        "description": "When the consecutive failures reach this value, then the member is considered temporarily unavailable for a configurable\nperiod\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBPassiveMonitorTag:LBPassiveMonitorTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "After this timeout period, the member is tried again for a new connection to see if it is available\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBPool:LBPool": {
            "properties": {
                "activeMonitorId": {
                    "type": "string",
                    "description": "Active health monitor Id. If one is not set, the active healthchecks will be disabled\n"
                },
                "algorithm": {
                    "type": "string",
                    "description": "Load balancing algorithm controls how the incoming connections are distributed among the members\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "memberGroup": {
                    "$ref": "#/types/nsxt:/LBPoolMemberGroup:LBPoolMemberGroup",
                    "description": "Dynamic pool members for the loadbalancing pool. When member group is defined, members setting should not be specified\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBPoolMember:LBPoolMember"
                    },
                    "description": "List of server pool members. Each pool member is identified, typically, by an IP address and a port\n"
                },
                "minActiveMembers": {
                    "type": "integer",
                    "description": "The minimum number of members for the pool to be considered active\n"
                },
                "passiveMonitorId": {
                    "type": "string",
                    "description": "Passive health monitor Id. If one is not set, the passive healthchecks will be disabled\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "snatTranslation": {
                    "$ref": "#/types/nsxt:/LBPoolSnatTranslation:LBPoolSnatTranslation",
                    "description": "SNAT translation configuration\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBPoolTag:LBPoolTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpMultiplexingEnabled": {
                    "type": "boolean",
                    "description": "TCP multiplexing allows the same TCP connection between load balancer and the backend server to be used for sending\nmultiple client requests from different client TCP connections\n"
                },
                "tcpMultiplexingNumber": {
                    "type": "integer",
                    "description": "The maximum number of TCP connections per pool that are idly kept alive for sending future client requests\n"
                }
            },
            "required": [
                "displayName",
                "revision",
                "snatTranslation"
            ],
            "inputProperties": {
                "activeMonitorId": {
                    "type": "string",
                    "description": "Active health monitor Id. If one is not set, the active healthchecks will be disabled\n"
                },
                "algorithm": {
                    "type": "string",
                    "description": "Load balancing algorithm controls how the incoming connections are distributed among the members\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "memberGroup": {
                    "$ref": "#/types/nsxt:/LBPoolMemberGroup:LBPoolMemberGroup",
                    "description": "Dynamic pool members for the loadbalancing pool. When member group is defined, members setting should not be specified\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBPoolMember:LBPoolMember"
                    },
                    "description": "List of server pool members. Each pool member is identified, typically, by an IP address and a port\n"
                },
                "minActiveMembers": {
                    "type": "integer",
                    "description": "The minimum number of members for the pool to be considered active\n"
                },
                "passiveMonitorId": {
                    "type": "string",
                    "description": "Passive health monitor Id. If one is not set, the passive healthchecks will be disabled\n"
                },
                "snatTranslation": {
                    "$ref": "#/types/nsxt:/LBPoolSnatTranslation:LBPoolSnatTranslation",
                    "description": "SNAT translation configuration\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBPoolTag:LBPoolTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpMultiplexingEnabled": {
                    "type": "boolean",
                    "description": "TCP multiplexing allows the same TCP connection between load balancer and the backend server to be used for sending\nmultiple client requests from different client TCP connections\n"
                },
                "tcpMultiplexingNumber": {
                    "type": "integer",
                    "description": "The maximum number of TCP connections per pool that are idly kept alive for sending future client requests\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBPool resources.\n",
                "properties": {
                    "activeMonitorId": {
                        "type": "string",
                        "description": "Active health monitor Id. If one is not set, the active healthchecks will be disabled\n"
                    },
                    "algorithm": {
                        "type": "string",
                        "description": "Load balancing algorithm controls how the incoming connections are distributed among the members\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "memberGroup": {
                        "$ref": "#/types/nsxt:/LBPoolMemberGroup:LBPoolMemberGroup",
                        "description": "Dynamic pool members for the loadbalancing pool. When member group is defined, members setting should not be specified\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBPoolMember:LBPoolMember"
                        },
                        "description": "List of server pool members. Each pool member is identified, typically, by an IP address and a port\n"
                    },
                    "minActiveMembers": {
                        "type": "integer",
                        "description": "The minimum number of members for the pool to be considered active\n"
                    },
                    "passiveMonitorId": {
                        "type": "string",
                        "description": "Passive health monitor Id. If one is not set, the passive healthchecks will be disabled\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "snatTranslation": {
                        "$ref": "#/types/nsxt:/LBPoolSnatTranslation:LBPoolSnatTranslation",
                        "description": "SNAT translation configuration\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBPoolTag:LBPoolTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "tcpMultiplexingEnabled": {
                        "type": "boolean",
                        "description": "TCP multiplexing allows the same TCP connection between load balancer and the backend server to be used for sending\nmultiple client requests from different client TCP connections\n"
                    },
                    "tcpMultiplexingNumber": {
                        "type": "integer",
                        "description": "The maximum number of TCP connections per pool that are idly kept alive for sending future client requests\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBServerSSLProfile:LBServerSSLProfile": {
            "properties": {
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported SSL cipher list\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "isSecure": {
                    "type": "boolean",
                    "description": "This flag is set to true when all the ciphers and protocols are secure. It is set to false when one of the ciphers or\nprotocols is insecure\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSL versions TLS1.1 and TLS1.2 are supported and enabled by default. SSLv2, SSLv3, and TLS1.0 are supported, but\ndisabled by default\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "sessionCacheEnabled": {
                    "type": "boolean",
                    "description": "Reuse previously negotiated security parameters during handshake\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBServerSSLProfileTag:LBServerSSLProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "ciphers",
                "displayName",
                "isSecure",
                "protocols",
                "revision"
            ],
            "inputProperties": {
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported SSL cipher list\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSL versions TLS1.1 and TLS1.2 are supported and enabled by default. SSLv2, SSLv3, and TLS1.0 are supported, but\ndisabled by default\n"
                },
                "sessionCacheEnabled": {
                    "type": "boolean",
                    "description": "Reuse previously negotiated security parameters during handshake\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBServerSSLProfileTag:LBServerSSLProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBServerSSLProfile resources.\n",
                "properties": {
                    "ciphers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Supported SSL cipher list\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "isSecure": {
                        "type": "boolean",
                        "description": "This flag is set to true when all the ciphers and protocols are secure. It is set to false when one of the ciphers or\nprotocols is insecure\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "SSL versions TLS1.1 and TLS1.2 are supported and enabled by default. SSLv2, SSLv3, and TLS1.0 are supported, but\ndisabled by default\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "sessionCacheEnabled": {
                        "type": "boolean",
                        "description": "Reuse previously negotiated security parameters during handshake\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBServerSSLProfileTag:LBServerSSLProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBService:LBService": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the load balancer service is enabled\n"
                },
                "errorLogLevel": {
                    "type": "string",
                    "description": "Load balancer engine writes information about encountered issues of different severity levels to the error log. This\nsetting is used to define the severity level of the error log\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Logical Tier1 Router to which the Load Balancer is to be attached\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "size": {
                    "type": "string",
                    "description": "Size of load balancer service\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBServiceTag:LBServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "virtualServerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Virtual servers associated with this Load Balancer\n"
                }
            },
            "required": [
                "displayName",
                "logicalRouterId",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the load balancer service is enabled\n"
                },
                "errorLogLevel": {
                    "type": "string",
                    "description": "Load balancer engine writes information about encountered issues of different severity levels to the error log. This\nsetting is used to define the severity level of the error log\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Logical Tier1 Router to which the Load Balancer is to be attached\n"
                },
                "size": {
                    "type": "string",
                    "description": "Size of load balancer service\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBServiceTag:LBServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "virtualServerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Virtual servers associated with this Load Balancer\n"
                }
            },
            "requiredInputs": [
                "logicalRouterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBService resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the load balancer service is enabled\n"
                    },
                    "errorLogLevel": {
                        "type": "string",
                        "description": "Load balancer engine writes information about encountered issues of different severity levels to the error log. This\nsetting is used to define the severity level of the error log\n"
                    },
                    "logicalRouterId": {
                        "type": "string",
                        "description": "Logical Tier1 Router to which the Load Balancer is to be attached\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "size": {
                        "type": "string",
                        "description": "Size of load balancer service\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBServiceTag:LBServiceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "virtualServerIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Virtual servers associated with this Load Balancer\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBSourceIPPersistenceProfile:LBSourceIPPersistenceProfile": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "haPersistenceMirroring": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether persistence entries will be synchronized to the HA peer\n"
                },
                "persistenceShared": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether the cookie persistence is private or shared\n"
                },
                "purgeWhenFull": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether entries will be purged when the persistence table is full\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBSourceIPPersistenceProfileTag:LBSourceIPPersistenceProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Persistence expiration time in seconds, counted from the time all the connections are completed\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "haPersistenceMirroring": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether persistence entries will be synchronized to the HA peer\n"
                },
                "persistenceShared": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether the cookie persistence is private or shared\n"
                },
                "purgeWhenFull": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether entries will be purged when the persistence table is full\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBSourceIPPersistenceProfileTag:LBSourceIPPersistenceProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Persistence expiration time in seconds, counted from the time all the connections are completed\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBSourceIPPersistenceProfile resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "haPersistenceMirroring": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether persistence entries will be synchronized to the HA peer\n"
                    },
                    "persistenceShared": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether the cookie persistence is private or shared\n"
                    },
                    "purgeWhenFull": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether entries will be purged when the persistence table is full\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBSourceIPPersistenceProfileTag:LBSourceIPPersistenceProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Persistence expiration time in seconds, counted from the time all the connections are completed\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBTCPMonitor:LBTCPMonitor": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "fallCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must fail before marking it down\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                },
                "monitorPort": {
                    "type": "string",
                    "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                },
                "receive": {
                    "type": "string",
                    "description": "Expected data, if specified, can be anywhere in the response and it has to be a string, regular expressions are not\nsupported\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "riseCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must pass before marking it up\n"
                },
                "send": {
                    "type": "string",
                    "description": "If both send and receive are not specified, then just a TCP connection is established (3-way handshake) to validate\nserver is healthy, no data is sent.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBTCPMonitorTag:LBTCPMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Number of seconds the target has to respond to the monitor request\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "fallCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must fail before marking it down\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                },
                "monitorPort": {
                    "type": "string",
                    "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                },
                "receive": {
                    "type": "string",
                    "description": "Expected data, if specified, can be anywhere in the response and it has to be a string, regular expressions are not\nsupported\n"
                },
                "riseCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must pass before marking it up\n"
                },
                "send": {
                    "type": "string",
                    "description": "If both send and receive are not specified, then just a TCP connection is established (3-way handshake) to validate\nserver is healthy, no data is sent.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBTCPMonitorTag:LBTCPMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Number of seconds the target has to respond to the monitor request\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBTCPMonitor resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "fallCount": {
                        "type": "integer",
                        "description": "Number of consecutive checks that must fail before marking it down\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                    },
                    "monitorPort": {
                        "type": "string",
                        "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                    },
                    "receive": {
                        "type": "string",
                        "description": "Expected data, if specified, can be anywhere in the response and it has to be a string, regular expressions are not\nsupported\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "riseCount": {
                        "type": "integer",
                        "description": "Number of consecutive checks that must pass before marking it up\n"
                    },
                    "send": {
                        "type": "string",
                        "description": "If both send and receive are not specified, then just a TCP connection is established (3-way handshake) to validate\nserver is healthy, no data is sent.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBTCPMonitorTag:LBTCPMonitorTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Number of seconds the target has to respond to the monitor request\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBTCPVirtualServer:LBTCPVirtualServer": {
            "properties": {
                "accessLogEnabled": {
                    "type": "boolean",
                    "description": "Whether access log is enabled\n"
                },
                "applicationProfileId": {
                    "type": "string",
                    "description": "The tcp application profile defines the application protocol characteristics\n"
                },
                "defaultPoolMemberPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default pool member ports or port range\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether the virtual server is enabled\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "virtual server IP address\n"
                },
                "maxConcurrentConnections": {
                    "type": "integer",
                    "description": "If not specified, connections are unlimited\n"
                },
                "maxNewConnectionRate": {
                    "type": "integer",
                    "description": "If not specified, connection rate is unlimited\n"
                },
                "persistenceProfileId": {
                    "type": "string",
                    "description": "Persistence profile is used to allow related client connections to be sent to the same backend server. Source ip\npersistence is supported.\n"
                },
                "poolId": {
                    "type": "string",
                    "description": "Server pool for backend connections\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Single port, multiple ports or port ranges\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "sorryPoolId": {
                    "type": "string",
                    "description": "When load balancer can not select a backend server to serve the request in default pool, the request would be served by\nsorry server pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBTCPVirtualServerTag:LBTCPVirtualServerTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "applicationProfileId",
                "displayName",
                "ipAddress",
                "ports",
                "revision"
            ],
            "inputProperties": {
                "accessLogEnabled": {
                    "type": "boolean",
                    "description": "Whether access log is enabled\n"
                },
                "applicationProfileId": {
                    "type": "string",
                    "description": "The tcp application profile defines the application protocol characteristics\n"
                },
                "defaultPoolMemberPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default pool member ports or port range\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether the virtual server is enabled\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "virtual server IP address\n"
                },
                "maxConcurrentConnections": {
                    "type": "integer",
                    "description": "If not specified, connections are unlimited\n"
                },
                "maxNewConnectionRate": {
                    "type": "integer",
                    "description": "If not specified, connection rate is unlimited\n"
                },
                "persistenceProfileId": {
                    "type": "string",
                    "description": "Persistence profile is used to allow related client connections to be sent to the same backend server. Source ip\npersistence is supported.\n"
                },
                "poolId": {
                    "type": "string",
                    "description": "Server pool for backend connections\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Single port, multiple ports or port ranges\n"
                },
                "sorryPoolId": {
                    "type": "string",
                    "description": "When load balancer can not select a backend server to serve the request in default pool, the request would be served by\nsorry server pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBTCPVirtualServerTag:LBTCPVirtualServerTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "applicationProfileId",
                "ipAddress",
                "ports"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBTCPVirtualServer resources.\n",
                "properties": {
                    "accessLogEnabled": {
                        "type": "boolean",
                        "description": "Whether access log is enabled\n"
                    },
                    "applicationProfileId": {
                        "type": "string",
                        "description": "The tcp application profile defines the application protocol characteristics\n"
                    },
                    "defaultPoolMemberPorts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Default pool member ports or port range\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "whether the virtual server is enabled\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "virtual server IP address\n"
                    },
                    "maxConcurrentConnections": {
                        "type": "integer",
                        "description": "If not specified, connections are unlimited\n"
                    },
                    "maxNewConnectionRate": {
                        "type": "integer",
                        "description": "If not specified, connection rate is unlimited\n"
                    },
                    "persistenceProfileId": {
                        "type": "string",
                        "description": "Persistence profile is used to allow related client connections to be sent to the same backend server. Source ip\npersistence is supported.\n"
                    },
                    "poolId": {
                        "type": "string",
                        "description": "Server pool for backend connections\n"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Single port, multiple ports or port ranges\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "sorryPoolId": {
                        "type": "string",
                        "description": "When load balancer can not select a backend server to serve the request in default pool, the request would be served by\nsorry server pool\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBTCPVirtualServerTag:LBTCPVirtualServerTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBUDPMonitor:LBUDPMonitor": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "fallCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must fail before marking it down\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                },
                "monitorPort": {
                    "type": "string",
                    "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                },
                "receive": {
                    "type": "string",
                    "description": "Expected data, if specified, can be anywhere in the response and it has to be a string, regular expressions are not\nsupported\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "riseCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must pass before marking it up\n"
                },
                "send": {
                    "type": "string",
                    "description": "The data to be sent to the monitored server.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBUDPMonitorTag:LBUDPMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Number of seconds the target has to respond to the monitor request\n"
                }
            },
            "required": [
                "displayName",
                "receive",
                "revision",
                "send"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "fallCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must fail before marking it down\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                },
                "monitorPort": {
                    "type": "string",
                    "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                },
                "receive": {
                    "type": "string",
                    "description": "Expected data, if specified, can be anywhere in the response and it has to be a string, regular expressions are not\nsupported\n"
                },
                "riseCount": {
                    "type": "integer",
                    "description": "Number of consecutive checks that must pass before marking it up\n"
                },
                "send": {
                    "type": "string",
                    "description": "The data to be sent to the monitored server.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBUDPMonitorTag:LBUDPMonitorTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Number of seconds the target has to respond to the monitor request\n"
                }
            },
            "requiredInputs": [
                "receive",
                "send"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBUDPMonitor resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "fallCount": {
                        "type": "integer",
                        "description": "Number of consecutive checks that must fail before marking it down\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The frequency at which the system issues the monitor check (in seconds)\n"
                    },
                    "monitorPort": {
                        "type": "string",
                        "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not\nsupported\n"
                    },
                    "receive": {
                        "type": "string",
                        "description": "Expected data, if specified, can be anywhere in the response and it has to be a string, regular expressions are not\nsupported\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "riseCount": {
                        "type": "integer",
                        "description": "Number of consecutive checks that must pass before marking it up\n"
                    },
                    "send": {
                        "type": "string",
                        "description": "The data to be sent to the monitored server.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBUDPMonitorTag:LBUDPMonitorTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Number of seconds the target has to respond to the monitor request\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/lBUDPVirtualServer:LBUDPVirtualServer": {
            "properties": {
                "accessLogEnabled": {
                    "type": "boolean",
                    "description": "Whether access log is enabled\n"
                },
                "applicationProfileId": {
                    "type": "string",
                    "description": "The tcp application profile defines the application protocol characteristics\n"
                },
                "defaultPoolMemberPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default pool member ports or port range\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether the virtual server is enabled\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "virtual server IP address\n"
                },
                "maxConcurrentConnections": {
                    "type": "integer",
                    "description": "If not specified, connections are unlimited\n"
                },
                "maxNewConnectionRate": {
                    "type": "integer",
                    "description": "If not specified, connection rate is unlimited\n"
                },
                "persistenceProfileId": {
                    "type": "string",
                    "description": "Persistence profile is used to allow related client connections to be sent to the same backend server. Source ip\npersistence is supported.\n"
                },
                "poolId": {
                    "type": "string",
                    "description": "Server pool for backend connections\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Single port, multiple ports or port ranges\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "sorryPoolId": {
                    "type": "string",
                    "description": "When load balancer can not select a backend server to serve the request in default pool, the request would be served by\nsorry server pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBUDPVirtualServerTag:LBUDPVirtualServerTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "applicationProfileId",
                "displayName",
                "ipAddress",
                "ports",
                "revision"
            ],
            "inputProperties": {
                "accessLogEnabled": {
                    "type": "boolean",
                    "description": "Whether access log is enabled\n"
                },
                "applicationProfileId": {
                    "type": "string",
                    "description": "The tcp application profile defines the application protocol characteristics\n"
                },
                "defaultPoolMemberPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default pool member ports or port range\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether the virtual server is enabled\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "virtual server IP address\n"
                },
                "maxConcurrentConnections": {
                    "type": "integer",
                    "description": "If not specified, connections are unlimited\n"
                },
                "maxNewConnectionRate": {
                    "type": "integer",
                    "description": "If not specified, connection rate is unlimited\n"
                },
                "persistenceProfileId": {
                    "type": "string",
                    "description": "Persistence profile is used to allow related client connections to be sent to the same backend server. Source ip\npersistence is supported.\n"
                },
                "poolId": {
                    "type": "string",
                    "description": "Server pool for backend connections\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Single port, multiple ports or port ranges\n"
                },
                "sorryPoolId": {
                    "type": "string",
                    "description": "When load balancer can not select a backend server to serve the request in default pool, the request would be served by\nsorry server pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LBUDPVirtualServerTag:LBUDPVirtualServerTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "applicationProfileId",
                "ipAddress",
                "ports"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LBUDPVirtualServer resources.\n",
                "properties": {
                    "accessLogEnabled": {
                        "type": "boolean",
                        "description": "Whether access log is enabled\n"
                    },
                    "applicationProfileId": {
                        "type": "string",
                        "description": "The tcp application profile defines the application protocol characteristics\n"
                    },
                    "defaultPoolMemberPorts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Default pool member ports or port range\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "whether the virtual server is enabled\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "virtual server IP address\n"
                    },
                    "maxConcurrentConnections": {
                        "type": "integer",
                        "description": "If not specified, connections are unlimited\n"
                    },
                    "maxNewConnectionRate": {
                        "type": "integer",
                        "description": "If not specified, connection rate is unlimited\n"
                    },
                    "persistenceProfileId": {
                        "type": "string",
                        "description": "Persistence profile is used to allow related client connections to be sent to the same backend server. Source ip\npersistence is supported.\n"
                    },
                    "poolId": {
                        "type": "string",
                        "description": "Server pool for backend connections\n"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Single port, multiple ports or port ranges\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "sorryPoolId": {
                        "type": "string",
                        "description": "When load balancer can not select a backend server to serve the request in default pool, the request would be served by\nsorry server pool\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LBUDPVirtualServerTag:LBUDPVirtualServerTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/logicalDHCPPort:LogicalDHCPPort": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Represents Desired state of the object\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "dhcpServerId": {
                    "type": "string",
                    "description": "Id of the Logical DHCP server this port belongs to\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "logicalSwitchId": {
                    "type": "string",
                    "description": "Id of the Logical switch that this port belongs to\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalDHCPPortTag:LogicalDHCPPortTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "dhcpServerId",
                "displayName",
                "logicalSwitchId",
                "revision"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Represents Desired state of the object\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "dhcpServerId": {
                    "type": "string",
                    "description": "Id of the Logical DHCP server this port belongs to\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "logicalSwitchId": {
                    "type": "string",
                    "description": "Id of the Logical switch that this port belongs to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalDHCPPortTag:LogicalDHCPPortTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "dhcpServerId",
                "logicalSwitchId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogicalDHCPPort resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Represents Desired state of the object\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "dhcpServerId": {
                        "type": "string",
                        "description": "Id of the Logical DHCP server this port belongs to\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "logicalSwitchId": {
                        "type": "string",
                        "description": "Id of the Logical switch that this port belongs to\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalDHCPPortTag:LogicalDHCPPortTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/logicalDHCPerver:LogicalDHCPerver": {
            "properties": {
                "attachedLogicalPortId": {
                    "type": "string",
                    "description": "Id of attached logical port\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "dhcpGenericOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalDHCPerverDhcpGenericOption:LogicalDHCPerverDhcpGenericOption"
                    },
                    "description": "Generic DHCP options\n"
                },
                "dhcpOption121s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalDHCPerverDhcpOption121:LogicalDHCPerverDhcpOption121"
                    },
                    "description": "DHCP classless static routes\n"
                },
                "dhcpProfileId": {
                    "type": "string",
                    "description": "DHCP profile uuid\n"
                },
                "dhcpServerIp": {
                    "type": "string",
                    "description": "DHCP server ip in cidr format\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "dnsNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS IPs\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Gateway IP\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalDHCPerverTag:LogicalDHCPerverTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "attachedLogicalPortId",
                "dhcpProfileId",
                "dhcpServerIp",
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "dhcpGenericOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalDHCPerverDhcpGenericOption:LogicalDHCPerverDhcpGenericOption"
                    },
                    "description": "Generic DHCP options\n"
                },
                "dhcpOption121s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalDHCPerverDhcpOption121:LogicalDHCPerverDhcpOption121"
                    },
                    "description": "DHCP classless static routes\n"
                },
                "dhcpProfileId": {
                    "type": "string",
                    "description": "DHCP profile uuid\n"
                },
                "dhcpServerIp": {
                    "type": "string",
                    "description": "DHCP server ip in cidr format\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "dnsNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS IPs\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Gateway IP\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalDHCPerverTag:LogicalDHCPerverTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "dhcpProfileId",
                "dhcpServerIp"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogicalDHCPerver resources.\n",
                "properties": {
                    "attachedLogicalPortId": {
                        "type": "string",
                        "description": "Id of attached logical port\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "dhcpGenericOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalDHCPerverDhcpGenericOption:LogicalDHCPerverDhcpGenericOption"
                        },
                        "description": "Generic DHCP options\n"
                    },
                    "dhcpOption121s": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalDHCPerverDhcpOption121:LogicalDHCPerverDhcpOption121"
                        },
                        "description": "DHCP classless static routes\n"
                    },
                    "dhcpProfileId": {
                        "type": "string",
                        "description": "DHCP profile uuid\n"
                    },
                    "dhcpServerIp": {
                        "type": "string",
                        "description": "DHCP server ip in cidr format\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "dnsNameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "DNS IPs\n"
                    },
                    "domainName": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "Gateway IP\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalDHCPerverTag:LogicalDHCPerverTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/logicalPort:LogicalPort": {
            "properties": {
                "adminState": {
                    "type": "string",
                    "description": "Represents Desired state of the object\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "logicalSwitchId": {
                    "type": "string",
                    "description": "Id of the Logical switch that this port belongs to\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "switchingProfileIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalPortSwitchingProfileId:LogicalPortSwitchingProfileId"
                    },
                    "description": "List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will\nbe used if not specified\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalPortTag:LogicalPortTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "logicalSwitchId",
                "revision"
            ],
            "inputProperties": {
                "adminState": {
                    "type": "string",
                    "description": "Represents Desired state of the object\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "logicalSwitchId": {
                    "type": "string",
                    "description": "Id of the Logical switch that this port belongs to\n"
                },
                "switchingProfileIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalPortSwitchingProfileId:LogicalPortSwitchingProfileId"
                    },
                    "description": "List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will\nbe used if not specified\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalPortTag:LogicalPortTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "logicalSwitchId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogicalPort resources.\n",
                "properties": {
                    "adminState": {
                        "type": "string",
                        "description": "Represents Desired state of the object\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "logicalSwitchId": {
                        "type": "string",
                        "description": "Id of the Logical switch that this port belongs to\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "switchingProfileIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalPortSwitchingProfileId:LogicalPortSwitchingProfileId"
                        },
                        "description": "List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will\nbe used if not specified\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalPortTag:LogicalPortTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/logicalRouterCentralizedServicePort:LogicalRouterCentralizedServicePort": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "Logical router port subnet (ipAddress / prefix length)\n"
                },
                "linkedLogicalSwitchPortId": {
                    "type": "string",
                    "description": "Identifier for port on logical switch to connect to\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Identifier for logical router on which this port is created\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalRouterCentralizedServicePortTag:LogicalRouterCentralizedServicePortTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "urpfMode": {
                    "type": "string",
                    "description": "Unicast Reverse Path Forwarding mode\n"
                }
            },
            "required": [
                "displayName",
                "ipAddress",
                "linkedLogicalSwitchPortId",
                "logicalRouterId",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "Logical router port subnet (ipAddress / prefix length)\n"
                },
                "linkedLogicalSwitchPortId": {
                    "type": "string",
                    "description": "Identifier for port on logical switch to connect to\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Identifier for logical router on which this port is created\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalRouterCentralizedServicePortTag:LogicalRouterCentralizedServicePortTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "urpfMode": {
                    "type": "string",
                    "description": "Unicast Reverse Path Forwarding mode\n"
                }
            },
            "requiredInputs": [
                "ipAddress",
                "linkedLogicalSwitchPortId",
                "logicalRouterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogicalRouterCentralizedServicePort resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "Logical router port subnet (ipAddress / prefix length)\n"
                    },
                    "linkedLogicalSwitchPortId": {
                        "type": "string",
                        "description": "Identifier for port on logical switch to connect to\n"
                    },
                    "logicalRouterId": {
                        "type": "string",
                        "description": "Identifier for logical router on which this port is created\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalRouterCentralizedServicePortTag:LogicalRouterCentralizedServicePortTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "urpfMode": {
                        "type": "string",
                        "description": "Unicast Reverse Path Forwarding mode\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/logicalRouterDownlinkPort:LogicalRouterDownlinkPort": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "Logical router port subnet (ipAddress / prefix length)\n"
                },
                "linkedLogicalSwitchPortId": {
                    "type": "string",
                    "description": "Identifier for port on logical switch to connect to\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Identifier for logical router on which this port is created\n"
                },
                "macAddress": {
                    "type": "string",
                    "description": "MAC address\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "serviceBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalRouterDownlinkPortServiceBinding:LogicalRouterDownlinkPortServiceBinding"
                    },
                    "description": "Service Bindings\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalRouterDownlinkPortTag:LogicalRouterDownlinkPortTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "urpfMode": {
                    "type": "string",
                    "description": "Unicast Reverse Path Forwarding mode\n"
                }
            },
            "required": [
                "displayName",
                "ipAddress",
                "linkedLogicalSwitchPortId",
                "logicalRouterId",
                "macAddress",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "Logical router port subnet (ipAddress / prefix length)\n"
                },
                "linkedLogicalSwitchPortId": {
                    "type": "string",
                    "description": "Identifier for port on logical switch to connect to\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Identifier for logical router on which this port is created\n"
                },
                "serviceBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalRouterDownlinkPortServiceBinding:LogicalRouterDownlinkPortServiceBinding"
                    },
                    "description": "Service Bindings\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalRouterDownlinkPortTag:LogicalRouterDownlinkPortTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "urpfMode": {
                    "type": "string",
                    "description": "Unicast Reverse Path Forwarding mode\n"
                }
            },
            "requiredInputs": [
                "ipAddress",
                "linkedLogicalSwitchPortId",
                "logicalRouterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogicalRouterDownlinkPort resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "Logical router port subnet (ipAddress / prefix length)\n"
                    },
                    "linkedLogicalSwitchPortId": {
                        "type": "string",
                        "description": "Identifier for port on logical switch to connect to\n"
                    },
                    "logicalRouterId": {
                        "type": "string",
                        "description": "Identifier for logical router on which this port is created\n"
                    },
                    "macAddress": {
                        "type": "string",
                        "description": "MAC address\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "serviceBindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalRouterDownlinkPortServiceBinding:LogicalRouterDownlinkPortServiceBinding"
                        },
                        "description": "Service Bindings\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalRouterDownlinkPortTag:LogicalRouterDownlinkPortTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "urpfMode": {
                        "type": "string",
                        "description": "Unicast Reverse Path Forwarding mode\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/logicalRouterLinkPortOnTier0:LogicalRouterLinkPortOnTier0": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "linkedLogicalRouterPortId": {
                    "type": "string",
                    "description": "Identifier for port on logical router to connect to\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Identifier for logical router on which this port is created\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalRouterLinkPortOnTier0Tag:LogicalRouterLinkPortOnTier0Tag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "linkedLogicalRouterPortId",
                "logicalRouterId",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Identifier for logical router on which this port is created\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalRouterLinkPortOnTier0Tag:LogicalRouterLinkPortOnTier0Tag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "logicalRouterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogicalRouterLinkPortOnTier0 resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "linkedLogicalRouterPortId": {
                        "type": "string",
                        "description": "Identifier for port on logical router to connect to\n"
                    },
                    "logicalRouterId": {
                        "type": "string",
                        "description": "Identifier for logical router on which this port is created\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalRouterLinkPortOnTier0Tag:LogicalRouterLinkPortOnTier0Tag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/logicalRouterLinkPortOnTier1:LogicalRouterLinkPortOnTier1": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "linkedLogicalRouterPortId": {
                    "type": "string",
                    "description": "Identifier for port on logical router to connect to\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Identifier for logical router on which this port is created\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalRouterLinkPortOnTier1Tag:LogicalRouterLinkPortOnTier1Tag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "linkedLogicalRouterPortId",
                "logicalRouterId",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "linkedLogicalRouterPortId": {
                    "type": "string",
                    "description": "Identifier for port on logical router to connect to\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Identifier for logical router on which this port is created\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalRouterLinkPortOnTier1Tag:LogicalRouterLinkPortOnTier1Tag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "linkedLogicalRouterPortId",
                "logicalRouterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogicalRouterLinkPortOnTier1 resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "linkedLogicalRouterPortId": {
                        "type": "string",
                        "description": "Identifier for port on logical router to connect to\n"
                    },
                    "logicalRouterId": {
                        "type": "string",
                        "description": "Identifier for logical router on which this port is created\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalRouterLinkPortOnTier1Tag:LogicalRouterLinkPortOnTier1Tag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/logicalSwitch:LogicalSwitch": {
            "properties": {
                "addressBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalSwitchAddressBinding:LogicalSwitchAddressBinding"
                    },
                    "description": "Address bindings for the Logical switch\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Represents Desired state of the object\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "ipPoolId": {
                    "type": "string",
                    "description": "IP pool id that associated with a LogicalSwitch\n"
                },
                "macPoolId": {
                    "type": "string",
                    "description": "Mac pool id that associated with a LogicalSwitch\n"
                },
                "replicationMode": {
                    "type": "string",
                    "description": "Replication mode of the Logical Switch\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "switchingProfileIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalSwitchSwitchingProfileId:LogicalSwitchSwitchingProfileId"
                    },
                    "description": "List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will\nbe used if not specified\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalSwitchTag:LogicalSwitchTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "transportZoneId": {
                    "type": "string",
                    "description": "Id of the TransportZone to which this LogicalSwitch is associated\n"
                },
                "vlan": {
                    "type": "integer",
                    "deprecationMessage": "Use nsxt_vlan_logical_switch resource instead"
                },
                "vni": {
                    "type": "integer",
                    "description": "VNI for this LogicalSwitch\n"
                }
            },
            "required": [
                "displayName",
                "revision",
                "transportZoneId",
                "vni"
            ],
            "inputProperties": {
                "addressBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalSwitchAddressBinding:LogicalSwitchAddressBinding"
                    },
                    "description": "Address bindings for the Logical switch\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Represents Desired state of the object\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "ipPoolId": {
                    "type": "string",
                    "description": "IP pool id that associated with a LogicalSwitch\n"
                },
                "macPoolId": {
                    "type": "string",
                    "description": "Mac pool id that associated with a LogicalSwitch\n"
                },
                "replicationMode": {
                    "type": "string",
                    "description": "Replication mode of the Logical Switch\n"
                },
                "switchingProfileIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalSwitchSwitchingProfileId:LogicalSwitchSwitchingProfileId"
                    },
                    "description": "List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will\nbe used if not specified\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalSwitchTag:LogicalSwitchTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "transportZoneId": {
                    "type": "string",
                    "description": "Id of the TransportZone to which this LogicalSwitch is associated\n"
                },
                "vlan": {
                    "type": "integer",
                    "deprecationMessage": "Use nsxt_vlan_logical_switch resource instead"
                },
                "vni": {
                    "type": "integer",
                    "description": "VNI for this LogicalSwitch\n"
                }
            },
            "requiredInputs": [
                "transportZoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogicalSwitch resources.\n",
                "properties": {
                    "addressBindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalSwitchAddressBinding:LogicalSwitchAddressBinding"
                        },
                        "description": "Address bindings for the Logical switch\n"
                    },
                    "adminState": {
                        "type": "string",
                        "description": "Represents Desired state of the object\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "ipPoolId": {
                        "type": "string",
                        "description": "IP pool id that associated with a LogicalSwitch\n"
                    },
                    "macPoolId": {
                        "type": "string",
                        "description": "Mac pool id that associated with a LogicalSwitch\n"
                    },
                    "replicationMode": {
                        "type": "string",
                        "description": "Replication mode of the Logical Switch\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "switchingProfileIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalSwitchSwitchingProfileId:LogicalSwitchSwitchingProfileId"
                        },
                        "description": "List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will\nbe used if not specified\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalSwitchTag:LogicalSwitchTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "transportZoneId": {
                        "type": "string",
                        "description": "Id of the TransportZone to which this LogicalSwitch is associated\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "deprecationMessage": "Use nsxt_vlan_logical_switch resource instead"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "VNI for this LogicalSwitch\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/logicalTier0Router:LogicalTier0Router": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "edgeClusterId": {
                    "type": "string",
                    "description": "Edge Cluster Id\n"
                },
                "failoverMode": {
                    "type": "string",
                    "description": "Failover mode which determines whether the preferred service router instance for given logical router will preempt the\npeer\n"
                },
                "firewallSections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalTier0RouterFirewallSection:LogicalTier0RouterFirewallSection"
                    },
                    "description": "List of Firewall sections related to the logical router\n"
                },
                "highAvailabilityMode": {
                    "type": "string",
                    "description": "High availability mode\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalTier0RouterTag:LogicalTier0RouterTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "edgeClusterId",
                "failoverMode",
                "firewallSections",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "edgeClusterId": {
                    "type": "string",
                    "description": "Edge Cluster Id\n"
                },
                "failoverMode": {
                    "type": "string",
                    "description": "Failover mode which determines whether the preferred service router instance for given logical router will preempt the\npeer\n"
                },
                "firewallSections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalTier0RouterFirewallSection:LogicalTier0RouterFirewallSection"
                    },
                    "description": "List of Firewall sections related to the logical router\n"
                },
                "highAvailabilityMode": {
                    "type": "string",
                    "description": "High availability mode\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalTier0RouterTag:LogicalTier0RouterTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "edgeClusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogicalTier0Router resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "edgeClusterId": {
                        "type": "string",
                        "description": "Edge Cluster Id\n"
                    },
                    "failoverMode": {
                        "type": "string",
                        "description": "Failover mode which determines whether the preferred service router instance for given logical router will preempt the\npeer\n"
                    },
                    "firewallSections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalTier0RouterFirewallSection:LogicalTier0RouterFirewallSection"
                        },
                        "description": "List of Firewall sections related to the logical router\n"
                    },
                    "highAvailabilityMode": {
                        "type": "string",
                        "description": "High availability mode\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalTier0RouterTag:LogicalTier0RouterTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/logicalTier1Router:LogicalTier1Router": {
            "properties": {
                "advertiseConfigRevision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "advertiseConnectedRoutes": {
                    "type": "boolean",
                    "description": "Enable connected NSX routes advertisement\n"
                },
                "advertiseLbSnatIpRoutes": {
                    "type": "boolean",
                    "description": "Enable LB SNAT IP routes advertisement\n"
                },
                "advertiseLbVipRoutes": {
                    "type": "boolean",
                    "description": "Enable LB VIP routes advertisement\n"
                },
                "advertiseNatRoutes": {
                    "type": "boolean",
                    "description": "Enable NAT routes advertisement\n"
                },
                "advertiseStaticRoutes": {
                    "type": "boolean",
                    "description": "Enable static routes advertisement\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "edgeClusterId": {
                    "type": "string",
                    "description": "Edge Cluster Id\n"
                },
                "enableRouterAdvertisement": {
                    "type": "boolean",
                    "description": "Enable router advertisement\n"
                },
                "failoverMode": {
                    "type": "string",
                    "description": "Failover mode which determines whether the preferred service router instance for given logical router will preempt the\npeer\n"
                },
                "firewallSections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalTier1RouterFirewallSection:LogicalTier1RouterFirewallSection"
                    },
                    "description": "List of Firewall sections related to the logical router\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalTier1RouterTag:LogicalTier1RouterTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "advertiseConfigRevision",
                "displayName",
                "firewallSections",
                "revision"
            ],
            "inputProperties": {
                "advertiseConnectedRoutes": {
                    "type": "boolean",
                    "description": "Enable connected NSX routes advertisement\n"
                },
                "advertiseLbSnatIpRoutes": {
                    "type": "boolean",
                    "description": "Enable LB SNAT IP routes advertisement\n"
                },
                "advertiseLbVipRoutes": {
                    "type": "boolean",
                    "description": "Enable LB VIP routes advertisement\n"
                },
                "advertiseNatRoutes": {
                    "type": "boolean",
                    "description": "Enable NAT routes advertisement\n"
                },
                "advertiseStaticRoutes": {
                    "type": "boolean",
                    "description": "Enable static routes advertisement\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "edgeClusterId": {
                    "type": "string",
                    "description": "Edge Cluster Id\n"
                },
                "enableRouterAdvertisement": {
                    "type": "boolean",
                    "description": "Enable router advertisement\n"
                },
                "failoverMode": {
                    "type": "string",
                    "description": "Failover mode which determines whether the preferred service router instance for given logical router will preempt the\npeer\n"
                },
                "firewallSections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalTier1RouterFirewallSection:LogicalTier1RouterFirewallSection"
                    },
                    "description": "List of Firewall sections related to the logical router\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/LogicalTier1RouterTag:LogicalTier1RouterTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogicalTier1Router resources.\n",
                "properties": {
                    "advertiseConfigRevision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "advertiseConnectedRoutes": {
                        "type": "boolean",
                        "description": "Enable connected NSX routes advertisement\n"
                    },
                    "advertiseLbSnatIpRoutes": {
                        "type": "boolean",
                        "description": "Enable LB SNAT IP routes advertisement\n"
                    },
                    "advertiseLbVipRoutes": {
                        "type": "boolean",
                        "description": "Enable LB VIP routes advertisement\n"
                    },
                    "advertiseNatRoutes": {
                        "type": "boolean",
                        "description": "Enable NAT routes advertisement\n"
                    },
                    "advertiseStaticRoutes": {
                        "type": "boolean",
                        "description": "Enable static routes advertisement\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "edgeClusterId": {
                        "type": "string",
                        "description": "Edge Cluster Id\n"
                    },
                    "enableRouterAdvertisement": {
                        "type": "boolean",
                        "description": "Enable router advertisement\n"
                    },
                    "failoverMode": {
                        "type": "string",
                        "description": "Failover mode which determines whether the preferred service router instance for given logical router will preempt the\npeer\n"
                    },
                    "firewallSections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalTier1RouterFirewallSection:LogicalTier1RouterFirewallSection"
                        },
                        "description": "List of Firewall sections related to the logical router\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/LogicalTier1RouterTag:LogicalTier1RouterTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/mACManagementSwitchingProfile:MACManagementSwitchingProfile": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "macChangeAllowed": {
                    "type": "boolean",
                    "description": "Allowing source MAC address change\n"
                },
                "macLearning": {
                    "$ref": "#/types/nsxt:/MACManagementSwitchingProfileMacLearning:MACManagementSwitchingProfileMacLearning"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/MACManagementSwitchingProfileTag:MACManagementSwitchingProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "macChangeAllowed": {
                    "type": "boolean",
                    "description": "Allowing source MAC address change\n"
                },
                "macLearning": {
                    "$ref": "#/types/nsxt:/MACManagementSwitchingProfileMacLearning:MACManagementSwitchingProfileMacLearning"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/MACManagementSwitchingProfileTag:MACManagementSwitchingProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MACManagementSwitchingProfile resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "macChangeAllowed": {
                        "type": "boolean",
                        "description": "Allowing source MAC address change\n"
                    },
                    "macLearning": {
                        "$ref": "#/types/nsxt:/MACManagementSwitchingProfileMacLearning:MACManagementSwitchingProfileMacLearning"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/MACManagementSwitchingProfileTag:MACManagementSwitchingProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/nATRule:NATRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action for the NAT Rule\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "enable/disable the rule\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "enable/disable the logging of rule\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Logical router id\n"
                },
                "matchDestinationNetwork": {
                    "type": "string",
                    "description": "IP Address | CIDR\n"
                },
                "matchSourceNetwork": {
                    "type": "string",
                    "description": "IP Address | CIDR\n"
                },
                "natPass": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether the following firewall stage will be skipped\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "rulePriority": {
                    "type": "integer",
                    "description": "The priority of the rule (ascending). Valid range [0-2147483647]\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/NATRuleTag:NATRuleTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "translatedNetwork": {
                    "type": "string",
                    "description": "IP Address | IP Range | CIDR\n"
                },
                "translatedPorts": {
                    "type": "string",
                    "description": "port number or port range. DNAT only\n"
                }
            },
            "required": [
                "action",
                "displayName",
                "logicalRouterId",
                "revision",
                "rulePriority"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action for the NAT Rule\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "enable/disable the rule\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "enable/disable the logging of rule\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Logical router id\n"
                },
                "matchDestinationNetwork": {
                    "type": "string",
                    "description": "IP Address | CIDR\n"
                },
                "matchSourceNetwork": {
                    "type": "string",
                    "description": "IP Address | CIDR\n"
                },
                "natPass": {
                    "type": "boolean",
                    "description": "A boolean flag which reflects whether the following firewall stage will be skipped\n"
                },
                "rulePriority": {
                    "type": "integer",
                    "description": "The priority of the rule (ascending). Valid range [0-2147483647]\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/NATRuleTag:NATRuleTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "translatedNetwork": {
                    "type": "string",
                    "description": "IP Address | IP Range | CIDR\n"
                },
                "translatedPorts": {
                    "type": "string",
                    "description": "port number or port range. DNAT only\n"
                }
            },
            "requiredInputs": [
                "action",
                "logicalRouterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NATRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action for the NAT Rule\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "enable/disable the rule\n"
                    },
                    "logging": {
                        "type": "boolean",
                        "description": "enable/disable the logging of rule\n"
                    },
                    "logicalRouterId": {
                        "type": "string",
                        "description": "Logical router id\n"
                    },
                    "matchDestinationNetwork": {
                        "type": "string",
                        "description": "IP Address | CIDR\n"
                    },
                    "matchSourceNetwork": {
                        "type": "string",
                        "description": "IP Address | CIDR\n"
                    },
                    "natPass": {
                        "type": "boolean",
                        "description": "A boolean flag which reflects whether the following firewall stage will be skipped\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "rulePriority": {
                        "type": "integer",
                        "description": "The priority of the rule (ascending). Valid range [0-2147483647]\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/NATRuleTag:NATRuleTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "translatedNetwork": {
                        "type": "string",
                        "description": "IP Address | IP Range | CIDR\n"
                    },
                    "translatedPorts": {
                        "type": "string",
                        "description": "port number or port range. DNAT only\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/nSServiceGroup:NSServiceGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of NSService or NSServiceGroup resources that can be added as members to an NSServiceGroup\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/NSServiceGroupTag:NSServiceGroupTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "members",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of NSService or NSServiceGroup resources that can be added as members to an NSServiceGroup\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/NSServiceGroupTag:NSServiceGroupTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NSServiceGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of NSService or NSServiceGroup resources that can be added as members to an NSServiceGroup\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/NSServiceGroupTag:NSServiceGroupTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/nSroup:NSroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/NSroupMember:NSroupMember"
                    },
                    "description": "Reference to the direct/static members of the NSGroup.\n"
                },
                "membershipCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/NSroupMembershipCriteria:NSroupMembershipCriteria"
                    },
                    "description": "List of tag expressions which define the membership criteria for this NSGroup.\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/NSroupTag:NSroupTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/NSroupMember:NSroupMember"
                    },
                    "description": "Reference to the direct/static members of the NSGroup.\n"
                },
                "membershipCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/NSroupMembershipCriteria:NSroupMembershipCriteria"
                    },
                    "description": "List of tag expressions which define the membership criteria for this NSGroup.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/NSroupTag:NSroupTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NSroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/NSroupMember:NSroupMember"
                        },
                        "description": "Reference to the direct/static members of the NSGroup.\n"
                    },
                    "membershipCriterias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/NSroupMembershipCriteria:NSroupMembershipCriteria"
                        },
                        "description": "List of tag expressions which define the membership criteria for this NSGroup.\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/NSroupTag:NSroupTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyBGPConfig:PolicyBGPConfig": {
            "properties": {
                "ecmp": {
                    "type": "boolean",
                    "description": "Flag to enable ECMP\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable BGP configuration\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "Gateway for this BGP config\n"
                },
                "gracefulRestartMode": {
                    "type": "string",
                    "description": "BGP Graceful Restart Configuration Mode\n"
                },
                "gracefulRestartStaleRouteTimer": {
                    "type": "integer",
                    "description": "BGP Stale Route Timer\n"
                },
                "gracefulRestartTimer": {
                    "type": "integer",
                    "description": "BGP Graceful Restart Timer\n"
                },
                "interSrIbgp": {
                    "type": "boolean",
                    "description": "Enable inter SR IBGP configuration\n"
                },
                "localAsNum": {
                    "type": "string",
                    "description": "BGP AS number in ASPLAIN/ASDOT Format\n"
                },
                "multipathRelax": {
                    "type": "boolean",
                    "description": "Flag to enable BGP multipath relax option\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "routeAggregations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyBGPConfigRouteAggregation:PolicyBGPConfigRouteAggregation"
                    },
                    "description": "List of routes to be aggregated\n"
                },
                "sitePath": {
                    "type": "string",
                    "description": "Site Path for this BGP config\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyBGPConfigTag:PolicyBGPConfigTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "gatewayPath",
                "path",
                "revision",
                "sitePath"
            ],
            "inputProperties": {
                "ecmp": {
                    "type": "boolean",
                    "description": "Flag to enable ECMP\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable BGP configuration\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "Gateway for this BGP config\n"
                },
                "gracefulRestartMode": {
                    "type": "string",
                    "description": "BGP Graceful Restart Configuration Mode\n"
                },
                "gracefulRestartStaleRouteTimer": {
                    "type": "integer",
                    "description": "BGP Stale Route Timer\n"
                },
                "gracefulRestartTimer": {
                    "type": "integer",
                    "description": "BGP Graceful Restart Timer\n"
                },
                "interSrIbgp": {
                    "type": "boolean",
                    "description": "Enable inter SR IBGP configuration\n"
                },
                "localAsNum": {
                    "type": "string",
                    "description": "BGP AS number in ASPLAIN/ASDOT Format\n"
                },
                "multipathRelax": {
                    "type": "boolean",
                    "description": "Flag to enable BGP multipath relax option\n"
                },
                "routeAggregations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyBGPConfigRouteAggregation:PolicyBGPConfigRouteAggregation"
                    },
                    "description": "List of routes to be aggregated\n"
                },
                "sitePath": {
                    "type": "string",
                    "description": "Site Path for this BGP config\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyBGPConfigTag:PolicyBGPConfigTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "gatewayPath",
                "sitePath"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyBGPConfig resources.\n",
                "properties": {
                    "ecmp": {
                        "type": "boolean",
                        "description": "Flag to enable ECMP\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Flag to enable BGP configuration\n"
                    },
                    "gatewayPath": {
                        "type": "string",
                        "description": "Gateway for this BGP config\n"
                    },
                    "gracefulRestartMode": {
                        "type": "string",
                        "description": "BGP Graceful Restart Configuration Mode\n"
                    },
                    "gracefulRestartStaleRouteTimer": {
                        "type": "integer",
                        "description": "BGP Stale Route Timer\n"
                    },
                    "gracefulRestartTimer": {
                        "type": "integer",
                        "description": "BGP Graceful Restart Timer\n"
                    },
                    "interSrIbgp": {
                        "type": "boolean",
                        "description": "Enable inter SR IBGP configuration\n"
                    },
                    "localAsNum": {
                        "type": "string",
                        "description": "BGP AS number in ASPLAIN/ASDOT Format\n"
                    },
                    "multipathRelax": {
                        "type": "boolean",
                        "description": "Flag to enable BGP multipath relax option\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "routeAggregations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyBGPConfigRouteAggregation:PolicyBGPConfigRouteAggregation"
                        },
                        "description": "List of routes to be aggregated\n"
                    },
                    "sitePath": {
                        "type": "string",
                        "description": "Site Path for this BGP config\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyBGPConfigTag:PolicyBGPConfigTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyBGPNeighbor:PolicyBGPNeighbor": {
            "properties": {
                "allowAsIn": {
                    "type": "boolean",
                    "description": "Flag to enable allowas_in option for BGP neighbor\n"
                },
                "bfdConfig": {
                    "$ref": "#/types/nsxt:/PolicyBGPNeighborBfdConfig:PolicyBGPNeighborBfdConfig",
                    "description": "BFD configuration for failure detection\n"
                },
                "bgpPath": {
                    "type": "string",
                    "description": "Policy path to the BGP for this neighbor\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "gracefulRestartMode": {
                    "type": "string",
                    "description": "BGP Graceful Restart Configuration Mode\n"
                },
                "holdDownTime": {
                    "type": "integer",
                    "description": "Wait time in seconds before declaring peer dead\n"
                },
                "keepAliveTime": {
                    "type": "integer",
                    "description": "Interval between keep alive messages sent to peer\n"
                },
                "maximumHopLimit": {
                    "type": "integer",
                    "description": "Maximum number of hops allowed to reach BGP neighbor\n"
                },
                "neighborAddress": {
                    "type": "string",
                    "description": "Neighbor IP Address\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for BGP neighbor authentication\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "remoteAsNum": {
                    "type": "string",
                    "description": "ASN of the neighbor in ASPLAIN or ASDOT Format\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "routeFilterings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyBGPNeighborRouteFiltering:PolicyBGPNeighborRouteFiltering"
                    },
                    "description": "Enable address families and route filtering in each direction\n"
                },
                "sourceAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source IP Addresses for BGP peering\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyBGPNeighborTag:PolicyBGPNeighborTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "bgpPath",
                "displayName",
                "neighborAddress",
                "nsxId",
                "path",
                "remoteAsNum",
                "revision",
                "routeFilterings"
            ],
            "inputProperties": {
                "allowAsIn": {
                    "type": "boolean",
                    "description": "Flag to enable allowas_in option for BGP neighbor\n"
                },
                "bfdConfig": {
                    "$ref": "#/types/nsxt:/PolicyBGPNeighborBfdConfig:PolicyBGPNeighborBfdConfig",
                    "description": "BFD configuration for failure detection\n"
                },
                "bgpPath": {
                    "type": "string",
                    "description": "Policy path to the BGP for this neighbor\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "gracefulRestartMode": {
                    "type": "string",
                    "description": "BGP Graceful Restart Configuration Mode\n"
                },
                "holdDownTime": {
                    "type": "integer",
                    "description": "Wait time in seconds before declaring peer dead\n"
                },
                "keepAliveTime": {
                    "type": "integer",
                    "description": "Interval between keep alive messages sent to peer\n"
                },
                "maximumHopLimit": {
                    "type": "integer",
                    "description": "Maximum number of hops allowed to reach BGP neighbor\n"
                },
                "neighborAddress": {
                    "type": "string",
                    "description": "Neighbor IP Address\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for BGP neighbor authentication\n"
                },
                "remoteAsNum": {
                    "type": "string",
                    "description": "ASN of the neighbor in ASPLAIN or ASDOT Format\n"
                },
                "routeFilterings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyBGPNeighborRouteFiltering:PolicyBGPNeighborRouteFiltering"
                    },
                    "description": "Enable address families and route filtering in each direction\n"
                },
                "sourceAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source IP Addresses for BGP peering\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyBGPNeighborTag:PolicyBGPNeighborTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "bgpPath",
                "displayName",
                "neighborAddress",
                "remoteAsNum"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyBGPNeighbor resources.\n",
                "properties": {
                    "allowAsIn": {
                        "type": "boolean",
                        "description": "Flag to enable allowas_in option for BGP neighbor\n"
                    },
                    "bfdConfig": {
                        "$ref": "#/types/nsxt:/PolicyBGPNeighborBfdConfig:PolicyBGPNeighborBfdConfig",
                        "description": "BFD configuration for failure detection\n"
                    },
                    "bgpPath": {
                        "type": "string",
                        "description": "Policy path to the BGP for this neighbor\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "gracefulRestartMode": {
                        "type": "string",
                        "description": "BGP Graceful Restart Configuration Mode\n"
                    },
                    "holdDownTime": {
                        "type": "integer",
                        "description": "Wait time in seconds before declaring peer dead\n"
                    },
                    "keepAliveTime": {
                        "type": "integer",
                        "description": "Interval between keep alive messages sent to peer\n"
                    },
                    "maximumHopLimit": {
                        "type": "integer",
                        "description": "Maximum number of hops allowed to reach BGP neighbor\n"
                    },
                    "neighborAddress": {
                        "type": "string",
                        "description": "Neighbor IP Address\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for BGP neighbor authentication\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "remoteAsNum": {
                        "type": "string",
                        "description": "ASN of the neighbor in ASPLAIN or ASDOT Format\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "routeFilterings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyBGPNeighborRouteFiltering:PolicyBGPNeighborRouteFiltering"
                        },
                        "description": "Enable address families and route filtering in each direction\n"
                    },
                    "sourceAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source IP Addresses for BGP peering\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyBGPNeighborTag:PolicyBGPNeighborTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyContextProfile:PolicyContextProfile": {
            "properties": {
                "appIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyContextProfileAppId:PolicyContextProfileAppId"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domainName": {
                    "$ref": "#/types/nsxt:/PolicyContextProfileDomainName:PolicyContextProfileDomainName"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyContextProfileTag:PolicyContextProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "urlCategory": {
                    "$ref": "#/types/nsxt:/PolicyContextProfileUrlCategory:PolicyContextProfileUrlCategory"
                }
            },
            "required": [
                "displayName",
                "nsxId",
                "path",
                "revision"
            ],
            "inputProperties": {
                "appIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyContextProfileAppId:PolicyContextProfileAppId"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domainName": {
                    "$ref": "#/types/nsxt:/PolicyContextProfileDomainName:PolicyContextProfileDomainName"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyContextProfileTag:PolicyContextProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "urlCategory": {
                    "$ref": "#/types/nsxt:/PolicyContextProfileUrlCategory:PolicyContextProfileUrlCategory"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyContextProfile resources.\n",
                "properties": {
                    "appIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyContextProfileAppId:PolicyContextProfileAppId"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "domainName": {
                        "$ref": "#/types/nsxt:/PolicyContextProfileDomainName:PolicyContextProfileDomainName"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyContextProfileTag:PolicyContextProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "urlCategory": {
                        "$ref": "#/types/nsxt:/PolicyContextProfileUrlCategory:PolicyContextProfileUrlCategory"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyDHCPRelay:PolicyDHCPRelay": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "serverAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyDHCPRelayTag:PolicyDHCPRelayTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "nsxId",
                "path",
                "revision",
                "serverAddresses"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "serverAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyDHCPRelayTag:PolicyDHCPRelayTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "serverAddresses"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyDHCPRelay resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "serverAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyDHCPRelayTag:PolicyDHCPRelayTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyDHCPServer:PolicyDHCPServer": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "edgeClusterPath": {
                    "type": "string",
                    "description": "Edge Cluster path\n"
                },
                "leaseTime": {
                    "type": "integer",
                    "description": "IP Address lease time in seconds\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "preferredEdgePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The first edge node is assigned as active edge, and second one as standby edge\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "serverAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DHCP server address in CIDR format\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyDHCPServerTag:PolicyDHCPServerTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "nsxId",
                "path",
                "revision",
                "serverAddresses"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "edgeClusterPath": {
                    "type": "string",
                    "description": "Edge Cluster path\n"
                },
                "leaseTime": {
                    "type": "integer",
                    "description": "IP Address lease time in seconds\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "preferredEdgePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The first edge node is assigned as active edge, and second one as standby edge\n"
                },
                "serverAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DHCP server address in CIDR format\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyDHCPServerTag:PolicyDHCPServerTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyDHCPServer resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "edgeClusterPath": {
                        "type": "string",
                        "description": "Edge Cluster path\n"
                    },
                    "leaseTime": {
                        "type": "integer",
                        "description": "IP Address lease time in seconds\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "preferredEdgePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The first edge node is assigned as active edge, and second one as standby edge\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "serverAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "DHCP server address in CIDR format\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyDHCPServerTag:PolicyDHCPServerTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyGatewayPolicy:PolicyGatewayPolicy": {
            "properties": {
                "category": {
                    "type": "string",
                    "description": "Category\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Comments for security policy lock/unlock\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name to use for resources. If not specified 'default' is used\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this\npolicy\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGatewayPolicyRule:PolicyGatewayPolicyRule"
                    },
                    "description": "List of rules in the section\n"
                },
                "sequenceNumber": {
                    "type": "integer",
                    "description": "This field is used to resolve conflicts between security policies across domains\n"
                },
                "stateful": {
                    "type": "boolean",
                    "description": "When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGatewayPolicyTag:PolicyGatewayPolicyTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpStrict": {
                    "type": "boolean",
                    "description": "Ensures that a 3 way TCP handshake is done before the data packets are sent\n"
                }
            },
            "required": [
                "category",
                "displayName",
                "nsxId",
                "path",
                "revision",
                "tcpStrict"
            ],
            "inputProperties": {
                "category": {
                    "type": "string",
                    "description": "Category\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Comments for security policy lock/unlock\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name to use for resources. If not specified 'default' is used\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this\npolicy\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGatewayPolicyRule:PolicyGatewayPolicyRule"
                    },
                    "description": "List of rules in the section\n"
                },
                "sequenceNumber": {
                    "type": "integer",
                    "description": "This field is used to resolve conflicts between security policies across domains\n"
                },
                "stateful": {
                    "type": "boolean",
                    "description": "When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGatewayPolicyTag:PolicyGatewayPolicyTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpStrict": {
                    "type": "boolean",
                    "description": "Ensures that a 3 way TCP handshake is done before the data packets are sent\n"
                }
            },
            "requiredInputs": [
                "category",
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyGatewayPolicy resources.\n",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Category\n"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comments for security policy lock/unlock\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain name to use for resources. If not specified 'default' is used\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this\npolicy\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyGatewayPolicyRule:PolicyGatewayPolicyRule"
                        },
                        "description": "List of rules in the section\n"
                    },
                    "sequenceNumber": {
                        "type": "integer",
                        "description": "This field is used to resolve conflicts between security policies across domains\n"
                    },
                    "stateful": {
                        "type": "boolean",
                        "description": "When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyGatewayPolicyTag:PolicyGatewayPolicyTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "tcpStrict": {
                        "type": "boolean",
                        "description": "Ensures that a 3 way TCP handshake is done before the data packets are sent\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyGatewayPrefixList:PolicyGatewayPrefixList": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "Policy path for Tier0 gateway\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGatewayPrefixListPrefix:PolicyGatewayPrefixListPrefix"
                    },
                    "description": "Ordered list of network prefixes\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGatewayPrefixListTag:PolicyGatewayPrefixListTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "gatewayPath",
                "nsxId",
                "path",
                "prefixes",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "Policy path for Tier0 gateway\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGatewayPrefixListPrefix:PolicyGatewayPrefixListPrefix"
                    },
                    "description": "Ordered list of network prefixes\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGatewayPrefixListTag:PolicyGatewayPrefixListTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "gatewayPath",
                "prefixes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyGatewayPrefixList resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "gatewayPath": {
                        "type": "string",
                        "description": "Policy path for Tier0 gateway\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "prefixes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyGatewayPrefixListPrefix:PolicyGatewayPrefixListPrefix"
                        },
                        "description": "Ordered list of network prefixes\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyGatewayPrefixListTag:PolicyGatewayPrefixListTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyGroup:PolicyGroup": {
            "properties": {
                "conjunctions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGroupConjunction:PolicyGroupConjunction"
                    },
                    "description": "A conjunction applied to 2 sets of criteria.\n"
                },
                "criterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGroupCriteria:PolicyGroupCriteria"
                    },
                    "description": "Criteria to determine Group membership\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name to use for resources. If not specified 'default' is used\n"
                },
                "extendedCriteria": {
                    "$ref": "#/types/nsxt:/PolicyGroupExtendedCriteria:PolicyGroupExtendedCriteria",
                    "description": "Extended criteria to determine group membership. extended_criteria is implicitly \"AND\" with criteria\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGroupTag:PolicyGroupTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "nsxId",
                "path",
                "revision"
            ],
            "inputProperties": {
                "conjunctions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGroupConjunction:PolicyGroupConjunction"
                    },
                    "description": "A conjunction applied to 2 sets of criteria.\n"
                },
                "criterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGroupCriteria:PolicyGroupCriteria"
                    },
                    "description": "Criteria to determine Group membership\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name to use for resources. If not specified 'default' is used\n"
                },
                "extendedCriteria": {
                    "$ref": "#/types/nsxt:/PolicyGroupExtendedCriteria:PolicyGroupExtendedCriteria",
                    "description": "Extended criteria to determine group membership. extended_criteria is implicitly \"AND\" with criteria\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyGroupTag:PolicyGroupTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyGroup resources.\n",
                "properties": {
                    "conjunctions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyGroupConjunction:PolicyGroupConjunction"
                        },
                        "description": "A conjunction applied to 2 sets of criteria.\n"
                    },
                    "criterias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyGroupCriteria:PolicyGroupCriteria"
                        },
                        "description": "Criteria to determine Group membership\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain name to use for resources. If not specified 'default' is used\n"
                    },
                    "extendedCriteria": {
                        "$ref": "#/types/nsxt:/PolicyGroupExtendedCriteria:PolicyGroupExtendedCriteria",
                        "description": "Extended criteria to determine group membership. extended_criteria is implicitly \"AND\" with criteria\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyGroupTag:PolicyGroupTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyIPAddressAllocation:PolicyIPAddressAllocation": {
            "properties": {
                "allocationIp": {
                    "type": "string",
                    "description": "The IP allocated. If unspecified any free IP will be allocated.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "poolPath": {
                    "type": "string",
                    "description": "The path of the IP Pool for this allocation\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPAddressAllocationTag:PolicyIPAddressAllocationTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "allocationIp",
                "displayName",
                "nsxId",
                "path",
                "poolPath",
                "revision"
            ],
            "inputProperties": {
                "allocationIp": {
                    "type": "string",
                    "description": "The IP allocated. If unspecified any free IP will be allocated.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "poolPath": {
                    "type": "string",
                    "description": "The path of the IP Pool for this allocation\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPAddressAllocationTag:PolicyIPAddressAllocationTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "poolPath"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyIPAddressAllocation resources.\n",
                "properties": {
                    "allocationIp": {
                        "type": "string",
                        "description": "The IP allocated. If unspecified any free IP will be allocated.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "poolPath": {
                        "type": "string",
                        "description": "The path of the IP Pool for this allocation\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyIPAddressAllocationTag:PolicyIPAddressAllocationTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyIPBlock:PolicyIPBlock": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "Network address and the prefix length which will be associated with a layer-2 broadcast domain\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPBlockTag:PolicyIPBlockTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "cidr",
                "displayName",
                "nsxId",
                "path",
                "revision"
            ],
            "inputProperties": {
                "cidr": {
                    "type": "string",
                    "description": "Network address and the prefix length which will be associated with a layer-2 broadcast domain\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPBlockTag:PolicyIPBlockTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "cidr",
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyIPBlock resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "Network address and the prefix length which will be associated with a layer-2 broadcast domain\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyIPBlockTag:PolicyIPBlockTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyIPPool:PolicyIPPool": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPPoolTag:PolicyIPPoolTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "nsxId",
                "path",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPPoolTag:PolicyIPPoolTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyIPPool resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyIPPoolTag:PolicyIPPoolTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyIPPoolBlockSubnet:PolicyIPPoolBlockSubnet": {
            "properties": {
                "autoAssignGateway": {
                    "type": "boolean",
                    "description": "If true, the first IP in the range will be reserved for gateway\n"
                },
                "blockPath": {
                    "type": "string",
                    "description": "Policy path to the IP Block\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "poolPath": {
                    "type": "string",
                    "description": "Policy path to the IP Pool for this Subnet\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Number of addresses\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPPoolBlockSubnetTag:PolicyIPPoolBlockSubnetTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "blockPath",
                "displayName",
                "nsxId",
                "path",
                "poolPath",
                "revision",
                "size"
            ],
            "inputProperties": {
                "autoAssignGateway": {
                    "type": "boolean",
                    "description": "If true, the first IP in the range will be reserved for gateway\n"
                },
                "blockPath": {
                    "type": "string",
                    "description": "Policy path to the IP Block\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "poolPath": {
                    "type": "string",
                    "description": "Policy path to the IP Pool for this Subnet\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Number of addresses\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPPoolBlockSubnetTag:PolicyIPPoolBlockSubnetTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "blockPath",
                "displayName",
                "poolPath",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyIPPoolBlockSubnet resources.\n",
                "properties": {
                    "autoAssignGateway": {
                        "type": "boolean",
                        "description": "If true, the first IP in the range will be reserved for gateway\n"
                    },
                    "blockPath": {
                        "type": "string",
                        "description": "Policy path to the IP Block\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "poolPath": {
                        "type": "string",
                        "description": "Policy path to the IP Pool for this Subnet\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Number of addresses\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyIPPoolBlockSubnetTag:PolicyIPPoolBlockSubnetTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyIPPoolStaticSubnet:PolicyIPPoolStaticSubnet": {
            "properties": {
                "allocationRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPPoolStaticSubnetAllocationRange:PolicyIPPoolStaticSubnetAllocationRange"
                    },
                    "description": "A collection of IPv4 or IPv6 IP ranges\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "Network address and prefix length\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "dnsNameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The collection of up to 3 DNS servers for the subnet\n"
                },
                "dnsSuffix": {
                    "type": "string",
                    "description": "DNS suffix for the nameserver\n"
                },
                "gateway": {
                    "type": "string",
                    "description": "The default gateway address\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "poolPath": {
                    "type": "string",
                    "description": "Policy path to the IP Pool for this Subnet\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPPoolStaticSubnetTag:PolicyIPPoolStaticSubnetTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "allocationRanges",
                "cidr",
                "displayName",
                "nsxId",
                "path",
                "poolPath",
                "revision"
            ],
            "inputProperties": {
                "allocationRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPPoolStaticSubnetAllocationRange:PolicyIPPoolStaticSubnetAllocationRange"
                    },
                    "description": "A collection of IPv4 or IPv6 IP ranges\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "Network address and prefix length\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "dnsNameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The collection of up to 3 DNS servers for the subnet\n"
                },
                "dnsSuffix": {
                    "type": "string",
                    "description": "DNS suffix for the nameserver\n"
                },
                "gateway": {
                    "type": "string",
                    "description": "The default gateway address\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "poolPath": {
                    "type": "string",
                    "description": "Policy path to the IP Pool for this Subnet\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyIPPoolStaticSubnetTag:PolicyIPPoolStaticSubnetTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "allocationRanges",
                "cidr",
                "displayName",
                "poolPath"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyIPPoolStaticSubnet resources.\n",
                "properties": {
                    "allocationRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyIPPoolStaticSubnetAllocationRange:PolicyIPPoolStaticSubnetAllocationRange"
                        },
                        "description": "A collection of IPv4 or IPv6 IP ranges\n"
                    },
                    "cidr": {
                        "type": "string",
                        "description": "Network address and prefix length\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "dnsNameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The collection of up to 3 DNS servers for the subnet\n"
                    },
                    "dnsSuffix": {
                        "type": "string",
                        "description": "DNS suffix for the nameserver\n"
                    },
                    "gateway": {
                        "type": "string",
                        "description": "The default gateway address\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "poolPath": {
                        "type": "string",
                        "description": "Policy path to the IP Pool for this Subnet\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyIPPoolStaticSubnetTag:PolicyIPPoolStaticSubnetTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyLBPool:PolicyLBPool": {
            "properties": {
                "activeMonitorPath": {
                    "type": "string",
                    "description": "Active healthcheck is disabled by default and can be enabled using this setting\n"
                },
                "algorithm": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "memberGroup": {
                    "$ref": "#/types/nsxt:/PolicyLBPoolMemberGroup:PolicyLBPoolMemberGroup",
                    "description": "Dynamic pool members for the loadbalancing pool. When member group is defined, members setting should not be specified\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyLBPoolMember:PolicyLBPoolMember"
                    },
                    "description": "List of server pool members. Each pool member is identified, typically, by an IP address and a port\n"
                },
                "minActiveMembers": {
                    "type": "integer"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "passiveMonitorPath": {
                    "type": "string",
                    "description": "Policy path for passive health monitor\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "snat": {
                    "$ref": "#/types/nsxt:/PolicyLBPoolSnat:PolicyLBPoolSnat",
                    "description": "SNAT configuration\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyLBPoolTag:PolicyLBPoolTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpMultiplexingEnabled": {
                    "type": "boolean"
                },
                "tcpMultiplexingNumber": {
                    "type": "integer"
                }
            },
            "required": [
                "displayName",
                "nsxId",
                "path",
                "revision",
                "snat"
            ],
            "inputProperties": {
                "activeMonitorPath": {
                    "type": "string",
                    "description": "Active healthcheck is disabled by default and can be enabled using this setting\n"
                },
                "algorithm": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "memberGroup": {
                    "$ref": "#/types/nsxt:/PolicyLBPoolMemberGroup:PolicyLBPoolMemberGroup",
                    "description": "Dynamic pool members for the loadbalancing pool. When member group is defined, members setting should not be specified\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyLBPoolMember:PolicyLBPoolMember"
                    },
                    "description": "List of server pool members. Each pool member is identified, typically, by an IP address and a port\n"
                },
                "minActiveMembers": {
                    "type": "integer"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "passiveMonitorPath": {
                    "type": "string",
                    "description": "Policy path for passive health monitor\n"
                },
                "snat": {
                    "$ref": "#/types/nsxt:/PolicyLBPoolSnat:PolicyLBPoolSnat",
                    "description": "SNAT configuration\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyLBPoolTag:PolicyLBPoolTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpMultiplexingEnabled": {
                    "type": "boolean"
                },
                "tcpMultiplexingNumber": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyLBPool resources.\n",
                "properties": {
                    "activeMonitorPath": {
                        "type": "string",
                        "description": "Active healthcheck is disabled by default and can be enabled using this setting\n"
                    },
                    "algorithm": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "memberGroup": {
                        "$ref": "#/types/nsxt:/PolicyLBPoolMemberGroup:PolicyLBPoolMemberGroup",
                        "description": "Dynamic pool members for the loadbalancing pool. When member group is defined, members setting should not be specified\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyLBPoolMember:PolicyLBPoolMember"
                        },
                        "description": "List of server pool members. Each pool member is identified, typically, by an IP address and a port\n"
                    },
                    "minActiveMembers": {
                        "type": "integer"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "passiveMonitorPath": {
                        "type": "string",
                        "description": "Policy path for passive health monitor\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "snat": {
                        "$ref": "#/types/nsxt:/PolicyLBPoolSnat:PolicyLBPoolSnat",
                        "description": "SNAT configuration\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyLBPoolTag:PolicyLBPoolTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "tcpMultiplexingEnabled": {
                        "type": "boolean"
                    },
                    "tcpMultiplexingNumber": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyLBService:PolicyLBService": {
            "properties": {
                "connectivityPath": {
                    "type": "string",
                    "description": "Policy path for connected policy object\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable the Service\n"
                },
                "errorLogLevel": {
                    "type": "string",
                    "description": "Log level for Load Balancer Service messages\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "size": {
                    "type": "string",
                    "description": "Load Balancer Service size\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyLBServiceTag:PolicyLBServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "nsxId",
                "path",
                "revision"
            ],
            "inputProperties": {
                "connectivityPath": {
                    "type": "string",
                    "description": "Policy path for connected policy object\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable the Service\n"
                },
                "errorLogLevel": {
                    "type": "string",
                    "description": "Log level for Load Balancer Service messages\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "size": {
                    "type": "string",
                    "description": "Load Balancer Service size\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyLBServiceTag:PolicyLBServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyLBService resources.\n",
                "properties": {
                    "connectivityPath": {
                        "type": "string",
                        "description": "Policy path for connected policy object\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Flag to enable the Service\n"
                    },
                    "errorLogLevel": {
                        "type": "string",
                        "description": "Log level for Load Balancer Service messages\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "size": {
                        "type": "string",
                        "description": "Load Balancer Service size\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyLBServiceTag:PolicyLBServiceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyLBVirtualServer:PolicyLBVirtualServer": {
            "properties": {
                "accessListControl": {
                    "$ref": "#/types/nsxt:/PolicyLBVirtualServerAccessListControl:PolicyLBVirtualServerAccessListControl",
                    "description": "IP access list control for filtering the connections from clients\n"
                },
                "accessLogEnabled": {
                    "type": "boolean",
                    "description": "If enabled, all connections/requests sent to virtual server are logged to the access log file\n"
                },
                "applicationProfilePath": {
                    "type": "string",
                    "description": "Application profile for this virtual server\n"
                },
                "clientSsl": {
                    "$ref": "#/types/nsxt:/PolicyLBVirtualServerClientSsl:PolicyLBVirtualServerClientSsl",
                    "description": "This setting is used when load balancer terminates client SSL connection\n"
                },
                "defaultPoolMemberPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default pool member ports when member port is not defined\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable Virtual Server\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "Virtual Server IP address\n"
                },
                "logSignificantEventOnly": {
                    "type": "boolean",
                    "description": "Flag to log significant events in access log, if access log is enabed\n"
                },
                "maxConcurrentConnections": {
                    "type": "integer",
                    "description": "To ensure one virtual server does not over consume resources, connections to a virtual server can be capped.\n"
                },
                "maxNewConnectionRate": {
                    "type": "integer",
                    "description": "To ensure one virtual server does not over consume resources, connections to a member can be rate limited.\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "persistenceProfilePath": {
                    "type": "string",
                    "description": "Path to persistence profile allowing related client connections to be sent to the same backend server.\n"
                },
                "poolPath": {
                    "type": "string",
                    "description": "Path for Load Balancer Pool\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Virtual Server ports\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "serverSsl": {
                    "$ref": "#/types/nsxt:/PolicyLBVirtualServerServerSsl:PolicyLBVirtualServerServerSsl",
                    "description": "This setting is used when load balancer establishes connection to the backend server\n"
                },
                "servicePath": {
                    "type": "string",
                    "description": "Virtual Server can be associated with Load Balancer Service\n"
                },
                "sorryPoolPath": {
                    "type": "string",
                    "description": "When load balancer can not select server in default pool or pool in rules, the request would be served by sorry pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyLBVirtualServerTag:PolicyLBVirtualServerTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "applicationProfilePath",
                "displayName",
                "ipAddress",
                "nsxId",
                "path",
                "ports",
                "revision"
            ],
            "inputProperties": {
                "accessListControl": {
                    "$ref": "#/types/nsxt:/PolicyLBVirtualServerAccessListControl:PolicyLBVirtualServerAccessListControl",
                    "description": "IP access list control for filtering the connections from clients\n"
                },
                "accessLogEnabled": {
                    "type": "boolean",
                    "description": "If enabled, all connections/requests sent to virtual server are logged to the access log file\n"
                },
                "applicationProfilePath": {
                    "type": "string",
                    "description": "Application profile for this virtual server\n"
                },
                "clientSsl": {
                    "$ref": "#/types/nsxt:/PolicyLBVirtualServerClientSsl:PolicyLBVirtualServerClientSsl",
                    "description": "This setting is used when load balancer terminates client SSL connection\n"
                },
                "defaultPoolMemberPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default pool member ports when member port is not defined\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable Virtual Server\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "Virtual Server IP address\n"
                },
                "logSignificantEventOnly": {
                    "type": "boolean",
                    "description": "Flag to log significant events in access log, if access log is enabed\n"
                },
                "maxConcurrentConnections": {
                    "type": "integer",
                    "description": "To ensure one virtual server does not over consume resources, connections to a virtual server can be capped.\n"
                },
                "maxNewConnectionRate": {
                    "type": "integer",
                    "description": "To ensure one virtual server does not over consume resources, connections to a member can be rate limited.\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "persistenceProfilePath": {
                    "type": "string",
                    "description": "Path to persistence profile allowing related client connections to be sent to the same backend server.\n"
                },
                "poolPath": {
                    "type": "string",
                    "description": "Path for Load Balancer Pool\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Virtual Server ports\n"
                },
                "serverSsl": {
                    "$ref": "#/types/nsxt:/PolicyLBVirtualServerServerSsl:PolicyLBVirtualServerServerSsl",
                    "description": "This setting is used when load balancer establishes connection to the backend server\n"
                },
                "servicePath": {
                    "type": "string",
                    "description": "Virtual Server can be associated with Load Balancer Service\n"
                },
                "sorryPoolPath": {
                    "type": "string",
                    "description": "When load balancer can not select server in default pool or pool in rules, the request would be served by sorry pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyLBVirtualServerTag:PolicyLBVirtualServerTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "applicationProfilePath",
                "displayName",
                "ipAddress",
                "ports"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyLBVirtualServer resources.\n",
                "properties": {
                    "accessListControl": {
                        "$ref": "#/types/nsxt:/PolicyLBVirtualServerAccessListControl:PolicyLBVirtualServerAccessListControl",
                        "description": "IP access list control for filtering the connections from clients\n"
                    },
                    "accessLogEnabled": {
                        "type": "boolean",
                        "description": "If enabled, all connections/requests sent to virtual server are logged to the access log file\n"
                    },
                    "applicationProfilePath": {
                        "type": "string",
                        "description": "Application profile for this virtual server\n"
                    },
                    "clientSsl": {
                        "$ref": "#/types/nsxt:/PolicyLBVirtualServerClientSsl:PolicyLBVirtualServerClientSsl",
                        "description": "This setting is used when load balancer terminates client SSL connection\n"
                    },
                    "defaultPoolMemberPorts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Default pool member ports when member port is not defined\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Flag to enable Virtual Server\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "Virtual Server IP address\n"
                    },
                    "logSignificantEventOnly": {
                        "type": "boolean",
                        "description": "Flag to log significant events in access log, if access log is enabed\n"
                    },
                    "maxConcurrentConnections": {
                        "type": "integer",
                        "description": "To ensure one virtual server does not over consume resources, connections to a virtual server can be capped.\n"
                    },
                    "maxNewConnectionRate": {
                        "type": "integer",
                        "description": "To ensure one virtual server does not over consume resources, connections to a member can be rate limited.\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "persistenceProfilePath": {
                        "type": "string",
                        "description": "Path to persistence profile allowing related client connections to be sent to the same backend server.\n"
                    },
                    "poolPath": {
                        "type": "string",
                        "description": "Path for Load Balancer Pool\n"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Virtual Server ports\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "serverSsl": {
                        "$ref": "#/types/nsxt:/PolicyLBVirtualServerServerSsl:PolicyLBVirtualServerServerSsl",
                        "description": "This setting is used when load balancer establishes connection to the backend server\n"
                    },
                    "servicePath": {
                        "type": "string",
                        "description": "Virtual Server can be associated with Load Balancer Service\n"
                    },
                    "sorryPoolPath": {
                        "type": "string",
                        "description": "When load balancer can not select server in default pool or pool in rules, the request would be served by sorry pool\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyLBVirtualServerTag:PolicyLBVirtualServerTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyNatRule:PolicyNatRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action for the NAT Rule\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "destinationNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The destination network(s) for the NAT Rule\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable the rule\n"
                },
                "firewallMatch": {
                    "type": "string",
                    "description": "Firewall match flag\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "The NSX-T Policy path to the Tier0 or Tier1 Gateway for this resource\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "Enable/disable the logging of rule\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "rulePriority": {
                    "type": "integer",
                    "description": "The sequence_number decides the rule_priority of a NAT rule. Valid range [0-2147483647]\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Policy paths to interfaces or labels where the NAT Rule is enforced\n"
                },
                "service": {
                    "type": "string",
                    "description": "Policy path of Service on which the NAT rule will be applied\n"
                },
                "sourceNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The source network(s) for the NAT Rule\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyNatRuleTag:PolicyNatRuleTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "translatedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The translated network(s) for the NAT Rule\n"
                },
                "translatedPorts": {
                    "type": "string",
                    "description": "Port number or port range. DNAT only\n"
                }
            },
            "required": [
                "action",
                "displayName",
                "gatewayPath",
                "nsxId",
                "path",
                "revision",
                "scopes",
                "translatedNetworks"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action for the NAT Rule\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "destinationNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The destination network(s) for the NAT Rule\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable the rule\n"
                },
                "firewallMatch": {
                    "type": "string",
                    "description": "Firewall match flag\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "The NSX-T Policy path to the Tier0 or Tier1 Gateway for this resource\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "Enable/disable the logging of rule\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "rulePriority": {
                    "type": "integer",
                    "description": "The sequence_number decides the rule_priority of a NAT rule. Valid range [0-2147483647]\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Policy paths to interfaces or labels where the NAT Rule is enforced\n"
                },
                "service": {
                    "type": "string",
                    "description": "Policy path of Service on which the NAT rule will be applied\n"
                },
                "sourceNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The source network(s) for the NAT Rule\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyNatRuleTag:PolicyNatRuleTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "translatedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The translated network(s) for the NAT Rule\n"
                },
                "translatedPorts": {
                    "type": "string",
                    "description": "Port number or port range. DNAT only\n"
                }
            },
            "requiredInputs": [
                "action",
                "displayName",
                "gatewayPath",
                "translatedNetworks"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyNatRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action for the NAT Rule\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "destinationNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The destination network(s) for the NAT Rule\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable/disable the rule\n"
                    },
                    "firewallMatch": {
                        "type": "string",
                        "description": "Firewall match flag\n"
                    },
                    "gatewayPath": {
                        "type": "string",
                        "description": "The NSX-T Policy path to the Tier0 or Tier1 Gateway for this resource\n"
                    },
                    "logging": {
                        "type": "boolean",
                        "description": "Enable/disable the logging of rule\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "rulePriority": {
                        "type": "integer",
                        "description": "The sequence_number decides the rule_priority of a NAT rule. Valid range [0-2147483647]\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Policy paths to interfaces or labels where the NAT Rule is enforced\n"
                    },
                    "service": {
                        "type": "string",
                        "description": "Policy path of Service on which the NAT rule will be applied\n"
                    },
                    "sourceNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The source network(s) for the NAT Rule\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyNatRuleTag:PolicyNatRuleTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "translatedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The translated network(s) for the NAT Rule\n"
                    },
                    "translatedPorts": {
                        "type": "string",
                        "description": "Port number or port range. DNAT only\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyPredefinedGatewayPolicy:PolicyPredefinedGatewayPolicy": {
            "properties": {
                "defaultRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyDefaultRule:PolicyPredefinedGatewayPolicyDefaultRule"
                    },
                    "description": "List of default rules\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path for this Gateway Policy\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyRule:PolicyPredefinedGatewayPolicyRule"
                    },
                    "description": "List of rules in the section\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyTag:PolicyPredefinedGatewayPolicyTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "defaultRules",
                "description",
                "path",
                "revision"
            ],
            "inputProperties": {
                "defaultRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyDefaultRule:PolicyPredefinedGatewayPolicyDefaultRule"
                    },
                    "description": "List of default rules\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path for this Gateway Policy\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyRule:PolicyPredefinedGatewayPolicyRule"
                    },
                    "description": "List of rules in the section\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyTag:PolicyPredefinedGatewayPolicyTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "path"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyPredefinedGatewayPolicy resources.\n",
                "properties": {
                    "defaultRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyDefaultRule:PolicyPredefinedGatewayPolicyDefaultRule"
                        },
                        "description": "List of default rules\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path for this Gateway Policy\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyRule:PolicyPredefinedGatewayPolicyRule"
                        },
                        "description": "List of rules in the section\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyPredefinedGatewayPolicyTag:PolicyPredefinedGatewayPolicyTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyPredefinedSecurityPolicy:PolicyPredefinedSecurityPolicy": {
            "properties": {
                "defaultRule": {
                    "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyDefaultRule:PolicyPredefinedSecurityPolicyDefaultRule",
                    "description": "List of default rules\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path for this Security Policy\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyRule:PolicyPredefinedSecurityPolicyRule"
                    },
                    "description": "List of rules in the section\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyTag:PolicyPredefinedSecurityPolicyTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "defaultRule",
                "description",
                "path",
                "revision"
            ],
            "inputProperties": {
                "defaultRule": {
                    "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyDefaultRule:PolicyPredefinedSecurityPolicyDefaultRule",
                    "description": "List of default rules\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path for this Security Policy\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyRule:PolicyPredefinedSecurityPolicyRule"
                    },
                    "description": "List of rules in the section\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyTag:PolicyPredefinedSecurityPolicyTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "path"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyPredefinedSecurityPolicy resources.\n",
                "properties": {
                    "defaultRule": {
                        "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyDefaultRule:PolicyPredefinedSecurityPolicyDefaultRule",
                        "description": "List of default rules\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path for this Security Policy\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyRule:PolicyPredefinedSecurityPolicyRule"
                        },
                        "description": "List of rules in the section\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyPredefinedSecurityPolicyTag:PolicyPredefinedSecurityPolicyTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policySecurityPolicy:PolicySecurityPolicy": {
            "properties": {
                "category": {
                    "type": "string",
                    "description": "Category\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Comments for security policy lock/unlock\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name to use for resources. If not specified 'default' is used\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this\npolicy\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySecurityPolicyRule:PolicySecurityPolicyRule"
                    },
                    "description": "List of rules in the section\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of group paths where the rules in this policy will get applied\n"
                },
                "sequenceNumber": {
                    "type": "integer",
                    "description": "This field is used to resolve conflicts between security policies across domains\n"
                },
                "stateful": {
                    "type": "boolean",
                    "description": "When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySecurityPolicyTag:PolicySecurityPolicyTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpStrict": {
                    "type": "boolean",
                    "description": "Ensures that a 3 way TCP handshake is done before the data packets are sent\n"
                }
            },
            "required": [
                "category",
                "displayName",
                "nsxId",
                "path",
                "revision",
                "tcpStrict"
            ],
            "inputProperties": {
                "category": {
                    "type": "string",
                    "description": "Category\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Comments for security policy lock/unlock\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name to use for resources. If not specified 'default' is used\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this\npolicy\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySecurityPolicyRule:PolicySecurityPolicyRule"
                    },
                    "description": "List of rules in the section\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of group paths where the rules in this policy will get applied\n"
                },
                "sequenceNumber": {
                    "type": "integer",
                    "description": "This field is used to resolve conflicts between security policies across domains\n"
                },
                "stateful": {
                    "type": "boolean",
                    "description": "When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySecurityPolicyTag:PolicySecurityPolicyTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tcpStrict": {
                    "type": "boolean",
                    "description": "Ensures that a 3 way TCP handshake is done before the data packets are sent\n"
                }
            },
            "requiredInputs": [
                "category",
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicySecurityPolicy resources.\n",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Category\n"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comments for security policy lock/unlock\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain name to use for resources. If not specified 'default' is used\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this\npolicy\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicySecurityPolicyRule:PolicySecurityPolicyRule"
                        },
                        "description": "List of rules in the section\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of group paths where the rules in this policy will get applied\n"
                    },
                    "sequenceNumber": {
                        "type": "integer",
                        "description": "This field is used to resolve conflicts between security policies across domains\n"
                    },
                    "stateful": {
                        "type": "boolean",
                        "description": "When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicySecurityPolicyTag:PolicySecurityPolicyTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "tcpStrict": {
                        "type": "boolean",
                        "description": "Ensures that a 3 way TCP handshake is done before the data packets are sent\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policySegment:PolicySegment": {
            "properties": {
                "advancedConfig": {
                    "$ref": "#/types/nsxt:/PolicySegmentAdvancedConfig:PolicySegmentAdvancedConfig",
                    "description": "Advanced segment configuration\n"
                },
                "connectivityPath": {
                    "type": "string",
                    "description": "Policy path to the connecting Tier-0 or Tier-1\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "dhcpConfigPath": {
                    "type": "string",
                    "description": "Policy path to DHCP server or relay configuration to use for subnets configured on this segment\n"
                },
                "discoveryProfile": {
                    "$ref": "#/types/nsxt:/PolicySegmentDiscoveryProfile:PolicySegmentDiscoveryProfile",
                    "description": "IP and MAC discovery profiles for this segment\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "DNS domain names\n"
                },
                "l2Extension": {
                    "$ref": "#/types/nsxt:/PolicySegmentL2Extension:PolicySegmentL2Extension",
                    "description": "Configuration for extending Segment through L2 VPN\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "overlayId": {
                    "type": "integer",
                    "description": "Overlay connectivity ID for this Segment\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "qosProfile": {
                    "$ref": "#/types/nsxt:/PolicySegmentQosProfile:PolicySegmentQosProfile",
                    "description": "QoS profiles for this segment\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "securityProfile": {
                    "$ref": "#/types/nsxt:/PolicySegmentSecurityProfile:PolicySegmentSecurityProfile",
                    "description": "Security profiles for this segment\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySegmentSubnet:PolicySegmentSubnet"
                    },
                    "description": "Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySegmentTag:PolicySegmentTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "transportZonePath": {
                    "type": "string",
                    "description": "Policy path to the transport zone\n"
                },
                "vlanIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VLAN IDs for VLAN backed Segment\n"
                }
            },
            "required": [
                "displayName",
                "nsxId",
                "overlayId",
                "path",
                "revision",
                "transportZonePath"
            ],
            "inputProperties": {
                "advancedConfig": {
                    "$ref": "#/types/nsxt:/PolicySegmentAdvancedConfig:PolicySegmentAdvancedConfig",
                    "description": "Advanced segment configuration\n"
                },
                "connectivityPath": {
                    "type": "string",
                    "description": "Policy path to the connecting Tier-0 or Tier-1\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "dhcpConfigPath": {
                    "type": "string",
                    "description": "Policy path to DHCP server or relay configuration to use for subnets configured on this segment\n"
                },
                "discoveryProfile": {
                    "$ref": "#/types/nsxt:/PolicySegmentDiscoveryProfile:PolicySegmentDiscoveryProfile",
                    "description": "IP and MAC discovery profiles for this segment\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "DNS domain names\n"
                },
                "l2Extension": {
                    "$ref": "#/types/nsxt:/PolicySegmentL2Extension:PolicySegmentL2Extension",
                    "description": "Configuration for extending Segment through L2 VPN\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "overlayId": {
                    "type": "integer",
                    "description": "Overlay connectivity ID for this Segment\n"
                },
                "qosProfile": {
                    "$ref": "#/types/nsxt:/PolicySegmentQosProfile:PolicySegmentQosProfile",
                    "description": "QoS profiles for this segment\n"
                },
                "securityProfile": {
                    "$ref": "#/types/nsxt:/PolicySegmentSecurityProfile:PolicySegmentSecurityProfile",
                    "description": "Security profiles for this segment\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySegmentSubnet:PolicySegmentSubnet"
                    },
                    "description": "Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicySegmentTag:PolicySegmentTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "transportZonePath": {
                    "type": "string",
                    "description": "Policy path to the transport zone\n"
                },
                "vlanIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VLAN IDs for VLAN backed Segment\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "transportZonePath"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicySegment resources.\n",
                "properties": {
                    "advancedConfig": {
                        "$ref": "#/types/nsxt:/PolicySegmentAdvancedConfig:PolicySegmentAdvancedConfig",
                        "description": "Advanced segment configuration\n"
                    },
                    "connectivityPath": {
                        "type": "string",
                        "description": "Policy path to the connecting Tier-0 or Tier-1\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "dhcpConfigPath": {
                        "type": "string",
                        "description": "Policy path to DHCP server or relay configuration to use for subnets configured on this segment\n"
                    },
                    "discoveryProfile": {
                        "$ref": "#/types/nsxt:/PolicySegmentDiscoveryProfile:PolicySegmentDiscoveryProfile",
                        "description": "IP and MAC discovery profiles for this segment\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "domainName": {
                        "type": "string",
                        "description": "DNS domain names\n"
                    },
                    "l2Extension": {
                        "$ref": "#/types/nsxt:/PolicySegmentL2Extension:PolicySegmentL2Extension",
                        "description": "Configuration for extending Segment through L2 VPN\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "overlayId": {
                        "type": "integer",
                        "description": "Overlay connectivity ID for this Segment\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "qosProfile": {
                        "$ref": "#/types/nsxt:/PolicySegmentQosProfile:PolicySegmentQosProfile",
                        "description": "QoS profiles for this segment\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "securityProfile": {
                        "$ref": "#/types/nsxt:/PolicySegmentSecurityProfile:PolicySegmentSecurityProfile",
                        "description": "Security profiles for this segment\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicySegmentSubnet:PolicySegmentSubnet"
                        },
                        "description": "Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicySegmentTag:PolicySegmentTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "transportZonePath": {
                        "type": "string",
                        "description": "Policy path to the transport zone\n"
                    },
                    "vlanIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "VLAN IDs for VLAN backed Segment\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyService:PolicyService": {
            "properties": {
                "algorithmEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceAlgorithmEntry:PolicyServiceAlgorithmEntry"
                    },
                    "description": "Algorithm type service entry\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "etherTypeEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceEtherTypeEntry:PolicyServiceEtherTypeEntry"
                    },
                    "description": "Ether type service entry\n"
                },
                "icmpEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceIcmpEntry:PolicyServiceIcmpEntry"
                    },
                    "description": "ICMP type service entry\n"
                },
                "igmpEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceIgmpEntry:PolicyServiceIgmpEntry"
                    },
                    "description": "IGMP type service entry\n"
                },
                "ipProtocolEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceIpProtocolEntry:PolicyServiceIpProtocolEntry"
                    },
                    "description": "IP Protocol type service entry\n"
                },
                "l4PortSetEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceL4PortSetEntry:PolicyServiceL4PortSetEntry"
                    },
                    "description": "L4 port set type service entry\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceTag:PolicyServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "nsxId",
                "path",
                "revision"
            ],
            "inputProperties": {
                "algorithmEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceAlgorithmEntry:PolicyServiceAlgorithmEntry"
                    },
                    "description": "Algorithm type service entry\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "etherTypeEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceEtherTypeEntry:PolicyServiceEtherTypeEntry"
                    },
                    "description": "Ether type service entry\n"
                },
                "icmpEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceIcmpEntry:PolicyServiceIcmpEntry"
                    },
                    "description": "ICMP type service entry\n"
                },
                "igmpEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceIgmpEntry:PolicyServiceIgmpEntry"
                    },
                    "description": "IGMP type service entry\n"
                },
                "ipProtocolEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceIpProtocolEntry:PolicyServiceIpProtocolEntry"
                    },
                    "description": "IP Protocol type service entry\n"
                },
                "l4PortSetEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceL4PortSetEntry:PolicyServiceL4PortSetEntry"
                    },
                    "description": "L4 port set type service entry\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyServiceTag:PolicyServiceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyService resources.\n",
                "properties": {
                    "algorithmEntries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyServiceAlgorithmEntry:PolicyServiceAlgorithmEntry"
                        },
                        "description": "Algorithm type service entry\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "etherTypeEntries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyServiceEtherTypeEntry:PolicyServiceEtherTypeEntry"
                        },
                        "description": "Ether type service entry\n"
                    },
                    "icmpEntries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyServiceIcmpEntry:PolicyServiceIcmpEntry"
                        },
                        "description": "ICMP type service entry\n"
                    },
                    "igmpEntries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyServiceIgmpEntry:PolicyServiceIgmpEntry"
                        },
                        "description": "IGMP type service entry\n"
                    },
                    "ipProtocolEntries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyServiceIpProtocolEntry:PolicyServiceIpProtocolEntry"
                        },
                        "description": "IP Protocol type service entry\n"
                    },
                    "l4PortSetEntries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyServiceL4PortSetEntry:PolicyServiceL4PortSetEntry"
                        },
                        "description": "L4 port set type service entry\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyServiceTag:PolicyServiceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyStaticRoute:PolicyStaticRoute": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "The NSX-T Policy path to the Tier0 or Tier1 Gateway for this resource\n"
                },
                "network": {
                    "type": "string",
                    "description": "Network address in CIDR format\n"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyStaticRouteNextHop:PolicyStaticRouteNextHop"
                    },
                    "description": "Next hop routes for network\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyStaticRouteTag:PolicyStaticRouteTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "gatewayPath",
                "network",
                "nextHops",
                "nsxId",
                "path",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "The NSX-T Policy path to the Tier0 or Tier1 Gateway for this resource\n"
                },
                "network": {
                    "type": "string",
                    "description": "Network address in CIDR format\n"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyStaticRouteNextHop:PolicyStaticRouteNextHop"
                    },
                    "description": "Next hop routes for network\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyStaticRouteTag:PolicyStaticRouteTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "gatewayPath",
                "network",
                "nextHops"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyStaticRoute resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "gatewayPath": {
                        "type": "string",
                        "description": "The NSX-T Policy path to the Tier0 or Tier1 Gateway for this resource\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "Network address in CIDR format\n"
                    },
                    "nextHops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyStaticRouteNextHop:PolicyStaticRouteNextHop"
                        },
                        "description": "Next hop routes for network\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyStaticRouteTag:PolicyStaticRouteTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyTier0Gateway:PolicyTier0Gateway": {
            "properties": {
                "bgpConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier0GatewayBgpConfig:PolicyTier0GatewayBgpConfig",
                    "description": "BGP routing configuration\n"
                },
                "defaultRuleLogging": {
                    "type": "boolean",
                    "description": "Default rule logging\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "dhcpConfigPath": {
                    "type": "string",
                    "description": "Policy path to DHCP server or relay configuration to use for this Tier0\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "edgeClusterPath": {
                    "type": "string",
                    "description": "The path of the edge cluster connected to this gateway\n"
                },
                "enableFirewall": {
                    "type": "boolean",
                    "description": "Enable edge firewall\n"
                },
                "failoverMode": {
                    "type": "string",
                    "description": "Failover mode\n"
                },
                "forceWhitelisting": {
                    "type": "boolean",
                    "description": "Force whitelisting\n",
                    "deprecationMessage": "Use nsxt_policy_predefined_gateway_policy resource to control default action"
                },
                "haMode": {
                    "type": "string",
                    "description": "High-availability Mode for Tier-0\n"
                },
                "internalTransitSubnets": {
                    "type": "string",
                    "description": "Internal transit subnets in CIDR format\n"
                },
                "intersiteConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier0GatewayIntersiteConfig:PolicyTier0GatewayIntersiteConfig",
                    "description": "Locale Service for the gateway\n"
                },
                "ipv6DadProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 DAD profile\n"
                },
                "ipv6NdraProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 NDRA profile\n"
                },
                "localeServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayLocaleService:PolicyTier0GatewayLocaleService"
                    },
                    "description": "Locale Service for the gateway\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "redistributionConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier0GatewayRedistributionConfig:PolicyTier0GatewayRedistributionConfig",
                    "description": "Route Redistribution configuration\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayTag:PolicyTier0GatewayTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "transitSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Transit subnets in CIDR format\n"
                },
                "vrfConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier0GatewayVrfConfig:PolicyTier0GatewayVrfConfig",
                    "description": "VRF configuration\n"
                }
            },
            "required": [
                "bgpConfig",
                "displayName",
                "edgeClusterPath",
                "internalTransitSubnets",
                "intersiteConfig",
                "ipv6DadProfilePath",
                "ipv6NdraProfilePath",
                "nsxId",
                "path",
                "revision",
                "transitSubnets"
            ],
            "inputProperties": {
                "bgpConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier0GatewayBgpConfig:PolicyTier0GatewayBgpConfig",
                    "description": "BGP routing configuration\n"
                },
                "defaultRuleLogging": {
                    "type": "boolean",
                    "description": "Default rule logging\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "dhcpConfigPath": {
                    "type": "string",
                    "description": "Policy path to DHCP server or relay configuration to use for this Tier0\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "edgeClusterPath": {
                    "type": "string",
                    "description": "The path of the edge cluster connected to this gateway\n"
                },
                "enableFirewall": {
                    "type": "boolean",
                    "description": "Enable edge firewall\n"
                },
                "failoverMode": {
                    "type": "string",
                    "description": "Failover mode\n"
                },
                "forceWhitelisting": {
                    "type": "boolean",
                    "description": "Force whitelisting\n",
                    "deprecationMessage": "Use nsxt_policy_predefined_gateway_policy resource to control default action"
                },
                "haMode": {
                    "type": "string",
                    "description": "High-availability Mode for Tier-0\n"
                },
                "internalTransitSubnets": {
                    "type": "string",
                    "description": "Internal transit subnets in CIDR format\n"
                },
                "intersiteConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier0GatewayIntersiteConfig:PolicyTier0GatewayIntersiteConfig",
                    "description": "Locale Service for the gateway\n"
                },
                "ipv6DadProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 DAD profile\n"
                },
                "ipv6NdraProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 NDRA profile\n"
                },
                "localeServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayLocaleService:PolicyTier0GatewayLocaleService"
                    },
                    "description": "Locale Service for the gateway\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "redistributionConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier0GatewayRedistributionConfig:PolicyTier0GatewayRedistributionConfig",
                    "description": "Route Redistribution configuration\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayTag:PolicyTier0GatewayTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "transitSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Transit subnets in CIDR format\n"
                },
                "vrfConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier0GatewayVrfConfig:PolicyTier0GatewayVrfConfig",
                    "description": "VRF configuration\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyTier0Gateway resources.\n",
                "properties": {
                    "bgpConfig": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayBgpConfig:PolicyTier0GatewayBgpConfig",
                        "description": "BGP routing configuration\n"
                    },
                    "defaultRuleLogging": {
                        "type": "boolean",
                        "description": "Default rule logging\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "dhcpConfigPath": {
                        "type": "string",
                        "description": "Policy path to DHCP server or relay configuration to use for this Tier0\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "edgeClusterPath": {
                        "type": "string",
                        "description": "The path of the edge cluster connected to this gateway\n"
                    },
                    "enableFirewall": {
                        "type": "boolean",
                        "description": "Enable edge firewall\n"
                    },
                    "failoverMode": {
                        "type": "string",
                        "description": "Failover mode\n"
                    },
                    "forceWhitelisting": {
                        "type": "boolean",
                        "description": "Force whitelisting\n",
                        "deprecationMessage": "Use nsxt_policy_predefined_gateway_policy resource to control default action"
                    },
                    "haMode": {
                        "type": "string",
                        "description": "High-availability Mode for Tier-0\n"
                    },
                    "internalTransitSubnets": {
                        "type": "string",
                        "description": "Internal transit subnets in CIDR format\n"
                    },
                    "intersiteConfig": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayIntersiteConfig:PolicyTier0GatewayIntersiteConfig",
                        "description": "Locale Service for the gateway\n"
                    },
                    "ipv6DadProfilePath": {
                        "type": "string",
                        "description": "The path of an IPv6 DAD profile\n"
                    },
                    "ipv6NdraProfilePath": {
                        "type": "string",
                        "description": "The path of an IPv6 NDRA profile\n"
                    },
                    "localeServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyTier0GatewayLocaleService:PolicyTier0GatewayLocaleService"
                        },
                        "description": "Locale Service for the gateway\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "redistributionConfig": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayRedistributionConfig:PolicyTier0GatewayRedistributionConfig",
                        "description": "Route Redistribution configuration\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyTier0GatewayTag:PolicyTier0GatewayTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "transitSubnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Transit subnets in CIDR format\n"
                    },
                    "vrfConfig": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayVrfConfig:PolicyTier0GatewayVrfConfig",
                        "description": "VRF configuration\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyTier0GatewayHAVIPConfig:PolicyTier0GatewayHAVIPConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayHAVIPConfigConfig:PolicyTier0GatewayHAVIPConfigConfig"
                    },
                    "description": "Tier0 HA VIP Config\n"
                },
                "localeServiceId": {
                    "type": "string",
                    "description": "Id of associated Gateway Locale Service on NSX\n"
                },
                "tier0Id": {
                    "type": "string",
                    "description": "Id of associated Tier0 Gateway on NSX\n"
                }
            },
            "required": [
                "configs",
                "localeServiceId",
                "tier0Id"
            ],
            "inputProperties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayHAVIPConfigConfig:PolicyTier0GatewayHAVIPConfigConfig"
                    },
                    "description": "Tier0 HA VIP Config\n"
                }
            },
            "requiredInputs": [
                "configs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyTier0GatewayHAVIPConfig resources.\n",
                "properties": {
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyTier0GatewayHAVIPConfigConfig:PolicyTier0GatewayHAVIPConfigConfig"
                        },
                        "description": "Tier0 HA VIP Config\n"
                    },
                    "localeServiceId": {
                        "type": "string",
                        "description": "Id of associated Gateway Locale Service on NSX\n"
                    },
                    "tier0Id": {
                        "type": "string",
                        "description": "Id of associated Tier0 Gateway on NSX\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyTier0GatewayInterface:PolicyTier0GatewayInterface": {
            "properties": {
                "accessVlanId": {
                    "type": "integer",
                    "description": "Vlan ID\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "edgeNodePath": {
                    "type": "string",
                    "description": "Policy path for edge node\n"
                },
                "enablePim": {
                    "type": "boolean",
                    "description": "Enable Protocol Independent Multicast on Interface\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "Policy path for Tier0 gateway\n"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Ip addresses\n"
                },
                "ipv6NdraProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 NDRA profile\n"
                },
                "localeServiceId": {
                    "type": "string",
                    "description": "Id of associated Gateway Locale Service on NSX\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "segmentPath": {
                    "type": "string",
                    "description": "Policy path for connected segment\n"
                },
                "sitePath": {
                    "type": "string",
                    "description": "Path of the site the Tier0 edge cluster belongs to\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP addresses and network prefixes for this interface\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayInterfaceTag:PolicyTier0GatewayInterfaceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface Type\n"
                },
                "urpfMode": {
                    "type": "string",
                    "description": "Unicast Reverse Path Forwarding mode\n"
                }
            },
            "required": [
                "displayName",
                "gatewayPath",
                "ipAddresses",
                "ipv6NdraProfilePath",
                "localeServiceId",
                "nsxId",
                "path",
                "revision",
                "subnets"
            ],
            "inputProperties": {
                "accessVlanId": {
                    "type": "integer",
                    "description": "Vlan ID\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "edgeNodePath": {
                    "type": "string",
                    "description": "Policy path for edge node\n"
                },
                "enablePim": {
                    "type": "boolean",
                    "description": "Enable Protocol Independent Multicast on Interface\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "Policy path for Tier0 gateway\n"
                },
                "ipv6NdraProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 NDRA profile\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "segmentPath": {
                    "type": "string",
                    "description": "Policy path for connected segment\n"
                },
                "sitePath": {
                    "type": "string",
                    "description": "Path of the site the Tier0 edge cluster belongs to\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP addresses and network prefixes for this interface\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier0GatewayInterfaceTag:PolicyTier0GatewayInterfaceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface Type\n"
                },
                "urpfMode": {
                    "type": "string",
                    "description": "Unicast Reverse Path Forwarding mode\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "gatewayPath",
                "subnets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyTier0GatewayInterface resources.\n",
                "properties": {
                    "accessVlanId": {
                        "type": "integer",
                        "description": "Vlan ID\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "edgeNodePath": {
                        "type": "string",
                        "description": "Policy path for edge node\n"
                    },
                    "enablePim": {
                        "type": "boolean",
                        "description": "Enable Protocol Independent Multicast on Interface\n"
                    },
                    "gatewayPath": {
                        "type": "string",
                        "description": "Policy path for Tier0 gateway\n"
                    },
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Ip addresses\n"
                    },
                    "ipv6NdraProfilePath": {
                        "type": "string",
                        "description": "The path of an IPv6 NDRA profile\n"
                    },
                    "localeServiceId": {
                        "type": "string",
                        "description": "Id of associated Gateway Locale Service on NSX\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "segmentPath": {
                        "type": "string",
                        "description": "Policy path for connected segment\n"
                    },
                    "sitePath": {
                        "type": "string",
                        "description": "Path of the site the Tier0 edge cluster belongs to\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP addresses and network prefixes for this interface\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyTier0GatewayInterfaceTag:PolicyTier0GatewayInterfaceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface Type\n"
                    },
                    "urpfMode": {
                        "type": "string",
                        "description": "Unicast Reverse Path Forwarding mode\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyTier1Gateway:PolicyTier1Gateway": {
            "properties": {
                "defaultRuleLogging": {
                    "type": "boolean",
                    "description": "Default rule logging\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "dhcpConfigPath": {
                    "type": "string",
                    "description": "Policy path to DHCP server or relay configuration to use for this Tier1\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "edgeClusterPath": {
                    "type": "string",
                    "description": "The path of the edge cluster connected to this gateway\n"
                },
                "egressQosProfilePath": {
                    "type": "string",
                    "description": "Policy path to gateway QoS profile in egress direction\n"
                },
                "enableFirewall": {
                    "type": "boolean",
                    "description": "Enable edge firewall\n"
                },
                "enableStandbyRelocation": {
                    "type": "boolean",
                    "description": "Enable standby relocation\n"
                },
                "failoverMode": {
                    "type": "string",
                    "description": "Failover mode\n"
                },
                "forceWhitelisting": {
                    "type": "boolean",
                    "description": "Force whitelisting\n",
                    "deprecationMessage": "Use nsxt_policy_predefined_gateway_policy resource to control default action"
                },
                "ingressQosProfilePath": {
                    "type": "string",
                    "description": "Policy path to gateway QoS profile in ingress direction\n"
                },
                "intersiteConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier1GatewayIntersiteConfig:PolicyTier1GatewayIntersiteConfig",
                    "description": "Locale Service for the gateway\n"
                },
                "ipv6DadProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 DAD profile\n"
                },
                "ipv6NdraProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 NDRA profile\n"
                },
                "localeServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier1GatewayLocaleService:PolicyTier1GatewayLocaleService"
                    },
                    "description": "Locale Service for the gateway\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "poolAllocation": {
                    "type": "string",
                    "description": "Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability\nrequirements\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "routeAdvertisementRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier1GatewayRouteAdvertisementRule:PolicyTier1GatewayRouteAdvertisementRule"
                    },
                    "description": "List of route advertisement rules\n"
                },
                "routeAdvertisementTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Enable different types of route advertisements\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier1GatewayTag:PolicyTier1GatewayTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tier0Path": {
                    "type": "string",
                    "description": "The path of the connected Tier0\n"
                }
            },
            "required": [
                "displayName",
                "edgeClusterPath",
                "intersiteConfig",
                "ipv6DadProfilePath",
                "ipv6NdraProfilePath",
                "nsxId",
                "path",
                "revision"
            ],
            "inputProperties": {
                "defaultRuleLogging": {
                    "type": "boolean",
                    "description": "Default rule logging\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "dhcpConfigPath": {
                    "type": "string",
                    "description": "Policy path to DHCP server or relay configuration to use for this Tier1\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "edgeClusterPath": {
                    "type": "string",
                    "description": "The path of the edge cluster connected to this gateway\n"
                },
                "egressQosProfilePath": {
                    "type": "string",
                    "description": "Policy path to gateway QoS profile in egress direction\n"
                },
                "enableFirewall": {
                    "type": "boolean",
                    "description": "Enable edge firewall\n"
                },
                "enableStandbyRelocation": {
                    "type": "boolean",
                    "description": "Enable standby relocation\n"
                },
                "failoverMode": {
                    "type": "string",
                    "description": "Failover mode\n"
                },
                "forceWhitelisting": {
                    "type": "boolean",
                    "description": "Force whitelisting\n",
                    "deprecationMessage": "Use nsxt_policy_predefined_gateway_policy resource to control default action"
                },
                "ingressQosProfilePath": {
                    "type": "string",
                    "description": "Policy path to gateway QoS profile in ingress direction\n"
                },
                "intersiteConfig": {
                    "$ref": "#/types/nsxt:/PolicyTier1GatewayIntersiteConfig:PolicyTier1GatewayIntersiteConfig",
                    "description": "Locale Service for the gateway\n"
                },
                "ipv6DadProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 DAD profile\n"
                },
                "ipv6NdraProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 NDRA profile\n"
                },
                "localeServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier1GatewayLocaleService:PolicyTier1GatewayLocaleService"
                    },
                    "description": "Locale Service for the gateway\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "poolAllocation": {
                    "type": "string",
                    "description": "Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability\nrequirements\n"
                },
                "routeAdvertisementRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier1GatewayRouteAdvertisementRule:PolicyTier1GatewayRouteAdvertisementRule"
                    },
                    "description": "List of route advertisement rules\n"
                },
                "routeAdvertisementTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Enable different types of route advertisements\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier1GatewayTag:PolicyTier1GatewayTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tier0Path": {
                    "type": "string",
                    "description": "The path of the connected Tier0\n"
                }
            },
            "requiredInputs": [
                "displayName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyTier1Gateway resources.\n",
                "properties": {
                    "defaultRuleLogging": {
                        "type": "boolean",
                        "description": "Default rule logging\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "dhcpConfigPath": {
                        "type": "string",
                        "description": "Policy path to DHCP server or relay configuration to use for this Tier1\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "edgeClusterPath": {
                        "type": "string",
                        "description": "The path of the edge cluster connected to this gateway\n"
                    },
                    "egressQosProfilePath": {
                        "type": "string",
                        "description": "Policy path to gateway QoS profile in egress direction\n"
                    },
                    "enableFirewall": {
                        "type": "boolean",
                        "description": "Enable edge firewall\n"
                    },
                    "enableStandbyRelocation": {
                        "type": "boolean",
                        "description": "Enable standby relocation\n"
                    },
                    "failoverMode": {
                        "type": "string",
                        "description": "Failover mode\n"
                    },
                    "forceWhitelisting": {
                        "type": "boolean",
                        "description": "Force whitelisting\n",
                        "deprecationMessage": "Use nsxt_policy_predefined_gateway_policy resource to control default action"
                    },
                    "ingressQosProfilePath": {
                        "type": "string",
                        "description": "Policy path to gateway QoS profile in ingress direction\n"
                    },
                    "intersiteConfig": {
                        "$ref": "#/types/nsxt:/PolicyTier1GatewayIntersiteConfig:PolicyTier1GatewayIntersiteConfig",
                        "description": "Locale Service for the gateway\n"
                    },
                    "ipv6DadProfilePath": {
                        "type": "string",
                        "description": "The path of an IPv6 DAD profile\n"
                    },
                    "ipv6NdraProfilePath": {
                        "type": "string",
                        "description": "The path of an IPv6 NDRA profile\n"
                    },
                    "localeServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyTier1GatewayLocaleService:PolicyTier1GatewayLocaleService"
                        },
                        "description": "Locale Service for the gateway\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "poolAllocation": {
                        "type": "string",
                        "description": "Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability\nrequirements\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "routeAdvertisementRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyTier1GatewayRouteAdvertisementRule:PolicyTier1GatewayRouteAdvertisementRule"
                        },
                        "description": "List of route advertisement rules\n"
                    },
                    "routeAdvertisementTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Enable different types of route advertisements\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyTier1GatewayTag:PolicyTier1GatewayTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "tier0Path": {
                        "type": "string",
                        "description": "The path of the connected Tier0\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyTier1GatewayInterface:PolicyTier1GatewayInterface": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "Policy path for tier1 gateway\n"
                },
                "ipv6NdraProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 NDRA profile\n"
                },
                "localeServiceId": {
                    "type": "string",
                    "description": "Locale Service ID for this interface\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "segmentPath": {
                    "type": "string",
                    "description": "Policy path for connected segment\n"
                },
                "sitePath": {
                    "type": "string",
                    "description": "Path of the site the Tier1 edge cluster belongs to\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP addresses and network prefixes for this interface\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier1GatewayInterfaceTag:PolicyTier1GatewayInterfaceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "urpfMode": {
                    "type": "string",
                    "description": "Unicast Reverse Path Forwarding mode\n"
                }
            },
            "required": [
                "displayName",
                "gatewayPath",
                "ipv6NdraProfilePath",
                "localeServiceId",
                "nsxId",
                "path",
                "revision",
                "segmentPath",
                "subnets"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "gatewayPath": {
                    "type": "string",
                    "description": "Policy path for tier1 gateway\n"
                },
                "ipv6NdraProfilePath": {
                    "type": "string",
                    "description": "The path of an IPv6 NDRA profile\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "segmentPath": {
                    "type": "string",
                    "description": "Policy path for connected segment\n"
                },
                "sitePath": {
                    "type": "string",
                    "description": "Path of the site the Tier1 edge cluster belongs to\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP addresses and network prefixes for this interface\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyTier1GatewayInterfaceTag:PolicyTier1GatewayInterfaceTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "urpfMode": {
                    "type": "string",
                    "description": "Unicast Reverse Path Forwarding mode\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "gatewayPath",
                "segmentPath",
                "subnets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyTier1GatewayInterface resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "gatewayPath": {
                        "type": "string",
                        "description": "Policy path for tier1 gateway\n"
                    },
                    "ipv6NdraProfilePath": {
                        "type": "string",
                        "description": "The path of an IPv6 NDRA profile\n"
                    },
                    "localeServiceId": {
                        "type": "string",
                        "description": "Locale Service ID for this interface\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "segmentPath": {
                        "type": "string",
                        "description": "Policy path for connected segment\n"
                    },
                    "sitePath": {
                        "type": "string",
                        "description": "Path of the site the Tier1 edge cluster belongs to\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP addresses and network prefixes for this interface\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyTier1GatewayInterfaceTag:PolicyTier1GatewayInterfaceTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "urpfMode": {
                        "type": "string",
                        "description": "Unicast Reverse Path Forwarding mode\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyVMTags:PolicyVMTags": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "Instance id\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVMTagsPort:PolicyVMTagsPort"
                    },
                    "description": "Tag specificiation for corresponding segment port\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVMTagsTag:PolicyVMTagsTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "instanceId"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Instance id\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVMTagsPort:PolicyVMTagsPort"
                    },
                    "description": "Tag specificiation for corresponding segment port\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVMTagsTag:PolicyVMTagsTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyVMTags resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "Instance id\n"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyVMTagsPort:PolicyVMTagsPort"
                        },
                        "description": "Tag specificiation for corresponding segment port\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyVMTagsTag:PolicyVMTagsTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/policyVlanSegment:PolicyVlanSegment": {
            "properties": {
                "advancedConfig": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentAdvancedConfig:PolicyVlanSegmentAdvancedConfig",
                    "description": "Advanced segment configuration\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "dhcpConfigPath": {
                    "type": "string",
                    "description": "Policy path to DHCP server or relay configuration to use for subnets configured on this segment\n"
                },
                "discoveryProfile": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentDiscoveryProfile:PolicyVlanSegmentDiscoveryProfile",
                    "description": "IP and MAC discovery profiles for this segment\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "DNS domain names\n"
                },
                "l2Extension": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentL2Extension:PolicyVlanSegmentL2Extension",
                    "description": "Configuration for extending Segment through L2 VPN\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "path": {
                    "type": "string",
                    "description": "Policy path for this resource\n"
                },
                "qosProfile": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentQosProfile:PolicyVlanSegmentQosProfile",
                    "description": "QoS profiles for this segment\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "securityProfile": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentSecurityProfile:PolicyVlanSegmentSecurityProfile",
                    "description": "Security profiles for this segment\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentSubnet:PolicyVlanSegmentSubnet"
                    },
                    "description": "Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentTag:PolicyVlanSegmentTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "transportZonePath": {
                    "type": "string",
                    "description": "Policy path to the transport zone\n"
                },
                "vlanIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VLAN IDs for VLAN backed Segment\n"
                }
            },
            "required": [
                "displayName",
                "nsxId",
                "path",
                "revision",
                "transportZonePath",
                "vlanIds"
            ],
            "inputProperties": {
                "advancedConfig": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentAdvancedConfig:PolicyVlanSegmentAdvancedConfig",
                    "description": "Advanced segment configuration\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description for this resource\n"
                },
                "dhcpConfigPath": {
                    "type": "string",
                    "description": "Policy path to DHCP server or relay configuration to use for subnets configured on this segment\n"
                },
                "discoveryProfile": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentDiscoveryProfile:PolicyVlanSegmentDiscoveryProfile",
                    "description": "IP and MAC discovery profiles for this segment\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name for this resource\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "DNS domain names\n"
                },
                "l2Extension": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentL2Extension:PolicyVlanSegmentL2Extension",
                    "description": "Configuration for extending Segment through L2 VPN\n"
                },
                "nsxId": {
                    "type": "string",
                    "description": "NSX ID for this resource\n"
                },
                "qosProfile": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentQosProfile:PolicyVlanSegmentQosProfile",
                    "description": "QoS profiles for this segment\n"
                },
                "securityProfile": {
                    "$ref": "#/types/nsxt:/PolicyVlanSegmentSecurityProfile:PolicyVlanSegmentSecurityProfile",
                    "description": "Security profiles for this segment\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentSubnet:PolicyVlanSegmentSubnet"
                    },
                    "description": "Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentTag:PolicyVlanSegmentTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "transportZonePath": {
                    "type": "string",
                    "description": "Policy path to the transport zone\n"
                },
                "vlanIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VLAN IDs for VLAN backed Segment\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "transportZonePath",
                "vlanIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyVlanSegment resources.\n",
                "properties": {
                    "advancedConfig": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentAdvancedConfig:PolicyVlanSegmentAdvancedConfig",
                        "description": "Advanced segment configuration\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description for this resource\n"
                    },
                    "dhcpConfigPath": {
                        "type": "string",
                        "description": "Policy path to DHCP server or relay configuration to use for subnets configured on this segment\n"
                    },
                    "discoveryProfile": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentDiscoveryProfile:PolicyVlanSegmentDiscoveryProfile",
                        "description": "IP and MAC discovery profiles for this segment\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name for this resource\n"
                    },
                    "domainName": {
                        "type": "string",
                        "description": "DNS domain names\n"
                    },
                    "l2Extension": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentL2Extension:PolicyVlanSegmentL2Extension",
                        "description": "Configuration for extending Segment through L2 VPN\n"
                    },
                    "nsxId": {
                        "type": "string",
                        "description": "NSX ID for this resource\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Policy path for this resource\n"
                    },
                    "qosProfile": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentQosProfile:PolicyVlanSegmentQosProfile",
                        "description": "QoS profiles for this segment\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "securityProfile": {
                        "$ref": "#/types/nsxt:/PolicyVlanSegmentSecurityProfile:PolicyVlanSegmentSecurityProfile",
                        "description": "Security profiles for this segment\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyVlanSegmentSubnet:PolicyVlanSegmentSubnet"
                        },
                        "description": "Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/PolicyVlanSegmentTag:PolicyVlanSegmentTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "transportZonePath": {
                        "type": "string",
                        "description": "Policy path to the transport zone\n"
                    },
                    "vlanIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "VLAN IDs for VLAN backed Segment\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/qOSSwitchingProfile:QOSSwitchingProfile": {
            "properties": {
                "classOfService": {
                    "type": "integer",
                    "description": "Class of service\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "dscpPriority": {
                    "type": "integer",
                    "description": "DSCP Priority\n"
                },
                "dscpTrusted": {
                    "type": "boolean",
                    "description": "Trust mode for DSCP\n"
                },
                "egressRateShaper": {
                    "$ref": "#/types/nsxt:/QOSSwitchingProfileEgressRateShaper:QOSSwitchingProfileEgressRateShaper"
                },
                "ingressBroadcastRateShaper": {
                    "$ref": "#/types/nsxt:/QOSSwitchingProfileIngressBroadcastRateShaper:QOSSwitchingProfileIngressBroadcastRateShaper"
                },
                "ingressRateShaper": {
                    "$ref": "#/types/nsxt:/QOSSwitchingProfileIngressRateShaper:QOSSwitchingProfileIngressRateShaper"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/QOSSwitchingProfileTag:QOSSwitchingProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "classOfService": {
                    "type": "integer",
                    "description": "Class of service\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "dscpPriority": {
                    "type": "integer",
                    "description": "DSCP Priority\n"
                },
                "dscpTrusted": {
                    "type": "boolean",
                    "description": "Trust mode for DSCP\n"
                },
                "egressRateShaper": {
                    "$ref": "#/types/nsxt:/QOSSwitchingProfileEgressRateShaper:QOSSwitchingProfileEgressRateShaper"
                },
                "ingressBroadcastRateShaper": {
                    "$ref": "#/types/nsxt:/QOSSwitchingProfileIngressBroadcastRateShaper:QOSSwitchingProfileIngressBroadcastRateShaper"
                },
                "ingressRateShaper": {
                    "$ref": "#/types/nsxt:/QOSSwitchingProfileIngressRateShaper:QOSSwitchingProfileIngressRateShaper"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/QOSSwitchingProfileTag:QOSSwitchingProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering QOSSwitchingProfile resources.\n",
                "properties": {
                    "classOfService": {
                        "type": "integer",
                        "description": "Class of service\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "dscpPriority": {
                        "type": "integer",
                        "description": "DSCP Priority\n"
                    },
                    "dscpTrusted": {
                        "type": "boolean",
                        "description": "Trust mode for DSCP\n"
                    },
                    "egressRateShaper": {
                        "$ref": "#/types/nsxt:/QOSSwitchingProfileEgressRateShaper:QOSSwitchingProfileEgressRateShaper"
                    },
                    "ingressBroadcastRateShaper": {
                        "$ref": "#/types/nsxt:/QOSSwitchingProfileIngressBroadcastRateShaper:QOSSwitchingProfileIngressBroadcastRateShaper"
                    },
                    "ingressRateShaper": {
                        "$ref": "#/types/nsxt:/QOSSwitchingProfileIngressRateShaper:QOSSwitchingProfileIngressRateShaper"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/QOSSwitchingProfileTag:QOSSwitchingProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/spoofguardSwitchingProfile:SpoofguardSwitchingProfile": {
            "properties": {
                "addressBindingWhitelistEnabled": {
                    "type": "boolean",
                    "description": "When true, this profile overrides the default system wide settings for Spoof Guard when assigned to ports\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/SpoofguardSwitchingProfileTag:SpoofguardSwitchingProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "addressBindingWhitelistEnabled": {
                    "type": "boolean",
                    "description": "When true, this profile overrides the default system wide settings for Spoof Guard when assigned to ports\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/SpoofguardSwitchingProfileTag:SpoofguardSwitchingProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpoofguardSwitchingProfile resources.\n",
                "properties": {
                    "addressBindingWhitelistEnabled": {
                        "type": "boolean",
                        "description": "When true, this profile overrides the default system wide settings for Spoof Guard when assigned to ports\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/SpoofguardSwitchingProfileTag:SpoofguardSwitchingProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/staticRoute:StaticRoute": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Defaults to ID if not set\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Logical router id\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR\n"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/StaticRouteNextHop:StaticRouteNextHop"
                    }
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/StaticRouteTag:StaticRouteTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "logicalRouterId",
                "network",
                "nextHops",
                "revision"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Defaults to ID if not set\n"
                },
                "logicalRouterId": {
                    "type": "string",
                    "description": "Logical router id\n"
                },
                "network": {
                    "type": "string",
                    "description": "CIDR\n"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/StaticRouteNextHop:StaticRouteNextHop"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/StaticRouteTag:StaticRouteTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "logicalRouterId",
                "network",
                "nextHops"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticRoute resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Defaults to ID if not set\n"
                    },
                    "logicalRouterId": {
                        "type": "string",
                        "description": "Logical router id\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "CIDR\n"
                    },
                    "nextHops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/StaticRouteNextHop:StaticRouteNextHop"
                        }
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/StaticRouteTag:StaticRouteTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/switchSecuritySwitchingProfile:SwitchSecuritySwitchingProfile": {
            "properties": {
                "blockClientDhcp": {
                    "type": "boolean",
                    "description": "Indicates whether DHCP client blocking is enabled\n"
                },
                "blockNonIp": {
                    "type": "boolean",
                    "description": "Block all traffic except IP/(G)ARP/BPDU\n"
                },
                "blockServerDhcp": {
                    "type": "boolean",
                    "description": "Indicates whether DHCP server blocking is enabled\n"
                },
                "bpduFilterEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether BPDU filter is enabled\n"
                },
                "bpduFilterWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of allowed MAC addresses to be excluded from BPDU filtering\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "rateLimits": {
                    "$ref": "#/types/nsxt:/SwitchSecuritySwitchingProfileRateLimits:SwitchSecuritySwitchingProfileRateLimits"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/SwitchSecuritySwitchingProfileTag:SwitchSecuritySwitchingProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "displayName",
                "revision"
            ],
            "inputProperties": {
                "blockClientDhcp": {
                    "type": "boolean",
                    "description": "Indicates whether DHCP client blocking is enabled\n"
                },
                "blockNonIp": {
                    "type": "boolean",
                    "description": "Block all traffic except IP/(G)ARP/BPDU\n"
                },
                "blockServerDhcp": {
                    "type": "boolean",
                    "description": "Indicates whether DHCP server blocking is enabled\n"
                },
                "bpduFilterEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether BPDU filter is enabled\n"
                },
                "bpduFilterWhitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of allowed MAC addresses to be excluded from BPDU filtering\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "rateLimits": {
                    "$ref": "#/types/nsxt:/SwitchSecuritySwitchingProfileRateLimits:SwitchSecuritySwitchingProfileRateLimits"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/SwitchSecuritySwitchingProfileTag:SwitchSecuritySwitchingProfileTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwitchSecuritySwitchingProfile resources.\n",
                "properties": {
                    "blockClientDhcp": {
                        "type": "boolean",
                        "description": "Indicates whether DHCP client blocking is enabled\n"
                    },
                    "blockNonIp": {
                        "type": "boolean",
                        "description": "Block all traffic except IP/(G)ARP/BPDU\n"
                    },
                    "blockServerDhcp": {
                        "type": "boolean",
                        "description": "Indicates whether DHCP server blocking is enabled\n"
                    },
                    "bpduFilterEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether BPDU filter is enabled\n"
                    },
                    "bpduFilterWhitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of allowed MAC addresses to be excluded from BPDU filtering\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "rateLimits": {
                        "$ref": "#/types/nsxt:/SwitchSecuritySwitchingProfileRateLimits:SwitchSecuritySwitchingProfileRateLimits"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/SwitchSecuritySwitchingProfileTag:SwitchSecuritySwitchingProfileTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/vMTags:VMTags": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "Instance id\n"
                },
                "logicalPortTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/VMTagsLogicalPortTag:VMTagsLogicalPortTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/VMTagsTag:VMTagsTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "required": [
                "instanceId"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Instance id\n"
                },
                "logicalPortTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/VMTagsLogicalPortTag:VMTagsLogicalPortTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/VMTagsTag:VMTagsTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VMTags resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "Instance id\n"
                    },
                    "logicalPortTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/VMTagsLogicalPortTag:VMTagsLogicalPortTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/VMTagsTag:VMTagsTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    }
                },
                "type": "object"
            }
        },
        "nsxt:index/vlanLogicalSwitch:VlanLogicalSwitch": {
            "properties": {
                "addressBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/VlanLogicalSwitchAddressBinding:VlanLogicalSwitchAddressBinding"
                    },
                    "description": "Address bindings for the Logical switch\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Represents Desired state of the object\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "ipPoolId": {
                    "type": "string",
                    "description": "IP pool id that associated with a LogicalSwitch\n"
                },
                "macPoolId": {
                    "type": "string",
                    "description": "Mac pool id that associated with a LogicalSwitch\n"
                },
                "revision": {
                    "type": "integer",
                    "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                },
                "switchingProfileIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/VlanLogicalSwitchSwitchingProfileId:VlanLogicalSwitchSwitchingProfileId"
                    },
                    "description": "List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will\nbe used if not specified\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/VlanLogicalSwitchTag:VlanLogicalSwitchTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "transportZoneId": {
                    "type": "string",
                    "description": "Id of the TransportZone to which this LogicalSwitch is associated\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN Id\n"
                }
            },
            "required": [
                "displayName",
                "revision",
                "transportZoneId",
                "vlan"
            ],
            "inputProperties": {
                "addressBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/VlanLogicalSwitchAddressBinding:VlanLogicalSwitchAddressBinding"
                    },
                    "description": "Address bindings for the Logical switch\n"
                },
                "adminState": {
                    "type": "string",
                    "description": "Represents Desired state of the object\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of this resource\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. Defaults to ID if not set\n"
                },
                "ipPoolId": {
                    "type": "string",
                    "description": "IP pool id that associated with a LogicalSwitch\n"
                },
                "macPoolId": {
                    "type": "string",
                    "description": "Mac pool id that associated with a LogicalSwitch\n"
                },
                "switchingProfileIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/VlanLogicalSwitchSwitchingProfileId:VlanLogicalSwitchSwitchingProfileId"
                    },
                    "description": "List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will\nbe used if not specified\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nsxt:/VlanLogicalSwitchTag:VlanLogicalSwitchTag"
                    },
                    "description": "Set of opaque identifiers meaningful to the user\n"
                },
                "transportZoneId": {
                    "type": "string",
                    "description": "Id of the TransportZone to which this LogicalSwitch is associated\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN Id\n"
                }
            },
            "requiredInputs": [
                "transportZoneId",
                "vlan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VlanLogicalSwitch resources.\n",
                "properties": {
                    "addressBindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/VlanLogicalSwitchAddressBinding:VlanLogicalSwitchAddressBinding"
                        },
                        "description": "Address bindings for the Logical switch\n"
                    },
                    "adminState": {
                        "type": "string",
                        "description": "Represents Desired state of the object\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of this resource\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource. Defaults to ID if not set\n"
                    },
                    "ipPoolId": {
                        "type": "string",
                        "description": "IP pool id that associated with a LogicalSwitch\n"
                    },
                    "macPoolId": {
                        "type": "string",
                        "description": "Mac pool id that associated with a LogicalSwitch\n"
                    },
                    "revision": {
                        "type": "integer",
                        "description": "The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's\nchanges, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET\noperation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected\n"
                    },
                    "switchingProfileIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/VlanLogicalSwitchSwitchingProfileId:VlanLogicalSwitchSwitchingProfileId"
                        },
                        "description": "List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will\nbe used if not specified\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nsxt:/VlanLogicalSwitchTag:VlanLogicalSwitchTag"
                        },
                        "description": "Set of opaque identifiers meaningful to the user\n"
                    },
                    "transportZoneId": {
                        "type": "string",
                        "description": "Id of the TransportZone to which this LogicalSwitch is associated\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN Id\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "nsxt:index/getCertificate:getCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getCertificate.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCertificate.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id"
                ]
            }
        },
        "nsxt:index/getEdgeCluster:getEdgeCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgeCluster.\n",
                "properties": {
                    "deploymentType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "memberNodeType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEdgeCluster.\n",
                "properties": {
                    "deploymentType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "memberNodeType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "deploymentType",
                    "description",
                    "displayName",
                    "id",
                    "memberNodeType"
                ]
            }
        },
        "nsxt:index/getFirewallSection:getFirewallSection": {
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallSection.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallSection.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id"
                ]
            }
        },
        "nsxt:index/getIPPool:getIPPool": {
            "inputs": {
                "description": "A collection of arguments for invoking getIPPool.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIPPool.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id"
                ]
            }
        },
        "nsxt:index/getLogicalTier0Router:getLogicalTier0Router": {
            "inputs": {
                "description": "A collection of arguments for invoking getLogicalTier0Router.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edgeClusterId": {
                        "type": "string"
                    },
                    "highAvailabilityMode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLogicalTier0Router.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edgeClusterId": {
                        "type": "string"
                    },
                    "highAvailabilityMode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "edgeClusterId",
                    "highAvailabilityMode",
                    "id"
                ]
            }
        },
        "nsxt:index/getLogicalTier1Router:getLogicalTier1Router": {
            "inputs": {
                "description": "A collection of arguments for invoking getLogicalTier1Router.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edgeClusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLogicalTier1Router.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edgeClusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "edgeClusterId",
                    "id"
                ]
            }
        },
        "nsxt:index/getMACPool:getMACPool": {
            "inputs": {
                "description": "A collection of arguments for invoking getMACPool.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMACPool.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id"
                ]
            }
        },
        "nsxt:index/getNSGroup:getNSGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getNSGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNSGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id"
                ]
            }
        },
        "nsxt:index/getNSService:getNSService": {
            "inputs": {
                "description": "A collection of arguments for invoking getNSService.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNSService.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id"
                ]
            }
        },
        "nsxt:index/getPolicyCertificate:getPolicyCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyCertificate.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyCertificate.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyContextProfile:getPolicyContextProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyContextProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyContextProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyEdgeCluster:getPolicyEdgeCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyEdgeCluster.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "sitePath": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyEdgeCluster.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "sitePath": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyEdgeNode:getPolicyEdgeNode": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyEdgeNode.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edgeClusterPath": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "memberIndex": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "edgeClusterPath"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyEdgeNode.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edgeClusterPath": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "memberIndex": {
                        "type": "integer"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "edgeClusterPath",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyGatewayPolicy:getPolicyGatewayPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyGatewayPolicy.\n",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyGatewayPolicy.\n",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "category",
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyGatewayQOSProfile:getPolicyGatewayQOSProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyGatewayQOSProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyGatewayQOSProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyGroup:getPolicyGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyIPBlock:getPolicyIPBlock": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyIPBlock.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyIPBlock.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyIPDiscoveryProfile:getPolicyIPDiscoveryProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyIPDiscoveryProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyIPDiscoveryProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyIPPool:getPolicyIPPool": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyIPPool.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyIPPool.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyIPv6DadProfile:getPolicyIPv6DadProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyIPv6DadProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyIPv6DadProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyIPv6NdraProfile:getPolicyIPv6NdraProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyIPv6NdraProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyIPv6NdraProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyLBAppProfile:getPolicyLBAppProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyLBAppProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyLBAppProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyLBClientSSLProfile:getPolicyLBClientSSLProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyLBClientSSLProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyLBClientSSLProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyLBMonitor:getPolicyLBMonitor": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyLBMonitor.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyLBMonitor.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyLBPersistenceProfile:getPolicyLBPersistenceProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyLBPersistenceProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyLBPersistenceProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyLBServerSSLProfile:getPolicyLBServerSSLProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyLBServerSSLProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyLBServerSSLProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyMACDiscoveryProfile:getPolicyMACDiscoveryProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyMACDiscoveryProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyMACDiscoveryProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyQOSProfile:getPolicyQOSProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyQOSProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyQOSProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyRealizationInfo:getPolicyRealizationInfo": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyRealizationInfo.\n",
                "properties": {
                    "entityType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "sitePath": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "path"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyRealizationInfo.\n",
                "properties": {
                    "entityType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "realizedId": {
                        "type": "string"
                    },
                    "sitePath": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "entityType",
                    "id",
                    "path",
                    "realizedId",
                    "state"
                ]
            }
        },
        "nsxt:index/getPolicySecurityPolicy:getPolicySecurityPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicySecurityPolicy.\n",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicySecurityPolicy.\n",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "category",
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicySegmentRealization:getPolicySegmentRealization": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicySegmentRealization.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "path"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicySegmentRealization.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "networkName": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "networkName",
                    "path",
                    "state"
                ]
            }
        },
        "nsxt:index/getPolicySegmentSecurityProfile:getPolicySegmentSecurityProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicySegmentSecurityProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicySegmentSecurityProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyService:getPolicyService": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyService.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyService.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicySite:getPolicySite": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicySite.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicySite.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicySpoofguardProfile:getPolicySpoofguardProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicySpoofguardProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicySpoofguardProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyTier0Gateway:getPolicyTier0Gateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyTier0Gateway.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edgeClusterPath": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyTier0Gateway.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edgeClusterPath": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "edgeClusterPath",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyTier1Gateway:getPolicyTier1Gateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyTier1Gateway.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edgeClusterPath": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyTier1Gateway.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edgeClusterPath": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "edgeClusterPath",
                    "id",
                    "path"
                ]
            }
        },
        "nsxt:index/getPolicyTransportZone:getPolicyTransportZone": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyTransportZone.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "sitePath": {
                        "type": "string"
                    },
                    "transportType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyTransportZone.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "path": {
                        "type": "string"
                    },
                    "sitePath": {
                        "type": "string"
                    },
                    "transportType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "isDefault",
                    "path",
                    "transportType"
                ]
            }
        },
        "nsxt:index/getPolicyVM:getPolicyVM": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyVM.\n",
                "properties": {
                    "biosId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyVM.\n",
                "properties": {
                    "biosId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "instanceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "biosId",
                    "description",
                    "displayName",
                    "externalId",
                    "instanceId",
                    "id"
                ]
            }
        },
        "nsxt:index/getPolicyVNIPool:getPolicyVNIPool": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyVNIPool.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyVNIPool.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "end": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "start": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "end",
                    "id",
                    "path",
                    "start"
                ]
            }
        },
        "nsxt:index/getSwitchingProfile:getSwitchingProfile": {
            "inputs": {
                "description": "A collection of arguments for invoking getSwitchingProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSwitchingProfile.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "id",
                    "resourceType"
                ]
            }
        },
        "nsxt:index/getTransportZone:getTransportZone": {
            "inputs": {
                "description": "A collection of arguments for invoking getTransportZone.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "hostSwitchName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "transportType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTransportZone.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "hostSwitchName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "transportType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "displayName",
                    "hostSwitchName",
                    "id",
                    "transportType"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "2.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "nodejs": {
            "dependencies": {
                "@pulumi/pulumi": "^2.0.0",
                "builtin-modules": "3.0.0",
                "read-package-tree": "^5.2.1",
                "resolve": "^1.8.1"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^8.0.25"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing nsxt cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-nsxt)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-nsxt` repo](https://github.com/pulumi/pulumi-nsxt/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-nsxt` repo](https://github.com/terraform-providers/terraform-provider-nsxt/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-nsxt)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-nsxt` repo](https://github.com/pulumi/pulumi-nsxt/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-nsxt` repo](https://github.com/terraform-providers/terraform-provider-nsxt/issues).",
            "requires": {
                "pulumi": "\u003e=2.0.0,\u003c3.0.0"
            }
        }
    }
}