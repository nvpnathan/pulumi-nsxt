// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;

namespace Pulumi.Nsxt
{
    public static class Config
    {
        private static readonly Pulumi.Config __config = new Pulumi.Config("nsxt");
        public static bool? AllowUnverifiedSsl { get; set; } = __config.GetBoolean("allowUnverifiedSsl") ?? Utilities.GetEnvBoolean("NSXT_ALLOW_UNVERIFIED_SSL");

        public static string? CaFile { get; set; } = __config.Get("caFile") ?? Utilities.GetEnv("NSXT_CA_FILE");

        public static string? ClientAuthCertFile { get; set; } = __config.Get("clientAuthCertFile") ?? Utilities.GetEnv("NSXT_CLIENT_AUTH_CERT_FILE");

        public static string? ClientAuthKeyFile { get; set; } = __config.Get("clientAuthKeyFile") ?? Utilities.GetEnv("NSXT_CLIENT_AUTH_KEY_FILE");

        /// <summary>
        /// Enforcement Point for NSXT Policy
        /// </summary>
        public static string? EnforcementPoint { get; set; } = __config.Get("enforcementPoint") ?? Utilities.GetEnv("NSXT_POLICY_ENFORCEMENT_POINT");

        /// <summary>
        /// Is this a policy global manager endpoint
        /// </summary>
        public static bool? GlobalManager { get; set; } = __config.GetBoolean("globalManager") ?? Utilities.GetEnvBoolean("NSXT_GLOBAL_MANAGER");

        /// <summary>
        /// The hostname or IP address of the NSX manager.
        /// </summary>
        public static string? Host { get; set; } = __config.Get("host") ?? Utilities.GetEnv("NSXT_MANAGER_HOST");

        /// <summary>
        /// Maximum number of HTTP client retries
        /// </summary>
        public static int? MaxRetries { get; set; } = __config.GetInt32("maxRetries") ?? Utilities.GetEnvInt32("NSXT_MAX_RETRIES");

        public static string? Password { get; set; } = __config.Get("password") ?? Utilities.GetEnv("NSXT_PASSWORD");

        public static bool? RemoteAuth { get; set; } = __config.GetBoolean("remoteAuth") ?? Utilities.GetEnvBoolean("NSXT_REMOTE_AUTH");

        /// <summary>
        /// Maximum delay in milliseconds between retries of a request
        /// </summary>
        public static int? RetryMaxDelay { get; set; } = __config.GetInt32("retryMaxDelay") ?? Utilities.GetEnvInt32("NSXT_RETRY_MAX_DELAY");

        /// <summary>
        /// Minimum delay in milliseconds between retries of a request
        /// </summary>
        public static int? RetryMinDelay { get; set; } = __config.GetInt32("retryMinDelay") ?? Utilities.GetEnvInt32("NSXT_RETRY_MIN_DELAY");

        /// <summary>
        /// HTTP replies status codes to retry on
        /// </summary>
        public static ImmutableArray<int> RetryOnStatusCodes { get; set; } = __config.GetObject<ImmutableArray<int>>("retryOnStatusCodes");

        /// <summary>
        /// Treat partial success status as success
        /// </summary>
        public static bool? ToleratePartialSuccess { get; set; } = __config.GetBoolean("toleratePartialSuccess") ?? Utilities.GetEnvBoolean("NSXT_TOLERATE_PARTIAL_SUCCESS");

        public static string? Username { get; set; } = __config.Get("username") ?? Utilities.GetEnv("NSXT_USERNAME");

        /// <summary>
        /// URL for VMC authorization service (CSP)
        /// </summary>
        public static string? VmcAuthHost { get; set; } = __config.Get("vmcAuthHost") ?? Utilities.GetEnv("NSXT_VMC_AUTH_HOST");

        /// <summary>
        /// Long-living API token for VMC authorization
        /// </summary>
        public static string? VmcToken { get; set; } = __config.Get("vmcToken") ?? Utilities.GetEnv("NSXT_VMC_TOKEN");

    }
}
