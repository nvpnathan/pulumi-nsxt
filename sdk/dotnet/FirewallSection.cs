// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nsxt
{
    public partial class FirewallSection : Pulumi.CustomResource
    {
        /// <summary>
        /// List of objects where the rules in this section will be enforced. This will take precedence over rule level appliedTo
        /// </summary>
        [Output("appliedTos")]
        public Output<ImmutableArray<Outputs.FirewallSectionAppliedTo>> AppliedTos { get; private set; } = null!;

        /// <summary>
        /// Description of this resource
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of this resource. Defaults to ID if not set
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Id of section that should come after this one
        /// </summary>
        [Output("insertBefore")]
        public Output<string?> InsertBefore { get; private set; } = null!;

        /// <summary>
        /// A boolean flag which reflects whether a firewall section is default section or not
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
        /// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
        /// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        /// </summary>
        [Output("revision")]
        public Output<int> Revision { get; private set; } = null!;

        /// <summary>
        /// List of firewall rules in the section. Only homogeneous rules are supported
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.FirewallSectionRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// Type of the rules which a section can contain. Only homogeneous sections are supported
        /// </summary>
        [Output("sectionType")]
        public Output<string> SectionType { get; private set; } = null!;

        /// <summary>
        /// Stateful or Stateless nature of firewall section is enforced on all rules inside the section
        /// </summary>
        [Output("stateful")]
        public Output<bool> Stateful { get; private set; } = null!;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.FirewallSectionTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a FirewallSection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirewallSection(string name, FirewallSectionArgs args, CustomResourceOptions? options = null)
            : base("nsxt:index/firewallSection:FirewallSection", name, args ?? new FirewallSectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FirewallSection(string name, Input<string> id, FirewallSectionState? state = null, CustomResourceOptions? options = null)
            : base("nsxt:index/firewallSection:FirewallSection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirewallSection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirewallSection Get(string name, Input<string> id, FirewallSectionState? state = null, CustomResourceOptions? options = null)
        {
            return new FirewallSection(name, id, state, options);
        }
    }

    public sealed class FirewallSectionArgs : Pulumi.ResourceArgs
    {
        [Input("appliedTos")]
        private InputList<Inputs.FirewallSectionAppliedToArgs>? _appliedTos;

        /// <summary>
        /// List of objects where the rules in this section will be enforced. This will take precedence over rule level appliedTo
        /// </summary>
        public InputList<Inputs.FirewallSectionAppliedToArgs> AppliedTos
        {
            get => _appliedTos ?? (_appliedTos = new InputList<Inputs.FirewallSectionAppliedToArgs>());
            set => _appliedTos = value;
        }

        /// <summary>
        /// Description of this resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this resource. Defaults to ID if not set
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Id of section that should come after this one
        /// </summary>
        [Input("insertBefore")]
        public Input<string>? InsertBefore { get; set; }

        [Input("rules")]
        private InputList<Inputs.FirewallSectionRuleArgs>? _rules;

        /// <summary>
        /// List of firewall rules in the section. Only homogeneous rules are supported
        /// </summary>
        public InputList<Inputs.FirewallSectionRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.FirewallSectionRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Type of the rules which a section can contain. Only homogeneous sections are supported
        /// </summary>
        [Input("sectionType", required: true)]
        public Input<string> SectionType { get; set; } = null!;

        /// <summary>
        /// Stateful or Stateless nature of firewall section is enforced on all rules inside the section
        /// </summary>
        [Input("stateful", required: true)]
        public Input<bool> Stateful { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.FirewallSectionTagArgs>? _tags;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        public InputList<Inputs.FirewallSectionTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.FirewallSectionTagArgs>());
            set => _tags = value;
        }

        public FirewallSectionArgs()
        {
        }
    }

    public sealed class FirewallSectionState : Pulumi.ResourceArgs
    {
        [Input("appliedTos")]
        private InputList<Inputs.FirewallSectionAppliedToGetArgs>? _appliedTos;

        /// <summary>
        /// List of objects where the rules in this section will be enforced. This will take precedence over rule level appliedTo
        /// </summary>
        public InputList<Inputs.FirewallSectionAppliedToGetArgs> AppliedTos
        {
            get => _appliedTos ?? (_appliedTos = new InputList<Inputs.FirewallSectionAppliedToGetArgs>());
            set => _appliedTos = value;
        }

        /// <summary>
        /// Description of this resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this resource. Defaults to ID if not set
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Id of section that should come after this one
        /// </summary>
        [Input("insertBefore")]
        public Input<string>? InsertBefore { get; set; }

        /// <summary>
        /// A boolean flag which reflects whether a firewall section is default section or not
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
        /// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
        /// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        /// </summary>
        [Input("revision")]
        public Input<int>? Revision { get; set; }

        [Input("rules")]
        private InputList<Inputs.FirewallSectionRuleGetArgs>? _rules;

        /// <summary>
        /// List of firewall rules in the section. Only homogeneous rules are supported
        /// </summary>
        public InputList<Inputs.FirewallSectionRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.FirewallSectionRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Type of the rules which a section can contain. Only homogeneous sections are supported
        /// </summary>
        [Input("sectionType")]
        public Input<string>? SectionType { get; set; }

        /// <summary>
        /// Stateful or Stateless nature of firewall section is enforced on all rules inside the section
        /// </summary>
        [Input("stateful")]
        public Input<bool>? Stateful { get; set; }

        [Input("tags")]
        private InputList<Inputs.FirewallSectionTagGetArgs>? _tags;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        public InputList<Inputs.FirewallSectionTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.FirewallSectionTagGetArgs>());
            set => _tags = value;
        }

        public FirewallSectionState()
        {
        }
    }
}
