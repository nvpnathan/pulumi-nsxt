// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nsxt
{
    public partial class LBHTTPVirtualServer : Pulumi.CustomResource
    {
        /// <summary>
        /// Whether access log is enabled
        /// </summary>
        [Output("accessLogEnabled")]
        public Output<bool?> AccessLogEnabled { get; private set; } = null!;

        /// <summary>
        /// The http application profile defines the application protocol characteristics
        /// </summary>
        [Output("applicationProfileId")]
        public Output<string> ApplicationProfileId { get; private set; } = null!;

        /// <summary>
        /// Client SSL settings for Virtual Server
        /// </summary>
        [Output("clientSsl")]
        public Output<Outputs.LBHTTPVirtualServerClientSsl?> ClientSsl { get; private set; } = null!;

        /// <summary>
        /// Default pool member port
        /// </summary>
        [Output("defaultPoolMemberPort")]
        public Output<string?> DefaultPoolMemberPort { get; private set; } = null!;

        /// <summary>
        /// Description of this resource
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of this resource. Defaults to ID if not set
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Whether the virtual server is enabled
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Virtual server IP address
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// If not specified, connections are unlimited
        /// </summary>
        [Output("maxConcurrentConnections")]
        public Output<int?> MaxConcurrentConnections { get; private set; } = null!;

        /// <summary>
        /// If not specified, connection rate is unlimited
        /// </summary>
        [Output("maxNewConnectionRate")]
        public Output<int?> MaxNewConnectionRate { get; private set; } = null!;

        /// <summary>
        /// Persistence profile is used to allow related client connections to be sent to the same backend server
        /// </summary>
        [Output("persistenceProfileId")]
        public Output<string?> PersistenceProfileId { get; private set; } = null!;

        /// <summary>
        /// Server pool for backend connections
        /// </summary>
        [Output("poolId")]
        public Output<string?> PoolId { get; private set; } = null!;

        /// <summary>
        /// Virtual server port
        /// </summary>
        [Output("port")]
        public Output<string> Port { get; private set; } = null!;

        /// <summary>
        /// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
        /// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
        /// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        /// </summary>
        [Output("revision")]
        public Output<int> Revision { get; private set; } = null!;

        /// <summary>
        /// Customization of load balancing behavior using match/action rules
        /// </summary>
        [Output("ruleIds")]
        public Output<ImmutableArray<string>> RuleIds { get; private set; } = null!;

        /// <summary>
        /// Server SSL settings for Virtual Server
        /// </summary>
        [Output("serverSsl")]
        public Output<Outputs.LBHTTPVirtualServerServerSsl?> ServerSsl { get; private set; } = null!;

        /// <summary>
        /// When load balancer can not select a backend server to serve the request in default pool or pool in rules, the request
        /// would be served by sorry server pool
        /// </summary>
        [Output("sorryPoolId")]
        public Output<string?> SorryPoolId { get; private set; } = null!;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.LBHTTPVirtualServerTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a LBHTTPVirtualServer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LBHTTPVirtualServer(string name, LBHTTPVirtualServerArgs args, CustomResourceOptions? options = null)
            : base("nsxt:index/lBHTTPVirtualServer:LBHTTPVirtualServer", name, args ?? new LBHTTPVirtualServerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LBHTTPVirtualServer(string name, Input<string> id, LBHTTPVirtualServerState? state = null, CustomResourceOptions? options = null)
            : base("nsxt:index/lBHTTPVirtualServer:LBHTTPVirtualServer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LBHTTPVirtualServer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LBHTTPVirtualServer Get(string name, Input<string> id, LBHTTPVirtualServerState? state = null, CustomResourceOptions? options = null)
        {
            return new LBHTTPVirtualServer(name, id, state, options);
        }
    }

    public sealed class LBHTTPVirtualServerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether access log is enabled
        /// </summary>
        [Input("accessLogEnabled")]
        public Input<bool>? AccessLogEnabled { get; set; }

        /// <summary>
        /// The http application profile defines the application protocol characteristics
        /// </summary>
        [Input("applicationProfileId", required: true)]
        public Input<string> ApplicationProfileId { get; set; } = null!;

        /// <summary>
        /// Client SSL settings for Virtual Server
        /// </summary>
        [Input("clientSsl")]
        public Input<Inputs.LBHTTPVirtualServerClientSslArgs>? ClientSsl { get; set; }

        /// <summary>
        /// Default pool member port
        /// </summary>
        [Input("defaultPoolMemberPort")]
        public Input<string>? DefaultPoolMemberPort { get; set; }

        /// <summary>
        /// Description of this resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this resource. Defaults to ID if not set
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Whether the virtual server is enabled
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Virtual server IP address
        /// </summary>
        [Input("ipAddress", required: true)]
        public Input<string> IpAddress { get; set; } = null!;

        /// <summary>
        /// If not specified, connections are unlimited
        /// </summary>
        [Input("maxConcurrentConnections")]
        public Input<int>? MaxConcurrentConnections { get; set; }

        /// <summary>
        /// If not specified, connection rate is unlimited
        /// </summary>
        [Input("maxNewConnectionRate")]
        public Input<int>? MaxNewConnectionRate { get; set; }

        /// <summary>
        /// Persistence profile is used to allow related client connections to be sent to the same backend server
        /// </summary>
        [Input("persistenceProfileId")]
        public Input<string>? PersistenceProfileId { get; set; }

        /// <summary>
        /// Server pool for backend connections
        /// </summary>
        [Input("poolId")]
        public Input<string>? PoolId { get; set; }

        /// <summary>
        /// Virtual server port
        /// </summary>
        [Input("port", required: true)]
        public Input<string> Port { get; set; } = null!;

        [Input("ruleIds")]
        private InputList<string>? _ruleIds;

        /// <summary>
        /// Customization of load balancing behavior using match/action rules
        /// </summary>
        public InputList<string> RuleIds
        {
            get => _ruleIds ?? (_ruleIds = new InputList<string>());
            set => _ruleIds = value;
        }

        /// <summary>
        /// Server SSL settings for Virtual Server
        /// </summary>
        [Input("serverSsl")]
        public Input<Inputs.LBHTTPVirtualServerServerSslArgs>? ServerSsl { get; set; }

        /// <summary>
        /// When load balancer can not select a backend server to serve the request in default pool or pool in rules, the request
        /// would be served by sorry server pool
        /// </summary>
        [Input("sorryPoolId")]
        public Input<string>? SorryPoolId { get; set; }

        [Input("tags")]
        private InputList<Inputs.LBHTTPVirtualServerTagArgs>? _tags;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        public InputList<Inputs.LBHTTPVirtualServerTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.LBHTTPVirtualServerTagArgs>());
            set => _tags = value;
        }

        public LBHTTPVirtualServerArgs()
        {
        }
    }

    public sealed class LBHTTPVirtualServerState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether access log is enabled
        /// </summary>
        [Input("accessLogEnabled")]
        public Input<bool>? AccessLogEnabled { get; set; }

        /// <summary>
        /// The http application profile defines the application protocol characteristics
        /// </summary>
        [Input("applicationProfileId")]
        public Input<string>? ApplicationProfileId { get; set; }

        /// <summary>
        /// Client SSL settings for Virtual Server
        /// </summary>
        [Input("clientSsl")]
        public Input<Inputs.LBHTTPVirtualServerClientSslGetArgs>? ClientSsl { get; set; }

        /// <summary>
        /// Default pool member port
        /// </summary>
        [Input("defaultPoolMemberPort")]
        public Input<string>? DefaultPoolMemberPort { get; set; }

        /// <summary>
        /// Description of this resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this resource. Defaults to ID if not set
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Whether the virtual server is enabled
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Virtual server IP address
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// If not specified, connections are unlimited
        /// </summary>
        [Input("maxConcurrentConnections")]
        public Input<int>? MaxConcurrentConnections { get; set; }

        /// <summary>
        /// If not specified, connection rate is unlimited
        /// </summary>
        [Input("maxNewConnectionRate")]
        public Input<int>? MaxNewConnectionRate { get; set; }

        /// <summary>
        /// Persistence profile is used to allow related client connections to be sent to the same backend server
        /// </summary>
        [Input("persistenceProfileId")]
        public Input<string>? PersistenceProfileId { get; set; }

        /// <summary>
        /// Server pool for backend connections
        /// </summary>
        [Input("poolId")]
        public Input<string>? PoolId { get; set; }

        /// <summary>
        /// Virtual server port
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
        /// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
        /// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        /// </summary>
        [Input("revision")]
        public Input<int>? Revision { get; set; }

        [Input("ruleIds")]
        private InputList<string>? _ruleIds;

        /// <summary>
        /// Customization of load balancing behavior using match/action rules
        /// </summary>
        public InputList<string> RuleIds
        {
            get => _ruleIds ?? (_ruleIds = new InputList<string>());
            set => _ruleIds = value;
        }

        /// <summary>
        /// Server SSL settings for Virtual Server
        /// </summary>
        [Input("serverSsl")]
        public Input<Inputs.LBHTTPVirtualServerServerSslGetArgs>? ServerSsl { get; set; }

        /// <summary>
        /// When load balancer can not select a backend server to serve the request in default pool or pool in rules, the request
        /// would be served by sorry server pool
        /// </summary>
        [Input("sorryPoolId")]
        public Input<string>? SorryPoolId { get; set; }

        [Input("tags")]
        private InputList<Inputs.LBHTTPVirtualServerTagGetArgs>? _tags;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        public InputList<Inputs.LBHTTPVirtualServerTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.LBHTTPVirtualServerTagGetArgs>());
            set => _tags = value;
        }

        public LBHTTPVirtualServerState()
        {
        }
    }
}
