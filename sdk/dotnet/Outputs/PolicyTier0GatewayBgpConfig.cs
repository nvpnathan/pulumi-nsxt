// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nsxt.Outputs
{

    [OutputType]
    public sealed class PolicyTier0GatewayBgpConfig
    {
        public readonly bool? Ecmp;
        public readonly bool? Enabled;
        public readonly string? GracefulRestartMode;
        public readonly int? GracefulRestartStaleRouteTimer;
        public readonly int? GracefulRestartTimer;
        public readonly bool? InterSrIbgp;
        public readonly string? LocalAsNum;
        public readonly bool? MultipathRelax;
        public readonly string? Path;
        public readonly int? Revision;
        public readonly ImmutableArray<Outputs.PolicyTier0GatewayBgpConfigRouteAggregation> RouteAggregations;
        public readonly ImmutableArray<Outputs.PolicyTier0GatewayBgpConfigTag> Tags;

        [OutputConstructor]
        private PolicyTier0GatewayBgpConfig(
            bool? ecmp,

            bool? enabled,

            string? gracefulRestartMode,

            int? gracefulRestartStaleRouteTimer,

            int? gracefulRestartTimer,

            bool? interSrIbgp,

            string? localAsNum,

            bool? multipathRelax,

            string? path,

            int? revision,

            ImmutableArray<Outputs.PolicyTier0GatewayBgpConfigRouteAggregation> routeAggregations,

            ImmutableArray<Outputs.PolicyTier0GatewayBgpConfigTag> tags)
        {
            Ecmp = ecmp;
            Enabled = enabled;
            GracefulRestartMode = gracefulRestartMode;
            GracefulRestartStaleRouteTimer = gracefulRestartStaleRouteTimer;
            GracefulRestartTimer = gracefulRestartTimer;
            InterSrIbgp = interSrIbgp;
            LocalAsNum = localAsNum;
            MultipathRelax = multipathRelax;
            Path = path;
            Revision = revision;
            RouteAggregations = routeAggregations;
            Tags = tags;
        }
    }
}
