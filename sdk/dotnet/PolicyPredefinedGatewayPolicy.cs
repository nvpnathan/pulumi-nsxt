// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nsxt
{
    public partial class PolicyPredefinedGatewayPolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// List of default rules
        /// </summary>
        [Output("defaultRules")]
        public Output<ImmutableArray<Outputs.PolicyPredefinedGatewayPolicyDefaultRule>> DefaultRules { get; private set; } = null!;

        /// <summary>
        /// Description for this resource
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Path for this Gateway Policy
        /// </summary>
        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        /// <summary>
        /// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
        /// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
        /// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        /// </summary>
        [Output("revision")]
        public Output<int> Revision { get; private set; } = null!;

        /// <summary>
        /// List of rules in the section
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.PolicyPredefinedGatewayPolicyRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.PolicyPredefinedGatewayPolicyTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyPredefinedGatewayPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyPredefinedGatewayPolicy(string name, PolicyPredefinedGatewayPolicyArgs args, CustomResourceOptions? options = null)
            : base("nsxt:index/policyPredefinedGatewayPolicy:PolicyPredefinedGatewayPolicy", name, args ?? new PolicyPredefinedGatewayPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyPredefinedGatewayPolicy(string name, Input<string> id, PolicyPredefinedGatewayPolicyState? state = null, CustomResourceOptions? options = null)
            : base("nsxt:index/policyPredefinedGatewayPolicy:PolicyPredefinedGatewayPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyPredefinedGatewayPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyPredefinedGatewayPolicy Get(string name, Input<string> id, PolicyPredefinedGatewayPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyPredefinedGatewayPolicy(name, id, state, options);
        }
    }

    public sealed class PolicyPredefinedGatewayPolicyArgs : Pulumi.ResourceArgs
    {
        [Input("defaultRules")]
        private InputList<Inputs.PolicyPredefinedGatewayPolicyDefaultRuleArgs>? _defaultRules;

        /// <summary>
        /// List of default rules
        /// </summary>
        public InputList<Inputs.PolicyPredefinedGatewayPolicyDefaultRuleArgs> DefaultRules
        {
            get => _defaultRules ?? (_defaultRules = new InputList<Inputs.PolicyPredefinedGatewayPolicyDefaultRuleArgs>());
            set => _defaultRules = value;
        }

        /// <summary>
        /// Description for this resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Path for this Gateway Policy
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        [Input("rules")]
        private InputList<Inputs.PolicyPredefinedGatewayPolicyRuleArgs>? _rules;

        /// <summary>
        /// List of rules in the section
        /// </summary>
        public InputList<Inputs.PolicyPredefinedGatewayPolicyRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.PolicyPredefinedGatewayPolicyRuleArgs>());
            set => _rules = value;
        }

        [Input("tags")]
        private InputList<Inputs.PolicyPredefinedGatewayPolicyTagArgs>? _tags;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        public InputList<Inputs.PolicyPredefinedGatewayPolicyTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.PolicyPredefinedGatewayPolicyTagArgs>());
            set => _tags = value;
        }

        public PolicyPredefinedGatewayPolicyArgs()
        {
        }
    }

    public sealed class PolicyPredefinedGatewayPolicyState : Pulumi.ResourceArgs
    {
        [Input("defaultRules")]
        private InputList<Inputs.PolicyPredefinedGatewayPolicyDefaultRuleGetArgs>? _defaultRules;

        /// <summary>
        /// List of default rules
        /// </summary>
        public InputList<Inputs.PolicyPredefinedGatewayPolicyDefaultRuleGetArgs> DefaultRules
        {
            get => _defaultRules ?? (_defaultRules = new InputList<Inputs.PolicyPredefinedGatewayPolicyDefaultRuleGetArgs>());
            set => _defaultRules = value;
        }

        /// <summary>
        /// Description for this resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Path for this Gateway Policy
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
        /// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
        /// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        /// </summary>
        [Input("revision")]
        public Input<int>? Revision { get; set; }

        [Input("rules")]
        private InputList<Inputs.PolicyPredefinedGatewayPolicyRuleGetArgs>? _rules;

        /// <summary>
        /// List of rules in the section
        /// </summary>
        public InputList<Inputs.PolicyPredefinedGatewayPolicyRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.PolicyPredefinedGatewayPolicyRuleGetArgs>());
            set => _rules = value;
        }

        [Input("tags")]
        private InputList<Inputs.PolicyPredefinedGatewayPolicyTagGetArgs>? _tags;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        public InputList<Inputs.PolicyPredefinedGatewayPolicyTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.PolicyPredefinedGatewayPolicyTagGetArgs>());
            set => _tags = value;
        }

        public PolicyPredefinedGatewayPolicyState()
        {
        }
    }
}
