// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nsxt
{
    public partial class VlanLogicalSwitch : Pulumi.CustomResource
    {
        /// <summary>
        /// Address bindings for the Logical switch
        /// </summary>
        [Output("addressBindings")]
        public Output<ImmutableArray<Outputs.VlanLogicalSwitchAddressBinding>> AddressBindings { get; private set; } = null!;

        /// <summary>
        /// Represents Desired state of the object
        /// </summary>
        [Output("adminState")]
        public Output<string?> AdminState { get; private set; } = null!;

        /// <summary>
        /// Description of this resource
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of this resource. Defaults to ID if not set
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// IP pool id that associated with a LogicalSwitch
        /// </summary>
        [Output("ipPoolId")]
        public Output<string?> IpPoolId { get; private set; } = null!;

        /// <summary>
        /// Mac pool id that associated with a LogicalSwitch
        /// </summary>
        [Output("macPoolId")]
        public Output<string?> MacPoolId { get; private set; } = null!;

        /// <summary>
        /// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
        /// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
        /// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        /// </summary>
        [Output("revision")]
        public Output<int> Revision { get; private set; } = null!;

        /// <summary>
        /// List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
        /// be used if not specified
        /// </summary>
        [Output("switchingProfileIds")]
        public Output<ImmutableArray<Outputs.VlanLogicalSwitchSwitchingProfileId>> SwitchingProfileIds { get; private set; } = null!;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.VlanLogicalSwitchTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Id of the TransportZone to which this LogicalSwitch is associated
        /// </summary>
        [Output("transportZoneId")]
        public Output<string> TransportZoneId { get; private set; } = null!;

        /// <summary>
        /// VLAN Id
        /// </summary>
        [Output("vlan")]
        public Output<int> Vlan { get; private set; } = null!;


        /// <summary>
        /// Create a VlanLogicalSwitch resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VlanLogicalSwitch(string name, VlanLogicalSwitchArgs args, CustomResourceOptions? options = null)
            : base("nsxt:index/vlanLogicalSwitch:VlanLogicalSwitch", name, args ?? new VlanLogicalSwitchArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VlanLogicalSwitch(string name, Input<string> id, VlanLogicalSwitchState? state = null, CustomResourceOptions? options = null)
            : base("nsxt:index/vlanLogicalSwitch:VlanLogicalSwitch", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VlanLogicalSwitch resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VlanLogicalSwitch Get(string name, Input<string> id, VlanLogicalSwitchState? state = null, CustomResourceOptions? options = null)
        {
            return new VlanLogicalSwitch(name, id, state, options);
        }
    }

    public sealed class VlanLogicalSwitchArgs : Pulumi.ResourceArgs
    {
        [Input("addressBindings")]
        private InputList<Inputs.VlanLogicalSwitchAddressBindingArgs>? _addressBindings;

        /// <summary>
        /// Address bindings for the Logical switch
        /// </summary>
        public InputList<Inputs.VlanLogicalSwitchAddressBindingArgs> AddressBindings
        {
            get => _addressBindings ?? (_addressBindings = new InputList<Inputs.VlanLogicalSwitchAddressBindingArgs>());
            set => _addressBindings = value;
        }

        /// <summary>
        /// Represents Desired state of the object
        /// </summary>
        [Input("adminState")]
        public Input<string>? AdminState { get; set; }

        /// <summary>
        /// Description of this resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this resource. Defaults to ID if not set
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// IP pool id that associated with a LogicalSwitch
        /// </summary>
        [Input("ipPoolId")]
        public Input<string>? IpPoolId { get; set; }

        /// <summary>
        /// Mac pool id that associated with a LogicalSwitch
        /// </summary>
        [Input("macPoolId")]
        public Input<string>? MacPoolId { get; set; }

        [Input("switchingProfileIds")]
        private InputList<Inputs.VlanLogicalSwitchSwitchingProfileIdArgs>? _switchingProfileIds;

        /// <summary>
        /// List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
        /// be used if not specified
        /// </summary>
        public InputList<Inputs.VlanLogicalSwitchSwitchingProfileIdArgs> SwitchingProfileIds
        {
            get => _switchingProfileIds ?? (_switchingProfileIds = new InputList<Inputs.VlanLogicalSwitchSwitchingProfileIdArgs>());
            set => _switchingProfileIds = value;
        }

        [Input("tags")]
        private InputList<Inputs.VlanLogicalSwitchTagArgs>? _tags;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        public InputList<Inputs.VlanLogicalSwitchTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.VlanLogicalSwitchTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Id of the TransportZone to which this LogicalSwitch is associated
        /// </summary>
        [Input("transportZoneId", required: true)]
        public Input<string> TransportZoneId { get; set; } = null!;

        /// <summary>
        /// VLAN Id
        /// </summary>
        [Input("vlan", required: true)]
        public Input<int> Vlan { get; set; } = null!;

        public VlanLogicalSwitchArgs()
        {
        }
    }

    public sealed class VlanLogicalSwitchState : Pulumi.ResourceArgs
    {
        [Input("addressBindings")]
        private InputList<Inputs.VlanLogicalSwitchAddressBindingGetArgs>? _addressBindings;

        /// <summary>
        /// Address bindings for the Logical switch
        /// </summary>
        public InputList<Inputs.VlanLogicalSwitchAddressBindingGetArgs> AddressBindings
        {
            get => _addressBindings ?? (_addressBindings = new InputList<Inputs.VlanLogicalSwitchAddressBindingGetArgs>());
            set => _addressBindings = value;
        }

        /// <summary>
        /// Represents Desired state of the object
        /// </summary>
        [Input("adminState")]
        public Input<string>? AdminState { get; set; }

        /// <summary>
        /// Description of this resource
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this resource. Defaults to ID if not set
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// IP pool id that associated with a LogicalSwitch
        /// </summary>
        [Input("ipPoolId")]
        public Input<string>? IpPoolId { get; set; }

        /// <summary>
        /// Mac pool id that associated with a LogicalSwitch
        /// </summary>
        [Input("macPoolId")]
        public Input<string>? MacPoolId { get; set; }

        /// <summary>
        /// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
        /// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
        /// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        /// </summary>
        [Input("revision")]
        public Input<int>? Revision { get; set; }

        [Input("switchingProfileIds")]
        private InputList<Inputs.VlanLogicalSwitchSwitchingProfileIdGetArgs>? _switchingProfileIds;

        /// <summary>
        /// List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
        /// be used if not specified
        /// </summary>
        public InputList<Inputs.VlanLogicalSwitchSwitchingProfileIdGetArgs> SwitchingProfileIds
        {
            get => _switchingProfileIds ?? (_switchingProfileIds = new InputList<Inputs.VlanLogicalSwitchSwitchingProfileIdGetArgs>());
            set => _switchingProfileIds = value;
        }

        [Input("tags")]
        private InputList<Inputs.VlanLogicalSwitchTagGetArgs>? _tags;

        /// <summary>
        /// Set of opaque identifiers meaningful to the user
        /// </summary>
        public InputList<Inputs.VlanLogicalSwitchTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.VlanLogicalSwitchTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Id of the TransportZone to which this LogicalSwitch is associated
        /// </summary>
        [Input("transportZoneId")]
        public Input<string>? TransportZoneId { get; set; }

        /// <summary>
        /// VLAN Id
        /// </summary>
        [Input("vlan")]
        public Input<int>? Vlan { get; set; }

        public VlanLogicalSwitchState()
        {
        }
    }
}
