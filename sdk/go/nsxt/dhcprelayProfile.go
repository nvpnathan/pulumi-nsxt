// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DHCPRelayProfile struct {
	pulumi.CustomResourceState

	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Set of dhcp relay server addresses
	ServerAddresses pulumi.StringArrayOutput `pulumi:"serverAddresses"`
	// Set of opaque identifiers meaningful to the user
	Tags DHCPRelayProfileTagArrayOutput `pulumi:"tags"`
}

// NewDHCPRelayProfile registers a new resource with the given unique name, arguments, and options.
func NewDHCPRelayProfile(ctx *pulumi.Context,
	name string, args *DHCPRelayProfileArgs, opts ...pulumi.ResourceOption) (*DHCPRelayProfile, error) {
	if args == nil || args.ServerAddresses == nil {
		return nil, errors.New("missing required argument 'ServerAddresses'")
	}
	if args == nil {
		args = &DHCPRelayProfileArgs{}
	}
	var resource DHCPRelayProfile
	err := ctx.RegisterResource("nsxt:index/dHCPRelayProfile:DHCPRelayProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDHCPRelayProfile gets an existing DHCPRelayProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDHCPRelayProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DHCPRelayProfileState, opts ...pulumi.ResourceOption) (*DHCPRelayProfile, error) {
	var resource DHCPRelayProfile
	err := ctx.ReadResource("nsxt:index/dHCPRelayProfile:DHCPRelayProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DHCPRelayProfile resources.
type dhcprelayProfileState struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Set of dhcp relay server addresses
	ServerAddresses []string `pulumi:"serverAddresses"`
	// Set of opaque identifiers meaningful to the user
	Tags []DHCPRelayProfileTag `pulumi:"tags"`
}

type DHCPRelayProfileState struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Set of dhcp relay server addresses
	ServerAddresses pulumi.StringArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags DHCPRelayProfileTagArrayInput
}

func (DHCPRelayProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*dhcprelayProfileState)(nil)).Elem()
}

type dhcprelayProfileArgs struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Set of dhcp relay server addresses
	ServerAddresses []string `pulumi:"serverAddresses"`
	// Set of opaque identifiers meaningful to the user
	Tags []DHCPRelayProfileTag `pulumi:"tags"`
}

// The set of arguments for constructing a DHCPRelayProfile resource.
type DHCPRelayProfileArgs struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Set of dhcp relay server addresses
	ServerAddresses pulumi.StringArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags DHCPRelayProfileTagArrayInput
}

func (DHCPRelayProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dhcprelayProfileArgs)(nil)).Elem()
}
