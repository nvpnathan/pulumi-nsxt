// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DHCPRelayService struct {
	pulumi.CustomResourceState

	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// DHCP relay profile referenced by the dhcp relay service
	DhcpRelayProfileId pulumi.StringOutput `pulumi:"dhcpRelayProfileId"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags DHCPRelayServiceTagArrayOutput `pulumi:"tags"`
}

// NewDHCPRelayService registers a new resource with the given unique name, arguments, and options.
func NewDHCPRelayService(ctx *pulumi.Context,
	name string, args *DHCPRelayServiceArgs, opts ...pulumi.ResourceOption) (*DHCPRelayService, error) {
	if args == nil || args.DhcpRelayProfileId == nil {
		return nil, errors.New("missing required argument 'DhcpRelayProfileId'")
	}
	if args == nil {
		args = &DHCPRelayServiceArgs{}
	}
	var resource DHCPRelayService
	err := ctx.RegisterResource("nsxt:index/dHCPRelayService:DHCPRelayService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDHCPRelayService gets an existing DHCPRelayService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDHCPRelayService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DHCPRelayServiceState, opts ...pulumi.ResourceOption) (*DHCPRelayService, error) {
	var resource DHCPRelayService
	err := ctx.ReadResource("nsxt:index/dHCPRelayService:DHCPRelayService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DHCPRelayService resources.
type dhcprelayServiceState struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// DHCP relay profile referenced by the dhcp relay service
	DhcpRelayProfileId *string `pulumi:"dhcpRelayProfileId"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags []DHCPRelayServiceTag `pulumi:"tags"`
}

type DHCPRelayServiceState struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// DHCP relay profile referenced by the dhcp relay service
	DhcpRelayProfileId pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags DHCPRelayServiceTagArrayInput
}

func (DHCPRelayServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*dhcprelayServiceState)(nil)).Elem()
}

type dhcprelayServiceArgs struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// DHCP relay profile referenced by the dhcp relay service
	DhcpRelayProfileId string `pulumi:"dhcpRelayProfileId"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Set of opaque identifiers meaningful to the user
	Tags []DHCPRelayServiceTag `pulumi:"tags"`
}

// The set of arguments for constructing a DHCPRelayService resource.
type DHCPRelayServiceArgs struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// DHCP relay profile referenced by the dhcp relay service
	DhcpRelayProfileId pulumi.StringInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags DHCPRelayServiceTagArrayInput
}

func (DHCPRelayServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dhcprelayServiceArgs)(nil)).Elem()
}
