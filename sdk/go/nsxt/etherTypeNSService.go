// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EtherTypeNSService struct {
	pulumi.CustomResourceState

	// A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted
	DefaultService pulumi.BoolOutput `pulumi:"defaultService"`
	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Type of the encapsulated protocol
	EtherType pulumi.IntOutput `pulumi:"etherType"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags EtherTypeNSServiceTagArrayOutput `pulumi:"tags"`
}

// NewEtherTypeNSService registers a new resource with the given unique name, arguments, and options.
func NewEtherTypeNSService(ctx *pulumi.Context,
	name string, args *EtherTypeNSServiceArgs, opts ...pulumi.ResourceOption) (*EtherTypeNSService, error) {
	if args == nil || args.EtherType == nil {
		return nil, errors.New("missing required argument 'EtherType'")
	}
	if args == nil {
		args = &EtherTypeNSServiceArgs{}
	}
	var resource EtherTypeNSService
	err := ctx.RegisterResource("nsxt:index/etherTypeNSService:EtherTypeNSService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEtherTypeNSService gets an existing EtherTypeNSService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEtherTypeNSService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EtherTypeNSServiceState, opts ...pulumi.ResourceOption) (*EtherTypeNSService, error) {
	var resource EtherTypeNSService
	err := ctx.ReadResource("nsxt:index/etherTypeNSService:EtherTypeNSService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EtherTypeNSService resources.
type etherTypeNSServiceState struct {
	// A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted
	DefaultService *bool `pulumi:"defaultService"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Type of the encapsulated protocol
	EtherType *int `pulumi:"etherType"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags []EtherTypeNSServiceTag `pulumi:"tags"`
}

type EtherTypeNSServiceState struct {
	// A boolean flag which reflects whether this is a default NSServices which can't be modified/deleted
	DefaultService pulumi.BoolPtrInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Type of the encapsulated protocol
	EtherType pulumi.IntPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags EtherTypeNSServiceTagArrayInput
}

func (EtherTypeNSServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*etherTypeNSServiceState)(nil)).Elem()
}

type etherTypeNSServiceArgs struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Type of the encapsulated protocol
	EtherType int `pulumi:"etherType"`
	// Set of opaque identifiers meaningful to the user
	Tags []EtherTypeNSServiceTag `pulumi:"tags"`
}

// The set of arguments for constructing a EtherTypeNSService resource.
type EtherTypeNSServiceArgs struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Type of the encapsulated protocol
	EtherType pulumi.IntInput
	// Set of opaque identifiers meaningful to the user
	Tags EtherTypeNSServiceTagArrayInput
}

func (EtherTypeNSServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*etherTypeNSServiceArgs)(nil)).Elem()
}
