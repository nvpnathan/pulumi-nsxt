// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type IPBlockSubnet struct {
	pulumi.CustomResourceState

	// A collection of IPv4 Pool Ranges
	AllocationRanges IPBlockSubnetAllocationRangeArrayOutput `pulumi:"allocationRanges"`
	// Block id for which the subnet is created
	BlockId pulumi.StringOutput `pulumi:"blockId"`
	// Represents network address and the prefix length which will be associated with a layer-2 broadcast domain
	Cidr pulumi.StringOutput `pulumi:"cidr"`
	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Represents the size or number of ip addresses in the subnet
	Size pulumi.IntOutput `pulumi:"size"`
	// Set of opaque identifiers meaningful to the user
	Tags IPBlockSubnetTagArrayOutput `pulumi:"tags"`
}

// NewIPBlockSubnet registers a new resource with the given unique name, arguments, and options.
func NewIPBlockSubnet(ctx *pulumi.Context,
	name string, args *IPBlockSubnetArgs, opts ...pulumi.ResourceOption) (*IPBlockSubnet, error) {
	if args == nil || args.BlockId == nil {
		return nil, errors.New("missing required argument 'BlockId'")
	}
	if args == nil || args.Size == nil {
		return nil, errors.New("missing required argument 'Size'")
	}
	if args == nil {
		args = &IPBlockSubnetArgs{}
	}
	var resource IPBlockSubnet
	err := ctx.RegisterResource("nsxt:index/iPBlockSubnet:IPBlockSubnet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIPBlockSubnet gets an existing IPBlockSubnet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIPBlockSubnet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IPBlockSubnetState, opts ...pulumi.ResourceOption) (*IPBlockSubnet, error) {
	var resource IPBlockSubnet
	err := ctx.ReadResource("nsxt:index/iPBlockSubnet:IPBlockSubnet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IPBlockSubnet resources.
type ipblockSubnetState struct {
	// A collection of IPv4 Pool Ranges
	AllocationRanges []IPBlockSubnetAllocationRange `pulumi:"allocationRanges"`
	// Block id for which the subnet is created
	BlockId *string `pulumi:"blockId"`
	// Represents network address and the prefix length which will be associated with a layer-2 broadcast domain
	Cidr *string `pulumi:"cidr"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Represents the size or number of ip addresses in the subnet
	Size *int `pulumi:"size"`
	// Set of opaque identifiers meaningful to the user
	Tags []IPBlockSubnetTag `pulumi:"tags"`
}

type IPBlockSubnetState struct {
	// A collection of IPv4 Pool Ranges
	AllocationRanges IPBlockSubnetAllocationRangeArrayInput
	// Block id for which the subnet is created
	BlockId pulumi.StringPtrInput
	// Represents network address and the prefix length which will be associated with a layer-2 broadcast domain
	Cidr pulumi.StringPtrInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Represents the size or number of ip addresses in the subnet
	Size pulumi.IntPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags IPBlockSubnetTagArrayInput
}

func (IPBlockSubnetState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipblockSubnetState)(nil)).Elem()
}

type ipblockSubnetArgs struct {
	// Block id for which the subnet is created
	BlockId string `pulumi:"blockId"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Represents the size or number of ip addresses in the subnet
	Size int `pulumi:"size"`
	// Set of opaque identifiers meaningful to the user
	Tags []IPBlockSubnetTag `pulumi:"tags"`
}

// The set of arguments for constructing a IPBlockSubnet resource.
type IPBlockSubnetArgs struct {
	// Block id for which the subnet is created
	BlockId pulumi.StringInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Represents the size or number of ip addresses in the subnet
	Size pulumi.IntInput
	// Set of opaque identifiers meaningful to the user
	Tags IPBlockSubnetTagArrayInput
}

func (IPBlockSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipblockSubnetArgs)(nil)).Elem()
}
