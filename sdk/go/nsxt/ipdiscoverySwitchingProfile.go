// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type IPDiscoverySwitchingProfile struct {
	pulumi.CustomResourceState

	// Limit for the amount of ARP bindings
	ArpBindingsLimit pulumi.IntPtrOutput `pulumi:"arpBindingsLimit"`
	// Indicates whether ARP snooping is enabled
	ArpSnoopingEnabled pulumi.BoolPtrOutput `pulumi:"arpSnoopingEnabled"`
	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Indicates whether DHCP snooping is enabled
	DhcpSnoopingEnabled pulumi.BoolPtrOutput `pulumi:"dhcpSnoopingEnabled"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags IPDiscoverySwitchingProfileTagArrayOutput `pulumi:"tags"`
	// Indicating whether VM tools will be enabled. This option is only supported on ESX where vm-tools is installed
	VmToolsEnabled pulumi.BoolPtrOutput `pulumi:"vmToolsEnabled"`
}

// NewIPDiscoverySwitchingProfile registers a new resource with the given unique name, arguments, and options.
func NewIPDiscoverySwitchingProfile(ctx *pulumi.Context,
	name string, args *IPDiscoverySwitchingProfileArgs, opts ...pulumi.ResourceOption) (*IPDiscoverySwitchingProfile, error) {
	if args == nil {
		args = &IPDiscoverySwitchingProfileArgs{}
	}
	var resource IPDiscoverySwitchingProfile
	err := ctx.RegisterResource("nsxt:index/iPDiscoverySwitchingProfile:IPDiscoverySwitchingProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIPDiscoverySwitchingProfile gets an existing IPDiscoverySwitchingProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIPDiscoverySwitchingProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IPDiscoverySwitchingProfileState, opts ...pulumi.ResourceOption) (*IPDiscoverySwitchingProfile, error) {
	var resource IPDiscoverySwitchingProfile
	err := ctx.ReadResource("nsxt:index/iPDiscoverySwitchingProfile:IPDiscoverySwitchingProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IPDiscoverySwitchingProfile resources.
type ipdiscoverySwitchingProfileState struct {
	// Limit for the amount of ARP bindings
	ArpBindingsLimit *int `pulumi:"arpBindingsLimit"`
	// Indicates whether ARP snooping is enabled
	ArpSnoopingEnabled *bool `pulumi:"arpSnoopingEnabled"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// Indicates whether DHCP snooping is enabled
	DhcpSnoopingEnabled *bool `pulumi:"dhcpSnoopingEnabled"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags []IPDiscoverySwitchingProfileTag `pulumi:"tags"`
	// Indicating whether VM tools will be enabled. This option is only supported on ESX where vm-tools is installed
	VmToolsEnabled *bool `pulumi:"vmToolsEnabled"`
}

type IPDiscoverySwitchingProfileState struct {
	// Limit for the amount of ARP bindings
	ArpBindingsLimit pulumi.IntPtrInput
	// Indicates whether ARP snooping is enabled
	ArpSnoopingEnabled pulumi.BoolPtrInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// Indicates whether DHCP snooping is enabled
	DhcpSnoopingEnabled pulumi.BoolPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags IPDiscoverySwitchingProfileTagArrayInput
	// Indicating whether VM tools will be enabled. This option is only supported on ESX where vm-tools is installed
	VmToolsEnabled pulumi.BoolPtrInput
}

func (IPDiscoverySwitchingProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipdiscoverySwitchingProfileState)(nil)).Elem()
}

type ipdiscoverySwitchingProfileArgs struct {
	// Limit for the amount of ARP bindings
	ArpBindingsLimit *int `pulumi:"arpBindingsLimit"`
	// Indicates whether ARP snooping is enabled
	ArpSnoopingEnabled *bool `pulumi:"arpSnoopingEnabled"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// Indicates whether DHCP snooping is enabled
	DhcpSnoopingEnabled *bool `pulumi:"dhcpSnoopingEnabled"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Set of opaque identifiers meaningful to the user
	Tags []IPDiscoverySwitchingProfileTag `pulumi:"tags"`
	// Indicating whether VM tools will be enabled. This option is only supported on ESX where vm-tools is installed
	VmToolsEnabled *bool `pulumi:"vmToolsEnabled"`
}

// The set of arguments for constructing a IPDiscoverySwitchingProfile resource.
type IPDiscoverySwitchingProfileArgs struct {
	// Limit for the amount of ARP bindings
	ArpBindingsLimit pulumi.IntPtrInput
	// Indicates whether ARP snooping is enabled
	ArpSnoopingEnabled pulumi.BoolPtrInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// Indicates whether DHCP snooping is enabled
	DhcpSnoopingEnabled pulumi.BoolPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags IPDiscoverySwitchingProfileTagArrayInput
	// Indicating whether VM tools will be enabled. This option is only supported on ESX where vm-tools is installed
	VmToolsEnabled pulumi.BoolPtrInput
}

func (IPDiscoverySwitchingProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipdiscoverySwitchingProfileArgs)(nil)).Elem()
}
