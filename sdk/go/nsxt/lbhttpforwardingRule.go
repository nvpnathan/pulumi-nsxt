// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LBHTTPForwardingRule struct {
	pulumi.CustomResourceState

	// Rule condition based on http request body
	BodyConditions LBHTTPForwardingRuleBodyConditionArrayOutput `pulumi:"bodyConditions"`
	// Rule condition based on http header
	CookieConditions LBHTTPForwardingRuleCookieConditionArrayOutput `pulumi:"cookieConditions"`
	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Rule condition based on http header
	HeaderConditions LBHTTPForwardingRuleHeaderConditionArrayOutput `pulumi:"headerConditions"`
	// Redirect the request with a defined status and url
	HttpRedirectAction LBHTTPForwardingRuleHttpRedirectActionPtrOutput `pulumi:"httpRedirectAction"`
	// Reject the request with a defined status and message
	HttpRejectAction LBHTTPForwardingRuleHttpRejectActionPtrOutput `pulumi:"httpRejectAction"`
	// Rule condition based on IP settings of the message
	IpConditions LBHTTPForwardingRuleIpConditionArrayOutput `pulumi:"ipConditions"`
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy pulumi.StringPtrOutput `pulumi:"matchStrategy"`
	// Rule condition based on http request method
	MethodConditions LBHTTPForwardingRuleMethodConditionArrayOutput `pulumi:"methodConditions"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Forward the request to the a defined pool
	SelectPoolAction LBHTTPForwardingRuleSelectPoolActionPtrOutput `pulumi:"selectPoolAction"`
	// Set of opaque identifiers meaningful to the user
	Tags LBHTTPForwardingRuleTagArrayOutput `pulumi:"tags"`
	// Rule condition based on TCP settings of the message
	TcpConditions LBHTTPForwardingRuleTcpConditionArrayOutput `pulumi:"tcpConditions"`
	// Rule condition based on http request URI
	UriConditions LBHTTPForwardingRuleUriConditionArrayOutput `pulumi:"uriConditions"`
	// Rule condition based on http request version
	VersionCondition LBHTTPForwardingRuleVersionConditionPtrOutput `pulumi:"versionCondition"`
}

// NewLBHTTPForwardingRule registers a new resource with the given unique name, arguments, and options.
func NewLBHTTPForwardingRule(ctx *pulumi.Context,
	name string, args *LBHTTPForwardingRuleArgs, opts ...pulumi.ResourceOption) (*LBHTTPForwardingRule, error) {
	if args == nil {
		args = &LBHTTPForwardingRuleArgs{}
	}
	var resource LBHTTPForwardingRule
	err := ctx.RegisterResource("nsxt:index/lBHTTPForwardingRule:LBHTTPForwardingRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLBHTTPForwardingRule gets an existing LBHTTPForwardingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLBHTTPForwardingRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LBHTTPForwardingRuleState, opts ...pulumi.ResourceOption) (*LBHTTPForwardingRule, error) {
	var resource LBHTTPForwardingRule
	err := ctx.ReadResource("nsxt:index/lBHTTPForwardingRule:LBHTTPForwardingRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LBHTTPForwardingRule resources.
type lbhttpforwardingRuleState struct {
	// Rule condition based on http request body
	BodyConditions []LBHTTPForwardingRuleBodyCondition `pulumi:"bodyConditions"`
	// Rule condition based on http header
	CookieConditions []LBHTTPForwardingRuleCookieCondition `pulumi:"cookieConditions"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Rule condition based on http header
	HeaderConditions []LBHTTPForwardingRuleHeaderCondition `pulumi:"headerConditions"`
	// Redirect the request with a defined status and url
	HttpRedirectAction *LBHTTPForwardingRuleHttpRedirectAction `pulumi:"httpRedirectAction"`
	// Reject the request with a defined status and message
	HttpRejectAction *LBHTTPForwardingRuleHttpRejectAction `pulumi:"httpRejectAction"`
	// Rule condition based on IP settings of the message
	IpConditions []LBHTTPForwardingRuleIpCondition `pulumi:"ipConditions"`
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy *string `pulumi:"matchStrategy"`
	// Rule condition based on http request method
	MethodConditions []LBHTTPForwardingRuleMethodCondition `pulumi:"methodConditions"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Forward the request to the a defined pool
	SelectPoolAction *LBHTTPForwardingRuleSelectPoolAction `pulumi:"selectPoolAction"`
	// Set of opaque identifiers meaningful to the user
	Tags []LBHTTPForwardingRuleTag `pulumi:"tags"`
	// Rule condition based on TCP settings of the message
	TcpConditions []LBHTTPForwardingRuleTcpCondition `pulumi:"tcpConditions"`
	// Rule condition based on http request URI
	UriConditions []LBHTTPForwardingRuleUriCondition `pulumi:"uriConditions"`
	// Rule condition based on http request version
	VersionCondition *LBHTTPForwardingRuleVersionCondition `pulumi:"versionCondition"`
}

type LBHTTPForwardingRuleState struct {
	// Rule condition based on http request body
	BodyConditions LBHTTPForwardingRuleBodyConditionArrayInput
	// Rule condition based on http header
	CookieConditions LBHTTPForwardingRuleCookieConditionArrayInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Rule condition based on http header
	HeaderConditions LBHTTPForwardingRuleHeaderConditionArrayInput
	// Redirect the request with a defined status and url
	HttpRedirectAction LBHTTPForwardingRuleHttpRedirectActionPtrInput
	// Reject the request with a defined status and message
	HttpRejectAction LBHTTPForwardingRuleHttpRejectActionPtrInput
	// Rule condition based on IP settings of the message
	IpConditions LBHTTPForwardingRuleIpConditionArrayInput
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy pulumi.StringPtrInput
	// Rule condition based on http request method
	MethodConditions LBHTTPForwardingRuleMethodConditionArrayInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Forward the request to the a defined pool
	SelectPoolAction LBHTTPForwardingRuleSelectPoolActionPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags LBHTTPForwardingRuleTagArrayInput
	// Rule condition based on TCP settings of the message
	TcpConditions LBHTTPForwardingRuleTcpConditionArrayInput
	// Rule condition based on http request URI
	UriConditions LBHTTPForwardingRuleUriConditionArrayInput
	// Rule condition based on http request version
	VersionCondition LBHTTPForwardingRuleVersionConditionPtrInput
}

func (LBHTTPForwardingRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbhttpforwardingRuleState)(nil)).Elem()
}

type lbhttpforwardingRuleArgs struct {
	// Rule condition based on http request body
	BodyConditions []LBHTTPForwardingRuleBodyCondition `pulumi:"bodyConditions"`
	// Rule condition based on http header
	CookieConditions []LBHTTPForwardingRuleCookieCondition `pulumi:"cookieConditions"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Rule condition based on http header
	HeaderConditions []LBHTTPForwardingRuleHeaderCondition `pulumi:"headerConditions"`
	// Redirect the request with a defined status and url
	HttpRedirectAction *LBHTTPForwardingRuleHttpRedirectAction `pulumi:"httpRedirectAction"`
	// Reject the request with a defined status and message
	HttpRejectAction *LBHTTPForwardingRuleHttpRejectAction `pulumi:"httpRejectAction"`
	// Rule condition based on IP settings of the message
	IpConditions []LBHTTPForwardingRuleIpCondition `pulumi:"ipConditions"`
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy *string `pulumi:"matchStrategy"`
	// Rule condition based on http request method
	MethodConditions []LBHTTPForwardingRuleMethodCondition `pulumi:"methodConditions"`
	// Forward the request to the a defined pool
	SelectPoolAction *LBHTTPForwardingRuleSelectPoolAction `pulumi:"selectPoolAction"`
	// Set of opaque identifiers meaningful to the user
	Tags []LBHTTPForwardingRuleTag `pulumi:"tags"`
	// Rule condition based on TCP settings of the message
	TcpConditions []LBHTTPForwardingRuleTcpCondition `pulumi:"tcpConditions"`
	// Rule condition based on http request URI
	UriConditions []LBHTTPForwardingRuleUriCondition `pulumi:"uriConditions"`
	// Rule condition based on http request version
	VersionCondition *LBHTTPForwardingRuleVersionCondition `pulumi:"versionCondition"`
}

// The set of arguments for constructing a LBHTTPForwardingRule resource.
type LBHTTPForwardingRuleArgs struct {
	// Rule condition based on http request body
	BodyConditions LBHTTPForwardingRuleBodyConditionArrayInput
	// Rule condition based on http header
	CookieConditions LBHTTPForwardingRuleCookieConditionArrayInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Rule condition based on http header
	HeaderConditions LBHTTPForwardingRuleHeaderConditionArrayInput
	// Redirect the request with a defined status and url
	HttpRedirectAction LBHTTPForwardingRuleHttpRedirectActionPtrInput
	// Reject the request with a defined status and message
	HttpRejectAction LBHTTPForwardingRuleHttpRejectActionPtrInput
	// Rule condition based on IP settings of the message
	IpConditions LBHTTPForwardingRuleIpConditionArrayInput
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy pulumi.StringPtrInput
	// Rule condition based on http request method
	MethodConditions LBHTTPForwardingRuleMethodConditionArrayInput
	// Forward the request to the a defined pool
	SelectPoolAction LBHTTPForwardingRuleSelectPoolActionPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags LBHTTPForwardingRuleTagArrayInput
	// Rule condition based on TCP settings of the message
	TcpConditions LBHTTPForwardingRuleTcpConditionArrayInput
	// Rule condition based on http request URI
	UriConditions LBHTTPForwardingRuleUriConditionArrayInput
	// Rule condition based on http request version
	VersionCondition LBHTTPForwardingRuleVersionConditionPtrInput
}

func (LBHTTPForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbhttpforwardingRuleArgs)(nil)).Elem()
}
