// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LBHTTPRequestRewriteRule struct {
	pulumi.CustomResourceState

	// Rule condition based on http request body
	BodyConditions LBHTTPRequestRewriteRuleBodyConditionArrayOutput `pulumi:"bodyConditions"`
	// Rule condition based on http header
	CookieConditions LBHTTPRequestRewriteRuleCookieConditionArrayOutput `pulumi:"cookieConditions"`
	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Rule condition based on http header
	HeaderConditions LBHTTPRequestRewriteRuleHeaderConditionArrayOutput `pulumi:"headerConditions"`
	// Header to replace original header in outgoing message
	HeaderRewriteAction LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput `pulumi:"headerRewriteAction"`
	// Rule condition based on IP settings of the message
	IpConditions LBHTTPRequestRewriteRuleIpConditionArrayOutput `pulumi:"ipConditions"`
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy pulumi.StringPtrOutput `pulumi:"matchStrategy"`
	// Rule condition based on http request method
	MethodConditions LBHTTPRequestRewriteRuleMethodConditionArrayOutput `pulumi:"methodConditions"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags LBHTTPRequestRewriteRuleTagArrayOutput `pulumi:"tags"`
	// Rule condition based on TCP settings of the message
	TcpConditions LBHTTPRequestRewriteRuleTcpConditionArrayOutput `pulumi:"tcpConditions"`
	// Rule condition based on http request URI arguments (query string)
	UriArgumentsConditions LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput `pulumi:"uriArgumentsConditions"`
	// Rule condition based on http request URI
	UriConditions LBHTTPRequestRewriteRuleUriConditionArrayOutput `pulumi:"uriConditions"`
	// Uri to replace original URI in outgoing request
	UriRewriteAction LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput `pulumi:"uriRewriteAction"`
	// Rule condition based on http request version
	VersionCondition LBHTTPRequestRewriteRuleVersionConditionPtrOutput `pulumi:"versionCondition"`
}

// NewLBHTTPRequestRewriteRule registers a new resource with the given unique name, arguments, and options.
func NewLBHTTPRequestRewriteRule(ctx *pulumi.Context,
	name string, args *LBHTTPRequestRewriteRuleArgs, opts ...pulumi.ResourceOption) (*LBHTTPRequestRewriteRule, error) {
	if args == nil {
		args = &LBHTTPRequestRewriteRuleArgs{}
	}
	var resource LBHTTPRequestRewriteRule
	err := ctx.RegisterResource("nsxt:index/lBHTTPRequestRewriteRule:LBHTTPRequestRewriteRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLBHTTPRequestRewriteRule gets an existing LBHTTPRequestRewriteRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLBHTTPRequestRewriteRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LBHTTPRequestRewriteRuleState, opts ...pulumi.ResourceOption) (*LBHTTPRequestRewriteRule, error) {
	var resource LBHTTPRequestRewriteRule
	err := ctx.ReadResource("nsxt:index/lBHTTPRequestRewriteRule:LBHTTPRequestRewriteRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LBHTTPRequestRewriteRule resources.
type lbhttprequestRewriteRuleState struct {
	// Rule condition based on http request body
	BodyConditions []LBHTTPRequestRewriteRuleBodyCondition `pulumi:"bodyConditions"`
	// Rule condition based on http header
	CookieConditions []LBHTTPRequestRewriteRuleCookieCondition `pulumi:"cookieConditions"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Rule condition based on http header
	HeaderConditions []LBHTTPRequestRewriteRuleHeaderCondition `pulumi:"headerConditions"`
	// Header to replace original header in outgoing message
	HeaderRewriteAction *LBHTTPRequestRewriteRuleHeaderRewriteAction `pulumi:"headerRewriteAction"`
	// Rule condition based on IP settings of the message
	IpConditions []LBHTTPRequestRewriteRuleIpCondition `pulumi:"ipConditions"`
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy *string `pulumi:"matchStrategy"`
	// Rule condition based on http request method
	MethodConditions []LBHTTPRequestRewriteRuleMethodCondition `pulumi:"methodConditions"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags []LBHTTPRequestRewriteRuleTag `pulumi:"tags"`
	// Rule condition based on TCP settings of the message
	TcpConditions []LBHTTPRequestRewriteRuleTcpCondition `pulumi:"tcpConditions"`
	// Rule condition based on http request URI arguments (query string)
	UriArgumentsConditions []LBHTTPRequestRewriteRuleUriArgumentsCondition `pulumi:"uriArgumentsConditions"`
	// Rule condition based on http request URI
	UriConditions []LBHTTPRequestRewriteRuleUriCondition `pulumi:"uriConditions"`
	// Uri to replace original URI in outgoing request
	UriRewriteAction *LBHTTPRequestRewriteRuleUriRewriteAction `pulumi:"uriRewriteAction"`
	// Rule condition based on http request version
	VersionCondition *LBHTTPRequestRewriteRuleVersionCondition `pulumi:"versionCondition"`
}

type LBHTTPRequestRewriteRuleState struct {
	// Rule condition based on http request body
	BodyConditions LBHTTPRequestRewriteRuleBodyConditionArrayInput
	// Rule condition based on http header
	CookieConditions LBHTTPRequestRewriteRuleCookieConditionArrayInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Rule condition based on http header
	HeaderConditions LBHTTPRequestRewriteRuleHeaderConditionArrayInput
	// Header to replace original header in outgoing message
	HeaderRewriteAction LBHTTPRequestRewriteRuleHeaderRewriteActionPtrInput
	// Rule condition based on IP settings of the message
	IpConditions LBHTTPRequestRewriteRuleIpConditionArrayInput
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy pulumi.StringPtrInput
	// Rule condition based on http request method
	MethodConditions LBHTTPRequestRewriteRuleMethodConditionArrayInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags LBHTTPRequestRewriteRuleTagArrayInput
	// Rule condition based on TCP settings of the message
	TcpConditions LBHTTPRequestRewriteRuleTcpConditionArrayInput
	// Rule condition based on http request URI arguments (query string)
	UriArgumentsConditions LBHTTPRequestRewriteRuleUriArgumentsConditionArrayInput
	// Rule condition based on http request URI
	UriConditions LBHTTPRequestRewriteRuleUriConditionArrayInput
	// Uri to replace original URI in outgoing request
	UriRewriteAction LBHTTPRequestRewriteRuleUriRewriteActionPtrInput
	// Rule condition based on http request version
	VersionCondition LBHTTPRequestRewriteRuleVersionConditionPtrInput
}

func (LBHTTPRequestRewriteRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbhttprequestRewriteRuleState)(nil)).Elem()
}

type lbhttprequestRewriteRuleArgs struct {
	// Rule condition based on http request body
	BodyConditions []LBHTTPRequestRewriteRuleBodyCondition `pulumi:"bodyConditions"`
	// Rule condition based on http header
	CookieConditions []LBHTTPRequestRewriteRuleCookieCondition `pulumi:"cookieConditions"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Rule condition based on http header
	HeaderConditions []LBHTTPRequestRewriteRuleHeaderCondition `pulumi:"headerConditions"`
	// Header to replace original header in outgoing message
	HeaderRewriteAction *LBHTTPRequestRewriteRuleHeaderRewriteAction `pulumi:"headerRewriteAction"`
	// Rule condition based on IP settings of the message
	IpConditions []LBHTTPRequestRewriteRuleIpCondition `pulumi:"ipConditions"`
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy *string `pulumi:"matchStrategy"`
	// Rule condition based on http request method
	MethodConditions []LBHTTPRequestRewriteRuleMethodCondition `pulumi:"methodConditions"`
	// Set of opaque identifiers meaningful to the user
	Tags []LBHTTPRequestRewriteRuleTag `pulumi:"tags"`
	// Rule condition based on TCP settings of the message
	TcpConditions []LBHTTPRequestRewriteRuleTcpCondition `pulumi:"tcpConditions"`
	// Rule condition based on http request URI arguments (query string)
	UriArgumentsConditions []LBHTTPRequestRewriteRuleUriArgumentsCondition `pulumi:"uriArgumentsConditions"`
	// Rule condition based on http request URI
	UriConditions []LBHTTPRequestRewriteRuleUriCondition `pulumi:"uriConditions"`
	// Uri to replace original URI in outgoing request
	UriRewriteAction *LBHTTPRequestRewriteRuleUriRewriteAction `pulumi:"uriRewriteAction"`
	// Rule condition based on http request version
	VersionCondition *LBHTTPRequestRewriteRuleVersionCondition `pulumi:"versionCondition"`
}

// The set of arguments for constructing a LBHTTPRequestRewriteRule resource.
type LBHTTPRequestRewriteRuleArgs struct {
	// Rule condition based on http request body
	BodyConditions LBHTTPRequestRewriteRuleBodyConditionArrayInput
	// Rule condition based on http header
	CookieConditions LBHTTPRequestRewriteRuleCookieConditionArrayInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Rule condition based on http header
	HeaderConditions LBHTTPRequestRewriteRuleHeaderConditionArrayInput
	// Header to replace original header in outgoing message
	HeaderRewriteAction LBHTTPRequestRewriteRuleHeaderRewriteActionPtrInput
	// Rule condition based on IP settings of the message
	IpConditions LBHTTPRequestRewriteRuleIpConditionArrayInput
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy pulumi.StringPtrInput
	// Rule condition based on http request method
	MethodConditions LBHTTPRequestRewriteRuleMethodConditionArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags LBHTTPRequestRewriteRuleTagArrayInput
	// Rule condition based on TCP settings of the message
	TcpConditions LBHTTPRequestRewriteRuleTcpConditionArrayInput
	// Rule condition based on http request URI arguments (query string)
	UriArgumentsConditions LBHTTPRequestRewriteRuleUriArgumentsConditionArrayInput
	// Rule condition based on http request URI
	UriConditions LBHTTPRequestRewriteRuleUriConditionArrayInput
	// Uri to replace original URI in outgoing request
	UriRewriteAction LBHTTPRequestRewriteRuleUriRewriteActionPtrInput
	// Rule condition based on http request version
	VersionCondition LBHTTPRequestRewriteRuleVersionConditionPtrInput
}

func (LBHTTPRequestRewriteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbhttprequestRewriteRuleArgs)(nil)).Elem()
}
