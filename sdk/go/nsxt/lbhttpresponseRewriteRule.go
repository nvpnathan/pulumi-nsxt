// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LBHTTPResponseRewriteRule struct {
	pulumi.CustomResourceState

	// Rule condition based on http header
	CookieConditions LBHTTPResponseRewriteRuleCookieConditionArrayOutput `pulumi:"cookieConditions"`
	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Header to replace original header in outgoing message
	HeaderRewriteAction LBHTTPResponseRewriteRuleHeaderRewriteActionOutput `pulumi:"headerRewriteAction"`
	// Rule condition based on IP settings of the message
	IpConditions LBHTTPResponseRewriteRuleIpConditionArrayOutput `pulumi:"ipConditions"`
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy pulumi.StringPtrOutput `pulumi:"matchStrategy"`
	// Rule condition based on http request method
	MethodConditions LBHTTPResponseRewriteRuleMethodConditionArrayOutput `pulumi:"methodConditions"`
	// Rule condition based on http header
	RequestHeaderConditions LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput `pulumi:"requestHeaderConditions"`
	// Rule condition based on http header
	ResponseHeaderConditions LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput `pulumi:"responseHeaderConditions"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags LBHTTPResponseRewriteRuleTagArrayOutput `pulumi:"tags"`
	// Rule condition based on TCP settings of the message
	TcpConditions LBHTTPResponseRewriteRuleTcpConditionArrayOutput `pulumi:"tcpConditions"`
	// Rule condition based on http request URI arguments (query string)
	UriArgumentsConditions LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput `pulumi:"uriArgumentsConditions"`
	// Rule condition based on http request URI
	UriConditions LBHTTPResponseRewriteRuleUriConditionArrayOutput `pulumi:"uriConditions"`
	// Rule condition based on http request version
	VersionCondition LBHTTPResponseRewriteRuleVersionConditionPtrOutput `pulumi:"versionCondition"`
}

// NewLBHTTPResponseRewriteRule registers a new resource with the given unique name, arguments, and options.
func NewLBHTTPResponseRewriteRule(ctx *pulumi.Context,
	name string, args *LBHTTPResponseRewriteRuleArgs, opts ...pulumi.ResourceOption) (*LBHTTPResponseRewriteRule, error) {
	if args == nil || args.HeaderRewriteAction == nil {
		return nil, errors.New("missing required argument 'HeaderRewriteAction'")
	}
	if args == nil {
		args = &LBHTTPResponseRewriteRuleArgs{}
	}
	var resource LBHTTPResponseRewriteRule
	err := ctx.RegisterResource("nsxt:index/lBHTTPResponseRewriteRule:LBHTTPResponseRewriteRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLBHTTPResponseRewriteRule gets an existing LBHTTPResponseRewriteRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLBHTTPResponseRewriteRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LBHTTPResponseRewriteRuleState, opts ...pulumi.ResourceOption) (*LBHTTPResponseRewriteRule, error) {
	var resource LBHTTPResponseRewriteRule
	err := ctx.ReadResource("nsxt:index/lBHTTPResponseRewriteRule:LBHTTPResponseRewriteRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LBHTTPResponseRewriteRule resources.
type lbhttpresponseRewriteRuleState struct {
	// Rule condition based on http header
	CookieConditions []LBHTTPResponseRewriteRuleCookieCondition `pulumi:"cookieConditions"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Header to replace original header in outgoing message
	HeaderRewriteAction *LBHTTPResponseRewriteRuleHeaderRewriteAction `pulumi:"headerRewriteAction"`
	// Rule condition based on IP settings of the message
	IpConditions []LBHTTPResponseRewriteRuleIpCondition `pulumi:"ipConditions"`
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy *string `pulumi:"matchStrategy"`
	// Rule condition based on http request method
	MethodConditions []LBHTTPResponseRewriteRuleMethodCondition `pulumi:"methodConditions"`
	// Rule condition based on http header
	RequestHeaderConditions []LBHTTPResponseRewriteRuleRequestHeaderCondition `pulumi:"requestHeaderConditions"`
	// Rule condition based on http header
	ResponseHeaderConditions []LBHTTPResponseRewriteRuleResponseHeaderCondition `pulumi:"responseHeaderConditions"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags []LBHTTPResponseRewriteRuleTag `pulumi:"tags"`
	// Rule condition based on TCP settings of the message
	TcpConditions []LBHTTPResponseRewriteRuleTcpCondition `pulumi:"tcpConditions"`
	// Rule condition based on http request URI arguments (query string)
	UriArgumentsConditions []LBHTTPResponseRewriteRuleUriArgumentsCondition `pulumi:"uriArgumentsConditions"`
	// Rule condition based on http request URI
	UriConditions []LBHTTPResponseRewriteRuleUriCondition `pulumi:"uriConditions"`
	// Rule condition based on http request version
	VersionCondition *LBHTTPResponseRewriteRuleVersionCondition `pulumi:"versionCondition"`
}

type LBHTTPResponseRewriteRuleState struct {
	// Rule condition based on http header
	CookieConditions LBHTTPResponseRewriteRuleCookieConditionArrayInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Header to replace original header in outgoing message
	HeaderRewriteAction LBHTTPResponseRewriteRuleHeaderRewriteActionPtrInput
	// Rule condition based on IP settings of the message
	IpConditions LBHTTPResponseRewriteRuleIpConditionArrayInput
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy pulumi.StringPtrInput
	// Rule condition based on http request method
	MethodConditions LBHTTPResponseRewriteRuleMethodConditionArrayInput
	// Rule condition based on http header
	RequestHeaderConditions LBHTTPResponseRewriteRuleRequestHeaderConditionArrayInput
	// Rule condition based on http header
	ResponseHeaderConditions LBHTTPResponseRewriteRuleResponseHeaderConditionArrayInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags LBHTTPResponseRewriteRuleTagArrayInput
	// Rule condition based on TCP settings of the message
	TcpConditions LBHTTPResponseRewriteRuleTcpConditionArrayInput
	// Rule condition based on http request URI arguments (query string)
	UriArgumentsConditions LBHTTPResponseRewriteRuleUriArgumentsConditionArrayInput
	// Rule condition based on http request URI
	UriConditions LBHTTPResponseRewriteRuleUriConditionArrayInput
	// Rule condition based on http request version
	VersionCondition LBHTTPResponseRewriteRuleVersionConditionPtrInput
}

func (LBHTTPResponseRewriteRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbhttpresponseRewriteRuleState)(nil)).Elem()
}

type lbhttpresponseRewriteRuleArgs struct {
	// Rule condition based on http header
	CookieConditions []LBHTTPResponseRewriteRuleCookieCondition `pulumi:"cookieConditions"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Header to replace original header in outgoing message
	HeaderRewriteAction LBHTTPResponseRewriteRuleHeaderRewriteAction `pulumi:"headerRewriteAction"`
	// Rule condition based on IP settings of the message
	IpConditions []LBHTTPResponseRewriteRuleIpCondition `pulumi:"ipConditions"`
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy *string `pulumi:"matchStrategy"`
	// Rule condition based on http request method
	MethodConditions []LBHTTPResponseRewriteRuleMethodCondition `pulumi:"methodConditions"`
	// Rule condition based on http header
	RequestHeaderConditions []LBHTTPResponseRewriteRuleRequestHeaderCondition `pulumi:"requestHeaderConditions"`
	// Rule condition based on http header
	ResponseHeaderConditions []LBHTTPResponseRewriteRuleResponseHeaderCondition `pulumi:"responseHeaderConditions"`
	// Set of opaque identifiers meaningful to the user
	Tags []LBHTTPResponseRewriteRuleTag `pulumi:"tags"`
	// Rule condition based on TCP settings of the message
	TcpConditions []LBHTTPResponseRewriteRuleTcpCondition `pulumi:"tcpConditions"`
	// Rule condition based on http request URI arguments (query string)
	UriArgumentsConditions []LBHTTPResponseRewriteRuleUriArgumentsCondition `pulumi:"uriArgumentsConditions"`
	// Rule condition based on http request URI
	UriConditions []LBHTTPResponseRewriteRuleUriCondition `pulumi:"uriConditions"`
	// Rule condition based on http request version
	VersionCondition *LBHTTPResponseRewriteRuleVersionCondition `pulumi:"versionCondition"`
}

// The set of arguments for constructing a LBHTTPResponseRewriteRule resource.
type LBHTTPResponseRewriteRuleArgs struct {
	// Rule condition based on http header
	CookieConditions LBHTTPResponseRewriteRuleCookieConditionArrayInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Header to replace original header in outgoing message
	HeaderRewriteAction LBHTTPResponseRewriteRuleHeaderRewriteActionInput
	// Rule condition based on IP settings of the message
	IpConditions LBHTTPResponseRewriteRuleIpConditionArrayInput
	// Strategy when multiple match conditions are specified in one rule (ANY vs ALL)
	MatchStrategy pulumi.StringPtrInput
	// Rule condition based on http request method
	MethodConditions LBHTTPResponseRewriteRuleMethodConditionArrayInput
	// Rule condition based on http header
	RequestHeaderConditions LBHTTPResponseRewriteRuleRequestHeaderConditionArrayInput
	// Rule condition based on http header
	ResponseHeaderConditions LBHTTPResponseRewriteRuleResponseHeaderConditionArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags LBHTTPResponseRewriteRuleTagArrayInput
	// Rule condition based on TCP settings of the message
	TcpConditions LBHTTPResponseRewriteRuleTcpConditionArrayInput
	// Rule condition based on http request URI arguments (query string)
	UriArgumentsConditions LBHTTPResponseRewriteRuleUriArgumentsConditionArrayInput
	// Rule condition based on http request URI
	UriConditions LBHTTPResponseRewriteRuleUriConditionArrayInput
	// Rule condition based on http request version
	VersionCondition LBHTTPResponseRewriteRuleVersionConditionPtrInput
}

func (LBHTTPResponseRewriteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbhttpresponseRewriteRuleArgs)(nil)).Elem()
}
