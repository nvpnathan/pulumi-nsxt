// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LBService struct {
	pulumi.CustomResourceState

	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Whether the load balancer service is enabled
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Load balancer engine writes information about encountered issues of different severity levels to the error log. This
	// setting is used to define the severity level of the error log
	ErrorLogLevel pulumi.StringPtrOutput `pulumi:"errorLogLevel"`
	// Logical Tier1 Router to which the Load Balancer is to be attached
	LogicalRouterId pulumi.StringOutput `pulumi:"logicalRouterId"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Size of load balancer service
	Size pulumi.StringPtrOutput `pulumi:"size"`
	// Set of opaque identifiers meaningful to the user
	Tags LBServiceTagArrayOutput `pulumi:"tags"`
	// Virtual servers associated with this Load Balancer
	VirtualServerIds pulumi.StringArrayOutput `pulumi:"virtualServerIds"`
}

// NewLBService registers a new resource with the given unique name, arguments, and options.
func NewLBService(ctx *pulumi.Context,
	name string, args *LBServiceArgs, opts ...pulumi.ResourceOption) (*LBService, error) {
	if args == nil || args.LogicalRouterId == nil {
		return nil, errors.New("missing required argument 'LogicalRouterId'")
	}
	if args == nil {
		args = &LBServiceArgs{}
	}
	var resource LBService
	err := ctx.RegisterResource("nsxt:index/lBService:LBService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLBService gets an existing LBService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLBService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LBServiceState, opts ...pulumi.ResourceOption) (*LBService, error) {
	var resource LBService
	err := ctx.ReadResource("nsxt:index/lBService:LBService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LBService resources.
type lbserviceState struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Whether the load balancer service is enabled
	Enabled *bool `pulumi:"enabled"`
	// Load balancer engine writes information about encountered issues of different severity levels to the error log. This
	// setting is used to define the severity level of the error log
	ErrorLogLevel *string `pulumi:"errorLogLevel"`
	// Logical Tier1 Router to which the Load Balancer is to be attached
	LogicalRouterId *string `pulumi:"logicalRouterId"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Size of load balancer service
	Size *string `pulumi:"size"`
	// Set of opaque identifiers meaningful to the user
	Tags []LBServiceTag `pulumi:"tags"`
	// Virtual servers associated with this Load Balancer
	VirtualServerIds []string `pulumi:"virtualServerIds"`
}

type LBServiceState struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Whether the load balancer service is enabled
	Enabled pulumi.BoolPtrInput
	// Load balancer engine writes information about encountered issues of different severity levels to the error log. This
	// setting is used to define the severity level of the error log
	ErrorLogLevel pulumi.StringPtrInput
	// Logical Tier1 Router to which the Load Balancer is to be attached
	LogicalRouterId pulumi.StringPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Size of load balancer service
	Size pulumi.StringPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags LBServiceTagArrayInput
	// Virtual servers associated with this Load Balancer
	VirtualServerIds pulumi.StringArrayInput
}

func (LBServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbserviceState)(nil)).Elem()
}

type lbserviceArgs struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Whether the load balancer service is enabled
	Enabled *bool `pulumi:"enabled"`
	// Load balancer engine writes information about encountered issues of different severity levels to the error log. This
	// setting is used to define the severity level of the error log
	ErrorLogLevel *string `pulumi:"errorLogLevel"`
	// Logical Tier1 Router to which the Load Balancer is to be attached
	LogicalRouterId string `pulumi:"logicalRouterId"`
	// Size of load balancer service
	Size *string `pulumi:"size"`
	// Set of opaque identifiers meaningful to the user
	Tags []LBServiceTag `pulumi:"tags"`
	// Virtual servers associated with this Load Balancer
	VirtualServerIds []string `pulumi:"virtualServerIds"`
}

// The set of arguments for constructing a LBService resource.
type LBServiceArgs struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Whether the load balancer service is enabled
	Enabled pulumi.BoolPtrInput
	// Load balancer engine writes information about encountered issues of different severity levels to the error log. This
	// setting is used to define the severity level of the error log
	ErrorLogLevel pulumi.StringPtrInput
	// Logical Tier1 Router to which the Load Balancer is to be attached
	LogicalRouterId pulumi.StringInput
	// Size of load balancer service
	Size pulumi.StringPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags LBServiceTagArrayInput
	// Virtual servers associated with this Load Balancer
	VirtualServerIds pulumi.StringArrayInput
}

func (LBServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbserviceArgs)(nil)).Elem()
}
