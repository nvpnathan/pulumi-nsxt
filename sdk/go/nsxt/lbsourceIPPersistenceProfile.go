// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LBSourceIPPersistenceProfile struct {
	pulumi.CustomResourceState

	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// A boolean flag which reflects whether persistence entries will be synchronized to the HA peer
	HaPersistenceMirroring pulumi.BoolPtrOutput `pulumi:"haPersistenceMirroring"`
	// A boolean flag which reflects whether the cookie persistence is private or shared
	PersistenceShared pulumi.BoolPtrOutput `pulumi:"persistenceShared"`
	// A boolean flag which reflects whether entries will be purged when the persistence table is full
	PurgeWhenFull pulumi.BoolPtrOutput `pulumi:"purgeWhenFull"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags LBSourceIPPersistenceProfileTagArrayOutput `pulumi:"tags"`
	// Persistence expiration time in seconds, counted from the time all the connections are completed
	Timeout pulumi.IntPtrOutput `pulumi:"timeout"`
}

// NewLBSourceIPPersistenceProfile registers a new resource with the given unique name, arguments, and options.
func NewLBSourceIPPersistenceProfile(ctx *pulumi.Context,
	name string, args *LBSourceIPPersistenceProfileArgs, opts ...pulumi.ResourceOption) (*LBSourceIPPersistenceProfile, error) {
	if args == nil {
		args = &LBSourceIPPersistenceProfileArgs{}
	}
	var resource LBSourceIPPersistenceProfile
	err := ctx.RegisterResource("nsxt:index/lBSourceIPPersistenceProfile:LBSourceIPPersistenceProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLBSourceIPPersistenceProfile gets an existing LBSourceIPPersistenceProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLBSourceIPPersistenceProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LBSourceIPPersistenceProfileState, opts ...pulumi.ResourceOption) (*LBSourceIPPersistenceProfile, error) {
	var resource LBSourceIPPersistenceProfile
	err := ctx.ReadResource("nsxt:index/lBSourceIPPersistenceProfile:LBSourceIPPersistenceProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LBSourceIPPersistenceProfile resources.
type lbsourceIPPersistenceProfileState struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// A boolean flag which reflects whether persistence entries will be synchronized to the HA peer
	HaPersistenceMirroring *bool `pulumi:"haPersistenceMirroring"`
	// A boolean flag which reflects whether the cookie persistence is private or shared
	PersistenceShared *bool `pulumi:"persistenceShared"`
	// A boolean flag which reflects whether entries will be purged when the persistence table is full
	PurgeWhenFull *bool `pulumi:"purgeWhenFull"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags []LBSourceIPPersistenceProfileTag `pulumi:"tags"`
	// Persistence expiration time in seconds, counted from the time all the connections are completed
	Timeout *int `pulumi:"timeout"`
}

type LBSourceIPPersistenceProfileState struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// A boolean flag which reflects whether persistence entries will be synchronized to the HA peer
	HaPersistenceMirroring pulumi.BoolPtrInput
	// A boolean flag which reflects whether the cookie persistence is private or shared
	PersistenceShared pulumi.BoolPtrInput
	// A boolean flag which reflects whether entries will be purged when the persistence table is full
	PurgeWhenFull pulumi.BoolPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags LBSourceIPPersistenceProfileTagArrayInput
	// Persistence expiration time in seconds, counted from the time all the connections are completed
	Timeout pulumi.IntPtrInput
}

func (LBSourceIPPersistenceProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbsourceIPPersistenceProfileState)(nil)).Elem()
}

type lbsourceIPPersistenceProfileArgs struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// A boolean flag which reflects whether persistence entries will be synchronized to the HA peer
	HaPersistenceMirroring *bool `pulumi:"haPersistenceMirroring"`
	// A boolean flag which reflects whether the cookie persistence is private or shared
	PersistenceShared *bool `pulumi:"persistenceShared"`
	// A boolean flag which reflects whether entries will be purged when the persistence table is full
	PurgeWhenFull *bool `pulumi:"purgeWhenFull"`
	// Set of opaque identifiers meaningful to the user
	Tags []LBSourceIPPersistenceProfileTag `pulumi:"tags"`
	// Persistence expiration time in seconds, counted from the time all the connections are completed
	Timeout *int `pulumi:"timeout"`
}

// The set of arguments for constructing a LBSourceIPPersistenceProfile resource.
type LBSourceIPPersistenceProfileArgs struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// A boolean flag which reflects whether persistence entries will be synchronized to the HA peer
	HaPersistenceMirroring pulumi.BoolPtrInput
	// A boolean flag which reflects whether the cookie persistence is private or shared
	PersistenceShared pulumi.BoolPtrInput
	// A boolean flag which reflects whether entries will be purged when the persistence table is full
	PurgeWhenFull pulumi.BoolPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags LBSourceIPPersistenceProfileTagArrayInput
	// Persistence expiration time in seconds, counted from the time all the connections are completed
	Timeout pulumi.IntPtrInput
}

func (LBSourceIPPersistenceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbsourceIPPersistenceProfileArgs)(nil)).Elem()
}
