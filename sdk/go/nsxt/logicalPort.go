// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LogicalPort struct {
	pulumi.CustomResourceState

	// Represents Desired state of the object
	AdminState pulumi.StringPtrOutput `pulumi:"adminState"`
	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Id of the Logical switch that this port belongs to
	LogicalSwitchId pulumi.StringOutput `pulumi:"logicalSwitchId"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
	// be used if not specified
	SwitchingProfileIds LogicalPortSwitchingProfileIdArrayOutput `pulumi:"switchingProfileIds"`
	// Set of opaque identifiers meaningful to the user
	Tags LogicalPortTagArrayOutput `pulumi:"tags"`
}

// NewLogicalPort registers a new resource with the given unique name, arguments, and options.
func NewLogicalPort(ctx *pulumi.Context,
	name string, args *LogicalPortArgs, opts ...pulumi.ResourceOption) (*LogicalPort, error) {
	if args == nil || args.LogicalSwitchId == nil {
		return nil, errors.New("missing required argument 'LogicalSwitchId'")
	}
	if args == nil {
		args = &LogicalPortArgs{}
	}
	var resource LogicalPort
	err := ctx.RegisterResource("nsxt:index/logicalPort:LogicalPort", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogicalPort gets an existing LogicalPort resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogicalPort(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogicalPortState, opts ...pulumi.ResourceOption) (*LogicalPort, error) {
	var resource LogicalPort
	err := ctx.ReadResource("nsxt:index/logicalPort:LogicalPort", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogicalPort resources.
type logicalPortState struct {
	// Represents Desired state of the object
	AdminState *string `pulumi:"adminState"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Id of the Logical switch that this port belongs to
	LogicalSwitchId *string `pulumi:"logicalSwitchId"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
	// be used if not specified
	SwitchingProfileIds []LogicalPortSwitchingProfileId `pulumi:"switchingProfileIds"`
	// Set of opaque identifiers meaningful to the user
	Tags []LogicalPortTag `pulumi:"tags"`
}

type LogicalPortState struct {
	// Represents Desired state of the object
	AdminState pulumi.StringPtrInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Id of the Logical switch that this port belongs to
	LogicalSwitchId pulumi.StringPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
	// be used if not specified
	SwitchingProfileIds LogicalPortSwitchingProfileIdArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags LogicalPortTagArrayInput
}

func (LogicalPortState) ElementType() reflect.Type {
	return reflect.TypeOf((*logicalPortState)(nil)).Elem()
}

type logicalPortArgs struct {
	// Represents Desired state of the object
	AdminState *string `pulumi:"adminState"`
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Id of the Logical switch that this port belongs to
	LogicalSwitchId string `pulumi:"logicalSwitchId"`
	// List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
	// be used if not specified
	SwitchingProfileIds []LogicalPortSwitchingProfileId `pulumi:"switchingProfileIds"`
	// Set of opaque identifiers meaningful to the user
	Tags []LogicalPortTag `pulumi:"tags"`
}

// The set of arguments for constructing a LogicalPort resource.
type LogicalPortArgs struct {
	// Represents Desired state of the object
	AdminState pulumi.StringPtrInput
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Id of the Logical switch that this port belongs to
	LogicalSwitchId pulumi.StringInput
	// List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
	// be used if not specified
	SwitchingProfileIds LogicalPortSwitchingProfileIdArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags LogicalPortTagArrayInput
}

func (LogicalPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logicalPortArgs)(nil)).Elem()
}
