// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LogicalRouterCentralizedServicePort struct {
	pulumi.CustomResourceState

	// Description of this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Logical router port subnet (ipAddress / prefix length)
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// Identifier for port on logical switch to connect to
	LinkedLogicalSwitchPortId pulumi.StringOutput `pulumi:"linkedLogicalSwitchPortId"`
	// Identifier for logical router on which this port is created
	LogicalRouterId pulumi.StringOutput `pulumi:"logicalRouterId"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags LogicalRouterCentralizedServicePortTagArrayOutput `pulumi:"tags"`
	// Unicast Reverse Path Forwarding mode
	UrpfMode pulumi.StringPtrOutput `pulumi:"urpfMode"`
}

// NewLogicalRouterCentralizedServicePort registers a new resource with the given unique name, arguments, and options.
func NewLogicalRouterCentralizedServicePort(ctx *pulumi.Context,
	name string, args *LogicalRouterCentralizedServicePortArgs, opts ...pulumi.ResourceOption) (*LogicalRouterCentralizedServicePort, error) {
	if args == nil || args.IpAddress == nil {
		return nil, errors.New("missing required argument 'IpAddress'")
	}
	if args == nil || args.LinkedLogicalSwitchPortId == nil {
		return nil, errors.New("missing required argument 'LinkedLogicalSwitchPortId'")
	}
	if args == nil || args.LogicalRouterId == nil {
		return nil, errors.New("missing required argument 'LogicalRouterId'")
	}
	if args == nil {
		args = &LogicalRouterCentralizedServicePortArgs{}
	}
	var resource LogicalRouterCentralizedServicePort
	err := ctx.RegisterResource("nsxt:index/logicalRouterCentralizedServicePort:LogicalRouterCentralizedServicePort", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogicalRouterCentralizedServicePort gets an existing LogicalRouterCentralizedServicePort resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogicalRouterCentralizedServicePort(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogicalRouterCentralizedServicePortState, opts ...pulumi.ResourceOption) (*LogicalRouterCentralizedServicePort, error) {
	var resource LogicalRouterCentralizedServicePort
	err := ctx.ReadResource("nsxt:index/logicalRouterCentralizedServicePort:LogicalRouterCentralizedServicePort", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogicalRouterCentralizedServicePort resources.
type logicalRouterCentralizedServicePortState struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Logical router port subnet (ipAddress / prefix length)
	IpAddress *string `pulumi:"ipAddress"`
	// Identifier for port on logical switch to connect to
	LinkedLogicalSwitchPortId *string `pulumi:"linkedLogicalSwitchPortId"`
	// Identifier for logical router on which this port is created
	LogicalRouterId *string `pulumi:"logicalRouterId"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Set of opaque identifiers meaningful to the user
	Tags []LogicalRouterCentralizedServicePortTag `pulumi:"tags"`
	// Unicast Reverse Path Forwarding mode
	UrpfMode *string `pulumi:"urpfMode"`
}

type LogicalRouterCentralizedServicePortState struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Logical router port subnet (ipAddress / prefix length)
	IpAddress pulumi.StringPtrInput
	// Identifier for port on logical switch to connect to
	LinkedLogicalSwitchPortId pulumi.StringPtrInput
	// Identifier for logical router on which this port is created
	LogicalRouterId pulumi.StringPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags LogicalRouterCentralizedServicePortTagArrayInput
	// Unicast Reverse Path Forwarding mode
	UrpfMode pulumi.StringPtrInput
}

func (LogicalRouterCentralizedServicePortState) ElementType() reflect.Type {
	return reflect.TypeOf((*logicalRouterCentralizedServicePortState)(nil)).Elem()
}

type logicalRouterCentralizedServicePortArgs struct {
	// Description of this resource
	Description *string `pulumi:"description"`
	// The display name of this resource. Defaults to ID if not set
	DisplayName *string `pulumi:"displayName"`
	// Logical router port subnet (ipAddress / prefix length)
	IpAddress string `pulumi:"ipAddress"`
	// Identifier for port on logical switch to connect to
	LinkedLogicalSwitchPortId string `pulumi:"linkedLogicalSwitchPortId"`
	// Identifier for logical router on which this port is created
	LogicalRouterId string `pulumi:"logicalRouterId"`
	// Set of opaque identifiers meaningful to the user
	Tags []LogicalRouterCentralizedServicePortTag `pulumi:"tags"`
	// Unicast Reverse Path Forwarding mode
	UrpfMode *string `pulumi:"urpfMode"`
}

// The set of arguments for constructing a LogicalRouterCentralizedServicePort resource.
type LogicalRouterCentralizedServicePortArgs struct {
	// Description of this resource
	Description pulumi.StringPtrInput
	// The display name of this resource. Defaults to ID if not set
	DisplayName pulumi.StringPtrInput
	// Logical router port subnet (ipAddress / prefix length)
	IpAddress pulumi.StringInput
	// Identifier for port on logical switch to connect to
	LinkedLogicalSwitchPortId pulumi.StringInput
	// Identifier for logical router on which this port is created
	LogicalRouterId pulumi.StringInput
	// Set of opaque identifiers meaningful to the user
	Tags LogicalRouterCentralizedServicePortTagArrayInput
	// Unicast Reverse Path Forwarding mode
	UrpfMode pulumi.StringPtrInput
}

func (LogicalRouterCentralizedServicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logicalRouterCentralizedServicePortArgs)(nil)).Elem()
}
