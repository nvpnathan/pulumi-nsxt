// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PolicyBGPNeighbor struct {
	pulumi.CustomResourceState

	// Flag to enable allowas_in option for BGP neighbor
	AllowAsIn pulumi.BoolPtrOutput `pulumi:"allowAsIn"`
	// BFD configuration for failure detection
	BfdConfig PolicyBGPNeighborBfdConfigPtrOutput `pulumi:"bfdConfig"`
	// Policy path to the BGP for this neighbor
	BgpPath pulumi.StringOutput `pulumi:"bgpPath"`
	// Description for this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Display name for this resource
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// BGP Graceful Restart Configuration Mode
	GracefulRestartMode pulumi.StringPtrOutput `pulumi:"gracefulRestartMode"`
	// Wait time in seconds before declaring peer dead
	HoldDownTime pulumi.IntPtrOutput `pulumi:"holdDownTime"`
	// Interval between keep alive messages sent to peer
	KeepAliveTime pulumi.IntPtrOutput `pulumi:"keepAliveTime"`
	// Maximum number of hops allowed to reach BGP neighbor
	MaximumHopLimit pulumi.IntPtrOutput `pulumi:"maximumHopLimit"`
	// Neighbor IP Address
	NeighborAddress pulumi.StringOutput `pulumi:"neighborAddress"`
	// NSX ID for this resource
	NsxId pulumi.StringOutput `pulumi:"nsxId"`
	// Password for BGP neighbor authentication
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Policy path for this resource
	Path pulumi.StringOutput `pulumi:"path"`
	// ASN of the neighbor in ASPLAIN or ASDOT Format
	RemoteAsNum pulumi.StringOutput `pulumi:"remoteAsNum"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Enable address families and route filtering in each direction
	RouteFilterings PolicyBGPNeighborRouteFilteringArrayOutput `pulumi:"routeFilterings"`
	// Source IP Addresses for BGP peering
	SourceAddresses pulumi.StringArrayOutput `pulumi:"sourceAddresses"`
	// Set of opaque identifiers meaningful to the user
	Tags PolicyBGPNeighborTagArrayOutput `pulumi:"tags"`
}

// NewPolicyBGPNeighbor registers a new resource with the given unique name, arguments, and options.
func NewPolicyBGPNeighbor(ctx *pulumi.Context,
	name string, args *PolicyBGPNeighborArgs, opts ...pulumi.ResourceOption) (*PolicyBGPNeighbor, error) {
	if args == nil || args.BgpPath == nil {
		return nil, errors.New("missing required argument 'BgpPath'")
	}
	if args == nil || args.DisplayName == nil {
		return nil, errors.New("missing required argument 'DisplayName'")
	}
	if args == nil || args.NeighborAddress == nil {
		return nil, errors.New("missing required argument 'NeighborAddress'")
	}
	if args == nil || args.RemoteAsNum == nil {
		return nil, errors.New("missing required argument 'RemoteAsNum'")
	}
	if args == nil {
		args = &PolicyBGPNeighborArgs{}
	}
	var resource PolicyBGPNeighbor
	err := ctx.RegisterResource("nsxt:index/policyBGPNeighbor:PolicyBGPNeighbor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyBGPNeighbor gets an existing PolicyBGPNeighbor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyBGPNeighbor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyBGPNeighborState, opts ...pulumi.ResourceOption) (*PolicyBGPNeighbor, error) {
	var resource PolicyBGPNeighbor
	err := ctx.ReadResource("nsxt:index/policyBGPNeighbor:PolicyBGPNeighbor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyBGPNeighbor resources.
type policyBGPNeighborState struct {
	// Flag to enable allowas_in option for BGP neighbor
	AllowAsIn *bool `pulumi:"allowAsIn"`
	// BFD configuration for failure detection
	BfdConfig *PolicyBGPNeighborBfdConfig `pulumi:"bfdConfig"`
	// Policy path to the BGP for this neighbor
	BgpPath *string `pulumi:"bgpPath"`
	// Description for this resource
	Description *string `pulumi:"description"`
	// Display name for this resource
	DisplayName *string `pulumi:"displayName"`
	// BGP Graceful Restart Configuration Mode
	GracefulRestartMode *string `pulumi:"gracefulRestartMode"`
	// Wait time in seconds before declaring peer dead
	HoldDownTime *int `pulumi:"holdDownTime"`
	// Interval between keep alive messages sent to peer
	KeepAliveTime *int `pulumi:"keepAliveTime"`
	// Maximum number of hops allowed to reach BGP neighbor
	MaximumHopLimit *int `pulumi:"maximumHopLimit"`
	// Neighbor IP Address
	NeighborAddress *string `pulumi:"neighborAddress"`
	// NSX ID for this resource
	NsxId *string `pulumi:"nsxId"`
	// Password for BGP neighbor authentication
	Password *string `pulumi:"password"`
	// Policy path for this resource
	Path *string `pulumi:"path"`
	// ASN of the neighbor in ASPLAIN or ASDOT Format
	RemoteAsNum *string `pulumi:"remoteAsNum"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Enable address families and route filtering in each direction
	RouteFilterings []PolicyBGPNeighborRouteFiltering `pulumi:"routeFilterings"`
	// Source IP Addresses for BGP peering
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// Set of opaque identifiers meaningful to the user
	Tags []PolicyBGPNeighborTag `pulumi:"tags"`
}

type PolicyBGPNeighborState struct {
	// Flag to enable allowas_in option for BGP neighbor
	AllowAsIn pulumi.BoolPtrInput
	// BFD configuration for failure detection
	BfdConfig PolicyBGPNeighborBfdConfigPtrInput
	// Policy path to the BGP for this neighbor
	BgpPath pulumi.StringPtrInput
	// Description for this resource
	Description pulumi.StringPtrInput
	// Display name for this resource
	DisplayName pulumi.StringPtrInput
	// BGP Graceful Restart Configuration Mode
	GracefulRestartMode pulumi.StringPtrInput
	// Wait time in seconds before declaring peer dead
	HoldDownTime pulumi.IntPtrInput
	// Interval between keep alive messages sent to peer
	KeepAliveTime pulumi.IntPtrInput
	// Maximum number of hops allowed to reach BGP neighbor
	MaximumHopLimit pulumi.IntPtrInput
	// Neighbor IP Address
	NeighborAddress pulumi.StringPtrInput
	// NSX ID for this resource
	NsxId pulumi.StringPtrInput
	// Password for BGP neighbor authentication
	Password pulumi.StringPtrInput
	// Policy path for this resource
	Path pulumi.StringPtrInput
	// ASN of the neighbor in ASPLAIN or ASDOT Format
	RemoteAsNum pulumi.StringPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Enable address families and route filtering in each direction
	RouteFilterings PolicyBGPNeighborRouteFilteringArrayInput
	// Source IP Addresses for BGP peering
	SourceAddresses pulumi.StringArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags PolicyBGPNeighborTagArrayInput
}

func (PolicyBGPNeighborState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyBGPNeighborState)(nil)).Elem()
}

type policyBGPNeighborArgs struct {
	// Flag to enable allowas_in option for BGP neighbor
	AllowAsIn *bool `pulumi:"allowAsIn"`
	// BFD configuration for failure detection
	BfdConfig *PolicyBGPNeighborBfdConfig `pulumi:"bfdConfig"`
	// Policy path to the BGP for this neighbor
	BgpPath string `pulumi:"bgpPath"`
	// Description for this resource
	Description *string `pulumi:"description"`
	// Display name for this resource
	DisplayName string `pulumi:"displayName"`
	// BGP Graceful Restart Configuration Mode
	GracefulRestartMode *string `pulumi:"gracefulRestartMode"`
	// Wait time in seconds before declaring peer dead
	HoldDownTime *int `pulumi:"holdDownTime"`
	// Interval between keep alive messages sent to peer
	KeepAliveTime *int `pulumi:"keepAliveTime"`
	// Maximum number of hops allowed to reach BGP neighbor
	MaximumHopLimit *int `pulumi:"maximumHopLimit"`
	// Neighbor IP Address
	NeighborAddress string `pulumi:"neighborAddress"`
	// NSX ID for this resource
	NsxId *string `pulumi:"nsxId"`
	// Password for BGP neighbor authentication
	Password *string `pulumi:"password"`
	// ASN of the neighbor in ASPLAIN or ASDOT Format
	RemoteAsNum string `pulumi:"remoteAsNum"`
	// Enable address families and route filtering in each direction
	RouteFilterings []PolicyBGPNeighborRouteFiltering `pulumi:"routeFilterings"`
	// Source IP Addresses for BGP peering
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// Set of opaque identifiers meaningful to the user
	Tags []PolicyBGPNeighborTag `pulumi:"tags"`
}

// The set of arguments for constructing a PolicyBGPNeighbor resource.
type PolicyBGPNeighborArgs struct {
	// Flag to enable allowas_in option for BGP neighbor
	AllowAsIn pulumi.BoolPtrInput
	// BFD configuration for failure detection
	BfdConfig PolicyBGPNeighborBfdConfigPtrInput
	// Policy path to the BGP for this neighbor
	BgpPath pulumi.StringInput
	// Description for this resource
	Description pulumi.StringPtrInput
	// Display name for this resource
	DisplayName pulumi.StringInput
	// BGP Graceful Restart Configuration Mode
	GracefulRestartMode pulumi.StringPtrInput
	// Wait time in seconds before declaring peer dead
	HoldDownTime pulumi.IntPtrInput
	// Interval between keep alive messages sent to peer
	KeepAliveTime pulumi.IntPtrInput
	// Maximum number of hops allowed to reach BGP neighbor
	MaximumHopLimit pulumi.IntPtrInput
	// Neighbor IP Address
	NeighborAddress pulumi.StringInput
	// NSX ID for this resource
	NsxId pulumi.StringPtrInput
	// Password for BGP neighbor authentication
	Password pulumi.StringPtrInput
	// ASN of the neighbor in ASPLAIN or ASDOT Format
	RemoteAsNum pulumi.StringInput
	// Enable address families and route filtering in each direction
	RouteFilterings PolicyBGPNeighborRouteFilteringArrayInput
	// Source IP Addresses for BGP peering
	SourceAddresses pulumi.StringArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags PolicyBGPNeighborTagArrayInput
}

func (PolicyBGPNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyBGPNeighborArgs)(nil)).Elem()
}
