// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PolicyDHCPServer struct {
	pulumi.CustomResourceState

	// Description for this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Display name for this resource
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Edge Cluster path
	EdgeClusterPath pulumi.StringPtrOutput `pulumi:"edgeClusterPath"`
	// IP Address lease time in seconds
	LeaseTime pulumi.IntPtrOutput `pulumi:"leaseTime"`
	// NSX ID for this resource
	NsxId pulumi.StringOutput `pulumi:"nsxId"`
	// Policy path for this resource
	Path pulumi.StringOutput `pulumi:"path"`
	// The first edge node is assigned as active edge, and second one as standby edge
	PreferredEdgePaths pulumi.StringArrayOutput `pulumi:"preferredEdgePaths"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// DHCP server address in CIDR format
	ServerAddresses pulumi.StringArrayOutput `pulumi:"serverAddresses"`
	// Set of opaque identifiers meaningful to the user
	Tags PolicyDHCPServerTagArrayOutput `pulumi:"tags"`
}

// NewPolicyDHCPServer registers a new resource with the given unique name, arguments, and options.
func NewPolicyDHCPServer(ctx *pulumi.Context,
	name string, args *PolicyDHCPServerArgs, opts ...pulumi.ResourceOption) (*PolicyDHCPServer, error) {
	if args == nil || args.DisplayName == nil {
		return nil, errors.New("missing required argument 'DisplayName'")
	}
	if args == nil {
		args = &PolicyDHCPServerArgs{}
	}
	var resource PolicyDHCPServer
	err := ctx.RegisterResource("nsxt:index/policyDHCPServer:PolicyDHCPServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyDHCPServer gets an existing PolicyDHCPServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyDHCPServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyDHCPServerState, opts ...pulumi.ResourceOption) (*PolicyDHCPServer, error) {
	var resource PolicyDHCPServer
	err := ctx.ReadResource("nsxt:index/policyDHCPServer:PolicyDHCPServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyDHCPServer resources.
type policyDHCPServerState struct {
	// Description for this resource
	Description *string `pulumi:"description"`
	// Display name for this resource
	DisplayName *string `pulumi:"displayName"`
	// Edge Cluster path
	EdgeClusterPath *string `pulumi:"edgeClusterPath"`
	// IP Address lease time in seconds
	LeaseTime *int `pulumi:"leaseTime"`
	// NSX ID for this resource
	NsxId *string `pulumi:"nsxId"`
	// Policy path for this resource
	Path *string `pulumi:"path"`
	// The first edge node is assigned as active edge, and second one as standby edge
	PreferredEdgePaths []string `pulumi:"preferredEdgePaths"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// DHCP server address in CIDR format
	ServerAddresses []string `pulumi:"serverAddresses"`
	// Set of opaque identifiers meaningful to the user
	Tags []PolicyDHCPServerTag `pulumi:"tags"`
}

type PolicyDHCPServerState struct {
	// Description for this resource
	Description pulumi.StringPtrInput
	// Display name for this resource
	DisplayName pulumi.StringPtrInput
	// Edge Cluster path
	EdgeClusterPath pulumi.StringPtrInput
	// IP Address lease time in seconds
	LeaseTime pulumi.IntPtrInput
	// NSX ID for this resource
	NsxId pulumi.StringPtrInput
	// Policy path for this resource
	Path pulumi.StringPtrInput
	// The first edge node is assigned as active edge, and second one as standby edge
	PreferredEdgePaths pulumi.StringArrayInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// DHCP server address in CIDR format
	ServerAddresses pulumi.StringArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags PolicyDHCPServerTagArrayInput
}

func (PolicyDHCPServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyDHCPServerState)(nil)).Elem()
}

type policyDHCPServerArgs struct {
	// Description for this resource
	Description *string `pulumi:"description"`
	// Display name for this resource
	DisplayName string `pulumi:"displayName"`
	// Edge Cluster path
	EdgeClusterPath *string `pulumi:"edgeClusterPath"`
	// IP Address lease time in seconds
	LeaseTime *int `pulumi:"leaseTime"`
	// NSX ID for this resource
	NsxId *string `pulumi:"nsxId"`
	// The first edge node is assigned as active edge, and second one as standby edge
	PreferredEdgePaths []string `pulumi:"preferredEdgePaths"`
	// DHCP server address in CIDR format
	ServerAddresses []string `pulumi:"serverAddresses"`
	// Set of opaque identifiers meaningful to the user
	Tags []PolicyDHCPServerTag `pulumi:"tags"`
}

// The set of arguments for constructing a PolicyDHCPServer resource.
type PolicyDHCPServerArgs struct {
	// Description for this resource
	Description pulumi.StringPtrInput
	// Display name for this resource
	DisplayName pulumi.StringInput
	// Edge Cluster path
	EdgeClusterPath pulumi.StringPtrInput
	// IP Address lease time in seconds
	LeaseTime pulumi.IntPtrInput
	// NSX ID for this resource
	NsxId pulumi.StringPtrInput
	// The first edge node is assigned as active edge, and second one as standby edge
	PreferredEdgePaths pulumi.StringArrayInput
	// DHCP server address in CIDR format
	ServerAddresses pulumi.StringArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags PolicyDHCPServerTagArrayInput
}

func (PolicyDHCPServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyDHCPServerArgs)(nil)).Elem()
}
