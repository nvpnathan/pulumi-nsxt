// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PolicyGatewayPolicy struct {
	pulumi.CustomResourceState

	// Category
	Category pulumi.StringOutput `pulumi:"category"`
	// Comments for security policy lock/unlock
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// Description for this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Display name for this resource
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The domain name to use for resources. If not specified 'default' is used
	Domain pulumi.StringPtrOutput `pulumi:"domain"`
	// Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this
	// policy
	Locked pulumi.BoolPtrOutput `pulumi:"locked"`
	// NSX ID for this resource
	NsxId pulumi.StringOutput `pulumi:"nsxId"`
	// Policy path for this resource
	Path pulumi.StringOutput `pulumi:"path"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// List of rules in the section
	Rules PolicyGatewayPolicyRuleArrayOutput `pulumi:"rules"`
	// This field is used to resolve conflicts between security policies across domains
	SequenceNumber pulumi.IntPtrOutput `pulumi:"sequenceNumber"`
	// When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed
	Stateful pulumi.BoolPtrOutput `pulumi:"stateful"`
	// Set of opaque identifiers meaningful to the user
	Tags PolicyGatewayPolicyTagArrayOutput `pulumi:"tags"`
	// Ensures that a 3 way TCP handshake is done before the data packets are sent
	TcpStrict pulumi.BoolOutput `pulumi:"tcpStrict"`
}

// NewPolicyGatewayPolicy registers a new resource with the given unique name, arguments, and options.
func NewPolicyGatewayPolicy(ctx *pulumi.Context,
	name string, args *PolicyGatewayPolicyArgs, opts ...pulumi.ResourceOption) (*PolicyGatewayPolicy, error) {
	if args == nil || args.Category == nil {
		return nil, errors.New("missing required argument 'Category'")
	}
	if args == nil || args.DisplayName == nil {
		return nil, errors.New("missing required argument 'DisplayName'")
	}
	if args == nil {
		args = &PolicyGatewayPolicyArgs{}
	}
	var resource PolicyGatewayPolicy
	err := ctx.RegisterResource("nsxt:index/policyGatewayPolicy:PolicyGatewayPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyGatewayPolicy gets an existing PolicyGatewayPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyGatewayPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyGatewayPolicyState, opts ...pulumi.ResourceOption) (*PolicyGatewayPolicy, error) {
	var resource PolicyGatewayPolicy
	err := ctx.ReadResource("nsxt:index/policyGatewayPolicy:PolicyGatewayPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyGatewayPolicy resources.
type policyGatewayPolicyState struct {
	// Category
	Category *string `pulumi:"category"`
	// Comments for security policy lock/unlock
	Comments *string `pulumi:"comments"`
	// Description for this resource
	Description *string `pulumi:"description"`
	// Display name for this resource
	DisplayName *string `pulumi:"displayName"`
	// The domain name to use for resources. If not specified 'default' is used
	Domain *string `pulumi:"domain"`
	// Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this
	// policy
	Locked *bool `pulumi:"locked"`
	// NSX ID for this resource
	NsxId *string `pulumi:"nsxId"`
	// Policy path for this resource
	Path *string `pulumi:"path"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// List of rules in the section
	Rules []PolicyGatewayPolicyRule `pulumi:"rules"`
	// This field is used to resolve conflicts between security policies across domains
	SequenceNumber *int `pulumi:"sequenceNumber"`
	// When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed
	Stateful *bool `pulumi:"stateful"`
	// Set of opaque identifiers meaningful to the user
	Tags []PolicyGatewayPolicyTag `pulumi:"tags"`
	// Ensures that a 3 way TCP handshake is done before the data packets are sent
	TcpStrict *bool `pulumi:"tcpStrict"`
}

type PolicyGatewayPolicyState struct {
	// Category
	Category pulumi.StringPtrInput
	// Comments for security policy lock/unlock
	Comments pulumi.StringPtrInput
	// Description for this resource
	Description pulumi.StringPtrInput
	// Display name for this resource
	DisplayName pulumi.StringPtrInput
	// The domain name to use for resources. If not specified 'default' is used
	Domain pulumi.StringPtrInput
	// Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this
	// policy
	Locked pulumi.BoolPtrInput
	// NSX ID for this resource
	NsxId pulumi.StringPtrInput
	// Policy path for this resource
	Path pulumi.StringPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// List of rules in the section
	Rules PolicyGatewayPolicyRuleArrayInput
	// This field is used to resolve conflicts between security policies across domains
	SequenceNumber pulumi.IntPtrInput
	// When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed
	Stateful pulumi.BoolPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags PolicyGatewayPolicyTagArrayInput
	// Ensures that a 3 way TCP handshake is done before the data packets are sent
	TcpStrict pulumi.BoolPtrInput
}

func (PolicyGatewayPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyGatewayPolicyState)(nil)).Elem()
}

type policyGatewayPolicyArgs struct {
	// Category
	Category string `pulumi:"category"`
	// Comments for security policy lock/unlock
	Comments *string `pulumi:"comments"`
	// Description for this resource
	Description *string `pulumi:"description"`
	// Display name for this resource
	DisplayName string `pulumi:"displayName"`
	// The domain name to use for resources. If not specified 'default' is used
	Domain *string `pulumi:"domain"`
	// Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this
	// policy
	Locked *bool `pulumi:"locked"`
	// NSX ID for this resource
	NsxId *string `pulumi:"nsxId"`
	// List of rules in the section
	Rules []PolicyGatewayPolicyRule `pulumi:"rules"`
	// This field is used to resolve conflicts between security policies across domains
	SequenceNumber *int `pulumi:"sequenceNumber"`
	// When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed
	Stateful *bool `pulumi:"stateful"`
	// Set of opaque identifiers meaningful to the user
	Tags []PolicyGatewayPolicyTag `pulumi:"tags"`
	// Ensures that a 3 way TCP handshake is done before the data packets are sent
	TcpStrict *bool `pulumi:"tcpStrict"`
}

// The set of arguments for constructing a PolicyGatewayPolicy resource.
type PolicyGatewayPolicyArgs struct {
	// Category
	Category pulumi.StringInput
	// Comments for security policy lock/unlock
	Comments pulumi.StringPtrInput
	// Description for this resource
	Description pulumi.StringPtrInput
	// Display name for this resource
	DisplayName pulumi.StringInput
	// The domain name to use for resources. If not specified 'default' is used
	Domain pulumi.StringPtrInput
	// Indicates whether a security policy should be locked. If locked by a user, no other user would be able to modify this
	// policy
	Locked pulumi.BoolPtrInput
	// NSX ID for this resource
	NsxId pulumi.StringPtrInput
	// List of rules in the section
	Rules PolicyGatewayPolicyRuleArrayInput
	// This field is used to resolve conflicts between security policies across domains
	SequenceNumber pulumi.IntPtrInput
	// When it is stateful, the state of the network connects are tracked and a stateful packet inspection is performed
	Stateful pulumi.BoolPtrInput
	// Set of opaque identifiers meaningful to the user
	Tags PolicyGatewayPolicyTagArrayInput
	// Ensures that a 3 way TCP handshake is done before the data packets are sent
	TcpStrict pulumi.BoolPtrInput
}

func (PolicyGatewayPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyGatewayPolicyArgs)(nil)).Elem()
}
