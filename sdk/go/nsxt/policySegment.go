// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PolicySegment struct {
	pulumi.CustomResourceState

	// Advanced segment configuration
	AdvancedConfig PolicySegmentAdvancedConfigPtrOutput `pulumi:"advancedConfig"`
	// Policy path to the connecting Tier-0 or Tier-1
	ConnectivityPath pulumi.StringPtrOutput `pulumi:"connectivityPath"`
	// Description for this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Policy path to DHCP server or relay configuration to use for subnets configured on this segment
	DhcpConfigPath pulumi.StringPtrOutput `pulumi:"dhcpConfigPath"`
	// IP and MAC discovery profiles for this segment
	DiscoveryProfile PolicySegmentDiscoveryProfilePtrOutput `pulumi:"discoveryProfile"`
	// Display name for this resource
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// DNS domain names
	DomainName pulumi.StringPtrOutput `pulumi:"domainName"`
	// Configuration for extending Segment through L2 VPN
	L2Extension PolicySegmentL2ExtensionPtrOutput `pulumi:"l2Extension"`
	// NSX ID for this resource
	NsxId pulumi.StringOutput `pulumi:"nsxId"`
	// Overlay connectivity ID for this Segment
	OverlayId pulumi.IntOutput `pulumi:"overlayId"`
	// Policy path for this resource
	Path pulumi.StringOutput `pulumi:"path"`
	// QoS profiles for this segment
	QosProfile PolicySegmentQosProfilePtrOutput `pulumi:"qosProfile"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// Security profiles for this segment
	SecurityProfile PolicySegmentSecurityProfilePtrOutput `pulumi:"securityProfile"`
	// Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs
	Subnets PolicySegmentSubnetArrayOutput `pulumi:"subnets"`
	// Set of opaque identifiers meaningful to the user
	Tags PolicySegmentTagArrayOutput `pulumi:"tags"`
	// Policy path to the transport zone
	TransportZonePath pulumi.StringOutput `pulumi:"transportZonePath"`
	// VLAN IDs for VLAN backed Segment
	VlanIds pulumi.StringArrayOutput `pulumi:"vlanIds"`
}

// NewPolicySegment registers a new resource with the given unique name, arguments, and options.
func NewPolicySegment(ctx *pulumi.Context,
	name string, args *PolicySegmentArgs, opts ...pulumi.ResourceOption) (*PolicySegment, error) {
	if args == nil || args.DisplayName == nil {
		return nil, errors.New("missing required argument 'DisplayName'")
	}
	if args == nil || args.TransportZonePath == nil {
		return nil, errors.New("missing required argument 'TransportZonePath'")
	}
	if args == nil {
		args = &PolicySegmentArgs{}
	}
	var resource PolicySegment
	err := ctx.RegisterResource("nsxt:index/policySegment:PolicySegment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicySegment gets an existing PolicySegment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicySegment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicySegmentState, opts ...pulumi.ResourceOption) (*PolicySegment, error) {
	var resource PolicySegment
	err := ctx.ReadResource("nsxt:index/policySegment:PolicySegment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicySegment resources.
type policySegmentState struct {
	// Advanced segment configuration
	AdvancedConfig *PolicySegmentAdvancedConfig `pulumi:"advancedConfig"`
	// Policy path to the connecting Tier-0 or Tier-1
	ConnectivityPath *string `pulumi:"connectivityPath"`
	// Description for this resource
	Description *string `pulumi:"description"`
	// Policy path to DHCP server or relay configuration to use for subnets configured on this segment
	DhcpConfigPath *string `pulumi:"dhcpConfigPath"`
	// IP and MAC discovery profiles for this segment
	DiscoveryProfile *PolicySegmentDiscoveryProfile `pulumi:"discoveryProfile"`
	// Display name for this resource
	DisplayName *string `pulumi:"displayName"`
	// DNS domain names
	DomainName *string `pulumi:"domainName"`
	// Configuration for extending Segment through L2 VPN
	L2Extension *PolicySegmentL2Extension `pulumi:"l2Extension"`
	// NSX ID for this resource
	NsxId *string `pulumi:"nsxId"`
	// Overlay connectivity ID for this Segment
	OverlayId *int `pulumi:"overlayId"`
	// Policy path for this resource
	Path *string `pulumi:"path"`
	// QoS profiles for this segment
	QosProfile *PolicySegmentQosProfile `pulumi:"qosProfile"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// Security profiles for this segment
	SecurityProfile *PolicySegmentSecurityProfile `pulumi:"securityProfile"`
	// Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs
	Subnets []PolicySegmentSubnet `pulumi:"subnets"`
	// Set of opaque identifiers meaningful to the user
	Tags []PolicySegmentTag `pulumi:"tags"`
	// Policy path to the transport zone
	TransportZonePath *string `pulumi:"transportZonePath"`
	// VLAN IDs for VLAN backed Segment
	VlanIds []string `pulumi:"vlanIds"`
}

type PolicySegmentState struct {
	// Advanced segment configuration
	AdvancedConfig PolicySegmentAdvancedConfigPtrInput
	// Policy path to the connecting Tier-0 or Tier-1
	ConnectivityPath pulumi.StringPtrInput
	// Description for this resource
	Description pulumi.StringPtrInput
	// Policy path to DHCP server or relay configuration to use for subnets configured on this segment
	DhcpConfigPath pulumi.StringPtrInput
	// IP and MAC discovery profiles for this segment
	DiscoveryProfile PolicySegmentDiscoveryProfilePtrInput
	// Display name for this resource
	DisplayName pulumi.StringPtrInput
	// DNS domain names
	DomainName pulumi.StringPtrInput
	// Configuration for extending Segment through L2 VPN
	L2Extension PolicySegmentL2ExtensionPtrInput
	// NSX ID for this resource
	NsxId pulumi.StringPtrInput
	// Overlay connectivity ID for this Segment
	OverlayId pulumi.IntPtrInput
	// Policy path for this resource
	Path pulumi.StringPtrInput
	// QoS profiles for this segment
	QosProfile PolicySegmentQosProfilePtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// Security profiles for this segment
	SecurityProfile PolicySegmentSecurityProfilePtrInput
	// Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs
	Subnets PolicySegmentSubnetArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags PolicySegmentTagArrayInput
	// Policy path to the transport zone
	TransportZonePath pulumi.StringPtrInput
	// VLAN IDs for VLAN backed Segment
	VlanIds pulumi.StringArrayInput
}

func (PolicySegmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*policySegmentState)(nil)).Elem()
}

type policySegmentArgs struct {
	// Advanced segment configuration
	AdvancedConfig *PolicySegmentAdvancedConfig `pulumi:"advancedConfig"`
	// Policy path to the connecting Tier-0 or Tier-1
	ConnectivityPath *string `pulumi:"connectivityPath"`
	// Description for this resource
	Description *string `pulumi:"description"`
	// Policy path to DHCP server or relay configuration to use for subnets configured on this segment
	DhcpConfigPath *string `pulumi:"dhcpConfigPath"`
	// IP and MAC discovery profiles for this segment
	DiscoveryProfile *PolicySegmentDiscoveryProfile `pulumi:"discoveryProfile"`
	// Display name for this resource
	DisplayName string `pulumi:"displayName"`
	// DNS domain names
	DomainName *string `pulumi:"domainName"`
	// Configuration for extending Segment through L2 VPN
	L2Extension *PolicySegmentL2Extension `pulumi:"l2Extension"`
	// NSX ID for this resource
	NsxId *string `pulumi:"nsxId"`
	// Overlay connectivity ID for this Segment
	OverlayId *int `pulumi:"overlayId"`
	// QoS profiles for this segment
	QosProfile *PolicySegmentQosProfile `pulumi:"qosProfile"`
	// Security profiles for this segment
	SecurityProfile *PolicySegmentSecurityProfile `pulumi:"securityProfile"`
	// Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs
	Subnets []PolicySegmentSubnet `pulumi:"subnets"`
	// Set of opaque identifiers meaningful to the user
	Tags []PolicySegmentTag `pulumi:"tags"`
	// Policy path to the transport zone
	TransportZonePath string `pulumi:"transportZonePath"`
	// VLAN IDs for VLAN backed Segment
	VlanIds []string `pulumi:"vlanIds"`
}

// The set of arguments for constructing a PolicySegment resource.
type PolicySegmentArgs struct {
	// Advanced segment configuration
	AdvancedConfig PolicySegmentAdvancedConfigPtrInput
	// Policy path to the connecting Tier-0 or Tier-1
	ConnectivityPath pulumi.StringPtrInput
	// Description for this resource
	Description pulumi.StringPtrInput
	// Policy path to DHCP server or relay configuration to use for subnets configured on this segment
	DhcpConfigPath pulumi.StringPtrInput
	// IP and MAC discovery profiles for this segment
	DiscoveryProfile PolicySegmentDiscoveryProfilePtrInput
	// Display name for this resource
	DisplayName pulumi.StringInput
	// DNS domain names
	DomainName pulumi.StringPtrInput
	// Configuration for extending Segment through L2 VPN
	L2Extension PolicySegmentL2ExtensionPtrInput
	// NSX ID for this resource
	NsxId pulumi.StringPtrInput
	// Overlay connectivity ID for this Segment
	OverlayId pulumi.IntPtrInput
	// QoS profiles for this segment
	QosProfile PolicySegmentQosProfilePtrInput
	// Security profiles for this segment
	SecurityProfile PolicySegmentSecurityProfilePtrInput
	// Subnet configuration with at most 1 IPv4 CIDR and multiple IPv6 CIDRs
	Subnets PolicySegmentSubnetArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags PolicySegmentTagArrayInput
	// Policy path to the transport zone
	TransportZonePath pulumi.StringInput
	// VLAN IDs for VLAN backed Segment
	VlanIds pulumi.StringArrayInput
}

func (PolicySegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policySegmentArgs)(nil)).Elem()
}
