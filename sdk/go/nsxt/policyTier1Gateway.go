// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PolicyTier1Gateway struct {
	pulumi.CustomResourceState

	// Default rule logging
	DefaultRuleLogging pulumi.BoolPtrOutput `pulumi:"defaultRuleLogging"`
	// Description for this resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Policy path to DHCP server or relay configuration to use for this Tier1
	DhcpConfigPath pulumi.StringPtrOutput `pulumi:"dhcpConfigPath"`
	// Display name for this resource
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The path of the edge cluster connected to this gateway
	EdgeClusterPath pulumi.StringOutput `pulumi:"edgeClusterPath"`
	// Policy path to gateway QoS profile in egress direction
	EgressQosProfilePath pulumi.StringPtrOutput `pulumi:"egressQosProfilePath"`
	// Enable edge firewall
	EnableFirewall pulumi.BoolPtrOutput `pulumi:"enableFirewall"`
	// Enable standby relocation
	EnableStandbyRelocation pulumi.BoolPtrOutput `pulumi:"enableStandbyRelocation"`
	// Failover mode
	FailoverMode pulumi.StringPtrOutput `pulumi:"failoverMode"`
	// Force whitelisting
	//
	// Deprecated: Use nsxt_policy_predefined_gateway_policy resource to control default action
	ForceWhitelisting pulumi.BoolPtrOutput `pulumi:"forceWhitelisting"`
	// Policy path to gateway QoS profile in ingress direction
	IngressQosProfilePath pulumi.StringPtrOutput `pulumi:"ingressQosProfilePath"`
	// Locale Service for the gateway
	IntersiteConfig PolicyTier1GatewayIntersiteConfigOutput `pulumi:"intersiteConfig"`
	// The path of an IPv6 DAD profile
	Ipv6DadProfilePath pulumi.StringOutput `pulumi:"ipv6DadProfilePath"`
	// The path of an IPv6 NDRA profile
	Ipv6NdraProfilePath pulumi.StringOutput `pulumi:"ipv6NdraProfilePath"`
	// Locale Service for the gateway
	LocaleServices PolicyTier1GatewayLocaleServiceArrayOutput `pulumi:"localeServices"`
	// NSX ID for this resource
	NsxId pulumi.StringOutput `pulumi:"nsxId"`
	// Policy path for this resource
	Path pulumi.StringOutput `pulumi:"path"`
	// Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability
	// requirements
	PoolAllocation pulumi.StringPtrOutput `pulumi:"poolAllocation"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntOutput `pulumi:"revision"`
	// List of route advertisement rules
	RouteAdvertisementRules PolicyTier1GatewayRouteAdvertisementRuleArrayOutput `pulumi:"routeAdvertisementRules"`
	// Enable different types of route advertisements
	RouteAdvertisementTypes pulumi.StringArrayOutput `pulumi:"routeAdvertisementTypes"`
	// Set of opaque identifiers meaningful to the user
	Tags PolicyTier1GatewayTagArrayOutput `pulumi:"tags"`
	// The path of the connected Tier0
	Tier0Path pulumi.StringPtrOutput `pulumi:"tier0Path"`
}

// NewPolicyTier1Gateway registers a new resource with the given unique name, arguments, and options.
func NewPolicyTier1Gateway(ctx *pulumi.Context,
	name string, args *PolicyTier1GatewayArgs, opts ...pulumi.ResourceOption) (*PolicyTier1Gateway, error) {
	if args == nil || args.DisplayName == nil {
		return nil, errors.New("missing required argument 'DisplayName'")
	}
	if args == nil {
		args = &PolicyTier1GatewayArgs{}
	}
	var resource PolicyTier1Gateway
	err := ctx.RegisterResource("nsxt:index/policyTier1Gateway:PolicyTier1Gateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyTier1Gateway gets an existing PolicyTier1Gateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyTier1Gateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyTier1GatewayState, opts ...pulumi.ResourceOption) (*PolicyTier1Gateway, error) {
	var resource PolicyTier1Gateway
	err := ctx.ReadResource("nsxt:index/policyTier1Gateway:PolicyTier1Gateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyTier1Gateway resources.
type policyTier1GatewayState struct {
	// Default rule logging
	DefaultRuleLogging *bool `pulumi:"defaultRuleLogging"`
	// Description for this resource
	Description *string `pulumi:"description"`
	// Policy path to DHCP server or relay configuration to use for this Tier1
	DhcpConfigPath *string `pulumi:"dhcpConfigPath"`
	// Display name for this resource
	DisplayName *string `pulumi:"displayName"`
	// The path of the edge cluster connected to this gateway
	EdgeClusterPath *string `pulumi:"edgeClusterPath"`
	// Policy path to gateway QoS profile in egress direction
	EgressQosProfilePath *string `pulumi:"egressQosProfilePath"`
	// Enable edge firewall
	EnableFirewall *bool `pulumi:"enableFirewall"`
	// Enable standby relocation
	EnableStandbyRelocation *bool `pulumi:"enableStandbyRelocation"`
	// Failover mode
	FailoverMode *string `pulumi:"failoverMode"`
	// Force whitelisting
	//
	// Deprecated: Use nsxt_policy_predefined_gateway_policy resource to control default action
	ForceWhitelisting *bool `pulumi:"forceWhitelisting"`
	// Policy path to gateway QoS profile in ingress direction
	IngressQosProfilePath *string `pulumi:"ingressQosProfilePath"`
	// Locale Service for the gateway
	IntersiteConfig *PolicyTier1GatewayIntersiteConfig `pulumi:"intersiteConfig"`
	// The path of an IPv6 DAD profile
	Ipv6DadProfilePath *string `pulumi:"ipv6DadProfilePath"`
	// The path of an IPv6 NDRA profile
	Ipv6NdraProfilePath *string `pulumi:"ipv6NdraProfilePath"`
	// Locale Service for the gateway
	LocaleServices []PolicyTier1GatewayLocaleService `pulumi:"localeServices"`
	// NSX ID for this resource
	NsxId *string `pulumi:"nsxId"`
	// Policy path for this resource
	Path *string `pulumi:"path"`
	// Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability
	// requirements
	PoolAllocation *string `pulumi:"poolAllocation"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *int `pulumi:"revision"`
	// List of route advertisement rules
	RouteAdvertisementRules []PolicyTier1GatewayRouteAdvertisementRule `pulumi:"routeAdvertisementRules"`
	// Enable different types of route advertisements
	RouteAdvertisementTypes []string `pulumi:"routeAdvertisementTypes"`
	// Set of opaque identifiers meaningful to the user
	Tags []PolicyTier1GatewayTag `pulumi:"tags"`
	// The path of the connected Tier0
	Tier0Path *string `pulumi:"tier0Path"`
}

type PolicyTier1GatewayState struct {
	// Default rule logging
	DefaultRuleLogging pulumi.BoolPtrInput
	// Description for this resource
	Description pulumi.StringPtrInput
	// Policy path to DHCP server or relay configuration to use for this Tier1
	DhcpConfigPath pulumi.StringPtrInput
	// Display name for this resource
	DisplayName pulumi.StringPtrInput
	// The path of the edge cluster connected to this gateway
	EdgeClusterPath pulumi.StringPtrInput
	// Policy path to gateway QoS profile in egress direction
	EgressQosProfilePath pulumi.StringPtrInput
	// Enable edge firewall
	EnableFirewall pulumi.BoolPtrInput
	// Enable standby relocation
	EnableStandbyRelocation pulumi.BoolPtrInput
	// Failover mode
	FailoverMode pulumi.StringPtrInput
	// Force whitelisting
	//
	// Deprecated: Use nsxt_policy_predefined_gateway_policy resource to control default action
	ForceWhitelisting pulumi.BoolPtrInput
	// Policy path to gateway QoS profile in ingress direction
	IngressQosProfilePath pulumi.StringPtrInput
	// Locale Service for the gateway
	IntersiteConfig PolicyTier1GatewayIntersiteConfigPtrInput
	// The path of an IPv6 DAD profile
	Ipv6DadProfilePath pulumi.StringPtrInput
	// The path of an IPv6 NDRA profile
	Ipv6NdraProfilePath pulumi.StringPtrInput
	// Locale Service for the gateway
	LocaleServices PolicyTier1GatewayLocaleServiceArrayInput
	// NSX ID for this resource
	NsxId pulumi.StringPtrInput
	// Policy path for this resource
	Path pulumi.StringPtrInput
	// Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability
	// requirements
	PoolAllocation pulumi.StringPtrInput
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
	// changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
	// operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision pulumi.IntPtrInput
	// List of route advertisement rules
	RouteAdvertisementRules PolicyTier1GatewayRouteAdvertisementRuleArrayInput
	// Enable different types of route advertisements
	RouteAdvertisementTypes pulumi.StringArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags PolicyTier1GatewayTagArrayInput
	// The path of the connected Tier0
	Tier0Path pulumi.StringPtrInput
}

func (PolicyTier1GatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyTier1GatewayState)(nil)).Elem()
}

type policyTier1GatewayArgs struct {
	// Default rule logging
	DefaultRuleLogging *bool `pulumi:"defaultRuleLogging"`
	// Description for this resource
	Description *string `pulumi:"description"`
	// Policy path to DHCP server or relay configuration to use for this Tier1
	DhcpConfigPath *string `pulumi:"dhcpConfigPath"`
	// Display name for this resource
	DisplayName string `pulumi:"displayName"`
	// The path of the edge cluster connected to this gateway
	EdgeClusterPath *string `pulumi:"edgeClusterPath"`
	// Policy path to gateway QoS profile in egress direction
	EgressQosProfilePath *string `pulumi:"egressQosProfilePath"`
	// Enable edge firewall
	EnableFirewall *bool `pulumi:"enableFirewall"`
	// Enable standby relocation
	EnableStandbyRelocation *bool `pulumi:"enableStandbyRelocation"`
	// Failover mode
	FailoverMode *string `pulumi:"failoverMode"`
	// Force whitelisting
	//
	// Deprecated: Use nsxt_policy_predefined_gateway_policy resource to control default action
	ForceWhitelisting *bool `pulumi:"forceWhitelisting"`
	// Policy path to gateway QoS profile in ingress direction
	IngressQosProfilePath *string `pulumi:"ingressQosProfilePath"`
	// Locale Service for the gateway
	IntersiteConfig *PolicyTier1GatewayIntersiteConfig `pulumi:"intersiteConfig"`
	// The path of an IPv6 DAD profile
	Ipv6DadProfilePath *string `pulumi:"ipv6DadProfilePath"`
	// The path of an IPv6 NDRA profile
	Ipv6NdraProfilePath *string `pulumi:"ipv6NdraProfilePath"`
	// Locale Service for the gateway
	LocaleServices []PolicyTier1GatewayLocaleService `pulumi:"localeServices"`
	// NSX ID for this resource
	NsxId *string `pulumi:"nsxId"`
	// Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability
	// requirements
	PoolAllocation *string `pulumi:"poolAllocation"`
	// List of route advertisement rules
	RouteAdvertisementRules []PolicyTier1GatewayRouteAdvertisementRule `pulumi:"routeAdvertisementRules"`
	// Enable different types of route advertisements
	RouteAdvertisementTypes []string `pulumi:"routeAdvertisementTypes"`
	// Set of opaque identifiers meaningful to the user
	Tags []PolicyTier1GatewayTag `pulumi:"tags"`
	// The path of the connected Tier0
	Tier0Path *string `pulumi:"tier0Path"`
}

// The set of arguments for constructing a PolicyTier1Gateway resource.
type PolicyTier1GatewayArgs struct {
	// Default rule logging
	DefaultRuleLogging pulumi.BoolPtrInput
	// Description for this resource
	Description pulumi.StringPtrInput
	// Policy path to DHCP server or relay configuration to use for this Tier1
	DhcpConfigPath pulumi.StringPtrInput
	// Display name for this resource
	DisplayName pulumi.StringInput
	// The path of the edge cluster connected to this gateway
	EdgeClusterPath pulumi.StringPtrInput
	// Policy path to gateway QoS profile in egress direction
	EgressQosProfilePath pulumi.StringPtrInput
	// Enable edge firewall
	EnableFirewall pulumi.BoolPtrInput
	// Enable standby relocation
	EnableStandbyRelocation pulumi.BoolPtrInput
	// Failover mode
	FailoverMode pulumi.StringPtrInput
	// Force whitelisting
	//
	// Deprecated: Use nsxt_policy_predefined_gateway_policy resource to control default action
	ForceWhitelisting pulumi.BoolPtrInput
	// Policy path to gateway QoS profile in ingress direction
	IngressQosProfilePath pulumi.StringPtrInput
	// Locale Service for the gateway
	IntersiteConfig PolicyTier1GatewayIntersiteConfigPtrInput
	// The path of an IPv6 DAD profile
	Ipv6DadProfilePath pulumi.StringPtrInput
	// The path of an IPv6 NDRA profile
	Ipv6NdraProfilePath pulumi.StringPtrInput
	// Locale Service for the gateway
	LocaleServices PolicyTier1GatewayLocaleServiceArrayInput
	// NSX ID for this resource
	NsxId pulumi.StringPtrInput
	// Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability
	// requirements
	PoolAllocation pulumi.StringPtrInput
	// List of route advertisement rules
	RouteAdvertisementRules PolicyTier1GatewayRouteAdvertisementRuleArrayInput
	// Enable different types of route advertisements
	RouteAdvertisementTypes pulumi.StringArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags PolicyTier1GatewayTagArrayInput
	// The path of the connected Tier0
	Tier0Path pulumi.StringPtrInput
}

func (PolicyTier1GatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyTier1GatewayArgs)(nil)).Elem()
}
