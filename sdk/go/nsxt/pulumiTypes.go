// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AlgorithmTypeNSServiceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// AlgorithmTypeNSServiceTagInput is an input type that accepts AlgorithmTypeNSServiceTagArgs and AlgorithmTypeNSServiceTagOutput values.
// You can construct a concrete instance of `AlgorithmTypeNSServiceTagInput` via:
//
//          AlgorithmTypeNSServiceTagArgs{...}
type AlgorithmTypeNSServiceTagInput interface {
	pulumi.Input

	ToAlgorithmTypeNSServiceTagOutput() AlgorithmTypeNSServiceTagOutput
	ToAlgorithmTypeNSServiceTagOutputWithContext(context.Context) AlgorithmTypeNSServiceTagOutput
}

type AlgorithmTypeNSServiceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (AlgorithmTypeNSServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlgorithmTypeNSServiceTag)(nil)).Elem()
}

func (i AlgorithmTypeNSServiceTagArgs) ToAlgorithmTypeNSServiceTagOutput() AlgorithmTypeNSServiceTagOutput {
	return i.ToAlgorithmTypeNSServiceTagOutputWithContext(context.Background())
}

func (i AlgorithmTypeNSServiceTagArgs) ToAlgorithmTypeNSServiceTagOutputWithContext(ctx context.Context) AlgorithmTypeNSServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlgorithmTypeNSServiceTagOutput)
}

// AlgorithmTypeNSServiceTagArrayInput is an input type that accepts AlgorithmTypeNSServiceTagArray and AlgorithmTypeNSServiceTagArrayOutput values.
// You can construct a concrete instance of `AlgorithmTypeNSServiceTagArrayInput` via:
//
//          AlgorithmTypeNSServiceTagArray{ AlgorithmTypeNSServiceTagArgs{...} }
type AlgorithmTypeNSServiceTagArrayInput interface {
	pulumi.Input

	ToAlgorithmTypeNSServiceTagArrayOutput() AlgorithmTypeNSServiceTagArrayOutput
	ToAlgorithmTypeNSServiceTagArrayOutputWithContext(context.Context) AlgorithmTypeNSServiceTagArrayOutput
}

type AlgorithmTypeNSServiceTagArray []AlgorithmTypeNSServiceTagInput

func (AlgorithmTypeNSServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlgorithmTypeNSServiceTag)(nil)).Elem()
}

func (i AlgorithmTypeNSServiceTagArray) ToAlgorithmTypeNSServiceTagArrayOutput() AlgorithmTypeNSServiceTagArrayOutput {
	return i.ToAlgorithmTypeNSServiceTagArrayOutputWithContext(context.Background())
}

func (i AlgorithmTypeNSServiceTagArray) ToAlgorithmTypeNSServiceTagArrayOutputWithContext(ctx context.Context) AlgorithmTypeNSServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlgorithmTypeNSServiceTagArrayOutput)
}

type AlgorithmTypeNSServiceTagOutput struct{ *pulumi.OutputState }

func (AlgorithmTypeNSServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlgorithmTypeNSServiceTag)(nil)).Elem()
}

func (o AlgorithmTypeNSServiceTagOutput) ToAlgorithmTypeNSServiceTagOutput() AlgorithmTypeNSServiceTagOutput {
	return o
}

func (o AlgorithmTypeNSServiceTagOutput) ToAlgorithmTypeNSServiceTagOutputWithContext(ctx context.Context) AlgorithmTypeNSServiceTagOutput {
	return o
}

func (o AlgorithmTypeNSServiceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlgorithmTypeNSServiceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o AlgorithmTypeNSServiceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlgorithmTypeNSServiceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type AlgorithmTypeNSServiceTagArrayOutput struct{ *pulumi.OutputState }

func (AlgorithmTypeNSServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlgorithmTypeNSServiceTag)(nil)).Elem()
}

func (o AlgorithmTypeNSServiceTagArrayOutput) ToAlgorithmTypeNSServiceTagArrayOutput() AlgorithmTypeNSServiceTagArrayOutput {
	return o
}

func (o AlgorithmTypeNSServiceTagArrayOutput) ToAlgorithmTypeNSServiceTagArrayOutputWithContext(ctx context.Context) AlgorithmTypeNSServiceTagArrayOutput {
	return o
}

func (o AlgorithmTypeNSServiceTagArrayOutput) Index(i pulumi.IntInput) AlgorithmTypeNSServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlgorithmTypeNSServiceTag {
		return vs[0].([]AlgorithmTypeNSServiceTag)[vs[1].(int)]
	}).(AlgorithmTypeNSServiceTagOutput)
}

type DHCPRelayProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// DHCPRelayProfileTagInput is an input type that accepts DHCPRelayProfileTagArgs and DHCPRelayProfileTagOutput values.
// You can construct a concrete instance of `DHCPRelayProfileTagInput` via:
//
//          DHCPRelayProfileTagArgs{...}
type DHCPRelayProfileTagInput interface {
	pulumi.Input

	ToDHCPRelayProfileTagOutput() DHCPRelayProfileTagOutput
	ToDHCPRelayProfileTagOutputWithContext(context.Context) DHCPRelayProfileTagOutput
}

type DHCPRelayProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (DHCPRelayProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPRelayProfileTag)(nil)).Elem()
}

func (i DHCPRelayProfileTagArgs) ToDHCPRelayProfileTagOutput() DHCPRelayProfileTagOutput {
	return i.ToDHCPRelayProfileTagOutputWithContext(context.Background())
}

func (i DHCPRelayProfileTagArgs) ToDHCPRelayProfileTagOutputWithContext(ctx context.Context) DHCPRelayProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPRelayProfileTagOutput)
}

// DHCPRelayProfileTagArrayInput is an input type that accepts DHCPRelayProfileTagArray and DHCPRelayProfileTagArrayOutput values.
// You can construct a concrete instance of `DHCPRelayProfileTagArrayInput` via:
//
//          DHCPRelayProfileTagArray{ DHCPRelayProfileTagArgs{...} }
type DHCPRelayProfileTagArrayInput interface {
	pulumi.Input

	ToDHCPRelayProfileTagArrayOutput() DHCPRelayProfileTagArrayOutput
	ToDHCPRelayProfileTagArrayOutputWithContext(context.Context) DHCPRelayProfileTagArrayOutput
}

type DHCPRelayProfileTagArray []DHCPRelayProfileTagInput

func (DHCPRelayProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPRelayProfileTag)(nil)).Elem()
}

func (i DHCPRelayProfileTagArray) ToDHCPRelayProfileTagArrayOutput() DHCPRelayProfileTagArrayOutput {
	return i.ToDHCPRelayProfileTagArrayOutputWithContext(context.Background())
}

func (i DHCPRelayProfileTagArray) ToDHCPRelayProfileTagArrayOutputWithContext(ctx context.Context) DHCPRelayProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPRelayProfileTagArrayOutput)
}

type DHCPRelayProfileTagOutput struct{ *pulumi.OutputState }

func (DHCPRelayProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPRelayProfileTag)(nil)).Elem()
}

func (o DHCPRelayProfileTagOutput) ToDHCPRelayProfileTagOutput() DHCPRelayProfileTagOutput {
	return o
}

func (o DHCPRelayProfileTagOutput) ToDHCPRelayProfileTagOutputWithContext(ctx context.Context) DHCPRelayProfileTagOutput {
	return o
}

func (o DHCPRelayProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DHCPRelayProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o DHCPRelayProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DHCPRelayProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type DHCPRelayProfileTagArrayOutput struct{ *pulumi.OutputState }

func (DHCPRelayProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPRelayProfileTag)(nil)).Elem()
}

func (o DHCPRelayProfileTagArrayOutput) ToDHCPRelayProfileTagArrayOutput() DHCPRelayProfileTagArrayOutput {
	return o
}

func (o DHCPRelayProfileTagArrayOutput) ToDHCPRelayProfileTagArrayOutputWithContext(ctx context.Context) DHCPRelayProfileTagArrayOutput {
	return o
}

func (o DHCPRelayProfileTagArrayOutput) Index(i pulumi.IntInput) DHCPRelayProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DHCPRelayProfileTag {
		return vs[0].([]DHCPRelayProfileTag)[vs[1].(int)]
	}).(DHCPRelayProfileTagOutput)
}

type DHCPRelayServiceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// DHCPRelayServiceTagInput is an input type that accepts DHCPRelayServiceTagArgs and DHCPRelayServiceTagOutput values.
// You can construct a concrete instance of `DHCPRelayServiceTagInput` via:
//
//          DHCPRelayServiceTagArgs{...}
type DHCPRelayServiceTagInput interface {
	pulumi.Input

	ToDHCPRelayServiceTagOutput() DHCPRelayServiceTagOutput
	ToDHCPRelayServiceTagOutputWithContext(context.Context) DHCPRelayServiceTagOutput
}

type DHCPRelayServiceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (DHCPRelayServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPRelayServiceTag)(nil)).Elem()
}

func (i DHCPRelayServiceTagArgs) ToDHCPRelayServiceTagOutput() DHCPRelayServiceTagOutput {
	return i.ToDHCPRelayServiceTagOutputWithContext(context.Background())
}

func (i DHCPRelayServiceTagArgs) ToDHCPRelayServiceTagOutputWithContext(ctx context.Context) DHCPRelayServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPRelayServiceTagOutput)
}

// DHCPRelayServiceTagArrayInput is an input type that accepts DHCPRelayServiceTagArray and DHCPRelayServiceTagArrayOutput values.
// You can construct a concrete instance of `DHCPRelayServiceTagArrayInput` via:
//
//          DHCPRelayServiceTagArray{ DHCPRelayServiceTagArgs{...} }
type DHCPRelayServiceTagArrayInput interface {
	pulumi.Input

	ToDHCPRelayServiceTagArrayOutput() DHCPRelayServiceTagArrayOutput
	ToDHCPRelayServiceTagArrayOutputWithContext(context.Context) DHCPRelayServiceTagArrayOutput
}

type DHCPRelayServiceTagArray []DHCPRelayServiceTagInput

func (DHCPRelayServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPRelayServiceTag)(nil)).Elem()
}

func (i DHCPRelayServiceTagArray) ToDHCPRelayServiceTagArrayOutput() DHCPRelayServiceTagArrayOutput {
	return i.ToDHCPRelayServiceTagArrayOutputWithContext(context.Background())
}

func (i DHCPRelayServiceTagArray) ToDHCPRelayServiceTagArrayOutputWithContext(ctx context.Context) DHCPRelayServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPRelayServiceTagArrayOutput)
}

type DHCPRelayServiceTagOutput struct{ *pulumi.OutputState }

func (DHCPRelayServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPRelayServiceTag)(nil)).Elem()
}

func (o DHCPRelayServiceTagOutput) ToDHCPRelayServiceTagOutput() DHCPRelayServiceTagOutput {
	return o
}

func (o DHCPRelayServiceTagOutput) ToDHCPRelayServiceTagOutputWithContext(ctx context.Context) DHCPRelayServiceTagOutput {
	return o
}

func (o DHCPRelayServiceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DHCPRelayServiceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o DHCPRelayServiceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DHCPRelayServiceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type DHCPRelayServiceTagArrayOutput struct{ *pulumi.OutputState }

func (DHCPRelayServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPRelayServiceTag)(nil)).Elem()
}

func (o DHCPRelayServiceTagArrayOutput) ToDHCPRelayServiceTagArrayOutput() DHCPRelayServiceTagArrayOutput {
	return o
}

func (o DHCPRelayServiceTagArrayOutput) ToDHCPRelayServiceTagArrayOutputWithContext(ctx context.Context) DHCPRelayServiceTagArrayOutput {
	return o
}

func (o DHCPRelayServiceTagArrayOutput) Index(i pulumi.IntInput) DHCPRelayServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DHCPRelayServiceTag {
		return vs[0].([]DHCPRelayServiceTag)[vs[1].(int)]
	}).(DHCPRelayServiceTagOutput)
}

type DHCPServerIPPoolDhcpGenericOption struct {
	Code   int      `pulumi:"code"`
	Values []string `pulumi:"values"`
}

// DHCPServerIPPoolDhcpGenericOptionInput is an input type that accepts DHCPServerIPPoolDhcpGenericOptionArgs and DHCPServerIPPoolDhcpGenericOptionOutput values.
// You can construct a concrete instance of `DHCPServerIPPoolDhcpGenericOptionInput` via:
//
//          DHCPServerIPPoolDhcpGenericOptionArgs{...}
type DHCPServerIPPoolDhcpGenericOptionInput interface {
	pulumi.Input

	ToDHCPServerIPPoolDhcpGenericOptionOutput() DHCPServerIPPoolDhcpGenericOptionOutput
	ToDHCPServerIPPoolDhcpGenericOptionOutputWithContext(context.Context) DHCPServerIPPoolDhcpGenericOptionOutput
}

type DHCPServerIPPoolDhcpGenericOptionArgs struct {
	Code   pulumi.IntInput         `pulumi:"code"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DHCPServerIPPoolDhcpGenericOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPServerIPPoolDhcpGenericOption)(nil)).Elem()
}

func (i DHCPServerIPPoolDhcpGenericOptionArgs) ToDHCPServerIPPoolDhcpGenericOptionOutput() DHCPServerIPPoolDhcpGenericOptionOutput {
	return i.ToDHCPServerIPPoolDhcpGenericOptionOutputWithContext(context.Background())
}

func (i DHCPServerIPPoolDhcpGenericOptionArgs) ToDHCPServerIPPoolDhcpGenericOptionOutputWithContext(ctx context.Context) DHCPServerIPPoolDhcpGenericOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPServerIPPoolDhcpGenericOptionOutput)
}

// DHCPServerIPPoolDhcpGenericOptionArrayInput is an input type that accepts DHCPServerIPPoolDhcpGenericOptionArray and DHCPServerIPPoolDhcpGenericOptionArrayOutput values.
// You can construct a concrete instance of `DHCPServerIPPoolDhcpGenericOptionArrayInput` via:
//
//          DHCPServerIPPoolDhcpGenericOptionArray{ DHCPServerIPPoolDhcpGenericOptionArgs{...} }
type DHCPServerIPPoolDhcpGenericOptionArrayInput interface {
	pulumi.Input

	ToDHCPServerIPPoolDhcpGenericOptionArrayOutput() DHCPServerIPPoolDhcpGenericOptionArrayOutput
	ToDHCPServerIPPoolDhcpGenericOptionArrayOutputWithContext(context.Context) DHCPServerIPPoolDhcpGenericOptionArrayOutput
}

type DHCPServerIPPoolDhcpGenericOptionArray []DHCPServerIPPoolDhcpGenericOptionInput

func (DHCPServerIPPoolDhcpGenericOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPServerIPPoolDhcpGenericOption)(nil)).Elem()
}

func (i DHCPServerIPPoolDhcpGenericOptionArray) ToDHCPServerIPPoolDhcpGenericOptionArrayOutput() DHCPServerIPPoolDhcpGenericOptionArrayOutput {
	return i.ToDHCPServerIPPoolDhcpGenericOptionArrayOutputWithContext(context.Background())
}

func (i DHCPServerIPPoolDhcpGenericOptionArray) ToDHCPServerIPPoolDhcpGenericOptionArrayOutputWithContext(ctx context.Context) DHCPServerIPPoolDhcpGenericOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPServerIPPoolDhcpGenericOptionArrayOutput)
}

type DHCPServerIPPoolDhcpGenericOptionOutput struct{ *pulumi.OutputState }

func (DHCPServerIPPoolDhcpGenericOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPServerIPPoolDhcpGenericOption)(nil)).Elem()
}

func (o DHCPServerIPPoolDhcpGenericOptionOutput) ToDHCPServerIPPoolDhcpGenericOptionOutput() DHCPServerIPPoolDhcpGenericOptionOutput {
	return o
}

func (o DHCPServerIPPoolDhcpGenericOptionOutput) ToDHCPServerIPPoolDhcpGenericOptionOutputWithContext(ctx context.Context) DHCPServerIPPoolDhcpGenericOptionOutput {
	return o
}

func (o DHCPServerIPPoolDhcpGenericOptionOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v DHCPServerIPPoolDhcpGenericOption) int { return v.Code }).(pulumi.IntOutput)
}

func (o DHCPServerIPPoolDhcpGenericOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DHCPServerIPPoolDhcpGenericOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DHCPServerIPPoolDhcpGenericOptionArrayOutput struct{ *pulumi.OutputState }

func (DHCPServerIPPoolDhcpGenericOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPServerIPPoolDhcpGenericOption)(nil)).Elem()
}

func (o DHCPServerIPPoolDhcpGenericOptionArrayOutput) ToDHCPServerIPPoolDhcpGenericOptionArrayOutput() DHCPServerIPPoolDhcpGenericOptionArrayOutput {
	return o
}

func (o DHCPServerIPPoolDhcpGenericOptionArrayOutput) ToDHCPServerIPPoolDhcpGenericOptionArrayOutputWithContext(ctx context.Context) DHCPServerIPPoolDhcpGenericOptionArrayOutput {
	return o
}

func (o DHCPServerIPPoolDhcpGenericOptionArrayOutput) Index(i pulumi.IntInput) DHCPServerIPPoolDhcpGenericOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DHCPServerIPPoolDhcpGenericOption {
		return vs[0].([]DHCPServerIPPoolDhcpGenericOption)[vs[1].(int)]
	}).(DHCPServerIPPoolDhcpGenericOptionOutput)
}

type DHCPServerIPPoolDhcpOption121 struct {
	Network string `pulumi:"network"`
	NextHop string `pulumi:"nextHop"`
}

// DHCPServerIPPoolDhcpOption121Input is an input type that accepts DHCPServerIPPoolDhcpOption121Args and DHCPServerIPPoolDhcpOption121Output values.
// You can construct a concrete instance of `DHCPServerIPPoolDhcpOption121Input` via:
//
//          DHCPServerIPPoolDhcpOption121Args{...}
type DHCPServerIPPoolDhcpOption121Input interface {
	pulumi.Input

	ToDHCPServerIPPoolDhcpOption121Output() DHCPServerIPPoolDhcpOption121Output
	ToDHCPServerIPPoolDhcpOption121OutputWithContext(context.Context) DHCPServerIPPoolDhcpOption121Output
}

type DHCPServerIPPoolDhcpOption121Args struct {
	Network pulumi.StringInput `pulumi:"network"`
	NextHop pulumi.StringInput `pulumi:"nextHop"`
}

func (DHCPServerIPPoolDhcpOption121Args) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPServerIPPoolDhcpOption121)(nil)).Elem()
}

func (i DHCPServerIPPoolDhcpOption121Args) ToDHCPServerIPPoolDhcpOption121Output() DHCPServerIPPoolDhcpOption121Output {
	return i.ToDHCPServerIPPoolDhcpOption121OutputWithContext(context.Background())
}

func (i DHCPServerIPPoolDhcpOption121Args) ToDHCPServerIPPoolDhcpOption121OutputWithContext(ctx context.Context) DHCPServerIPPoolDhcpOption121Output {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPServerIPPoolDhcpOption121Output)
}

// DHCPServerIPPoolDhcpOption121ArrayInput is an input type that accepts DHCPServerIPPoolDhcpOption121Array and DHCPServerIPPoolDhcpOption121ArrayOutput values.
// You can construct a concrete instance of `DHCPServerIPPoolDhcpOption121ArrayInput` via:
//
//          DHCPServerIPPoolDhcpOption121Array{ DHCPServerIPPoolDhcpOption121Args{...} }
type DHCPServerIPPoolDhcpOption121ArrayInput interface {
	pulumi.Input

	ToDHCPServerIPPoolDhcpOption121ArrayOutput() DHCPServerIPPoolDhcpOption121ArrayOutput
	ToDHCPServerIPPoolDhcpOption121ArrayOutputWithContext(context.Context) DHCPServerIPPoolDhcpOption121ArrayOutput
}

type DHCPServerIPPoolDhcpOption121Array []DHCPServerIPPoolDhcpOption121Input

func (DHCPServerIPPoolDhcpOption121Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPServerIPPoolDhcpOption121)(nil)).Elem()
}

func (i DHCPServerIPPoolDhcpOption121Array) ToDHCPServerIPPoolDhcpOption121ArrayOutput() DHCPServerIPPoolDhcpOption121ArrayOutput {
	return i.ToDHCPServerIPPoolDhcpOption121ArrayOutputWithContext(context.Background())
}

func (i DHCPServerIPPoolDhcpOption121Array) ToDHCPServerIPPoolDhcpOption121ArrayOutputWithContext(ctx context.Context) DHCPServerIPPoolDhcpOption121ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPServerIPPoolDhcpOption121ArrayOutput)
}

type DHCPServerIPPoolDhcpOption121Output struct{ *pulumi.OutputState }

func (DHCPServerIPPoolDhcpOption121Output) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPServerIPPoolDhcpOption121)(nil)).Elem()
}

func (o DHCPServerIPPoolDhcpOption121Output) ToDHCPServerIPPoolDhcpOption121Output() DHCPServerIPPoolDhcpOption121Output {
	return o
}

func (o DHCPServerIPPoolDhcpOption121Output) ToDHCPServerIPPoolDhcpOption121OutputWithContext(ctx context.Context) DHCPServerIPPoolDhcpOption121Output {
	return o
}

func (o DHCPServerIPPoolDhcpOption121Output) Network() pulumi.StringOutput {
	return o.ApplyT(func(v DHCPServerIPPoolDhcpOption121) string { return v.Network }).(pulumi.StringOutput)
}

func (o DHCPServerIPPoolDhcpOption121Output) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v DHCPServerIPPoolDhcpOption121) string { return v.NextHop }).(pulumi.StringOutput)
}

type DHCPServerIPPoolDhcpOption121ArrayOutput struct{ *pulumi.OutputState }

func (DHCPServerIPPoolDhcpOption121ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPServerIPPoolDhcpOption121)(nil)).Elem()
}

func (o DHCPServerIPPoolDhcpOption121ArrayOutput) ToDHCPServerIPPoolDhcpOption121ArrayOutput() DHCPServerIPPoolDhcpOption121ArrayOutput {
	return o
}

func (o DHCPServerIPPoolDhcpOption121ArrayOutput) ToDHCPServerIPPoolDhcpOption121ArrayOutputWithContext(ctx context.Context) DHCPServerIPPoolDhcpOption121ArrayOutput {
	return o
}

func (o DHCPServerIPPoolDhcpOption121ArrayOutput) Index(i pulumi.IntInput) DHCPServerIPPoolDhcpOption121Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DHCPServerIPPoolDhcpOption121 {
		return vs[0].([]DHCPServerIPPoolDhcpOption121)[vs[1].(int)]
	}).(DHCPServerIPPoolDhcpOption121Output)
}

type DHCPServerIPPoolIpRange struct {
	End   string `pulumi:"end"`
	Start string `pulumi:"start"`
}

// DHCPServerIPPoolIpRangeInput is an input type that accepts DHCPServerIPPoolIpRangeArgs and DHCPServerIPPoolIpRangeOutput values.
// You can construct a concrete instance of `DHCPServerIPPoolIpRangeInput` via:
//
//          DHCPServerIPPoolIpRangeArgs{...}
type DHCPServerIPPoolIpRangeInput interface {
	pulumi.Input

	ToDHCPServerIPPoolIpRangeOutput() DHCPServerIPPoolIpRangeOutput
	ToDHCPServerIPPoolIpRangeOutputWithContext(context.Context) DHCPServerIPPoolIpRangeOutput
}

type DHCPServerIPPoolIpRangeArgs struct {
	End   pulumi.StringInput `pulumi:"end"`
	Start pulumi.StringInput `pulumi:"start"`
}

func (DHCPServerIPPoolIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPServerIPPoolIpRange)(nil)).Elem()
}

func (i DHCPServerIPPoolIpRangeArgs) ToDHCPServerIPPoolIpRangeOutput() DHCPServerIPPoolIpRangeOutput {
	return i.ToDHCPServerIPPoolIpRangeOutputWithContext(context.Background())
}

func (i DHCPServerIPPoolIpRangeArgs) ToDHCPServerIPPoolIpRangeOutputWithContext(ctx context.Context) DHCPServerIPPoolIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPServerIPPoolIpRangeOutput)
}

// DHCPServerIPPoolIpRangeArrayInput is an input type that accepts DHCPServerIPPoolIpRangeArray and DHCPServerIPPoolIpRangeArrayOutput values.
// You can construct a concrete instance of `DHCPServerIPPoolIpRangeArrayInput` via:
//
//          DHCPServerIPPoolIpRangeArray{ DHCPServerIPPoolIpRangeArgs{...} }
type DHCPServerIPPoolIpRangeArrayInput interface {
	pulumi.Input

	ToDHCPServerIPPoolIpRangeArrayOutput() DHCPServerIPPoolIpRangeArrayOutput
	ToDHCPServerIPPoolIpRangeArrayOutputWithContext(context.Context) DHCPServerIPPoolIpRangeArrayOutput
}

type DHCPServerIPPoolIpRangeArray []DHCPServerIPPoolIpRangeInput

func (DHCPServerIPPoolIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPServerIPPoolIpRange)(nil)).Elem()
}

func (i DHCPServerIPPoolIpRangeArray) ToDHCPServerIPPoolIpRangeArrayOutput() DHCPServerIPPoolIpRangeArrayOutput {
	return i.ToDHCPServerIPPoolIpRangeArrayOutputWithContext(context.Background())
}

func (i DHCPServerIPPoolIpRangeArray) ToDHCPServerIPPoolIpRangeArrayOutputWithContext(ctx context.Context) DHCPServerIPPoolIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPServerIPPoolIpRangeArrayOutput)
}

type DHCPServerIPPoolIpRangeOutput struct{ *pulumi.OutputState }

func (DHCPServerIPPoolIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPServerIPPoolIpRange)(nil)).Elem()
}

func (o DHCPServerIPPoolIpRangeOutput) ToDHCPServerIPPoolIpRangeOutput() DHCPServerIPPoolIpRangeOutput {
	return o
}

func (o DHCPServerIPPoolIpRangeOutput) ToDHCPServerIPPoolIpRangeOutputWithContext(ctx context.Context) DHCPServerIPPoolIpRangeOutput {
	return o
}

func (o DHCPServerIPPoolIpRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v DHCPServerIPPoolIpRange) string { return v.End }).(pulumi.StringOutput)
}

func (o DHCPServerIPPoolIpRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v DHCPServerIPPoolIpRange) string { return v.Start }).(pulumi.StringOutput)
}

type DHCPServerIPPoolIpRangeArrayOutput struct{ *pulumi.OutputState }

func (DHCPServerIPPoolIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPServerIPPoolIpRange)(nil)).Elem()
}

func (o DHCPServerIPPoolIpRangeArrayOutput) ToDHCPServerIPPoolIpRangeArrayOutput() DHCPServerIPPoolIpRangeArrayOutput {
	return o
}

func (o DHCPServerIPPoolIpRangeArrayOutput) ToDHCPServerIPPoolIpRangeArrayOutputWithContext(ctx context.Context) DHCPServerIPPoolIpRangeArrayOutput {
	return o
}

func (o DHCPServerIPPoolIpRangeArrayOutput) Index(i pulumi.IntInput) DHCPServerIPPoolIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DHCPServerIPPoolIpRange {
		return vs[0].([]DHCPServerIPPoolIpRange)[vs[1].(int)]
	}).(DHCPServerIPPoolIpRangeOutput)
}

type DHCPServerIPPoolTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// DHCPServerIPPoolTagInput is an input type that accepts DHCPServerIPPoolTagArgs and DHCPServerIPPoolTagOutput values.
// You can construct a concrete instance of `DHCPServerIPPoolTagInput` via:
//
//          DHCPServerIPPoolTagArgs{...}
type DHCPServerIPPoolTagInput interface {
	pulumi.Input

	ToDHCPServerIPPoolTagOutput() DHCPServerIPPoolTagOutput
	ToDHCPServerIPPoolTagOutputWithContext(context.Context) DHCPServerIPPoolTagOutput
}

type DHCPServerIPPoolTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (DHCPServerIPPoolTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPServerIPPoolTag)(nil)).Elem()
}

func (i DHCPServerIPPoolTagArgs) ToDHCPServerIPPoolTagOutput() DHCPServerIPPoolTagOutput {
	return i.ToDHCPServerIPPoolTagOutputWithContext(context.Background())
}

func (i DHCPServerIPPoolTagArgs) ToDHCPServerIPPoolTagOutputWithContext(ctx context.Context) DHCPServerIPPoolTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPServerIPPoolTagOutput)
}

// DHCPServerIPPoolTagArrayInput is an input type that accepts DHCPServerIPPoolTagArray and DHCPServerIPPoolTagArrayOutput values.
// You can construct a concrete instance of `DHCPServerIPPoolTagArrayInput` via:
//
//          DHCPServerIPPoolTagArray{ DHCPServerIPPoolTagArgs{...} }
type DHCPServerIPPoolTagArrayInput interface {
	pulumi.Input

	ToDHCPServerIPPoolTagArrayOutput() DHCPServerIPPoolTagArrayOutput
	ToDHCPServerIPPoolTagArrayOutputWithContext(context.Context) DHCPServerIPPoolTagArrayOutput
}

type DHCPServerIPPoolTagArray []DHCPServerIPPoolTagInput

func (DHCPServerIPPoolTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPServerIPPoolTag)(nil)).Elem()
}

func (i DHCPServerIPPoolTagArray) ToDHCPServerIPPoolTagArrayOutput() DHCPServerIPPoolTagArrayOutput {
	return i.ToDHCPServerIPPoolTagArrayOutputWithContext(context.Background())
}

func (i DHCPServerIPPoolTagArray) ToDHCPServerIPPoolTagArrayOutputWithContext(ctx context.Context) DHCPServerIPPoolTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPServerIPPoolTagArrayOutput)
}

type DHCPServerIPPoolTagOutput struct{ *pulumi.OutputState }

func (DHCPServerIPPoolTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPServerIPPoolTag)(nil)).Elem()
}

func (o DHCPServerIPPoolTagOutput) ToDHCPServerIPPoolTagOutput() DHCPServerIPPoolTagOutput {
	return o
}

func (o DHCPServerIPPoolTagOutput) ToDHCPServerIPPoolTagOutputWithContext(ctx context.Context) DHCPServerIPPoolTagOutput {
	return o
}

func (o DHCPServerIPPoolTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DHCPServerIPPoolTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o DHCPServerIPPoolTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DHCPServerIPPoolTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type DHCPServerIPPoolTagArrayOutput struct{ *pulumi.OutputState }

func (DHCPServerIPPoolTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPServerIPPoolTag)(nil)).Elem()
}

func (o DHCPServerIPPoolTagArrayOutput) ToDHCPServerIPPoolTagArrayOutput() DHCPServerIPPoolTagArrayOutput {
	return o
}

func (o DHCPServerIPPoolTagArrayOutput) ToDHCPServerIPPoolTagArrayOutputWithContext(ctx context.Context) DHCPServerIPPoolTagArrayOutput {
	return o
}

func (o DHCPServerIPPoolTagArrayOutput) Index(i pulumi.IntInput) DHCPServerIPPoolTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DHCPServerIPPoolTag {
		return vs[0].([]DHCPServerIPPoolTag)[vs[1].(int)]
	}).(DHCPServerIPPoolTagOutput)
}

type DHCPServerProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// DHCPServerProfileTagInput is an input type that accepts DHCPServerProfileTagArgs and DHCPServerProfileTagOutput values.
// You can construct a concrete instance of `DHCPServerProfileTagInput` via:
//
//          DHCPServerProfileTagArgs{...}
type DHCPServerProfileTagInput interface {
	pulumi.Input

	ToDHCPServerProfileTagOutput() DHCPServerProfileTagOutput
	ToDHCPServerProfileTagOutputWithContext(context.Context) DHCPServerProfileTagOutput
}

type DHCPServerProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (DHCPServerProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPServerProfileTag)(nil)).Elem()
}

func (i DHCPServerProfileTagArgs) ToDHCPServerProfileTagOutput() DHCPServerProfileTagOutput {
	return i.ToDHCPServerProfileTagOutputWithContext(context.Background())
}

func (i DHCPServerProfileTagArgs) ToDHCPServerProfileTagOutputWithContext(ctx context.Context) DHCPServerProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPServerProfileTagOutput)
}

// DHCPServerProfileTagArrayInput is an input type that accepts DHCPServerProfileTagArray and DHCPServerProfileTagArrayOutput values.
// You can construct a concrete instance of `DHCPServerProfileTagArrayInput` via:
//
//          DHCPServerProfileTagArray{ DHCPServerProfileTagArgs{...} }
type DHCPServerProfileTagArrayInput interface {
	pulumi.Input

	ToDHCPServerProfileTagArrayOutput() DHCPServerProfileTagArrayOutput
	ToDHCPServerProfileTagArrayOutputWithContext(context.Context) DHCPServerProfileTagArrayOutput
}

type DHCPServerProfileTagArray []DHCPServerProfileTagInput

func (DHCPServerProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPServerProfileTag)(nil)).Elem()
}

func (i DHCPServerProfileTagArray) ToDHCPServerProfileTagArrayOutput() DHCPServerProfileTagArrayOutput {
	return i.ToDHCPServerProfileTagArrayOutputWithContext(context.Background())
}

func (i DHCPServerProfileTagArray) ToDHCPServerProfileTagArrayOutputWithContext(ctx context.Context) DHCPServerProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPServerProfileTagArrayOutput)
}

type DHCPServerProfileTagOutput struct{ *pulumi.OutputState }

func (DHCPServerProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPServerProfileTag)(nil)).Elem()
}

func (o DHCPServerProfileTagOutput) ToDHCPServerProfileTagOutput() DHCPServerProfileTagOutput {
	return o
}

func (o DHCPServerProfileTagOutput) ToDHCPServerProfileTagOutputWithContext(ctx context.Context) DHCPServerProfileTagOutput {
	return o
}

func (o DHCPServerProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DHCPServerProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o DHCPServerProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DHCPServerProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type DHCPServerProfileTagArrayOutput struct{ *pulumi.OutputState }

func (DHCPServerProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DHCPServerProfileTag)(nil)).Elem()
}

func (o DHCPServerProfileTagArrayOutput) ToDHCPServerProfileTagArrayOutput() DHCPServerProfileTagArrayOutput {
	return o
}

func (o DHCPServerProfileTagArrayOutput) ToDHCPServerProfileTagArrayOutputWithContext(ctx context.Context) DHCPServerProfileTagArrayOutput {
	return o
}

func (o DHCPServerProfileTagArrayOutput) Index(i pulumi.IntInput) DHCPServerProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DHCPServerProfileTag {
		return vs[0].([]DHCPServerProfileTag)[vs[1].(int)]
	}).(DHCPServerProfileTagOutput)
}

type EtherTypeNSServiceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// EtherTypeNSServiceTagInput is an input type that accepts EtherTypeNSServiceTagArgs and EtherTypeNSServiceTagOutput values.
// You can construct a concrete instance of `EtherTypeNSServiceTagInput` via:
//
//          EtherTypeNSServiceTagArgs{...}
type EtherTypeNSServiceTagInput interface {
	pulumi.Input

	ToEtherTypeNSServiceTagOutput() EtherTypeNSServiceTagOutput
	ToEtherTypeNSServiceTagOutputWithContext(context.Context) EtherTypeNSServiceTagOutput
}

type EtherTypeNSServiceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (EtherTypeNSServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EtherTypeNSServiceTag)(nil)).Elem()
}

func (i EtherTypeNSServiceTagArgs) ToEtherTypeNSServiceTagOutput() EtherTypeNSServiceTagOutput {
	return i.ToEtherTypeNSServiceTagOutputWithContext(context.Background())
}

func (i EtherTypeNSServiceTagArgs) ToEtherTypeNSServiceTagOutputWithContext(ctx context.Context) EtherTypeNSServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EtherTypeNSServiceTagOutput)
}

// EtherTypeNSServiceTagArrayInput is an input type that accepts EtherTypeNSServiceTagArray and EtherTypeNSServiceTagArrayOutput values.
// You can construct a concrete instance of `EtherTypeNSServiceTagArrayInput` via:
//
//          EtherTypeNSServiceTagArray{ EtherTypeNSServiceTagArgs{...} }
type EtherTypeNSServiceTagArrayInput interface {
	pulumi.Input

	ToEtherTypeNSServiceTagArrayOutput() EtherTypeNSServiceTagArrayOutput
	ToEtherTypeNSServiceTagArrayOutputWithContext(context.Context) EtherTypeNSServiceTagArrayOutput
}

type EtherTypeNSServiceTagArray []EtherTypeNSServiceTagInput

func (EtherTypeNSServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EtherTypeNSServiceTag)(nil)).Elem()
}

func (i EtherTypeNSServiceTagArray) ToEtherTypeNSServiceTagArrayOutput() EtherTypeNSServiceTagArrayOutput {
	return i.ToEtherTypeNSServiceTagArrayOutputWithContext(context.Background())
}

func (i EtherTypeNSServiceTagArray) ToEtherTypeNSServiceTagArrayOutputWithContext(ctx context.Context) EtherTypeNSServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EtherTypeNSServiceTagArrayOutput)
}

type EtherTypeNSServiceTagOutput struct{ *pulumi.OutputState }

func (EtherTypeNSServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EtherTypeNSServiceTag)(nil)).Elem()
}

func (o EtherTypeNSServiceTagOutput) ToEtherTypeNSServiceTagOutput() EtherTypeNSServiceTagOutput {
	return o
}

func (o EtherTypeNSServiceTagOutput) ToEtherTypeNSServiceTagOutputWithContext(ctx context.Context) EtherTypeNSServiceTagOutput {
	return o
}

func (o EtherTypeNSServiceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EtherTypeNSServiceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o EtherTypeNSServiceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EtherTypeNSServiceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type EtherTypeNSServiceTagArrayOutput struct{ *pulumi.OutputState }

func (EtherTypeNSServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EtherTypeNSServiceTag)(nil)).Elem()
}

func (o EtherTypeNSServiceTagArrayOutput) ToEtherTypeNSServiceTagArrayOutput() EtherTypeNSServiceTagArrayOutput {
	return o
}

func (o EtherTypeNSServiceTagArrayOutput) ToEtherTypeNSServiceTagArrayOutputWithContext(ctx context.Context) EtherTypeNSServiceTagArrayOutput {
	return o
}

func (o EtherTypeNSServiceTagArrayOutput) Index(i pulumi.IntInput) EtherTypeNSServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EtherTypeNSServiceTag {
		return vs[0].([]EtherTypeNSServiceTag)[vs[1].(int)]
	}).(EtherTypeNSServiceTagOutput)
}

type FirewallSectionAppliedTo struct {
	IsValid           *bool   `pulumi:"isValid"`
	TargetDisplayName *string `pulumi:"targetDisplayName"`
	TargetId          *string `pulumi:"targetId"`
	TargetType        *string `pulumi:"targetType"`
}

// FirewallSectionAppliedToInput is an input type that accepts FirewallSectionAppliedToArgs and FirewallSectionAppliedToOutput values.
// You can construct a concrete instance of `FirewallSectionAppliedToInput` via:
//
//          FirewallSectionAppliedToArgs{...}
type FirewallSectionAppliedToInput interface {
	pulumi.Input

	ToFirewallSectionAppliedToOutput() FirewallSectionAppliedToOutput
	ToFirewallSectionAppliedToOutputWithContext(context.Context) FirewallSectionAppliedToOutput
}

type FirewallSectionAppliedToArgs struct {
	IsValid           pulumi.BoolPtrInput   `pulumi:"isValid"`
	TargetDisplayName pulumi.StringPtrInput `pulumi:"targetDisplayName"`
	TargetId          pulumi.StringPtrInput `pulumi:"targetId"`
	TargetType        pulumi.StringPtrInput `pulumi:"targetType"`
}

func (FirewallSectionAppliedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionAppliedTo)(nil)).Elem()
}

func (i FirewallSectionAppliedToArgs) ToFirewallSectionAppliedToOutput() FirewallSectionAppliedToOutput {
	return i.ToFirewallSectionAppliedToOutputWithContext(context.Background())
}

func (i FirewallSectionAppliedToArgs) ToFirewallSectionAppliedToOutputWithContext(ctx context.Context) FirewallSectionAppliedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionAppliedToOutput)
}

// FirewallSectionAppliedToArrayInput is an input type that accepts FirewallSectionAppliedToArray and FirewallSectionAppliedToArrayOutput values.
// You can construct a concrete instance of `FirewallSectionAppliedToArrayInput` via:
//
//          FirewallSectionAppliedToArray{ FirewallSectionAppliedToArgs{...} }
type FirewallSectionAppliedToArrayInput interface {
	pulumi.Input

	ToFirewallSectionAppliedToArrayOutput() FirewallSectionAppliedToArrayOutput
	ToFirewallSectionAppliedToArrayOutputWithContext(context.Context) FirewallSectionAppliedToArrayOutput
}

type FirewallSectionAppliedToArray []FirewallSectionAppliedToInput

func (FirewallSectionAppliedToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionAppliedTo)(nil)).Elem()
}

func (i FirewallSectionAppliedToArray) ToFirewallSectionAppliedToArrayOutput() FirewallSectionAppliedToArrayOutput {
	return i.ToFirewallSectionAppliedToArrayOutputWithContext(context.Background())
}

func (i FirewallSectionAppliedToArray) ToFirewallSectionAppliedToArrayOutputWithContext(ctx context.Context) FirewallSectionAppliedToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionAppliedToArrayOutput)
}

type FirewallSectionAppliedToOutput struct{ *pulumi.OutputState }

func (FirewallSectionAppliedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionAppliedTo)(nil)).Elem()
}

func (o FirewallSectionAppliedToOutput) ToFirewallSectionAppliedToOutput() FirewallSectionAppliedToOutput {
	return o
}

func (o FirewallSectionAppliedToOutput) ToFirewallSectionAppliedToOutputWithContext(ctx context.Context) FirewallSectionAppliedToOutput {
	return o
}

func (o FirewallSectionAppliedToOutput) IsValid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallSectionAppliedTo) *bool { return v.IsValid }).(pulumi.BoolPtrOutput)
}

func (o FirewallSectionAppliedToOutput) TargetDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionAppliedTo) *string { return v.TargetDisplayName }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionAppliedToOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionAppliedTo) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionAppliedToOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionAppliedTo) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type FirewallSectionAppliedToArrayOutput struct{ *pulumi.OutputState }

func (FirewallSectionAppliedToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionAppliedTo)(nil)).Elem()
}

func (o FirewallSectionAppliedToArrayOutput) ToFirewallSectionAppliedToArrayOutput() FirewallSectionAppliedToArrayOutput {
	return o
}

func (o FirewallSectionAppliedToArrayOutput) ToFirewallSectionAppliedToArrayOutputWithContext(ctx context.Context) FirewallSectionAppliedToArrayOutput {
	return o
}

func (o FirewallSectionAppliedToArrayOutput) Index(i pulumi.IntInput) FirewallSectionAppliedToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSectionAppliedTo {
		return vs[0].([]FirewallSectionAppliedTo)[vs[1].(int)]
	}).(FirewallSectionAppliedToOutput)
}

type FirewallSectionRule struct {
	Action               string                           `pulumi:"action"`
	AppliedTos           []FirewallSectionRuleAppliedTo   `pulumi:"appliedTos"`
	Description          *string                          `pulumi:"description"`
	Destinations         []FirewallSectionRuleDestination `pulumi:"destinations"`
	DestinationsExcluded *bool                            `pulumi:"destinationsExcluded"`
	Direction            *string                          `pulumi:"direction"`
	Disabled             *bool                            `pulumi:"disabled"`
	DisplayName          *string                          `pulumi:"displayName"`
	Id                   *string                          `pulumi:"id"`
	IpProtocol           *string                          `pulumi:"ipProtocol"`
	Logged               *bool                            `pulumi:"logged"`
	Notes                *string                          `pulumi:"notes"`
	Revision             *int                             `pulumi:"revision"`
	RuleTag              *string                          `pulumi:"ruleTag"`
	Services             []FirewallSectionRuleService     `pulumi:"services"`
	Sources              []FirewallSectionRuleSource      `pulumi:"sources"`
	SourcesExcluded      *bool                            `pulumi:"sourcesExcluded"`
}

// FirewallSectionRuleInput is an input type that accepts FirewallSectionRuleArgs and FirewallSectionRuleOutput values.
// You can construct a concrete instance of `FirewallSectionRuleInput` via:
//
//          FirewallSectionRuleArgs{...}
type FirewallSectionRuleInput interface {
	pulumi.Input

	ToFirewallSectionRuleOutput() FirewallSectionRuleOutput
	ToFirewallSectionRuleOutputWithContext(context.Context) FirewallSectionRuleOutput
}

type FirewallSectionRuleArgs struct {
	Action               pulumi.StringInput                       `pulumi:"action"`
	AppliedTos           FirewallSectionRuleAppliedToArrayInput   `pulumi:"appliedTos"`
	Description          pulumi.StringPtrInput                    `pulumi:"description"`
	Destinations         FirewallSectionRuleDestinationArrayInput `pulumi:"destinations"`
	DestinationsExcluded pulumi.BoolPtrInput                      `pulumi:"destinationsExcluded"`
	Direction            pulumi.StringPtrInput                    `pulumi:"direction"`
	Disabled             pulumi.BoolPtrInput                      `pulumi:"disabled"`
	DisplayName          pulumi.StringPtrInput                    `pulumi:"displayName"`
	Id                   pulumi.StringPtrInput                    `pulumi:"id"`
	IpProtocol           pulumi.StringPtrInput                    `pulumi:"ipProtocol"`
	Logged               pulumi.BoolPtrInput                      `pulumi:"logged"`
	Notes                pulumi.StringPtrInput                    `pulumi:"notes"`
	Revision             pulumi.IntPtrInput                       `pulumi:"revision"`
	RuleTag              pulumi.StringPtrInput                    `pulumi:"ruleTag"`
	Services             FirewallSectionRuleServiceArrayInput     `pulumi:"services"`
	Sources              FirewallSectionRuleSourceArrayInput      `pulumi:"sources"`
	SourcesExcluded      pulumi.BoolPtrInput                      `pulumi:"sourcesExcluded"`
}

func (FirewallSectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionRule)(nil)).Elem()
}

func (i FirewallSectionRuleArgs) ToFirewallSectionRuleOutput() FirewallSectionRuleOutput {
	return i.ToFirewallSectionRuleOutputWithContext(context.Background())
}

func (i FirewallSectionRuleArgs) ToFirewallSectionRuleOutputWithContext(ctx context.Context) FirewallSectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionRuleOutput)
}

// FirewallSectionRuleArrayInput is an input type that accepts FirewallSectionRuleArray and FirewallSectionRuleArrayOutput values.
// You can construct a concrete instance of `FirewallSectionRuleArrayInput` via:
//
//          FirewallSectionRuleArray{ FirewallSectionRuleArgs{...} }
type FirewallSectionRuleArrayInput interface {
	pulumi.Input

	ToFirewallSectionRuleArrayOutput() FirewallSectionRuleArrayOutput
	ToFirewallSectionRuleArrayOutputWithContext(context.Context) FirewallSectionRuleArrayOutput
}

type FirewallSectionRuleArray []FirewallSectionRuleInput

func (FirewallSectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionRule)(nil)).Elem()
}

func (i FirewallSectionRuleArray) ToFirewallSectionRuleArrayOutput() FirewallSectionRuleArrayOutput {
	return i.ToFirewallSectionRuleArrayOutputWithContext(context.Background())
}

func (i FirewallSectionRuleArray) ToFirewallSectionRuleArrayOutputWithContext(ctx context.Context) FirewallSectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionRuleArrayOutput)
}

type FirewallSectionRuleOutput struct{ *pulumi.OutputState }

func (FirewallSectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionRule)(nil)).Elem()
}

func (o FirewallSectionRuleOutput) ToFirewallSectionRuleOutput() FirewallSectionRuleOutput {
	return o
}

func (o FirewallSectionRuleOutput) ToFirewallSectionRuleOutputWithContext(ctx context.Context) FirewallSectionRuleOutput {
	return o
}

func (o FirewallSectionRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallSectionRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o FirewallSectionRuleOutput) AppliedTos() FirewallSectionRuleAppliedToArrayOutput {
	return o.ApplyT(func(v FirewallSectionRule) []FirewallSectionRuleAppliedTo { return v.AppliedTos }).(FirewallSectionRuleAppliedToArrayOutput)
}

func (o FirewallSectionRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleOutput) Destinations() FirewallSectionRuleDestinationArrayOutput {
	return o.ApplyT(func(v FirewallSectionRule) []FirewallSectionRuleDestination { return v.Destinations }).(FirewallSectionRuleDestinationArrayOutput)
}

func (o FirewallSectionRuleOutput) DestinationsExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *bool { return v.DestinationsExcluded }).(pulumi.BoolPtrOutput)
}

func (o FirewallSectionRuleOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o FirewallSectionRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleOutput) Logged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *bool { return v.Logged }).(pulumi.BoolPtrOutput)
}

func (o FirewallSectionRuleOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o FirewallSectionRuleOutput) RuleTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *string { return v.RuleTag }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleOutput) Services() FirewallSectionRuleServiceArrayOutput {
	return o.ApplyT(func(v FirewallSectionRule) []FirewallSectionRuleService { return v.Services }).(FirewallSectionRuleServiceArrayOutput)
}

func (o FirewallSectionRuleOutput) Sources() FirewallSectionRuleSourceArrayOutput {
	return o.ApplyT(func(v FirewallSectionRule) []FirewallSectionRuleSource { return v.Sources }).(FirewallSectionRuleSourceArrayOutput)
}

func (o FirewallSectionRuleOutput) SourcesExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallSectionRule) *bool { return v.SourcesExcluded }).(pulumi.BoolPtrOutput)
}

type FirewallSectionRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallSectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionRule)(nil)).Elem()
}

func (o FirewallSectionRuleArrayOutput) ToFirewallSectionRuleArrayOutput() FirewallSectionRuleArrayOutput {
	return o
}

func (o FirewallSectionRuleArrayOutput) ToFirewallSectionRuleArrayOutputWithContext(ctx context.Context) FirewallSectionRuleArrayOutput {
	return o
}

func (o FirewallSectionRuleArrayOutput) Index(i pulumi.IntInput) FirewallSectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSectionRule {
		return vs[0].([]FirewallSectionRule)[vs[1].(int)]
	}).(FirewallSectionRuleOutput)
}

type FirewallSectionRuleAppliedTo struct {
	IsValid           *bool   `pulumi:"isValid"`
	TargetDisplayName *string `pulumi:"targetDisplayName"`
	TargetId          *string `pulumi:"targetId"`
	TargetType        *string `pulumi:"targetType"`
}

// FirewallSectionRuleAppliedToInput is an input type that accepts FirewallSectionRuleAppliedToArgs and FirewallSectionRuleAppliedToOutput values.
// You can construct a concrete instance of `FirewallSectionRuleAppliedToInput` via:
//
//          FirewallSectionRuleAppliedToArgs{...}
type FirewallSectionRuleAppliedToInput interface {
	pulumi.Input

	ToFirewallSectionRuleAppliedToOutput() FirewallSectionRuleAppliedToOutput
	ToFirewallSectionRuleAppliedToOutputWithContext(context.Context) FirewallSectionRuleAppliedToOutput
}

type FirewallSectionRuleAppliedToArgs struct {
	IsValid           pulumi.BoolPtrInput   `pulumi:"isValid"`
	TargetDisplayName pulumi.StringPtrInput `pulumi:"targetDisplayName"`
	TargetId          pulumi.StringPtrInput `pulumi:"targetId"`
	TargetType        pulumi.StringPtrInput `pulumi:"targetType"`
}

func (FirewallSectionRuleAppliedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionRuleAppliedTo)(nil)).Elem()
}

func (i FirewallSectionRuleAppliedToArgs) ToFirewallSectionRuleAppliedToOutput() FirewallSectionRuleAppliedToOutput {
	return i.ToFirewallSectionRuleAppliedToOutputWithContext(context.Background())
}

func (i FirewallSectionRuleAppliedToArgs) ToFirewallSectionRuleAppliedToOutputWithContext(ctx context.Context) FirewallSectionRuleAppliedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionRuleAppliedToOutput)
}

// FirewallSectionRuleAppliedToArrayInput is an input type that accepts FirewallSectionRuleAppliedToArray and FirewallSectionRuleAppliedToArrayOutput values.
// You can construct a concrete instance of `FirewallSectionRuleAppliedToArrayInput` via:
//
//          FirewallSectionRuleAppliedToArray{ FirewallSectionRuleAppliedToArgs{...} }
type FirewallSectionRuleAppliedToArrayInput interface {
	pulumi.Input

	ToFirewallSectionRuleAppliedToArrayOutput() FirewallSectionRuleAppliedToArrayOutput
	ToFirewallSectionRuleAppliedToArrayOutputWithContext(context.Context) FirewallSectionRuleAppliedToArrayOutput
}

type FirewallSectionRuleAppliedToArray []FirewallSectionRuleAppliedToInput

func (FirewallSectionRuleAppliedToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionRuleAppliedTo)(nil)).Elem()
}

func (i FirewallSectionRuleAppliedToArray) ToFirewallSectionRuleAppliedToArrayOutput() FirewallSectionRuleAppliedToArrayOutput {
	return i.ToFirewallSectionRuleAppliedToArrayOutputWithContext(context.Background())
}

func (i FirewallSectionRuleAppliedToArray) ToFirewallSectionRuleAppliedToArrayOutputWithContext(ctx context.Context) FirewallSectionRuleAppliedToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionRuleAppliedToArrayOutput)
}

type FirewallSectionRuleAppliedToOutput struct{ *pulumi.OutputState }

func (FirewallSectionRuleAppliedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionRuleAppliedTo)(nil)).Elem()
}

func (o FirewallSectionRuleAppliedToOutput) ToFirewallSectionRuleAppliedToOutput() FirewallSectionRuleAppliedToOutput {
	return o
}

func (o FirewallSectionRuleAppliedToOutput) ToFirewallSectionRuleAppliedToOutputWithContext(ctx context.Context) FirewallSectionRuleAppliedToOutput {
	return o
}

func (o FirewallSectionRuleAppliedToOutput) IsValid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleAppliedTo) *bool { return v.IsValid }).(pulumi.BoolPtrOutput)
}

func (o FirewallSectionRuleAppliedToOutput) TargetDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleAppliedTo) *string { return v.TargetDisplayName }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleAppliedToOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleAppliedTo) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleAppliedToOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleAppliedTo) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type FirewallSectionRuleAppliedToArrayOutput struct{ *pulumi.OutputState }

func (FirewallSectionRuleAppliedToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionRuleAppliedTo)(nil)).Elem()
}

func (o FirewallSectionRuleAppliedToArrayOutput) ToFirewallSectionRuleAppliedToArrayOutput() FirewallSectionRuleAppliedToArrayOutput {
	return o
}

func (o FirewallSectionRuleAppliedToArrayOutput) ToFirewallSectionRuleAppliedToArrayOutputWithContext(ctx context.Context) FirewallSectionRuleAppliedToArrayOutput {
	return o
}

func (o FirewallSectionRuleAppliedToArrayOutput) Index(i pulumi.IntInput) FirewallSectionRuleAppliedToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSectionRuleAppliedTo {
		return vs[0].([]FirewallSectionRuleAppliedTo)[vs[1].(int)]
	}).(FirewallSectionRuleAppliedToOutput)
}

type FirewallSectionRuleDestination struct {
	IsValid           *bool   `pulumi:"isValid"`
	TargetDisplayName *string `pulumi:"targetDisplayName"`
	TargetId          *string `pulumi:"targetId"`
	TargetType        *string `pulumi:"targetType"`
}

// FirewallSectionRuleDestinationInput is an input type that accepts FirewallSectionRuleDestinationArgs and FirewallSectionRuleDestinationOutput values.
// You can construct a concrete instance of `FirewallSectionRuleDestinationInput` via:
//
//          FirewallSectionRuleDestinationArgs{...}
type FirewallSectionRuleDestinationInput interface {
	pulumi.Input

	ToFirewallSectionRuleDestinationOutput() FirewallSectionRuleDestinationOutput
	ToFirewallSectionRuleDestinationOutputWithContext(context.Context) FirewallSectionRuleDestinationOutput
}

type FirewallSectionRuleDestinationArgs struct {
	IsValid           pulumi.BoolPtrInput   `pulumi:"isValid"`
	TargetDisplayName pulumi.StringPtrInput `pulumi:"targetDisplayName"`
	TargetId          pulumi.StringPtrInput `pulumi:"targetId"`
	TargetType        pulumi.StringPtrInput `pulumi:"targetType"`
}

func (FirewallSectionRuleDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionRuleDestination)(nil)).Elem()
}

func (i FirewallSectionRuleDestinationArgs) ToFirewallSectionRuleDestinationOutput() FirewallSectionRuleDestinationOutput {
	return i.ToFirewallSectionRuleDestinationOutputWithContext(context.Background())
}

func (i FirewallSectionRuleDestinationArgs) ToFirewallSectionRuleDestinationOutputWithContext(ctx context.Context) FirewallSectionRuleDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionRuleDestinationOutput)
}

// FirewallSectionRuleDestinationArrayInput is an input type that accepts FirewallSectionRuleDestinationArray and FirewallSectionRuleDestinationArrayOutput values.
// You can construct a concrete instance of `FirewallSectionRuleDestinationArrayInput` via:
//
//          FirewallSectionRuleDestinationArray{ FirewallSectionRuleDestinationArgs{...} }
type FirewallSectionRuleDestinationArrayInput interface {
	pulumi.Input

	ToFirewallSectionRuleDestinationArrayOutput() FirewallSectionRuleDestinationArrayOutput
	ToFirewallSectionRuleDestinationArrayOutputWithContext(context.Context) FirewallSectionRuleDestinationArrayOutput
}

type FirewallSectionRuleDestinationArray []FirewallSectionRuleDestinationInput

func (FirewallSectionRuleDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionRuleDestination)(nil)).Elem()
}

func (i FirewallSectionRuleDestinationArray) ToFirewallSectionRuleDestinationArrayOutput() FirewallSectionRuleDestinationArrayOutput {
	return i.ToFirewallSectionRuleDestinationArrayOutputWithContext(context.Background())
}

func (i FirewallSectionRuleDestinationArray) ToFirewallSectionRuleDestinationArrayOutputWithContext(ctx context.Context) FirewallSectionRuleDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionRuleDestinationArrayOutput)
}

type FirewallSectionRuleDestinationOutput struct{ *pulumi.OutputState }

func (FirewallSectionRuleDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionRuleDestination)(nil)).Elem()
}

func (o FirewallSectionRuleDestinationOutput) ToFirewallSectionRuleDestinationOutput() FirewallSectionRuleDestinationOutput {
	return o
}

func (o FirewallSectionRuleDestinationOutput) ToFirewallSectionRuleDestinationOutputWithContext(ctx context.Context) FirewallSectionRuleDestinationOutput {
	return o
}

func (o FirewallSectionRuleDestinationOutput) IsValid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleDestination) *bool { return v.IsValid }).(pulumi.BoolPtrOutput)
}

func (o FirewallSectionRuleDestinationOutput) TargetDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleDestination) *string { return v.TargetDisplayName }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleDestinationOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleDestination) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleDestinationOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleDestination) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type FirewallSectionRuleDestinationArrayOutput struct{ *pulumi.OutputState }

func (FirewallSectionRuleDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionRuleDestination)(nil)).Elem()
}

func (o FirewallSectionRuleDestinationArrayOutput) ToFirewallSectionRuleDestinationArrayOutput() FirewallSectionRuleDestinationArrayOutput {
	return o
}

func (o FirewallSectionRuleDestinationArrayOutput) ToFirewallSectionRuleDestinationArrayOutputWithContext(ctx context.Context) FirewallSectionRuleDestinationArrayOutput {
	return o
}

func (o FirewallSectionRuleDestinationArrayOutput) Index(i pulumi.IntInput) FirewallSectionRuleDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSectionRuleDestination {
		return vs[0].([]FirewallSectionRuleDestination)[vs[1].(int)]
	}).(FirewallSectionRuleDestinationOutput)
}

type FirewallSectionRuleService struct {
	IsValid           *bool   `pulumi:"isValid"`
	TargetDisplayName *string `pulumi:"targetDisplayName"`
	TargetId          *string `pulumi:"targetId"`
	TargetType        *string `pulumi:"targetType"`
}

// FirewallSectionRuleServiceInput is an input type that accepts FirewallSectionRuleServiceArgs and FirewallSectionRuleServiceOutput values.
// You can construct a concrete instance of `FirewallSectionRuleServiceInput` via:
//
//          FirewallSectionRuleServiceArgs{...}
type FirewallSectionRuleServiceInput interface {
	pulumi.Input

	ToFirewallSectionRuleServiceOutput() FirewallSectionRuleServiceOutput
	ToFirewallSectionRuleServiceOutputWithContext(context.Context) FirewallSectionRuleServiceOutput
}

type FirewallSectionRuleServiceArgs struct {
	IsValid           pulumi.BoolPtrInput   `pulumi:"isValid"`
	TargetDisplayName pulumi.StringPtrInput `pulumi:"targetDisplayName"`
	TargetId          pulumi.StringPtrInput `pulumi:"targetId"`
	TargetType        pulumi.StringPtrInput `pulumi:"targetType"`
}

func (FirewallSectionRuleServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionRuleService)(nil)).Elem()
}

func (i FirewallSectionRuleServiceArgs) ToFirewallSectionRuleServiceOutput() FirewallSectionRuleServiceOutput {
	return i.ToFirewallSectionRuleServiceOutputWithContext(context.Background())
}

func (i FirewallSectionRuleServiceArgs) ToFirewallSectionRuleServiceOutputWithContext(ctx context.Context) FirewallSectionRuleServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionRuleServiceOutput)
}

// FirewallSectionRuleServiceArrayInput is an input type that accepts FirewallSectionRuleServiceArray and FirewallSectionRuleServiceArrayOutput values.
// You can construct a concrete instance of `FirewallSectionRuleServiceArrayInput` via:
//
//          FirewallSectionRuleServiceArray{ FirewallSectionRuleServiceArgs{...} }
type FirewallSectionRuleServiceArrayInput interface {
	pulumi.Input

	ToFirewallSectionRuleServiceArrayOutput() FirewallSectionRuleServiceArrayOutput
	ToFirewallSectionRuleServiceArrayOutputWithContext(context.Context) FirewallSectionRuleServiceArrayOutput
}

type FirewallSectionRuleServiceArray []FirewallSectionRuleServiceInput

func (FirewallSectionRuleServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionRuleService)(nil)).Elem()
}

func (i FirewallSectionRuleServiceArray) ToFirewallSectionRuleServiceArrayOutput() FirewallSectionRuleServiceArrayOutput {
	return i.ToFirewallSectionRuleServiceArrayOutputWithContext(context.Background())
}

func (i FirewallSectionRuleServiceArray) ToFirewallSectionRuleServiceArrayOutputWithContext(ctx context.Context) FirewallSectionRuleServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionRuleServiceArrayOutput)
}

type FirewallSectionRuleServiceOutput struct{ *pulumi.OutputState }

func (FirewallSectionRuleServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionRuleService)(nil)).Elem()
}

func (o FirewallSectionRuleServiceOutput) ToFirewallSectionRuleServiceOutput() FirewallSectionRuleServiceOutput {
	return o
}

func (o FirewallSectionRuleServiceOutput) ToFirewallSectionRuleServiceOutputWithContext(ctx context.Context) FirewallSectionRuleServiceOutput {
	return o
}

func (o FirewallSectionRuleServiceOutput) IsValid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleService) *bool { return v.IsValid }).(pulumi.BoolPtrOutput)
}

func (o FirewallSectionRuleServiceOutput) TargetDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleService) *string { return v.TargetDisplayName }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleServiceOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleService) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleServiceOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleService) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type FirewallSectionRuleServiceArrayOutput struct{ *pulumi.OutputState }

func (FirewallSectionRuleServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionRuleService)(nil)).Elem()
}

func (o FirewallSectionRuleServiceArrayOutput) ToFirewallSectionRuleServiceArrayOutput() FirewallSectionRuleServiceArrayOutput {
	return o
}

func (o FirewallSectionRuleServiceArrayOutput) ToFirewallSectionRuleServiceArrayOutputWithContext(ctx context.Context) FirewallSectionRuleServiceArrayOutput {
	return o
}

func (o FirewallSectionRuleServiceArrayOutput) Index(i pulumi.IntInput) FirewallSectionRuleServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSectionRuleService {
		return vs[0].([]FirewallSectionRuleService)[vs[1].(int)]
	}).(FirewallSectionRuleServiceOutput)
}

type FirewallSectionRuleSource struct {
	IsValid           *bool   `pulumi:"isValid"`
	TargetDisplayName *string `pulumi:"targetDisplayName"`
	TargetId          *string `pulumi:"targetId"`
	TargetType        *string `pulumi:"targetType"`
}

// FirewallSectionRuleSourceInput is an input type that accepts FirewallSectionRuleSourceArgs and FirewallSectionRuleSourceOutput values.
// You can construct a concrete instance of `FirewallSectionRuleSourceInput` via:
//
//          FirewallSectionRuleSourceArgs{...}
type FirewallSectionRuleSourceInput interface {
	pulumi.Input

	ToFirewallSectionRuleSourceOutput() FirewallSectionRuleSourceOutput
	ToFirewallSectionRuleSourceOutputWithContext(context.Context) FirewallSectionRuleSourceOutput
}

type FirewallSectionRuleSourceArgs struct {
	IsValid           pulumi.BoolPtrInput   `pulumi:"isValid"`
	TargetDisplayName pulumi.StringPtrInput `pulumi:"targetDisplayName"`
	TargetId          pulumi.StringPtrInput `pulumi:"targetId"`
	TargetType        pulumi.StringPtrInput `pulumi:"targetType"`
}

func (FirewallSectionRuleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionRuleSource)(nil)).Elem()
}

func (i FirewallSectionRuleSourceArgs) ToFirewallSectionRuleSourceOutput() FirewallSectionRuleSourceOutput {
	return i.ToFirewallSectionRuleSourceOutputWithContext(context.Background())
}

func (i FirewallSectionRuleSourceArgs) ToFirewallSectionRuleSourceOutputWithContext(ctx context.Context) FirewallSectionRuleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionRuleSourceOutput)
}

// FirewallSectionRuleSourceArrayInput is an input type that accepts FirewallSectionRuleSourceArray and FirewallSectionRuleSourceArrayOutput values.
// You can construct a concrete instance of `FirewallSectionRuleSourceArrayInput` via:
//
//          FirewallSectionRuleSourceArray{ FirewallSectionRuleSourceArgs{...} }
type FirewallSectionRuleSourceArrayInput interface {
	pulumi.Input

	ToFirewallSectionRuleSourceArrayOutput() FirewallSectionRuleSourceArrayOutput
	ToFirewallSectionRuleSourceArrayOutputWithContext(context.Context) FirewallSectionRuleSourceArrayOutput
}

type FirewallSectionRuleSourceArray []FirewallSectionRuleSourceInput

func (FirewallSectionRuleSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionRuleSource)(nil)).Elem()
}

func (i FirewallSectionRuleSourceArray) ToFirewallSectionRuleSourceArrayOutput() FirewallSectionRuleSourceArrayOutput {
	return i.ToFirewallSectionRuleSourceArrayOutputWithContext(context.Background())
}

func (i FirewallSectionRuleSourceArray) ToFirewallSectionRuleSourceArrayOutputWithContext(ctx context.Context) FirewallSectionRuleSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionRuleSourceArrayOutput)
}

type FirewallSectionRuleSourceOutput struct{ *pulumi.OutputState }

func (FirewallSectionRuleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionRuleSource)(nil)).Elem()
}

func (o FirewallSectionRuleSourceOutput) ToFirewallSectionRuleSourceOutput() FirewallSectionRuleSourceOutput {
	return o
}

func (o FirewallSectionRuleSourceOutput) ToFirewallSectionRuleSourceOutputWithContext(ctx context.Context) FirewallSectionRuleSourceOutput {
	return o
}

func (o FirewallSectionRuleSourceOutput) IsValid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleSource) *bool { return v.IsValid }).(pulumi.BoolPtrOutput)
}

func (o FirewallSectionRuleSourceOutput) TargetDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleSource) *string { return v.TargetDisplayName }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleSourceOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleSource) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionRuleSourceOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionRuleSource) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type FirewallSectionRuleSourceArrayOutput struct{ *pulumi.OutputState }

func (FirewallSectionRuleSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionRuleSource)(nil)).Elem()
}

func (o FirewallSectionRuleSourceArrayOutput) ToFirewallSectionRuleSourceArrayOutput() FirewallSectionRuleSourceArrayOutput {
	return o
}

func (o FirewallSectionRuleSourceArrayOutput) ToFirewallSectionRuleSourceArrayOutputWithContext(ctx context.Context) FirewallSectionRuleSourceArrayOutput {
	return o
}

func (o FirewallSectionRuleSourceArrayOutput) Index(i pulumi.IntInput) FirewallSectionRuleSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSectionRuleSource {
		return vs[0].([]FirewallSectionRuleSource)[vs[1].(int)]
	}).(FirewallSectionRuleSourceOutput)
}

type FirewallSectionTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// FirewallSectionTagInput is an input type that accepts FirewallSectionTagArgs and FirewallSectionTagOutput values.
// You can construct a concrete instance of `FirewallSectionTagInput` via:
//
//          FirewallSectionTagArgs{...}
type FirewallSectionTagInput interface {
	pulumi.Input

	ToFirewallSectionTagOutput() FirewallSectionTagOutput
	ToFirewallSectionTagOutputWithContext(context.Context) FirewallSectionTagOutput
}

type FirewallSectionTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (FirewallSectionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionTag)(nil)).Elem()
}

func (i FirewallSectionTagArgs) ToFirewallSectionTagOutput() FirewallSectionTagOutput {
	return i.ToFirewallSectionTagOutputWithContext(context.Background())
}

func (i FirewallSectionTagArgs) ToFirewallSectionTagOutputWithContext(ctx context.Context) FirewallSectionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionTagOutput)
}

// FirewallSectionTagArrayInput is an input type that accepts FirewallSectionTagArray and FirewallSectionTagArrayOutput values.
// You can construct a concrete instance of `FirewallSectionTagArrayInput` via:
//
//          FirewallSectionTagArray{ FirewallSectionTagArgs{...} }
type FirewallSectionTagArrayInput interface {
	pulumi.Input

	ToFirewallSectionTagArrayOutput() FirewallSectionTagArrayOutput
	ToFirewallSectionTagArrayOutputWithContext(context.Context) FirewallSectionTagArrayOutput
}

type FirewallSectionTagArray []FirewallSectionTagInput

func (FirewallSectionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionTag)(nil)).Elem()
}

func (i FirewallSectionTagArray) ToFirewallSectionTagArrayOutput() FirewallSectionTagArrayOutput {
	return i.ToFirewallSectionTagArrayOutputWithContext(context.Background())
}

func (i FirewallSectionTagArray) ToFirewallSectionTagArrayOutputWithContext(ctx context.Context) FirewallSectionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSectionTagArrayOutput)
}

type FirewallSectionTagOutput struct{ *pulumi.OutputState }

func (FirewallSectionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSectionTag)(nil)).Elem()
}

func (o FirewallSectionTagOutput) ToFirewallSectionTagOutput() FirewallSectionTagOutput {
	return o
}

func (o FirewallSectionTagOutput) ToFirewallSectionTagOutputWithContext(ctx context.Context) FirewallSectionTagOutput {
	return o
}

func (o FirewallSectionTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o FirewallSectionTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallSectionTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type FirewallSectionTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallSectionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSectionTag)(nil)).Elem()
}

func (o FirewallSectionTagArrayOutput) ToFirewallSectionTagArrayOutput() FirewallSectionTagArrayOutput {
	return o
}

func (o FirewallSectionTagArrayOutput) ToFirewallSectionTagArrayOutputWithContext(ctx context.Context) FirewallSectionTagArrayOutput {
	return o
}

func (o FirewallSectionTagArrayOutput) Index(i pulumi.IntInput) FirewallSectionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSectionTag {
		return vs[0].([]FirewallSectionTag)[vs[1].(int)]
	}).(FirewallSectionTagOutput)
}

type ICMPTypeNSServiceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// ICMPTypeNSServiceTagInput is an input type that accepts ICMPTypeNSServiceTagArgs and ICMPTypeNSServiceTagOutput values.
// You can construct a concrete instance of `ICMPTypeNSServiceTagInput` via:
//
//          ICMPTypeNSServiceTagArgs{...}
type ICMPTypeNSServiceTagInput interface {
	pulumi.Input

	ToICMPTypeNSServiceTagOutput() ICMPTypeNSServiceTagOutput
	ToICMPTypeNSServiceTagOutputWithContext(context.Context) ICMPTypeNSServiceTagOutput
}

type ICMPTypeNSServiceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (ICMPTypeNSServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ICMPTypeNSServiceTag)(nil)).Elem()
}

func (i ICMPTypeNSServiceTagArgs) ToICMPTypeNSServiceTagOutput() ICMPTypeNSServiceTagOutput {
	return i.ToICMPTypeNSServiceTagOutputWithContext(context.Background())
}

func (i ICMPTypeNSServiceTagArgs) ToICMPTypeNSServiceTagOutputWithContext(ctx context.Context) ICMPTypeNSServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ICMPTypeNSServiceTagOutput)
}

// ICMPTypeNSServiceTagArrayInput is an input type that accepts ICMPTypeNSServiceTagArray and ICMPTypeNSServiceTagArrayOutput values.
// You can construct a concrete instance of `ICMPTypeNSServiceTagArrayInput` via:
//
//          ICMPTypeNSServiceTagArray{ ICMPTypeNSServiceTagArgs{...} }
type ICMPTypeNSServiceTagArrayInput interface {
	pulumi.Input

	ToICMPTypeNSServiceTagArrayOutput() ICMPTypeNSServiceTagArrayOutput
	ToICMPTypeNSServiceTagArrayOutputWithContext(context.Context) ICMPTypeNSServiceTagArrayOutput
}

type ICMPTypeNSServiceTagArray []ICMPTypeNSServiceTagInput

func (ICMPTypeNSServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ICMPTypeNSServiceTag)(nil)).Elem()
}

func (i ICMPTypeNSServiceTagArray) ToICMPTypeNSServiceTagArrayOutput() ICMPTypeNSServiceTagArrayOutput {
	return i.ToICMPTypeNSServiceTagArrayOutputWithContext(context.Background())
}

func (i ICMPTypeNSServiceTagArray) ToICMPTypeNSServiceTagArrayOutputWithContext(ctx context.Context) ICMPTypeNSServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ICMPTypeNSServiceTagArrayOutput)
}

type ICMPTypeNSServiceTagOutput struct{ *pulumi.OutputState }

func (ICMPTypeNSServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ICMPTypeNSServiceTag)(nil)).Elem()
}

func (o ICMPTypeNSServiceTagOutput) ToICMPTypeNSServiceTagOutput() ICMPTypeNSServiceTagOutput {
	return o
}

func (o ICMPTypeNSServiceTagOutput) ToICMPTypeNSServiceTagOutputWithContext(ctx context.Context) ICMPTypeNSServiceTagOutput {
	return o
}

func (o ICMPTypeNSServiceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ICMPTypeNSServiceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o ICMPTypeNSServiceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ICMPTypeNSServiceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type ICMPTypeNSServiceTagArrayOutput struct{ *pulumi.OutputState }

func (ICMPTypeNSServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ICMPTypeNSServiceTag)(nil)).Elem()
}

func (o ICMPTypeNSServiceTagArrayOutput) ToICMPTypeNSServiceTagArrayOutput() ICMPTypeNSServiceTagArrayOutput {
	return o
}

func (o ICMPTypeNSServiceTagArrayOutput) ToICMPTypeNSServiceTagArrayOutputWithContext(ctx context.Context) ICMPTypeNSServiceTagArrayOutput {
	return o
}

func (o ICMPTypeNSServiceTagArrayOutput) Index(i pulumi.IntInput) ICMPTypeNSServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ICMPTypeNSServiceTag {
		return vs[0].([]ICMPTypeNSServiceTag)[vs[1].(int)]
	}).(ICMPTypeNSServiceTagOutput)
}

type IGMPTypeNSServiceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// IGMPTypeNSServiceTagInput is an input type that accepts IGMPTypeNSServiceTagArgs and IGMPTypeNSServiceTagOutput values.
// You can construct a concrete instance of `IGMPTypeNSServiceTagInput` via:
//
//          IGMPTypeNSServiceTagArgs{...}
type IGMPTypeNSServiceTagInput interface {
	pulumi.Input

	ToIGMPTypeNSServiceTagOutput() IGMPTypeNSServiceTagOutput
	ToIGMPTypeNSServiceTagOutputWithContext(context.Context) IGMPTypeNSServiceTagOutput
}

type IGMPTypeNSServiceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (IGMPTypeNSServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IGMPTypeNSServiceTag)(nil)).Elem()
}

func (i IGMPTypeNSServiceTagArgs) ToIGMPTypeNSServiceTagOutput() IGMPTypeNSServiceTagOutput {
	return i.ToIGMPTypeNSServiceTagOutputWithContext(context.Background())
}

func (i IGMPTypeNSServiceTagArgs) ToIGMPTypeNSServiceTagOutputWithContext(ctx context.Context) IGMPTypeNSServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IGMPTypeNSServiceTagOutput)
}

// IGMPTypeNSServiceTagArrayInput is an input type that accepts IGMPTypeNSServiceTagArray and IGMPTypeNSServiceTagArrayOutput values.
// You can construct a concrete instance of `IGMPTypeNSServiceTagArrayInput` via:
//
//          IGMPTypeNSServiceTagArray{ IGMPTypeNSServiceTagArgs{...} }
type IGMPTypeNSServiceTagArrayInput interface {
	pulumi.Input

	ToIGMPTypeNSServiceTagArrayOutput() IGMPTypeNSServiceTagArrayOutput
	ToIGMPTypeNSServiceTagArrayOutputWithContext(context.Context) IGMPTypeNSServiceTagArrayOutput
}

type IGMPTypeNSServiceTagArray []IGMPTypeNSServiceTagInput

func (IGMPTypeNSServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IGMPTypeNSServiceTag)(nil)).Elem()
}

func (i IGMPTypeNSServiceTagArray) ToIGMPTypeNSServiceTagArrayOutput() IGMPTypeNSServiceTagArrayOutput {
	return i.ToIGMPTypeNSServiceTagArrayOutputWithContext(context.Background())
}

func (i IGMPTypeNSServiceTagArray) ToIGMPTypeNSServiceTagArrayOutputWithContext(ctx context.Context) IGMPTypeNSServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IGMPTypeNSServiceTagArrayOutput)
}

type IGMPTypeNSServiceTagOutput struct{ *pulumi.OutputState }

func (IGMPTypeNSServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IGMPTypeNSServiceTag)(nil)).Elem()
}

func (o IGMPTypeNSServiceTagOutput) ToIGMPTypeNSServiceTagOutput() IGMPTypeNSServiceTagOutput {
	return o
}

func (o IGMPTypeNSServiceTagOutput) ToIGMPTypeNSServiceTagOutputWithContext(ctx context.Context) IGMPTypeNSServiceTagOutput {
	return o
}

func (o IGMPTypeNSServiceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IGMPTypeNSServiceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o IGMPTypeNSServiceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IGMPTypeNSServiceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IGMPTypeNSServiceTagArrayOutput struct{ *pulumi.OutputState }

func (IGMPTypeNSServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IGMPTypeNSServiceTag)(nil)).Elem()
}

func (o IGMPTypeNSServiceTagArrayOutput) ToIGMPTypeNSServiceTagArrayOutput() IGMPTypeNSServiceTagArrayOutput {
	return o
}

func (o IGMPTypeNSServiceTagArrayOutput) ToIGMPTypeNSServiceTagArrayOutputWithContext(ctx context.Context) IGMPTypeNSServiceTagArrayOutput {
	return o
}

func (o IGMPTypeNSServiceTagArrayOutput) Index(i pulumi.IntInput) IGMPTypeNSServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IGMPTypeNSServiceTag {
		return vs[0].([]IGMPTypeNSServiceTag)[vs[1].(int)]
	}).(IGMPTypeNSServiceTagOutput)
}

type IPBlockSubnetAllocationRange struct {
	End   *string `pulumi:"end"`
	Start *string `pulumi:"start"`
}

// IPBlockSubnetAllocationRangeInput is an input type that accepts IPBlockSubnetAllocationRangeArgs and IPBlockSubnetAllocationRangeOutput values.
// You can construct a concrete instance of `IPBlockSubnetAllocationRangeInput` via:
//
//          IPBlockSubnetAllocationRangeArgs{...}
type IPBlockSubnetAllocationRangeInput interface {
	pulumi.Input

	ToIPBlockSubnetAllocationRangeOutput() IPBlockSubnetAllocationRangeOutput
	ToIPBlockSubnetAllocationRangeOutputWithContext(context.Context) IPBlockSubnetAllocationRangeOutput
}

type IPBlockSubnetAllocationRangeArgs struct {
	End   pulumi.StringPtrInput `pulumi:"end"`
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (IPBlockSubnetAllocationRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPBlockSubnetAllocationRange)(nil)).Elem()
}

func (i IPBlockSubnetAllocationRangeArgs) ToIPBlockSubnetAllocationRangeOutput() IPBlockSubnetAllocationRangeOutput {
	return i.ToIPBlockSubnetAllocationRangeOutputWithContext(context.Background())
}

func (i IPBlockSubnetAllocationRangeArgs) ToIPBlockSubnetAllocationRangeOutputWithContext(ctx context.Context) IPBlockSubnetAllocationRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPBlockSubnetAllocationRangeOutput)
}

// IPBlockSubnetAllocationRangeArrayInput is an input type that accepts IPBlockSubnetAllocationRangeArray and IPBlockSubnetAllocationRangeArrayOutput values.
// You can construct a concrete instance of `IPBlockSubnetAllocationRangeArrayInput` via:
//
//          IPBlockSubnetAllocationRangeArray{ IPBlockSubnetAllocationRangeArgs{...} }
type IPBlockSubnetAllocationRangeArrayInput interface {
	pulumi.Input

	ToIPBlockSubnetAllocationRangeArrayOutput() IPBlockSubnetAllocationRangeArrayOutput
	ToIPBlockSubnetAllocationRangeArrayOutputWithContext(context.Context) IPBlockSubnetAllocationRangeArrayOutput
}

type IPBlockSubnetAllocationRangeArray []IPBlockSubnetAllocationRangeInput

func (IPBlockSubnetAllocationRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPBlockSubnetAllocationRange)(nil)).Elem()
}

func (i IPBlockSubnetAllocationRangeArray) ToIPBlockSubnetAllocationRangeArrayOutput() IPBlockSubnetAllocationRangeArrayOutput {
	return i.ToIPBlockSubnetAllocationRangeArrayOutputWithContext(context.Background())
}

func (i IPBlockSubnetAllocationRangeArray) ToIPBlockSubnetAllocationRangeArrayOutputWithContext(ctx context.Context) IPBlockSubnetAllocationRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPBlockSubnetAllocationRangeArrayOutput)
}

type IPBlockSubnetAllocationRangeOutput struct{ *pulumi.OutputState }

func (IPBlockSubnetAllocationRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPBlockSubnetAllocationRange)(nil)).Elem()
}

func (o IPBlockSubnetAllocationRangeOutput) ToIPBlockSubnetAllocationRangeOutput() IPBlockSubnetAllocationRangeOutput {
	return o
}

func (o IPBlockSubnetAllocationRangeOutput) ToIPBlockSubnetAllocationRangeOutputWithContext(ctx context.Context) IPBlockSubnetAllocationRangeOutput {
	return o
}

func (o IPBlockSubnetAllocationRangeOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPBlockSubnetAllocationRange) *string { return v.End }).(pulumi.StringPtrOutput)
}

func (o IPBlockSubnetAllocationRangeOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPBlockSubnetAllocationRange) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type IPBlockSubnetAllocationRangeArrayOutput struct{ *pulumi.OutputState }

func (IPBlockSubnetAllocationRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPBlockSubnetAllocationRange)(nil)).Elem()
}

func (o IPBlockSubnetAllocationRangeArrayOutput) ToIPBlockSubnetAllocationRangeArrayOutput() IPBlockSubnetAllocationRangeArrayOutput {
	return o
}

func (o IPBlockSubnetAllocationRangeArrayOutput) ToIPBlockSubnetAllocationRangeArrayOutputWithContext(ctx context.Context) IPBlockSubnetAllocationRangeArrayOutput {
	return o
}

func (o IPBlockSubnetAllocationRangeArrayOutput) Index(i pulumi.IntInput) IPBlockSubnetAllocationRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPBlockSubnetAllocationRange {
		return vs[0].([]IPBlockSubnetAllocationRange)[vs[1].(int)]
	}).(IPBlockSubnetAllocationRangeOutput)
}

type IPBlockSubnetTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// IPBlockSubnetTagInput is an input type that accepts IPBlockSubnetTagArgs and IPBlockSubnetTagOutput values.
// You can construct a concrete instance of `IPBlockSubnetTagInput` via:
//
//          IPBlockSubnetTagArgs{...}
type IPBlockSubnetTagInput interface {
	pulumi.Input

	ToIPBlockSubnetTagOutput() IPBlockSubnetTagOutput
	ToIPBlockSubnetTagOutputWithContext(context.Context) IPBlockSubnetTagOutput
}

type IPBlockSubnetTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (IPBlockSubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPBlockSubnetTag)(nil)).Elem()
}

func (i IPBlockSubnetTagArgs) ToIPBlockSubnetTagOutput() IPBlockSubnetTagOutput {
	return i.ToIPBlockSubnetTagOutputWithContext(context.Background())
}

func (i IPBlockSubnetTagArgs) ToIPBlockSubnetTagOutputWithContext(ctx context.Context) IPBlockSubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPBlockSubnetTagOutput)
}

// IPBlockSubnetTagArrayInput is an input type that accepts IPBlockSubnetTagArray and IPBlockSubnetTagArrayOutput values.
// You can construct a concrete instance of `IPBlockSubnetTagArrayInput` via:
//
//          IPBlockSubnetTagArray{ IPBlockSubnetTagArgs{...} }
type IPBlockSubnetTagArrayInput interface {
	pulumi.Input

	ToIPBlockSubnetTagArrayOutput() IPBlockSubnetTagArrayOutput
	ToIPBlockSubnetTagArrayOutputWithContext(context.Context) IPBlockSubnetTagArrayOutput
}

type IPBlockSubnetTagArray []IPBlockSubnetTagInput

func (IPBlockSubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPBlockSubnetTag)(nil)).Elem()
}

func (i IPBlockSubnetTagArray) ToIPBlockSubnetTagArrayOutput() IPBlockSubnetTagArrayOutput {
	return i.ToIPBlockSubnetTagArrayOutputWithContext(context.Background())
}

func (i IPBlockSubnetTagArray) ToIPBlockSubnetTagArrayOutputWithContext(ctx context.Context) IPBlockSubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPBlockSubnetTagArrayOutput)
}

type IPBlockSubnetTagOutput struct{ *pulumi.OutputState }

func (IPBlockSubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPBlockSubnetTag)(nil)).Elem()
}

func (o IPBlockSubnetTagOutput) ToIPBlockSubnetTagOutput() IPBlockSubnetTagOutput {
	return o
}

func (o IPBlockSubnetTagOutput) ToIPBlockSubnetTagOutputWithContext(ctx context.Context) IPBlockSubnetTagOutput {
	return o
}

func (o IPBlockSubnetTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPBlockSubnetTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o IPBlockSubnetTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPBlockSubnetTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IPBlockSubnetTagArrayOutput struct{ *pulumi.OutputState }

func (IPBlockSubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPBlockSubnetTag)(nil)).Elem()
}

func (o IPBlockSubnetTagArrayOutput) ToIPBlockSubnetTagArrayOutput() IPBlockSubnetTagArrayOutput {
	return o
}

func (o IPBlockSubnetTagArrayOutput) ToIPBlockSubnetTagArrayOutputWithContext(ctx context.Context) IPBlockSubnetTagArrayOutput {
	return o
}

func (o IPBlockSubnetTagArrayOutput) Index(i pulumi.IntInput) IPBlockSubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPBlockSubnetTag {
		return vs[0].([]IPBlockSubnetTag)[vs[1].(int)]
	}).(IPBlockSubnetTagOutput)
}

type IPBlockTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// IPBlockTagInput is an input type that accepts IPBlockTagArgs and IPBlockTagOutput values.
// You can construct a concrete instance of `IPBlockTagInput` via:
//
//          IPBlockTagArgs{...}
type IPBlockTagInput interface {
	pulumi.Input

	ToIPBlockTagOutput() IPBlockTagOutput
	ToIPBlockTagOutputWithContext(context.Context) IPBlockTagOutput
}

type IPBlockTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (IPBlockTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPBlockTag)(nil)).Elem()
}

func (i IPBlockTagArgs) ToIPBlockTagOutput() IPBlockTagOutput {
	return i.ToIPBlockTagOutputWithContext(context.Background())
}

func (i IPBlockTagArgs) ToIPBlockTagOutputWithContext(ctx context.Context) IPBlockTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPBlockTagOutput)
}

// IPBlockTagArrayInput is an input type that accepts IPBlockTagArray and IPBlockTagArrayOutput values.
// You can construct a concrete instance of `IPBlockTagArrayInput` via:
//
//          IPBlockTagArray{ IPBlockTagArgs{...} }
type IPBlockTagArrayInput interface {
	pulumi.Input

	ToIPBlockTagArrayOutput() IPBlockTagArrayOutput
	ToIPBlockTagArrayOutputWithContext(context.Context) IPBlockTagArrayOutput
}

type IPBlockTagArray []IPBlockTagInput

func (IPBlockTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPBlockTag)(nil)).Elem()
}

func (i IPBlockTagArray) ToIPBlockTagArrayOutput() IPBlockTagArrayOutput {
	return i.ToIPBlockTagArrayOutputWithContext(context.Background())
}

func (i IPBlockTagArray) ToIPBlockTagArrayOutputWithContext(ctx context.Context) IPBlockTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPBlockTagArrayOutput)
}

type IPBlockTagOutput struct{ *pulumi.OutputState }

func (IPBlockTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPBlockTag)(nil)).Elem()
}

func (o IPBlockTagOutput) ToIPBlockTagOutput() IPBlockTagOutput {
	return o
}

func (o IPBlockTagOutput) ToIPBlockTagOutputWithContext(ctx context.Context) IPBlockTagOutput {
	return o
}

func (o IPBlockTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPBlockTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o IPBlockTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPBlockTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IPBlockTagArrayOutput struct{ *pulumi.OutputState }

func (IPBlockTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPBlockTag)(nil)).Elem()
}

func (o IPBlockTagArrayOutput) ToIPBlockTagArrayOutput() IPBlockTagArrayOutput {
	return o
}

func (o IPBlockTagArrayOutput) ToIPBlockTagArrayOutputWithContext(ctx context.Context) IPBlockTagArrayOutput {
	return o
}

func (o IPBlockTagArrayOutput) Index(i pulumi.IntInput) IPBlockTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPBlockTag {
		return vs[0].([]IPBlockTag)[vs[1].(int)]
	}).(IPBlockTagOutput)
}

type IPDiscoverySwitchingProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// IPDiscoverySwitchingProfileTagInput is an input type that accepts IPDiscoverySwitchingProfileTagArgs and IPDiscoverySwitchingProfileTagOutput values.
// You can construct a concrete instance of `IPDiscoverySwitchingProfileTagInput` via:
//
//          IPDiscoverySwitchingProfileTagArgs{...}
type IPDiscoverySwitchingProfileTagInput interface {
	pulumi.Input

	ToIPDiscoverySwitchingProfileTagOutput() IPDiscoverySwitchingProfileTagOutput
	ToIPDiscoverySwitchingProfileTagOutputWithContext(context.Context) IPDiscoverySwitchingProfileTagOutput
}

type IPDiscoverySwitchingProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (IPDiscoverySwitchingProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPDiscoverySwitchingProfileTag)(nil)).Elem()
}

func (i IPDiscoverySwitchingProfileTagArgs) ToIPDiscoverySwitchingProfileTagOutput() IPDiscoverySwitchingProfileTagOutput {
	return i.ToIPDiscoverySwitchingProfileTagOutputWithContext(context.Background())
}

func (i IPDiscoverySwitchingProfileTagArgs) ToIPDiscoverySwitchingProfileTagOutputWithContext(ctx context.Context) IPDiscoverySwitchingProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPDiscoverySwitchingProfileTagOutput)
}

// IPDiscoverySwitchingProfileTagArrayInput is an input type that accepts IPDiscoverySwitchingProfileTagArray and IPDiscoverySwitchingProfileTagArrayOutput values.
// You can construct a concrete instance of `IPDiscoverySwitchingProfileTagArrayInput` via:
//
//          IPDiscoverySwitchingProfileTagArray{ IPDiscoverySwitchingProfileTagArgs{...} }
type IPDiscoverySwitchingProfileTagArrayInput interface {
	pulumi.Input

	ToIPDiscoverySwitchingProfileTagArrayOutput() IPDiscoverySwitchingProfileTagArrayOutput
	ToIPDiscoverySwitchingProfileTagArrayOutputWithContext(context.Context) IPDiscoverySwitchingProfileTagArrayOutput
}

type IPDiscoverySwitchingProfileTagArray []IPDiscoverySwitchingProfileTagInput

func (IPDiscoverySwitchingProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPDiscoverySwitchingProfileTag)(nil)).Elem()
}

func (i IPDiscoverySwitchingProfileTagArray) ToIPDiscoverySwitchingProfileTagArrayOutput() IPDiscoverySwitchingProfileTagArrayOutput {
	return i.ToIPDiscoverySwitchingProfileTagArrayOutputWithContext(context.Background())
}

func (i IPDiscoverySwitchingProfileTagArray) ToIPDiscoverySwitchingProfileTagArrayOutputWithContext(ctx context.Context) IPDiscoverySwitchingProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPDiscoverySwitchingProfileTagArrayOutput)
}

type IPDiscoverySwitchingProfileTagOutput struct{ *pulumi.OutputState }

func (IPDiscoverySwitchingProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPDiscoverySwitchingProfileTag)(nil)).Elem()
}

func (o IPDiscoverySwitchingProfileTagOutput) ToIPDiscoverySwitchingProfileTagOutput() IPDiscoverySwitchingProfileTagOutput {
	return o
}

func (o IPDiscoverySwitchingProfileTagOutput) ToIPDiscoverySwitchingProfileTagOutputWithContext(ctx context.Context) IPDiscoverySwitchingProfileTagOutput {
	return o
}

func (o IPDiscoverySwitchingProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPDiscoverySwitchingProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o IPDiscoverySwitchingProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPDiscoverySwitchingProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IPDiscoverySwitchingProfileTagArrayOutput struct{ *pulumi.OutputState }

func (IPDiscoverySwitchingProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPDiscoverySwitchingProfileTag)(nil)).Elem()
}

func (o IPDiscoverySwitchingProfileTagArrayOutput) ToIPDiscoverySwitchingProfileTagArrayOutput() IPDiscoverySwitchingProfileTagArrayOutput {
	return o
}

func (o IPDiscoverySwitchingProfileTagArrayOutput) ToIPDiscoverySwitchingProfileTagArrayOutputWithContext(ctx context.Context) IPDiscoverySwitchingProfileTagArrayOutput {
	return o
}

func (o IPDiscoverySwitchingProfileTagArrayOutput) Index(i pulumi.IntInput) IPDiscoverySwitchingProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPDiscoverySwitchingProfileTag {
		return vs[0].([]IPDiscoverySwitchingProfileTag)[vs[1].(int)]
	}).(IPDiscoverySwitchingProfileTagOutput)
}

type IPPoolSubnet struct {
	AllocationRanges []string `pulumi:"allocationRanges"`
	Cidr             string   `pulumi:"cidr"`
	DnsNameservers   []string `pulumi:"dnsNameservers"`
	DnsSuffix        *string  `pulumi:"dnsSuffix"`
	GatewayIp        *string  `pulumi:"gatewayIp"`
}

// IPPoolSubnetInput is an input type that accepts IPPoolSubnetArgs and IPPoolSubnetOutput values.
// You can construct a concrete instance of `IPPoolSubnetInput` via:
//
//          IPPoolSubnetArgs{...}
type IPPoolSubnetInput interface {
	pulumi.Input

	ToIPPoolSubnetOutput() IPPoolSubnetOutput
	ToIPPoolSubnetOutputWithContext(context.Context) IPPoolSubnetOutput
}

type IPPoolSubnetArgs struct {
	AllocationRanges pulumi.StringArrayInput `pulumi:"allocationRanges"`
	Cidr             pulumi.StringInput      `pulumi:"cidr"`
	DnsNameservers   pulumi.StringArrayInput `pulumi:"dnsNameservers"`
	DnsSuffix        pulumi.StringPtrInput   `pulumi:"dnsSuffix"`
	GatewayIp        pulumi.StringPtrInput   `pulumi:"gatewayIp"`
}

func (IPPoolSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPPoolSubnet)(nil)).Elem()
}

func (i IPPoolSubnetArgs) ToIPPoolSubnetOutput() IPPoolSubnetOutput {
	return i.ToIPPoolSubnetOutputWithContext(context.Background())
}

func (i IPPoolSubnetArgs) ToIPPoolSubnetOutputWithContext(ctx context.Context) IPPoolSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPPoolSubnetOutput)
}

// IPPoolSubnetArrayInput is an input type that accepts IPPoolSubnetArray and IPPoolSubnetArrayOutput values.
// You can construct a concrete instance of `IPPoolSubnetArrayInput` via:
//
//          IPPoolSubnetArray{ IPPoolSubnetArgs{...} }
type IPPoolSubnetArrayInput interface {
	pulumi.Input

	ToIPPoolSubnetArrayOutput() IPPoolSubnetArrayOutput
	ToIPPoolSubnetArrayOutputWithContext(context.Context) IPPoolSubnetArrayOutput
}

type IPPoolSubnetArray []IPPoolSubnetInput

func (IPPoolSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPPoolSubnet)(nil)).Elem()
}

func (i IPPoolSubnetArray) ToIPPoolSubnetArrayOutput() IPPoolSubnetArrayOutput {
	return i.ToIPPoolSubnetArrayOutputWithContext(context.Background())
}

func (i IPPoolSubnetArray) ToIPPoolSubnetArrayOutputWithContext(ctx context.Context) IPPoolSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPPoolSubnetArrayOutput)
}

type IPPoolSubnetOutput struct{ *pulumi.OutputState }

func (IPPoolSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPPoolSubnet)(nil)).Elem()
}

func (o IPPoolSubnetOutput) ToIPPoolSubnetOutput() IPPoolSubnetOutput {
	return o
}

func (o IPPoolSubnetOutput) ToIPPoolSubnetOutputWithContext(ctx context.Context) IPPoolSubnetOutput {
	return o
}

func (o IPPoolSubnetOutput) AllocationRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPPoolSubnet) []string { return v.AllocationRanges }).(pulumi.StringArrayOutput)
}

func (o IPPoolSubnetOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v IPPoolSubnet) string { return v.Cidr }).(pulumi.StringOutput)
}

func (o IPPoolSubnetOutput) DnsNameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPPoolSubnet) []string { return v.DnsNameservers }).(pulumi.StringArrayOutput)
}

func (o IPPoolSubnetOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPoolSubnet) *string { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

func (o IPPoolSubnetOutput) GatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPoolSubnet) *string { return v.GatewayIp }).(pulumi.StringPtrOutput)
}

type IPPoolSubnetArrayOutput struct{ *pulumi.OutputState }

func (IPPoolSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPPoolSubnet)(nil)).Elem()
}

func (o IPPoolSubnetArrayOutput) ToIPPoolSubnetArrayOutput() IPPoolSubnetArrayOutput {
	return o
}

func (o IPPoolSubnetArrayOutput) ToIPPoolSubnetArrayOutputWithContext(ctx context.Context) IPPoolSubnetArrayOutput {
	return o
}

func (o IPPoolSubnetArrayOutput) Index(i pulumi.IntInput) IPPoolSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPPoolSubnet {
		return vs[0].([]IPPoolSubnet)[vs[1].(int)]
	}).(IPPoolSubnetOutput)
}

type IPPoolTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// IPPoolTagInput is an input type that accepts IPPoolTagArgs and IPPoolTagOutput values.
// You can construct a concrete instance of `IPPoolTagInput` via:
//
//          IPPoolTagArgs{...}
type IPPoolTagInput interface {
	pulumi.Input

	ToIPPoolTagOutput() IPPoolTagOutput
	ToIPPoolTagOutputWithContext(context.Context) IPPoolTagOutput
}

type IPPoolTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (IPPoolTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPPoolTag)(nil)).Elem()
}

func (i IPPoolTagArgs) ToIPPoolTagOutput() IPPoolTagOutput {
	return i.ToIPPoolTagOutputWithContext(context.Background())
}

func (i IPPoolTagArgs) ToIPPoolTagOutputWithContext(ctx context.Context) IPPoolTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPPoolTagOutput)
}

// IPPoolTagArrayInput is an input type that accepts IPPoolTagArray and IPPoolTagArrayOutput values.
// You can construct a concrete instance of `IPPoolTagArrayInput` via:
//
//          IPPoolTagArray{ IPPoolTagArgs{...} }
type IPPoolTagArrayInput interface {
	pulumi.Input

	ToIPPoolTagArrayOutput() IPPoolTagArrayOutput
	ToIPPoolTagArrayOutputWithContext(context.Context) IPPoolTagArrayOutput
}

type IPPoolTagArray []IPPoolTagInput

func (IPPoolTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPPoolTag)(nil)).Elem()
}

func (i IPPoolTagArray) ToIPPoolTagArrayOutput() IPPoolTagArrayOutput {
	return i.ToIPPoolTagArrayOutputWithContext(context.Background())
}

func (i IPPoolTagArray) ToIPPoolTagArrayOutputWithContext(ctx context.Context) IPPoolTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPPoolTagArrayOutput)
}

type IPPoolTagOutput struct{ *pulumi.OutputState }

func (IPPoolTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPPoolTag)(nil)).Elem()
}

func (o IPPoolTagOutput) ToIPPoolTagOutput() IPPoolTagOutput {
	return o
}

func (o IPPoolTagOutput) ToIPPoolTagOutputWithContext(ctx context.Context) IPPoolTagOutput {
	return o
}

func (o IPPoolTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPoolTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o IPPoolTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPoolTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IPPoolTagArrayOutput struct{ *pulumi.OutputState }

func (IPPoolTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPPoolTag)(nil)).Elem()
}

func (o IPPoolTagArrayOutput) ToIPPoolTagArrayOutput() IPPoolTagArrayOutput {
	return o
}

func (o IPPoolTagArrayOutput) ToIPPoolTagArrayOutputWithContext(ctx context.Context) IPPoolTagArrayOutput {
	return o
}

func (o IPPoolTagArrayOutput) Index(i pulumi.IntInput) IPPoolTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPPoolTag {
		return vs[0].([]IPPoolTag)[vs[1].(int)]
	}).(IPPoolTagOutput)
}

type IPProtocolNSServiceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// IPProtocolNSServiceTagInput is an input type that accepts IPProtocolNSServiceTagArgs and IPProtocolNSServiceTagOutput values.
// You can construct a concrete instance of `IPProtocolNSServiceTagInput` via:
//
//          IPProtocolNSServiceTagArgs{...}
type IPProtocolNSServiceTagInput interface {
	pulumi.Input

	ToIPProtocolNSServiceTagOutput() IPProtocolNSServiceTagOutput
	ToIPProtocolNSServiceTagOutputWithContext(context.Context) IPProtocolNSServiceTagOutput
}

type IPProtocolNSServiceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (IPProtocolNSServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPProtocolNSServiceTag)(nil)).Elem()
}

func (i IPProtocolNSServiceTagArgs) ToIPProtocolNSServiceTagOutput() IPProtocolNSServiceTagOutput {
	return i.ToIPProtocolNSServiceTagOutputWithContext(context.Background())
}

func (i IPProtocolNSServiceTagArgs) ToIPProtocolNSServiceTagOutputWithContext(ctx context.Context) IPProtocolNSServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPProtocolNSServiceTagOutput)
}

// IPProtocolNSServiceTagArrayInput is an input type that accepts IPProtocolNSServiceTagArray and IPProtocolNSServiceTagArrayOutput values.
// You can construct a concrete instance of `IPProtocolNSServiceTagArrayInput` via:
//
//          IPProtocolNSServiceTagArray{ IPProtocolNSServiceTagArgs{...} }
type IPProtocolNSServiceTagArrayInput interface {
	pulumi.Input

	ToIPProtocolNSServiceTagArrayOutput() IPProtocolNSServiceTagArrayOutput
	ToIPProtocolNSServiceTagArrayOutputWithContext(context.Context) IPProtocolNSServiceTagArrayOutput
}

type IPProtocolNSServiceTagArray []IPProtocolNSServiceTagInput

func (IPProtocolNSServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPProtocolNSServiceTag)(nil)).Elem()
}

func (i IPProtocolNSServiceTagArray) ToIPProtocolNSServiceTagArrayOutput() IPProtocolNSServiceTagArrayOutput {
	return i.ToIPProtocolNSServiceTagArrayOutputWithContext(context.Background())
}

func (i IPProtocolNSServiceTagArray) ToIPProtocolNSServiceTagArrayOutputWithContext(ctx context.Context) IPProtocolNSServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPProtocolNSServiceTagArrayOutput)
}

type IPProtocolNSServiceTagOutput struct{ *pulumi.OutputState }

func (IPProtocolNSServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPProtocolNSServiceTag)(nil)).Elem()
}

func (o IPProtocolNSServiceTagOutput) ToIPProtocolNSServiceTagOutput() IPProtocolNSServiceTagOutput {
	return o
}

func (o IPProtocolNSServiceTagOutput) ToIPProtocolNSServiceTagOutputWithContext(ctx context.Context) IPProtocolNSServiceTagOutput {
	return o
}

func (o IPProtocolNSServiceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPProtocolNSServiceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o IPProtocolNSServiceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPProtocolNSServiceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IPProtocolNSServiceTagArrayOutput struct{ *pulumi.OutputState }

func (IPProtocolNSServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPProtocolNSServiceTag)(nil)).Elem()
}

func (o IPProtocolNSServiceTagArrayOutput) ToIPProtocolNSServiceTagArrayOutput() IPProtocolNSServiceTagArrayOutput {
	return o
}

func (o IPProtocolNSServiceTagArrayOutput) ToIPProtocolNSServiceTagArrayOutputWithContext(ctx context.Context) IPProtocolNSServiceTagArrayOutput {
	return o
}

func (o IPProtocolNSServiceTagArrayOutput) Index(i pulumi.IntInput) IPProtocolNSServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPProtocolNSServiceTag {
		return vs[0].([]IPProtocolNSServiceTag)[vs[1].(int)]
	}).(IPProtocolNSServiceTagOutput)
}

type IPSetTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// IPSetTagInput is an input type that accepts IPSetTagArgs and IPSetTagOutput values.
// You can construct a concrete instance of `IPSetTagInput` via:
//
//          IPSetTagArgs{...}
type IPSetTagInput interface {
	pulumi.Input

	ToIPSetTagOutput() IPSetTagOutput
	ToIPSetTagOutputWithContext(context.Context) IPSetTagOutput
}

type IPSetTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (IPSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPSetTag)(nil)).Elem()
}

func (i IPSetTagArgs) ToIPSetTagOutput() IPSetTagOutput {
	return i.ToIPSetTagOutputWithContext(context.Background())
}

func (i IPSetTagArgs) ToIPSetTagOutputWithContext(ctx context.Context) IPSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSetTagOutput)
}

// IPSetTagArrayInput is an input type that accepts IPSetTagArray and IPSetTagArrayOutput values.
// You can construct a concrete instance of `IPSetTagArrayInput` via:
//
//          IPSetTagArray{ IPSetTagArgs{...} }
type IPSetTagArrayInput interface {
	pulumi.Input

	ToIPSetTagArrayOutput() IPSetTagArrayOutput
	ToIPSetTagArrayOutputWithContext(context.Context) IPSetTagArrayOutput
}

type IPSetTagArray []IPSetTagInput

func (IPSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPSetTag)(nil)).Elem()
}

func (i IPSetTagArray) ToIPSetTagArrayOutput() IPSetTagArrayOutput {
	return i.ToIPSetTagArrayOutputWithContext(context.Background())
}

func (i IPSetTagArray) ToIPSetTagArrayOutputWithContext(ctx context.Context) IPSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSetTagArrayOutput)
}

type IPSetTagOutput struct{ *pulumi.OutputState }

func (IPSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPSetTag)(nil)).Elem()
}

func (o IPSetTagOutput) ToIPSetTagOutput() IPSetTagOutput {
	return o
}

func (o IPSetTagOutput) ToIPSetTagOutputWithContext(ctx context.Context) IPSetTagOutput {
	return o
}

func (o IPSetTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPSetTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o IPSetTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPSetTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IPSetTagArrayOutput struct{ *pulumi.OutputState }

func (IPSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPSetTag)(nil)).Elem()
}

func (o IPSetTagArrayOutput) ToIPSetTagArrayOutput() IPSetTagArrayOutput {
	return o
}

func (o IPSetTagArrayOutput) ToIPSetTagArrayOutputWithContext(ctx context.Context) IPSetTagArrayOutput {
	return o
}

func (o IPSetTagArrayOutput) Index(i pulumi.IntInput) IPSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPSetTag {
		return vs[0].([]IPSetTag)[vs[1].(int)]
	}).(IPSetTagOutput)
}

type L4PortSetNSServiceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// L4PortSetNSServiceTagInput is an input type that accepts L4PortSetNSServiceTagArgs and L4PortSetNSServiceTagOutput values.
// You can construct a concrete instance of `L4PortSetNSServiceTagInput` via:
//
//          L4PortSetNSServiceTagArgs{...}
type L4PortSetNSServiceTagInput interface {
	pulumi.Input

	ToL4PortSetNSServiceTagOutput() L4PortSetNSServiceTagOutput
	ToL4PortSetNSServiceTagOutputWithContext(context.Context) L4PortSetNSServiceTagOutput
}

type L4PortSetNSServiceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (L4PortSetNSServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*L4PortSetNSServiceTag)(nil)).Elem()
}

func (i L4PortSetNSServiceTagArgs) ToL4PortSetNSServiceTagOutput() L4PortSetNSServiceTagOutput {
	return i.ToL4PortSetNSServiceTagOutputWithContext(context.Background())
}

func (i L4PortSetNSServiceTagArgs) ToL4PortSetNSServiceTagOutputWithContext(ctx context.Context) L4PortSetNSServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4PortSetNSServiceTagOutput)
}

// L4PortSetNSServiceTagArrayInput is an input type that accepts L4PortSetNSServiceTagArray and L4PortSetNSServiceTagArrayOutput values.
// You can construct a concrete instance of `L4PortSetNSServiceTagArrayInput` via:
//
//          L4PortSetNSServiceTagArray{ L4PortSetNSServiceTagArgs{...} }
type L4PortSetNSServiceTagArrayInput interface {
	pulumi.Input

	ToL4PortSetNSServiceTagArrayOutput() L4PortSetNSServiceTagArrayOutput
	ToL4PortSetNSServiceTagArrayOutputWithContext(context.Context) L4PortSetNSServiceTagArrayOutput
}

type L4PortSetNSServiceTagArray []L4PortSetNSServiceTagInput

func (L4PortSetNSServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4PortSetNSServiceTag)(nil)).Elem()
}

func (i L4PortSetNSServiceTagArray) ToL4PortSetNSServiceTagArrayOutput() L4PortSetNSServiceTagArrayOutput {
	return i.ToL4PortSetNSServiceTagArrayOutputWithContext(context.Background())
}

func (i L4PortSetNSServiceTagArray) ToL4PortSetNSServiceTagArrayOutputWithContext(ctx context.Context) L4PortSetNSServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(L4PortSetNSServiceTagArrayOutput)
}

type L4PortSetNSServiceTagOutput struct{ *pulumi.OutputState }

func (L4PortSetNSServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*L4PortSetNSServiceTag)(nil)).Elem()
}

func (o L4PortSetNSServiceTagOutput) ToL4PortSetNSServiceTagOutput() L4PortSetNSServiceTagOutput {
	return o
}

func (o L4PortSetNSServiceTagOutput) ToL4PortSetNSServiceTagOutputWithContext(ctx context.Context) L4PortSetNSServiceTagOutput {
	return o
}

func (o L4PortSetNSServiceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v L4PortSetNSServiceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o L4PortSetNSServiceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v L4PortSetNSServiceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type L4PortSetNSServiceTagArrayOutput struct{ *pulumi.OutputState }

func (L4PortSetNSServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]L4PortSetNSServiceTag)(nil)).Elem()
}

func (o L4PortSetNSServiceTagArrayOutput) ToL4PortSetNSServiceTagArrayOutput() L4PortSetNSServiceTagArrayOutput {
	return o
}

func (o L4PortSetNSServiceTagArrayOutput) ToL4PortSetNSServiceTagArrayOutputWithContext(ctx context.Context) L4PortSetNSServiceTagArrayOutput {
	return o
}

func (o L4PortSetNSServiceTagArrayOutput) Index(i pulumi.IntInput) L4PortSetNSServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) L4PortSetNSServiceTag {
		return vs[0].([]L4PortSetNSServiceTag)[vs[1].(int)]
	}).(L4PortSetNSServiceTagOutput)
}

type LBClientSSLProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBClientSSLProfileTagInput is an input type that accepts LBClientSSLProfileTagArgs and LBClientSSLProfileTagOutput values.
// You can construct a concrete instance of `LBClientSSLProfileTagInput` via:
//
//          LBClientSSLProfileTagArgs{...}
type LBClientSSLProfileTagInput interface {
	pulumi.Input

	ToLBClientSSLProfileTagOutput() LBClientSSLProfileTagOutput
	ToLBClientSSLProfileTagOutputWithContext(context.Context) LBClientSSLProfileTagOutput
}

type LBClientSSLProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBClientSSLProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBClientSSLProfileTag)(nil)).Elem()
}

func (i LBClientSSLProfileTagArgs) ToLBClientSSLProfileTagOutput() LBClientSSLProfileTagOutput {
	return i.ToLBClientSSLProfileTagOutputWithContext(context.Background())
}

func (i LBClientSSLProfileTagArgs) ToLBClientSSLProfileTagOutputWithContext(ctx context.Context) LBClientSSLProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBClientSSLProfileTagOutput)
}

// LBClientSSLProfileTagArrayInput is an input type that accepts LBClientSSLProfileTagArray and LBClientSSLProfileTagArrayOutput values.
// You can construct a concrete instance of `LBClientSSLProfileTagArrayInput` via:
//
//          LBClientSSLProfileTagArray{ LBClientSSLProfileTagArgs{...} }
type LBClientSSLProfileTagArrayInput interface {
	pulumi.Input

	ToLBClientSSLProfileTagArrayOutput() LBClientSSLProfileTagArrayOutput
	ToLBClientSSLProfileTagArrayOutputWithContext(context.Context) LBClientSSLProfileTagArrayOutput
}

type LBClientSSLProfileTagArray []LBClientSSLProfileTagInput

func (LBClientSSLProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBClientSSLProfileTag)(nil)).Elem()
}

func (i LBClientSSLProfileTagArray) ToLBClientSSLProfileTagArrayOutput() LBClientSSLProfileTagArrayOutput {
	return i.ToLBClientSSLProfileTagArrayOutputWithContext(context.Background())
}

func (i LBClientSSLProfileTagArray) ToLBClientSSLProfileTagArrayOutputWithContext(ctx context.Context) LBClientSSLProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBClientSSLProfileTagArrayOutput)
}

type LBClientSSLProfileTagOutput struct{ *pulumi.OutputState }

func (LBClientSSLProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBClientSSLProfileTag)(nil)).Elem()
}

func (o LBClientSSLProfileTagOutput) ToLBClientSSLProfileTagOutput() LBClientSSLProfileTagOutput {
	return o
}

func (o LBClientSSLProfileTagOutput) ToLBClientSSLProfileTagOutputWithContext(ctx context.Context) LBClientSSLProfileTagOutput {
	return o
}

func (o LBClientSSLProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBClientSSLProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBClientSSLProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBClientSSLProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBClientSSLProfileTagArrayOutput struct{ *pulumi.OutputState }

func (LBClientSSLProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBClientSSLProfileTag)(nil)).Elem()
}

func (o LBClientSSLProfileTagArrayOutput) ToLBClientSSLProfileTagArrayOutput() LBClientSSLProfileTagArrayOutput {
	return o
}

func (o LBClientSSLProfileTagArrayOutput) ToLBClientSSLProfileTagArrayOutputWithContext(ctx context.Context) LBClientSSLProfileTagArrayOutput {
	return o
}

func (o LBClientSSLProfileTagArrayOutput) Index(i pulumi.IntInput) LBClientSSLProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBClientSSLProfileTag {
		return vs[0].([]LBClientSSLProfileTag)[vs[1].(int)]
	}).(LBClientSSLProfileTagOutput)
}

type LBCookiePersistenceProfileInsertModeParams struct {
	CookieDomain     *string `pulumi:"cookieDomain"`
	CookieExpiryType *string `pulumi:"cookieExpiryType"`
	CookiePath       *string `pulumi:"cookiePath"`
	MaxIdleTime      *int    `pulumi:"maxIdleTime"`
	MaxLifeTime      *int    `pulumi:"maxLifeTime"`
}

// LBCookiePersistenceProfileInsertModeParamsInput is an input type that accepts LBCookiePersistenceProfileInsertModeParamsArgs and LBCookiePersistenceProfileInsertModeParamsOutput values.
// You can construct a concrete instance of `LBCookiePersistenceProfileInsertModeParamsInput` via:
//
//          LBCookiePersistenceProfileInsertModeParamsArgs{...}
type LBCookiePersistenceProfileInsertModeParamsInput interface {
	pulumi.Input

	ToLBCookiePersistenceProfileInsertModeParamsOutput() LBCookiePersistenceProfileInsertModeParamsOutput
	ToLBCookiePersistenceProfileInsertModeParamsOutputWithContext(context.Context) LBCookiePersistenceProfileInsertModeParamsOutput
}

type LBCookiePersistenceProfileInsertModeParamsArgs struct {
	CookieDomain     pulumi.StringPtrInput `pulumi:"cookieDomain"`
	CookieExpiryType pulumi.StringPtrInput `pulumi:"cookieExpiryType"`
	CookiePath       pulumi.StringPtrInput `pulumi:"cookiePath"`
	MaxIdleTime      pulumi.IntPtrInput    `pulumi:"maxIdleTime"`
	MaxLifeTime      pulumi.IntPtrInput    `pulumi:"maxLifeTime"`
}

func (LBCookiePersistenceProfileInsertModeParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBCookiePersistenceProfileInsertModeParams)(nil)).Elem()
}

func (i LBCookiePersistenceProfileInsertModeParamsArgs) ToLBCookiePersistenceProfileInsertModeParamsOutput() LBCookiePersistenceProfileInsertModeParamsOutput {
	return i.ToLBCookiePersistenceProfileInsertModeParamsOutputWithContext(context.Background())
}

func (i LBCookiePersistenceProfileInsertModeParamsArgs) ToLBCookiePersistenceProfileInsertModeParamsOutputWithContext(ctx context.Context) LBCookiePersistenceProfileInsertModeParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBCookiePersistenceProfileInsertModeParamsOutput)
}

func (i LBCookiePersistenceProfileInsertModeParamsArgs) ToLBCookiePersistenceProfileInsertModeParamsPtrOutput() LBCookiePersistenceProfileInsertModeParamsPtrOutput {
	return i.ToLBCookiePersistenceProfileInsertModeParamsPtrOutputWithContext(context.Background())
}

func (i LBCookiePersistenceProfileInsertModeParamsArgs) ToLBCookiePersistenceProfileInsertModeParamsPtrOutputWithContext(ctx context.Context) LBCookiePersistenceProfileInsertModeParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBCookiePersistenceProfileInsertModeParamsOutput).ToLBCookiePersistenceProfileInsertModeParamsPtrOutputWithContext(ctx)
}

// LBCookiePersistenceProfileInsertModeParamsPtrInput is an input type that accepts LBCookiePersistenceProfileInsertModeParamsArgs, LBCookiePersistenceProfileInsertModeParamsPtr and LBCookiePersistenceProfileInsertModeParamsPtrOutput values.
// You can construct a concrete instance of `LBCookiePersistenceProfileInsertModeParamsPtrInput` via:
//
//          LBCookiePersistenceProfileInsertModeParamsArgs{...}
//
//  or:
//
//          nil
type LBCookiePersistenceProfileInsertModeParamsPtrInput interface {
	pulumi.Input

	ToLBCookiePersistenceProfileInsertModeParamsPtrOutput() LBCookiePersistenceProfileInsertModeParamsPtrOutput
	ToLBCookiePersistenceProfileInsertModeParamsPtrOutputWithContext(context.Context) LBCookiePersistenceProfileInsertModeParamsPtrOutput
}

type lbcookiePersistenceProfileInsertModeParamsPtrType LBCookiePersistenceProfileInsertModeParamsArgs

func LBCookiePersistenceProfileInsertModeParamsPtr(v *LBCookiePersistenceProfileInsertModeParamsArgs) LBCookiePersistenceProfileInsertModeParamsPtrInput {
	return (*lbcookiePersistenceProfileInsertModeParamsPtrType)(v)
}

func (*lbcookiePersistenceProfileInsertModeParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBCookiePersistenceProfileInsertModeParams)(nil)).Elem()
}

func (i *lbcookiePersistenceProfileInsertModeParamsPtrType) ToLBCookiePersistenceProfileInsertModeParamsPtrOutput() LBCookiePersistenceProfileInsertModeParamsPtrOutput {
	return i.ToLBCookiePersistenceProfileInsertModeParamsPtrOutputWithContext(context.Background())
}

func (i *lbcookiePersistenceProfileInsertModeParamsPtrType) ToLBCookiePersistenceProfileInsertModeParamsPtrOutputWithContext(ctx context.Context) LBCookiePersistenceProfileInsertModeParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBCookiePersistenceProfileInsertModeParamsPtrOutput)
}

type LBCookiePersistenceProfileInsertModeParamsOutput struct{ *pulumi.OutputState }

func (LBCookiePersistenceProfileInsertModeParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBCookiePersistenceProfileInsertModeParams)(nil)).Elem()
}

func (o LBCookiePersistenceProfileInsertModeParamsOutput) ToLBCookiePersistenceProfileInsertModeParamsOutput() LBCookiePersistenceProfileInsertModeParamsOutput {
	return o
}

func (o LBCookiePersistenceProfileInsertModeParamsOutput) ToLBCookiePersistenceProfileInsertModeParamsOutputWithContext(ctx context.Context) LBCookiePersistenceProfileInsertModeParamsOutput {
	return o
}

func (o LBCookiePersistenceProfileInsertModeParamsOutput) ToLBCookiePersistenceProfileInsertModeParamsPtrOutput() LBCookiePersistenceProfileInsertModeParamsPtrOutput {
	return o.ToLBCookiePersistenceProfileInsertModeParamsPtrOutputWithContext(context.Background())
}

func (o LBCookiePersistenceProfileInsertModeParamsOutput) ToLBCookiePersistenceProfileInsertModeParamsPtrOutputWithContext(ctx context.Context) LBCookiePersistenceProfileInsertModeParamsPtrOutput {
	return o.ApplyT(func(v LBCookiePersistenceProfileInsertModeParams) *LBCookiePersistenceProfileInsertModeParams {
		return &v
	}).(LBCookiePersistenceProfileInsertModeParamsPtrOutput)
}
func (o LBCookiePersistenceProfileInsertModeParamsOutput) CookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBCookiePersistenceProfileInsertModeParams) *string { return v.CookieDomain }).(pulumi.StringPtrOutput)
}

func (o LBCookiePersistenceProfileInsertModeParamsOutput) CookieExpiryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBCookiePersistenceProfileInsertModeParams) *string { return v.CookieExpiryType }).(pulumi.StringPtrOutput)
}

func (o LBCookiePersistenceProfileInsertModeParamsOutput) CookiePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBCookiePersistenceProfileInsertModeParams) *string { return v.CookiePath }).(pulumi.StringPtrOutput)
}

func (o LBCookiePersistenceProfileInsertModeParamsOutput) MaxIdleTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LBCookiePersistenceProfileInsertModeParams) *int { return v.MaxIdleTime }).(pulumi.IntPtrOutput)
}

func (o LBCookiePersistenceProfileInsertModeParamsOutput) MaxLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LBCookiePersistenceProfileInsertModeParams) *int { return v.MaxLifeTime }).(pulumi.IntPtrOutput)
}

type LBCookiePersistenceProfileInsertModeParamsPtrOutput struct{ *pulumi.OutputState }

func (LBCookiePersistenceProfileInsertModeParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBCookiePersistenceProfileInsertModeParams)(nil)).Elem()
}

func (o LBCookiePersistenceProfileInsertModeParamsPtrOutput) ToLBCookiePersistenceProfileInsertModeParamsPtrOutput() LBCookiePersistenceProfileInsertModeParamsPtrOutput {
	return o
}

func (o LBCookiePersistenceProfileInsertModeParamsPtrOutput) ToLBCookiePersistenceProfileInsertModeParamsPtrOutputWithContext(ctx context.Context) LBCookiePersistenceProfileInsertModeParamsPtrOutput {
	return o
}

func (o LBCookiePersistenceProfileInsertModeParamsPtrOutput) Elem() LBCookiePersistenceProfileInsertModeParamsOutput {
	return o.ApplyT(func(v *LBCookiePersistenceProfileInsertModeParams) LBCookiePersistenceProfileInsertModeParams {
		return *v
	}).(LBCookiePersistenceProfileInsertModeParamsOutput)
}

func (o LBCookiePersistenceProfileInsertModeParamsPtrOutput) CookieDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBCookiePersistenceProfileInsertModeParams) *string {
		if v == nil {
			return nil
		}
		return v.CookieDomain
	}).(pulumi.StringPtrOutput)
}

func (o LBCookiePersistenceProfileInsertModeParamsPtrOutput) CookieExpiryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBCookiePersistenceProfileInsertModeParams) *string {
		if v == nil {
			return nil
		}
		return v.CookieExpiryType
	}).(pulumi.StringPtrOutput)
}

func (o LBCookiePersistenceProfileInsertModeParamsPtrOutput) CookiePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBCookiePersistenceProfileInsertModeParams) *string {
		if v == nil {
			return nil
		}
		return v.CookiePath
	}).(pulumi.StringPtrOutput)
}

func (o LBCookiePersistenceProfileInsertModeParamsPtrOutput) MaxIdleTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LBCookiePersistenceProfileInsertModeParams) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleTime
	}).(pulumi.IntPtrOutput)
}

func (o LBCookiePersistenceProfileInsertModeParamsPtrOutput) MaxLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LBCookiePersistenceProfileInsertModeParams) *int {
		if v == nil {
			return nil
		}
		return v.MaxLifeTime
	}).(pulumi.IntPtrOutput)
}

type LBCookiePersistenceProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBCookiePersistenceProfileTagInput is an input type that accepts LBCookiePersistenceProfileTagArgs and LBCookiePersistenceProfileTagOutput values.
// You can construct a concrete instance of `LBCookiePersistenceProfileTagInput` via:
//
//          LBCookiePersistenceProfileTagArgs{...}
type LBCookiePersistenceProfileTagInput interface {
	pulumi.Input

	ToLBCookiePersistenceProfileTagOutput() LBCookiePersistenceProfileTagOutput
	ToLBCookiePersistenceProfileTagOutputWithContext(context.Context) LBCookiePersistenceProfileTagOutput
}

type LBCookiePersistenceProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBCookiePersistenceProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBCookiePersistenceProfileTag)(nil)).Elem()
}

func (i LBCookiePersistenceProfileTagArgs) ToLBCookiePersistenceProfileTagOutput() LBCookiePersistenceProfileTagOutput {
	return i.ToLBCookiePersistenceProfileTagOutputWithContext(context.Background())
}

func (i LBCookiePersistenceProfileTagArgs) ToLBCookiePersistenceProfileTagOutputWithContext(ctx context.Context) LBCookiePersistenceProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBCookiePersistenceProfileTagOutput)
}

// LBCookiePersistenceProfileTagArrayInput is an input type that accepts LBCookiePersistenceProfileTagArray and LBCookiePersistenceProfileTagArrayOutput values.
// You can construct a concrete instance of `LBCookiePersistenceProfileTagArrayInput` via:
//
//          LBCookiePersistenceProfileTagArray{ LBCookiePersistenceProfileTagArgs{...} }
type LBCookiePersistenceProfileTagArrayInput interface {
	pulumi.Input

	ToLBCookiePersistenceProfileTagArrayOutput() LBCookiePersistenceProfileTagArrayOutput
	ToLBCookiePersistenceProfileTagArrayOutputWithContext(context.Context) LBCookiePersistenceProfileTagArrayOutput
}

type LBCookiePersistenceProfileTagArray []LBCookiePersistenceProfileTagInput

func (LBCookiePersistenceProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBCookiePersistenceProfileTag)(nil)).Elem()
}

func (i LBCookiePersistenceProfileTagArray) ToLBCookiePersistenceProfileTagArrayOutput() LBCookiePersistenceProfileTagArrayOutput {
	return i.ToLBCookiePersistenceProfileTagArrayOutputWithContext(context.Background())
}

func (i LBCookiePersistenceProfileTagArray) ToLBCookiePersistenceProfileTagArrayOutputWithContext(ctx context.Context) LBCookiePersistenceProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBCookiePersistenceProfileTagArrayOutput)
}

type LBCookiePersistenceProfileTagOutput struct{ *pulumi.OutputState }

func (LBCookiePersistenceProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBCookiePersistenceProfileTag)(nil)).Elem()
}

func (o LBCookiePersistenceProfileTagOutput) ToLBCookiePersistenceProfileTagOutput() LBCookiePersistenceProfileTagOutput {
	return o
}

func (o LBCookiePersistenceProfileTagOutput) ToLBCookiePersistenceProfileTagOutputWithContext(ctx context.Context) LBCookiePersistenceProfileTagOutput {
	return o
}

func (o LBCookiePersistenceProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBCookiePersistenceProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBCookiePersistenceProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBCookiePersistenceProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBCookiePersistenceProfileTagArrayOutput struct{ *pulumi.OutputState }

func (LBCookiePersistenceProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBCookiePersistenceProfileTag)(nil)).Elem()
}

func (o LBCookiePersistenceProfileTagArrayOutput) ToLBCookiePersistenceProfileTagArrayOutput() LBCookiePersistenceProfileTagArrayOutput {
	return o
}

func (o LBCookiePersistenceProfileTagArrayOutput) ToLBCookiePersistenceProfileTagArrayOutputWithContext(ctx context.Context) LBCookiePersistenceProfileTagArrayOutput {
	return o
}

func (o LBCookiePersistenceProfileTagArrayOutput) Index(i pulumi.IntInput) LBCookiePersistenceProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBCookiePersistenceProfileTag {
		return vs[0].([]LBCookiePersistenceProfileTag)[vs[1].(int)]
	}).(LBCookiePersistenceProfileTagOutput)
}

type LBFastTCPApplicationProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBFastTCPApplicationProfileTagInput is an input type that accepts LBFastTCPApplicationProfileTagArgs and LBFastTCPApplicationProfileTagOutput values.
// You can construct a concrete instance of `LBFastTCPApplicationProfileTagInput` via:
//
//          LBFastTCPApplicationProfileTagArgs{...}
type LBFastTCPApplicationProfileTagInput interface {
	pulumi.Input

	ToLBFastTCPApplicationProfileTagOutput() LBFastTCPApplicationProfileTagOutput
	ToLBFastTCPApplicationProfileTagOutputWithContext(context.Context) LBFastTCPApplicationProfileTagOutput
}

type LBFastTCPApplicationProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBFastTCPApplicationProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFastTCPApplicationProfileTag)(nil)).Elem()
}

func (i LBFastTCPApplicationProfileTagArgs) ToLBFastTCPApplicationProfileTagOutput() LBFastTCPApplicationProfileTagOutput {
	return i.ToLBFastTCPApplicationProfileTagOutputWithContext(context.Background())
}

func (i LBFastTCPApplicationProfileTagArgs) ToLBFastTCPApplicationProfileTagOutputWithContext(ctx context.Context) LBFastTCPApplicationProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFastTCPApplicationProfileTagOutput)
}

// LBFastTCPApplicationProfileTagArrayInput is an input type that accepts LBFastTCPApplicationProfileTagArray and LBFastTCPApplicationProfileTagArrayOutput values.
// You can construct a concrete instance of `LBFastTCPApplicationProfileTagArrayInput` via:
//
//          LBFastTCPApplicationProfileTagArray{ LBFastTCPApplicationProfileTagArgs{...} }
type LBFastTCPApplicationProfileTagArrayInput interface {
	pulumi.Input

	ToLBFastTCPApplicationProfileTagArrayOutput() LBFastTCPApplicationProfileTagArrayOutput
	ToLBFastTCPApplicationProfileTagArrayOutputWithContext(context.Context) LBFastTCPApplicationProfileTagArrayOutput
}

type LBFastTCPApplicationProfileTagArray []LBFastTCPApplicationProfileTagInput

func (LBFastTCPApplicationProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFastTCPApplicationProfileTag)(nil)).Elem()
}

func (i LBFastTCPApplicationProfileTagArray) ToLBFastTCPApplicationProfileTagArrayOutput() LBFastTCPApplicationProfileTagArrayOutput {
	return i.ToLBFastTCPApplicationProfileTagArrayOutputWithContext(context.Background())
}

func (i LBFastTCPApplicationProfileTagArray) ToLBFastTCPApplicationProfileTagArrayOutputWithContext(ctx context.Context) LBFastTCPApplicationProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFastTCPApplicationProfileTagArrayOutput)
}

type LBFastTCPApplicationProfileTagOutput struct{ *pulumi.OutputState }

func (LBFastTCPApplicationProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFastTCPApplicationProfileTag)(nil)).Elem()
}

func (o LBFastTCPApplicationProfileTagOutput) ToLBFastTCPApplicationProfileTagOutput() LBFastTCPApplicationProfileTagOutput {
	return o
}

func (o LBFastTCPApplicationProfileTagOutput) ToLBFastTCPApplicationProfileTagOutputWithContext(ctx context.Context) LBFastTCPApplicationProfileTagOutput {
	return o
}

func (o LBFastTCPApplicationProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFastTCPApplicationProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBFastTCPApplicationProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFastTCPApplicationProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBFastTCPApplicationProfileTagArrayOutput struct{ *pulumi.OutputState }

func (LBFastTCPApplicationProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFastTCPApplicationProfileTag)(nil)).Elem()
}

func (o LBFastTCPApplicationProfileTagArrayOutput) ToLBFastTCPApplicationProfileTagArrayOutput() LBFastTCPApplicationProfileTagArrayOutput {
	return o
}

func (o LBFastTCPApplicationProfileTagArrayOutput) ToLBFastTCPApplicationProfileTagArrayOutputWithContext(ctx context.Context) LBFastTCPApplicationProfileTagArrayOutput {
	return o
}

func (o LBFastTCPApplicationProfileTagArrayOutput) Index(i pulumi.IntInput) LBFastTCPApplicationProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBFastTCPApplicationProfileTag {
		return vs[0].([]LBFastTCPApplicationProfileTag)[vs[1].(int)]
	}).(LBFastTCPApplicationProfileTagOutput)
}

type LBFastUDPApplicationProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBFastUDPApplicationProfileTagInput is an input type that accepts LBFastUDPApplicationProfileTagArgs and LBFastUDPApplicationProfileTagOutput values.
// You can construct a concrete instance of `LBFastUDPApplicationProfileTagInput` via:
//
//          LBFastUDPApplicationProfileTagArgs{...}
type LBFastUDPApplicationProfileTagInput interface {
	pulumi.Input

	ToLBFastUDPApplicationProfileTagOutput() LBFastUDPApplicationProfileTagOutput
	ToLBFastUDPApplicationProfileTagOutputWithContext(context.Context) LBFastUDPApplicationProfileTagOutput
}

type LBFastUDPApplicationProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBFastUDPApplicationProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFastUDPApplicationProfileTag)(nil)).Elem()
}

func (i LBFastUDPApplicationProfileTagArgs) ToLBFastUDPApplicationProfileTagOutput() LBFastUDPApplicationProfileTagOutput {
	return i.ToLBFastUDPApplicationProfileTagOutputWithContext(context.Background())
}

func (i LBFastUDPApplicationProfileTagArgs) ToLBFastUDPApplicationProfileTagOutputWithContext(ctx context.Context) LBFastUDPApplicationProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFastUDPApplicationProfileTagOutput)
}

// LBFastUDPApplicationProfileTagArrayInput is an input type that accepts LBFastUDPApplicationProfileTagArray and LBFastUDPApplicationProfileTagArrayOutput values.
// You can construct a concrete instance of `LBFastUDPApplicationProfileTagArrayInput` via:
//
//          LBFastUDPApplicationProfileTagArray{ LBFastUDPApplicationProfileTagArgs{...} }
type LBFastUDPApplicationProfileTagArrayInput interface {
	pulumi.Input

	ToLBFastUDPApplicationProfileTagArrayOutput() LBFastUDPApplicationProfileTagArrayOutput
	ToLBFastUDPApplicationProfileTagArrayOutputWithContext(context.Context) LBFastUDPApplicationProfileTagArrayOutput
}

type LBFastUDPApplicationProfileTagArray []LBFastUDPApplicationProfileTagInput

func (LBFastUDPApplicationProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFastUDPApplicationProfileTag)(nil)).Elem()
}

func (i LBFastUDPApplicationProfileTagArray) ToLBFastUDPApplicationProfileTagArrayOutput() LBFastUDPApplicationProfileTagArrayOutput {
	return i.ToLBFastUDPApplicationProfileTagArrayOutputWithContext(context.Background())
}

func (i LBFastUDPApplicationProfileTagArray) ToLBFastUDPApplicationProfileTagArrayOutputWithContext(ctx context.Context) LBFastUDPApplicationProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFastUDPApplicationProfileTagArrayOutput)
}

type LBFastUDPApplicationProfileTagOutput struct{ *pulumi.OutputState }

func (LBFastUDPApplicationProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFastUDPApplicationProfileTag)(nil)).Elem()
}

func (o LBFastUDPApplicationProfileTagOutput) ToLBFastUDPApplicationProfileTagOutput() LBFastUDPApplicationProfileTagOutput {
	return o
}

func (o LBFastUDPApplicationProfileTagOutput) ToLBFastUDPApplicationProfileTagOutputWithContext(ctx context.Context) LBFastUDPApplicationProfileTagOutput {
	return o
}

func (o LBFastUDPApplicationProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFastUDPApplicationProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBFastUDPApplicationProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFastUDPApplicationProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBFastUDPApplicationProfileTagArrayOutput struct{ *pulumi.OutputState }

func (LBFastUDPApplicationProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFastUDPApplicationProfileTag)(nil)).Elem()
}

func (o LBFastUDPApplicationProfileTagArrayOutput) ToLBFastUDPApplicationProfileTagArrayOutput() LBFastUDPApplicationProfileTagArrayOutput {
	return o
}

func (o LBFastUDPApplicationProfileTagArrayOutput) ToLBFastUDPApplicationProfileTagArrayOutputWithContext(ctx context.Context) LBFastUDPApplicationProfileTagArrayOutput {
	return o
}

func (o LBFastUDPApplicationProfileTagArrayOutput) Index(i pulumi.IntInput) LBFastUDPApplicationProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBFastUDPApplicationProfileTag {
		return vs[0].([]LBFastUDPApplicationProfileTag)[vs[1].(int)]
	}).(LBFastUDPApplicationProfileTagOutput)
}

type LBHTTPApplicationProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBHTTPApplicationProfileTagInput is an input type that accepts LBHTTPApplicationProfileTagArgs and LBHTTPApplicationProfileTagOutput values.
// You can construct a concrete instance of `LBHTTPApplicationProfileTagInput` via:
//
//          LBHTTPApplicationProfileTagArgs{...}
type LBHTTPApplicationProfileTagInput interface {
	pulumi.Input

	ToLBHTTPApplicationProfileTagOutput() LBHTTPApplicationProfileTagOutput
	ToLBHTTPApplicationProfileTagOutputWithContext(context.Context) LBHTTPApplicationProfileTagOutput
}

type LBHTTPApplicationProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBHTTPApplicationProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPApplicationProfileTag)(nil)).Elem()
}

func (i LBHTTPApplicationProfileTagArgs) ToLBHTTPApplicationProfileTagOutput() LBHTTPApplicationProfileTagOutput {
	return i.ToLBHTTPApplicationProfileTagOutputWithContext(context.Background())
}

func (i LBHTTPApplicationProfileTagArgs) ToLBHTTPApplicationProfileTagOutputWithContext(ctx context.Context) LBHTTPApplicationProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPApplicationProfileTagOutput)
}

// LBHTTPApplicationProfileTagArrayInput is an input type that accepts LBHTTPApplicationProfileTagArray and LBHTTPApplicationProfileTagArrayOutput values.
// You can construct a concrete instance of `LBHTTPApplicationProfileTagArrayInput` via:
//
//          LBHTTPApplicationProfileTagArray{ LBHTTPApplicationProfileTagArgs{...} }
type LBHTTPApplicationProfileTagArrayInput interface {
	pulumi.Input

	ToLBHTTPApplicationProfileTagArrayOutput() LBHTTPApplicationProfileTagArrayOutput
	ToLBHTTPApplicationProfileTagArrayOutputWithContext(context.Context) LBHTTPApplicationProfileTagArrayOutput
}

type LBHTTPApplicationProfileTagArray []LBHTTPApplicationProfileTagInput

func (LBHTTPApplicationProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPApplicationProfileTag)(nil)).Elem()
}

func (i LBHTTPApplicationProfileTagArray) ToLBHTTPApplicationProfileTagArrayOutput() LBHTTPApplicationProfileTagArrayOutput {
	return i.ToLBHTTPApplicationProfileTagArrayOutputWithContext(context.Background())
}

func (i LBHTTPApplicationProfileTagArray) ToLBHTTPApplicationProfileTagArrayOutputWithContext(ctx context.Context) LBHTTPApplicationProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPApplicationProfileTagArrayOutput)
}

type LBHTTPApplicationProfileTagOutput struct{ *pulumi.OutputState }

func (LBHTTPApplicationProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPApplicationProfileTag)(nil)).Elem()
}

func (o LBHTTPApplicationProfileTagOutput) ToLBHTTPApplicationProfileTagOutput() LBHTTPApplicationProfileTagOutput {
	return o
}

func (o LBHTTPApplicationProfileTagOutput) ToLBHTTPApplicationProfileTagOutputWithContext(ctx context.Context) LBHTTPApplicationProfileTagOutput {
	return o
}

func (o LBHTTPApplicationProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPApplicationProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBHTTPApplicationProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPApplicationProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBHTTPApplicationProfileTagArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPApplicationProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPApplicationProfileTag)(nil)).Elem()
}

func (o LBHTTPApplicationProfileTagArrayOutput) ToLBHTTPApplicationProfileTagArrayOutput() LBHTTPApplicationProfileTagArrayOutput {
	return o
}

func (o LBHTTPApplicationProfileTagArrayOutput) ToLBHTTPApplicationProfileTagArrayOutputWithContext(ctx context.Context) LBHTTPApplicationProfileTagArrayOutput {
	return o
}

func (o LBHTTPApplicationProfileTagArrayOutput) Index(i pulumi.IntInput) LBHTTPApplicationProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPApplicationProfileTag {
		return vs[0].([]LBHTTPApplicationProfileTag)[vs[1].(int)]
	}).(LBHTTPApplicationProfileTagOutput)
}

type LBHTTPForwardingRuleBodyCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Value         string `pulumi:"value"`
}

// LBHTTPForwardingRuleBodyConditionInput is an input type that accepts LBHTTPForwardingRuleBodyConditionArgs and LBHTTPForwardingRuleBodyConditionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleBodyConditionInput` via:
//
//          LBHTTPForwardingRuleBodyConditionArgs{...}
type LBHTTPForwardingRuleBodyConditionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleBodyConditionOutput() LBHTTPForwardingRuleBodyConditionOutput
	ToLBHTTPForwardingRuleBodyConditionOutputWithContext(context.Context) LBHTTPForwardingRuleBodyConditionOutput
}

type LBHTTPForwardingRuleBodyConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Value         pulumi.StringInput  `pulumi:"value"`
}

func (LBHTTPForwardingRuleBodyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleBodyCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleBodyConditionArgs) ToLBHTTPForwardingRuleBodyConditionOutput() LBHTTPForwardingRuleBodyConditionOutput {
	return i.ToLBHTTPForwardingRuleBodyConditionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleBodyConditionArgs) ToLBHTTPForwardingRuleBodyConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleBodyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleBodyConditionOutput)
}

// LBHTTPForwardingRuleBodyConditionArrayInput is an input type that accepts LBHTTPForwardingRuleBodyConditionArray and LBHTTPForwardingRuleBodyConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleBodyConditionArrayInput` via:
//
//          LBHTTPForwardingRuleBodyConditionArray{ LBHTTPForwardingRuleBodyConditionArgs{...} }
type LBHTTPForwardingRuleBodyConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleBodyConditionArrayOutput() LBHTTPForwardingRuleBodyConditionArrayOutput
	ToLBHTTPForwardingRuleBodyConditionArrayOutputWithContext(context.Context) LBHTTPForwardingRuleBodyConditionArrayOutput
}

type LBHTTPForwardingRuleBodyConditionArray []LBHTTPForwardingRuleBodyConditionInput

func (LBHTTPForwardingRuleBodyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleBodyCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleBodyConditionArray) ToLBHTTPForwardingRuleBodyConditionArrayOutput() LBHTTPForwardingRuleBodyConditionArrayOutput {
	return i.ToLBHTTPForwardingRuleBodyConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleBodyConditionArray) ToLBHTTPForwardingRuleBodyConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleBodyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleBodyConditionArrayOutput)
}

type LBHTTPForwardingRuleBodyConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleBodyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleBodyCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleBodyConditionOutput) ToLBHTTPForwardingRuleBodyConditionOutput() LBHTTPForwardingRuleBodyConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleBodyConditionOutput) ToLBHTTPForwardingRuleBodyConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleBodyConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleBodyConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleBodyCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleBodyConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleBodyCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleBodyConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleBodyCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPForwardingRuleBodyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleBodyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleBodyConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleBodyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleBodyCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleBodyConditionArrayOutput) ToLBHTTPForwardingRuleBodyConditionArrayOutput() LBHTTPForwardingRuleBodyConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleBodyConditionArrayOutput) ToLBHTTPForwardingRuleBodyConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleBodyConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleBodyConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPForwardingRuleBodyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPForwardingRuleBodyCondition {
		return vs[0].([]LBHTTPForwardingRuleBodyCondition)[vs[1].(int)]
	}).(LBHTTPForwardingRuleBodyConditionOutput)
}

type LBHTTPForwardingRuleCookieCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Name          string `pulumi:"name"`
	Value         string `pulumi:"value"`
}

// LBHTTPForwardingRuleCookieConditionInput is an input type that accepts LBHTTPForwardingRuleCookieConditionArgs and LBHTTPForwardingRuleCookieConditionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleCookieConditionInput` via:
//
//          LBHTTPForwardingRuleCookieConditionArgs{...}
type LBHTTPForwardingRuleCookieConditionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleCookieConditionOutput() LBHTTPForwardingRuleCookieConditionOutput
	ToLBHTTPForwardingRuleCookieConditionOutputWithContext(context.Context) LBHTTPForwardingRuleCookieConditionOutput
}

type LBHTTPForwardingRuleCookieConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Name          pulumi.StringInput  `pulumi:"name"`
	Value         pulumi.StringInput  `pulumi:"value"`
}

func (LBHTTPForwardingRuleCookieConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleCookieCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleCookieConditionArgs) ToLBHTTPForwardingRuleCookieConditionOutput() LBHTTPForwardingRuleCookieConditionOutput {
	return i.ToLBHTTPForwardingRuleCookieConditionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleCookieConditionArgs) ToLBHTTPForwardingRuleCookieConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleCookieConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleCookieConditionOutput)
}

// LBHTTPForwardingRuleCookieConditionArrayInput is an input type that accepts LBHTTPForwardingRuleCookieConditionArray and LBHTTPForwardingRuleCookieConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleCookieConditionArrayInput` via:
//
//          LBHTTPForwardingRuleCookieConditionArray{ LBHTTPForwardingRuleCookieConditionArgs{...} }
type LBHTTPForwardingRuleCookieConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleCookieConditionArrayOutput() LBHTTPForwardingRuleCookieConditionArrayOutput
	ToLBHTTPForwardingRuleCookieConditionArrayOutputWithContext(context.Context) LBHTTPForwardingRuleCookieConditionArrayOutput
}

type LBHTTPForwardingRuleCookieConditionArray []LBHTTPForwardingRuleCookieConditionInput

func (LBHTTPForwardingRuleCookieConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleCookieCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleCookieConditionArray) ToLBHTTPForwardingRuleCookieConditionArrayOutput() LBHTTPForwardingRuleCookieConditionArrayOutput {
	return i.ToLBHTTPForwardingRuleCookieConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleCookieConditionArray) ToLBHTTPForwardingRuleCookieConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleCookieConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleCookieConditionArrayOutput)
}

type LBHTTPForwardingRuleCookieConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleCookieConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleCookieCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleCookieConditionOutput) ToLBHTTPForwardingRuleCookieConditionOutput() LBHTTPForwardingRuleCookieConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleCookieConditionOutput) ToLBHTTPForwardingRuleCookieConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleCookieConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleCookieConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleCookieCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleCookieConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleCookieCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleCookieConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleCookieCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPForwardingRuleCookieConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleCookieCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPForwardingRuleCookieConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleCookieCondition) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleCookieConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleCookieConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleCookieCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleCookieConditionArrayOutput) ToLBHTTPForwardingRuleCookieConditionArrayOutput() LBHTTPForwardingRuleCookieConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleCookieConditionArrayOutput) ToLBHTTPForwardingRuleCookieConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleCookieConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleCookieConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPForwardingRuleCookieConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPForwardingRuleCookieCondition {
		return vs[0].([]LBHTTPForwardingRuleCookieCondition)[vs[1].(int)]
	}).(LBHTTPForwardingRuleCookieConditionOutput)
}

type LBHTTPForwardingRuleHeaderCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Name          string `pulumi:"name"`
	Value         string `pulumi:"value"`
}

// LBHTTPForwardingRuleHeaderConditionInput is an input type that accepts LBHTTPForwardingRuleHeaderConditionArgs and LBHTTPForwardingRuleHeaderConditionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleHeaderConditionInput` via:
//
//          LBHTTPForwardingRuleHeaderConditionArgs{...}
type LBHTTPForwardingRuleHeaderConditionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleHeaderConditionOutput() LBHTTPForwardingRuleHeaderConditionOutput
	ToLBHTTPForwardingRuleHeaderConditionOutputWithContext(context.Context) LBHTTPForwardingRuleHeaderConditionOutput
}

type LBHTTPForwardingRuleHeaderConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Name          pulumi.StringInput  `pulumi:"name"`
	Value         pulumi.StringInput  `pulumi:"value"`
}

func (LBHTTPForwardingRuleHeaderConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleHeaderCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleHeaderConditionArgs) ToLBHTTPForwardingRuleHeaderConditionOutput() LBHTTPForwardingRuleHeaderConditionOutput {
	return i.ToLBHTTPForwardingRuleHeaderConditionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleHeaderConditionArgs) ToLBHTTPForwardingRuleHeaderConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHeaderConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleHeaderConditionOutput)
}

// LBHTTPForwardingRuleHeaderConditionArrayInput is an input type that accepts LBHTTPForwardingRuleHeaderConditionArray and LBHTTPForwardingRuleHeaderConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleHeaderConditionArrayInput` via:
//
//          LBHTTPForwardingRuleHeaderConditionArray{ LBHTTPForwardingRuleHeaderConditionArgs{...} }
type LBHTTPForwardingRuleHeaderConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleHeaderConditionArrayOutput() LBHTTPForwardingRuleHeaderConditionArrayOutput
	ToLBHTTPForwardingRuleHeaderConditionArrayOutputWithContext(context.Context) LBHTTPForwardingRuleHeaderConditionArrayOutput
}

type LBHTTPForwardingRuleHeaderConditionArray []LBHTTPForwardingRuleHeaderConditionInput

func (LBHTTPForwardingRuleHeaderConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleHeaderCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleHeaderConditionArray) ToLBHTTPForwardingRuleHeaderConditionArrayOutput() LBHTTPForwardingRuleHeaderConditionArrayOutput {
	return i.ToLBHTTPForwardingRuleHeaderConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleHeaderConditionArray) ToLBHTTPForwardingRuleHeaderConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHeaderConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleHeaderConditionArrayOutput)
}

type LBHTTPForwardingRuleHeaderConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleHeaderConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleHeaderCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleHeaderConditionOutput) ToLBHTTPForwardingRuleHeaderConditionOutput() LBHTTPForwardingRuleHeaderConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleHeaderConditionOutput) ToLBHTTPForwardingRuleHeaderConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHeaderConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleHeaderConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHeaderCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleHeaderConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHeaderCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleHeaderConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHeaderCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPForwardingRuleHeaderConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHeaderCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPForwardingRuleHeaderConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHeaderCondition) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleHeaderConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleHeaderConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleHeaderCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleHeaderConditionArrayOutput) ToLBHTTPForwardingRuleHeaderConditionArrayOutput() LBHTTPForwardingRuleHeaderConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleHeaderConditionArrayOutput) ToLBHTTPForwardingRuleHeaderConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHeaderConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleHeaderConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPForwardingRuleHeaderConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPForwardingRuleHeaderCondition {
		return vs[0].([]LBHTTPForwardingRuleHeaderCondition)[vs[1].(int)]
	}).(LBHTTPForwardingRuleHeaderConditionOutput)
}

type LBHTTPForwardingRuleHttpRedirectAction struct {
	RedirectStatus string `pulumi:"redirectStatus"`
	RedirectUrl    string `pulumi:"redirectUrl"`
}

// LBHTTPForwardingRuleHttpRedirectActionInput is an input type that accepts LBHTTPForwardingRuleHttpRedirectActionArgs and LBHTTPForwardingRuleHttpRedirectActionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleHttpRedirectActionInput` via:
//
//          LBHTTPForwardingRuleHttpRedirectActionArgs{...}
type LBHTTPForwardingRuleHttpRedirectActionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleHttpRedirectActionOutput() LBHTTPForwardingRuleHttpRedirectActionOutput
	ToLBHTTPForwardingRuleHttpRedirectActionOutputWithContext(context.Context) LBHTTPForwardingRuleHttpRedirectActionOutput
}

type LBHTTPForwardingRuleHttpRedirectActionArgs struct {
	RedirectStatus pulumi.StringInput `pulumi:"redirectStatus"`
	RedirectUrl    pulumi.StringInput `pulumi:"redirectUrl"`
}

func (LBHTTPForwardingRuleHttpRedirectActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleHttpRedirectAction)(nil)).Elem()
}

func (i LBHTTPForwardingRuleHttpRedirectActionArgs) ToLBHTTPForwardingRuleHttpRedirectActionOutput() LBHTTPForwardingRuleHttpRedirectActionOutput {
	return i.ToLBHTTPForwardingRuleHttpRedirectActionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleHttpRedirectActionArgs) ToLBHTTPForwardingRuleHttpRedirectActionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRedirectActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleHttpRedirectActionOutput)
}

func (i LBHTTPForwardingRuleHttpRedirectActionArgs) ToLBHTTPForwardingRuleHttpRedirectActionPtrOutput() LBHTTPForwardingRuleHttpRedirectActionPtrOutput {
	return i.ToLBHTTPForwardingRuleHttpRedirectActionPtrOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleHttpRedirectActionArgs) ToLBHTTPForwardingRuleHttpRedirectActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRedirectActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleHttpRedirectActionOutput).ToLBHTTPForwardingRuleHttpRedirectActionPtrOutputWithContext(ctx)
}

// LBHTTPForwardingRuleHttpRedirectActionPtrInput is an input type that accepts LBHTTPForwardingRuleHttpRedirectActionArgs, LBHTTPForwardingRuleHttpRedirectActionPtr and LBHTTPForwardingRuleHttpRedirectActionPtrOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleHttpRedirectActionPtrInput` via:
//
//          LBHTTPForwardingRuleHttpRedirectActionArgs{...}
//
//  or:
//
//          nil
type LBHTTPForwardingRuleHttpRedirectActionPtrInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleHttpRedirectActionPtrOutput() LBHTTPForwardingRuleHttpRedirectActionPtrOutput
	ToLBHTTPForwardingRuleHttpRedirectActionPtrOutputWithContext(context.Context) LBHTTPForwardingRuleHttpRedirectActionPtrOutput
}

type lbhttpforwardingRuleHttpRedirectActionPtrType LBHTTPForwardingRuleHttpRedirectActionArgs

func LBHTTPForwardingRuleHttpRedirectActionPtr(v *LBHTTPForwardingRuleHttpRedirectActionArgs) LBHTTPForwardingRuleHttpRedirectActionPtrInput {
	return (*lbhttpforwardingRuleHttpRedirectActionPtrType)(v)
}

func (*lbhttpforwardingRuleHttpRedirectActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPForwardingRuleHttpRedirectAction)(nil)).Elem()
}

func (i *lbhttpforwardingRuleHttpRedirectActionPtrType) ToLBHTTPForwardingRuleHttpRedirectActionPtrOutput() LBHTTPForwardingRuleHttpRedirectActionPtrOutput {
	return i.ToLBHTTPForwardingRuleHttpRedirectActionPtrOutputWithContext(context.Background())
}

func (i *lbhttpforwardingRuleHttpRedirectActionPtrType) ToLBHTTPForwardingRuleHttpRedirectActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRedirectActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleHttpRedirectActionPtrOutput)
}

type LBHTTPForwardingRuleHttpRedirectActionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleHttpRedirectActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleHttpRedirectAction)(nil)).Elem()
}

func (o LBHTTPForwardingRuleHttpRedirectActionOutput) ToLBHTTPForwardingRuleHttpRedirectActionOutput() LBHTTPForwardingRuleHttpRedirectActionOutput {
	return o
}

func (o LBHTTPForwardingRuleHttpRedirectActionOutput) ToLBHTTPForwardingRuleHttpRedirectActionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRedirectActionOutput {
	return o
}

func (o LBHTTPForwardingRuleHttpRedirectActionOutput) ToLBHTTPForwardingRuleHttpRedirectActionPtrOutput() LBHTTPForwardingRuleHttpRedirectActionPtrOutput {
	return o.ToLBHTTPForwardingRuleHttpRedirectActionPtrOutputWithContext(context.Background())
}

func (o LBHTTPForwardingRuleHttpRedirectActionOutput) ToLBHTTPForwardingRuleHttpRedirectActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRedirectActionPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHttpRedirectAction) *LBHTTPForwardingRuleHttpRedirectAction {
		return &v
	}).(LBHTTPForwardingRuleHttpRedirectActionPtrOutput)
}
func (o LBHTTPForwardingRuleHttpRedirectActionOutput) RedirectStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHttpRedirectAction) string { return v.RedirectStatus }).(pulumi.StringOutput)
}

func (o LBHTTPForwardingRuleHttpRedirectActionOutput) RedirectUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHttpRedirectAction) string { return v.RedirectUrl }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleHttpRedirectActionPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleHttpRedirectActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPForwardingRuleHttpRedirectAction)(nil)).Elem()
}

func (o LBHTTPForwardingRuleHttpRedirectActionPtrOutput) ToLBHTTPForwardingRuleHttpRedirectActionPtrOutput() LBHTTPForwardingRuleHttpRedirectActionPtrOutput {
	return o
}

func (o LBHTTPForwardingRuleHttpRedirectActionPtrOutput) ToLBHTTPForwardingRuleHttpRedirectActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRedirectActionPtrOutput {
	return o
}

func (o LBHTTPForwardingRuleHttpRedirectActionPtrOutput) Elem() LBHTTPForwardingRuleHttpRedirectActionOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleHttpRedirectAction) LBHTTPForwardingRuleHttpRedirectAction { return *v }).(LBHTTPForwardingRuleHttpRedirectActionOutput)
}

func (o LBHTTPForwardingRuleHttpRedirectActionPtrOutput) RedirectStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleHttpRedirectAction) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectStatus
	}).(pulumi.StringPtrOutput)
}

func (o LBHTTPForwardingRuleHttpRedirectActionPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleHttpRedirectAction) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

type LBHTTPForwardingRuleHttpRejectAction struct {
	ReplyMessage string `pulumi:"replyMessage"`
	ReplyStatus  string `pulumi:"replyStatus"`
}

// LBHTTPForwardingRuleHttpRejectActionInput is an input type that accepts LBHTTPForwardingRuleHttpRejectActionArgs and LBHTTPForwardingRuleHttpRejectActionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleHttpRejectActionInput` via:
//
//          LBHTTPForwardingRuleHttpRejectActionArgs{...}
type LBHTTPForwardingRuleHttpRejectActionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleHttpRejectActionOutput() LBHTTPForwardingRuleHttpRejectActionOutput
	ToLBHTTPForwardingRuleHttpRejectActionOutputWithContext(context.Context) LBHTTPForwardingRuleHttpRejectActionOutput
}

type LBHTTPForwardingRuleHttpRejectActionArgs struct {
	ReplyMessage pulumi.StringInput `pulumi:"replyMessage"`
	ReplyStatus  pulumi.StringInput `pulumi:"replyStatus"`
}

func (LBHTTPForwardingRuleHttpRejectActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleHttpRejectAction)(nil)).Elem()
}

func (i LBHTTPForwardingRuleHttpRejectActionArgs) ToLBHTTPForwardingRuleHttpRejectActionOutput() LBHTTPForwardingRuleHttpRejectActionOutput {
	return i.ToLBHTTPForwardingRuleHttpRejectActionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleHttpRejectActionArgs) ToLBHTTPForwardingRuleHttpRejectActionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRejectActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleHttpRejectActionOutput)
}

func (i LBHTTPForwardingRuleHttpRejectActionArgs) ToLBHTTPForwardingRuleHttpRejectActionPtrOutput() LBHTTPForwardingRuleHttpRejectActionPtrOutput {
	return i.ToLBHTTPForwardingRuleHttpRejectActionPtrOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleHttpRejectActionArgs) ToLBHTTPForwardingRuleHttpRejectActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRejectActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleHttpRejectActionOutput).ToLBHTTPForwardingRuleHttpRejectActionPtrOutputWithContext(ctx)
}

// LBHTTPForwardingRuleHttpRejectActionPtrInput is an input type that accepts LBHTTPForwardingRuleHttpRejectActionArgs, LBHTTPForwardingRuleHttpRejectActionPtr and LBHTTPForwardingRuleHttpRejectActionPtrOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleHttpRejectActionPtrInput` via:
//
//          LBHTTPForwardingRuleHttpRejectActionArgs{...}
//
//  or:
//
//          nil
type LBHTTPForwardingRuleHttpRejectActionPtrInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleHttpRejectActionPtrOutput() LBHTTPForwardingRuleHttpRejectActionPtrOutput
	ToLBHTTPForwardingRuleHttpRejectActionPtrOutputWithContext(context.Context) LBHTTPForwardingRuleHttpRejectActionPtrOutput
}

type lbhttpforwardingRuleHttpRejectActionPtrType LBHTTPForwardingRuleHttpRejectActionArgs

func LBHTTPForwardingRuleHttpRejectActionPtr(v *LBHTTPForwardingRuleHttpRejectActionArgs) LBHTTPForwardingRuleHttpRejectActionPtrInput {
	return (*lbhttpforwardingRuleHttpRejectActionPtrType)(v)
}

func (*lbhttpforwardingRuleHttpRejectActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPForwardingRuleHttpRejectAction)(nil)).Elem()
}

func (i *lbhttpforwardingRuleHttpRejectActionPtrType) ToLBHTTPForwardingRuleHttpRejectActionPtrOutput() LBHTTPForwardingRuleHttpRejectActionPtrOutput {
	return i.ToLBHTTPForwardingRuleHttpRejectActionPtrOutputWithContext(context.Background())
}

func (i *lbhttpforwardingRuleHttpRejectActionPtrType) ToLBHTTPForwardingRuleHttpRejectActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRejectActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleHttpRejectActionPtrOutput)
}

type LBHTTPForwardingRuleHttpRejectActionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleHttpRejectActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleHttpRejectAction)(nil)).Elem()
}

func (o LBHTTPForwardingRuleHttpRejectActionOutput) ToLBHTTPForwardingRuleHttpRejectActionOutput() LBHTTPForwardingRuleHttpRejectActionOutput {
	return o
}

func (o LBHTTPForwardingRuleHttpRejectActionOutput) ToLBHTTPForwardingRuleHttpRejectActionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRejectActionOutput {
	return o
}

func (o LBHTTPForwardingRuleHttpRejectActionOutput) ToLBHTTPForwardingRuleHttpRejectActionPtrOutput() LBHTTPForwardingRuleHttpRejectActionPtrOutput {
	return o.ToLBHTTPForwardingRuleHttpRejectActionPtrOutputWithContext(context.Background())
}

func (o LBHTTPForwardingRuleHttpRejectActionOutput) ToLBHTTPForwardingRuleHttpRejectActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRejectActionPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHttpRejectAction) *LBHTTPForwardingRuleHttpRejectAction {
		return &v
	}).(LBHTTPForwardingRuleHttpRejectActionPtrOutput)
}
func (o LBHTTPForwardingRuleHttpRejectActionOutput) ReplyMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHttpRejectAction) string { return v.ReplyMessage }).(pulumi.StringOutput)
}

func (o LBHTTPForwardingRuleHttpRejectActionOutput) ReplyStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleHttpRejectAction) string { return v.ReplyStatus }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleHttpRejectActionPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleHttpRejectActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPForwardingRuleHttpRejectAction)(nil)).Elem()
}

func (o LBHTTPForwardingRuleHttpRejectActionPtrOutput) ToLBHTTPForwardingRuleHttpRejectActionPtrOutput() LBHTTPForwardingRuleHttpRejectActionPtrOutput {
	return o
}

func (o LBHTTPForwardingRuleHttpRejectActionPtrOutput) ToLBHTTPForwardingRuleHttpRejectActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleHttpRejectActionPtrOutput {
	return o
}

func (o LBHTTPForwardingRuleHttpRejectActionPtrOutput) Elem() LBHTTPForwardingRuleHttpRejectActionOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleHttpRejectAction) LBHTTPForwardingRuleHttpRejectAction { return *v }).(LBHTTPForwardingRuleHttpRejectActionOutput)
}

func (o LBHTTPForwardingRuleHttpRejectActionPtrOutput) ReplyMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleHttpRejectAction) *string {
		if v == nil {
			return nil
		}
		return &v.ReplyMessage
	}).(pulumi.StringPtrOutput)
}

func (o LBHTTPForwardingRuleHttpRejectActionPtrOutput) ReplyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleHttpRejectAction) *string {
		if v == nil {
			return nil
		}
		return &v.ReplyStatus
	}).(pulumi.StringPtrOutput)
}

type LBHTTPForwardingRuleIpCondition struct {
	Inverse       *bool  `pulumi:"inverse"`
	SourceAddress string `pulumi:"sourceAddress"`
}

// LBHTTPForwardingRuleIpConditionInput is an input type that accepts LBHTTPForwardingRuleIpConditionArgs and LBHTTPForwardingRuleIpConditionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleIpConditionInput` via:
//
//          LBHTTPForwardingRuleIpConditionArgs{...}
type LBHTTPForwardingRuleIpConditionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleIpConditionOutput() LBHTTPForwardingRuleIpConditionOutput
	ToLBHTTPForwardingRuleIpConditionOutputWithContext(context.Context) LBHTTPForwardingRuleIpConditionOutput
}

type LBHTTPForwardingRuleIpConditionArgs struct {
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	SourceAddress pulumi.StringInput  `pulumi:"sourceAddress"`
}

func (LBHTTPForwardingRuleIpConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleIpCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleIpConditionArgs) ToLBHTTPForwardingRuleIpConditionOutput() LBHTTPForwardingRuleIpConditionOutput {
	return i.ToLBHTTPForwardingRuleIpConditionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleIpConditionArgs) ToLBHTTPForwardingRuleIpConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleIpConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleIpConditionOutput)
}

// LBHTTPForwardingRuleIpConditionArrayInput is an input type that accepts LBHTTPForwardingRuleIpConditionArray and LBHTTPForwardingRuleIpConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleIpConditionArrayInput` via:
//
//          LBHTTPForwardingRuleIpConditionArray{ LBHTTPForwardingRuleIpConditionArgs{...} }
type LBHTTPForwardingRuleIpConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleIpConditionArrayOutput() LBHTTPForwardingRuleIpConditionArrayOutput
	ToLBHTTPForwardingRuleIpConditionArrayOutputWithContext(context.Context) LBHTTPForwardingRuleIpConditionArrayOutput
}

type LBHTTPForwardingRuleIpConditionArray []LBHTTPForwardingRuleIpConditionInput

func (LBHTTPForwardingRuleIpConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleIpCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleIpConditionArray) ToLBHTTPForwardingRuleIpConditionArrayOutput() LBHTTPForwardingRuleIpConditionArrayOutput {
	return i.ToLBHTTPForwardingRuleIpConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleIpConditionArray) ToLBHTTPForwardingRuleIpConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleIpConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleIpConditionArrayOutput)
}

type LBHTTPForwardingRuleIpConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleIpConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleIpCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleIpConditionOutput) ToLBHTTPForwardingRuleIpConditionOutput() LBHTTPForwardingRuleIpConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleIpConditionOutput) ToLBHTTPForwardingRuleIpConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleIpConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleIpConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleIpCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleIpConditionOutput) SourceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleIpCondition) string { return v.SourceAddress }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleIpConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleIpConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleIpCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleIpConditionArrayOutput) ToLBHTTPForwardingRuleIpConditionArrayOutput() LBHTTPForwardingRuleIpConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleIpConditionArrayOutput) ToLBHTTPForwardingRuleIpConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleIpConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleIpConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPForwardingRuleIpConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPForwardingRuleIpCondition {
		return vs[0].([]LBHTTPForwardingRuleIpCondition)[vs[1].(int)]
	}).(LBHTTPForwardingRuleIpConditionOutput)
}

type LBHTTPForwardingRuleMethodCondition struct {
	Inverse *bool  `pulumi:"inverse"`
	Method  string `pulumi:"method"`
}

// LBHTTPForwardingRuleMethodConditionInput is an input type that accepts LBHTTPForwardingRuleMethodConditionArgs and LBHTTPForwardingRuleMethodConditionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleMethodConditionInput` via:
//
//          LBHTTPForwardingRuleMethodConditionArgs{...}
type LBHTTPForwardingRuleMethodConditionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleMethodConditionOutput() LBHTTPForwardingRuleMethodConditionOutput
	ToLBHTTPForwardingRuleMethodConditionOutputWithContext(context.Context) LBHTTPForwardingRuleMethodConditionOutput
}

type LBHTTPForwardingRuleMethodConditionArgs struct {
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	Method  pulumi.StringInput  `pulumi:"method"`
}

func (LBHTTPForwardingRuleMethodConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleMethodCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleMethodConditionArgs) ToLBHTTPForwardingRuleMethodConditionOutput() LBHTTPForwardingRuleMethodConditionOutput {
	return i.ToLBHTTPForwardingRuleMethodConditionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleMethodConditionArgs) ToLBHTTPForwardingRuleMethodConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleMethodConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleMethodConditionOutput)
}

// LBHTTPForwardingRuleMethodConditionArrayInput is an input type that accepts LBHTTPForwardingRuleMethodConditionArray and LBHTTPForwardingRuleMethodConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleMethodConditionArrayInput` via:
//
//          LBHTTPForwardingRuleMethodConditionArray{ LBHTTPForwardingRuleMethodConditionArgs{...} }
type LBHTTPForwardingRuleMethodConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleMethodConditionArrayOutput() LBHTTPForwardingRuleMethodConditionArrayOutput
	ToLBHTTPForwardingRuleMethodConditionArrayOutputWithContext(context.Context) LBHTTPForwardingRuleMethodConditionArrayOutput
}

type LBHTTPForwardingRuleMethodConditionArray []LBHTTPForwardingRuleMethodConditionInput

func (LBHTTPForwardingRuleMethodConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleMethodCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleMethodConditionArray) ToLBHTTPForwardingRuleMethodConditionArrayOutput() LBHTTPForwardingRuleMethodConditionArrayOutput {
	return i.ToLBHTTPForwardingRuleMethodConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleMethodConditionArray) ToLBHTTPForwardingRuleMethodConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleMethodConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleMethodConditionArrayOutput)
}

type LBHTTPForwardingRuleMethodConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleMethodConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleMethodCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleMethodConditionOutput) ToLBHTTPForwardingRuleMethodConditionOutput() LBHTTPForwardingRuleMethodConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleMethodConditionOutput) ToLBHTTPForwardingRuleMethodConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleMethodConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleMethodConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleMethodCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleMethodConditionOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleMethodCondition) string { return v.Method }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleMethodConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleMethodConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleMethodCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleMethodConditionArrayOutput) ToLBHTTPForwardingRuleMethodConditionArrayOutput() LBHTTPForwardingRuleMethodConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleMethodConditionArrayOutput) ToLBHTTPForwardingRuleMethodConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleMethodConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleMethodConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPForwardingRuleMethodConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPForwardingRuleMethodCondition {
		return vs[0].([]LBHTTPForwardingRuleMethodCondition)[vs[1].(int)]
	}).(LBHTTPForwardingRuleMethodConditionOutput)
}

type LBHTTPForwardingRuleSelectPoolAction struct {
	PoolId string `pulumi:"poolId"`
}

// LBHTTPForwardingRuleSelectPoolActionInput is an input type that accepts LBHTTPForwardingRuleSelectPoolActionArgs and LBHTTPForwardingRuleSelectPoolActionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleSelectPoolActionInput` via:
//
//          LBHTTPForwardingRuleSelectPoolActionArgs{...}
type LBHTTPForwardingRuleSelectPoolActionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleSelectPoolActionOutput() LBHTTPForwardingRuleSelectPoolActionOutput
	ToLBHTTPForwardingRuleSelectPoolActionOutputWithContext(context.Context) LBHTTPForwardingRuleSelectPoolActionOutput
}

type LBHTTPForwardingRuleSelectPoolActionArgs struct {
	PoolId pulumi.StringInput `pulumi:"poolId"`
}

func (LBHTTPForwardingRuleSelectPoolActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleSelectPoolAction)(nil)).Elem()
}

func (i LBHTTPForwardingRuleSelectPoolActionArgs) ToLBHTTPForwardingRuleSelectPoolActionOutput() LBHTTPForwardingRuleSelectPoolActionOutput {
	return i.ToLBHTTPForwardingRuleSelectPoolActionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleSelectPoolActionArgs) ToLBHTTPForwardingRuleSelectPoolActionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleSelectPoolActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleSelectPoolActionOutput)
}

func (i LBHTTPForwardingRuleSelectPoolActionArgs) ToLBHTTPForwardingRuleSelectPoolActionPtrOutput() LBHTTPForwardingRuleSelectPoolActionPtrOutput {
	return i.ToLBHTTPForwardingRuleSelectPoolActionPtrOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleSelectPoolActionArgs) ToLBHTTPForwardingRuleSelectPoolActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleSelectPoolActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleSelectPoolActionOutput).ToLBHTTPForwardingRuleSelectPoolActionPtrOutputWithContext(ctx)
}

// LBHTTPForwardingRuleSelectPoolActionPtrInput is an input type that accepts LBHTTPForwardingRuleSelectPoolActionArgs, LBHTTPForwardingRuleSelectPoolActionPtr and LBHTTPForwardingRuleSelectPoolActionPtrOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleSelectPoolActionPtrInput` via:
//
//          LBHTTPForwardingRuleSelectPoolActionArgs{...}
//
//  or:
//
//          nil
type LBHTTPForwardingRuleSelectPoolActionPtrInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleSelectPoolActionPtrOutput() LBHTTPForwardingRuleSelectPoolActionPtrOutput
	ToLBHTTPForwardingRuleSelectPoolActionPtrOutputWithContext(context.Context) LBHTTPForwardingRuleSelectPoolActionPtrOutput
}

type lbhttpforwardingRuleSelectPoolActionPtrType LBHTTPForwardingRuleSelectPoolActionArgs

func LBHTTPForwardingRuleSelectPoolActionPtr(v *LBHTTPForwardingRuleSelectPoolActionArgs) LBHTTPForwardingRuleSelectPoolActionPtrInput {
	return (*lbhttpforwardingRuleSelectPoolActionPtrType)(v)
}

func (*lbhttpforwardingRuleSelectPoolActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPForwardingRuleSelectPoolAction)(nil)).Elem()
}

func (i *lbhttpforwardingRuleSelectPoolActionPtrType) ToLBHTTPForwardingRuleSelectPoolActionPtrOutput() LBHTTPForwardingRuleSelectPoolActionPtrOutput {
	return i.ToLBHTTPForwardingRuleSelectPoolActionPtrOutputWithContext(context.Background())
}

func (i *lbhttpforwardingRuleSelectPoolActionPtrType) ToLBHTTPForwardingRuleSelectPoolActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleSelectPoolActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleSelectPoolActionPtrOutput)
}

type LBHTTPForwardingRuleSelectPoolActionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleSelectPoolActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleSelectPoolAction)(nil)).Elem()
}

func (o LBHTTPForwardingRuleSelectPoolActionOutput) ToLBHTTPForwardingRuleSelectPoolActionOutput() LBHTTPForwardingRuleSelectPoolActionOutput {
	return o
}

func (o LBHTTPForwardingRuleSelectPoolActionOutput) ToLBHTTPForwardingRuleSelectPoolActionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleSelectPoolActionOutput {
	return o
}

func (o LBHTTPForwardingRuleSelectPoolActionOutput) ToLBHTTPForwardingRuleSelectPoolActionPtrOutput() LBHTTPForwardingRuleSelectPoolActionPtrOutput {
	return o.ToLBHTTPForwardingRuleSelectPoolActionPtrOutputWithContext(context.Background())
}

func (o LBHTTPForwardingRuleSelectPoolActionOutput) ToLBHTTPForwardingRuleSelectPoolActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleSelectPoolActionPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleSelectPoolAction) *LBHTTPForwardingRuleSelectPoolAction {
		return &v
	}).(LBHTTPForwardingRuleSelectPoolActionPtrOutput)
}
func (o LBHTTPForwardingRuleSelectPoolActionOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleSelectPoolAction) string { return v.PoolId }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleSelectPoolActionPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleSelectPoolActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPForwardingRuleSelectPoolAction)(nil)).Elem()
}

func (o LBHTTPForwardingRuleSelectPoolActionPtrOutput) ToLBHTTPForwardingRuleSelectPoolActionPtrOutput() LBHTTPForwardingRuleSelectPoolActionPtrOutput {
	return o
}

func (o LBHTTPForwardingRuleSelectPoolActionPtrOutput) ToLBHTTPForwardingRuleSelectPoolActionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleSelectPoolActionPtrOutput {
	return o
}

func (o LBHTTPForwardingRuleSelectPoolActionPtrOutput) Elem() LBHTTPForwardingRuleSelectPoolActionOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleSelectPoolAction) LBHTTPForwardingRuleSelectPoolAction { return *v }).(LBHTTPForwardingRuleSelectPoolActionOutput)
}

func (o LBHTTPForwardingRuleSelectPoolActionPtrOutput) PoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleSelectPoolAction) *string {
		if v == nil {
			return nil
		}
		return &v.PoolId
	}).(pulumi.StringPtrOutput)
}

type LBHTTPForwardingRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBHTTPForwardingRuleTagInput is an input type that accepts LBHTTPForwardingRuleTagArgs and LBHTTPForwardingRuleTagOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleTagInput` via:
//
//          LBHTTPForwardingRuleTagArgs{...}
type LBHTTPForwardingRuleTagInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleTagOutput() LBHTTPForwardingRuleTagOutput
	ToLBHTTPForwardingRuleTagOutputWithContext(context.Context) LBHTTPForwardingRuleTagOutput
}

type LBHTTPForwardingRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBHTTPForwardingRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleTag)(nil)).Elem()
}

func (i LBHTTPForwardingRuleTagArgs) ToLBHTTPForwardingRuleTagOutput() LBHTTPForwardingRuleTagOutput {
	return i.ToLBHTTPForwardingRuleTagOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleTagArgs) ToLBHTTPForwardingRuleTagOutputWithContext(ctx context.Context) LBHTTPForwardingRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleTagOutput)
}

// LBHTTPForwardingRuleTagArrayInput is an input type that accepts LBHTTPForwardingRuleTagArray and LBHTTPForwardingRuleTagArrayOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleTagArrayInput` via:
//
//          LBHTTPForwardingRuleTagArray{ LBHTTPForwardingRuleTagArgs{...} }
type LBHTTPForwardingRuleTagArrayInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleTagArrayOutput() LBHTTPForwardingRuleTagArrayOutput
	ToLBHTTPForwardingRuleTagArrayOutputWithContext(context.Context) LBHTTPForwardingRuleTagArrayOutput
}

type LBHTTPForwardingRuleTagArray []LBHTTPForwardingRuleTagInput

func (LBHTTPForwardingRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleTag)(nil)).Elem()
}

func (i LBHTTPForwardingRuleTagArray) ToLBHTTPForwardingRuleTagArrayOutput() LBHTTPForwardingRuleTagArrayOutput {
	return i.ToLBHTTPForwardingRuleTagArrayOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleTagArray) ToLBHTTPForwardingRuleTagArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleTagArrayOutput)
}

type LBHTTPForwardingRuleTagOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleTag)(nil)).Elem()
}

func (o LBHTTPForwardingRuleTagOutput) ToLBHTTPForwardingRuleTagOutput() LBHTTPForwardingRuleTagOutput {
	return o
}

func (o LBHTTPForwardingRuleTagOutput) ToLBHTTPForwardingRuleTagOutputWithContext(ctx context.Context) LBHTTPForwardingRuleTagOutput {
	return o
}

func (o LBHTTPForwardingRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBHTTPForwardingRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBHTTPForwardingRuleTagArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleTag)(nil)).Elem()
}

func (o LBHTTPForwardingRuleTagArrayOutput) ToLBHTTPForwardingRuleTagArrayOutput() LBHTTPForwardingRuleTagArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleTagArrayOutput) ToLBHTTPForwardingRuleTagArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleTagArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleTagArrayOutput) Index(i pulumi.IntInput) LBHTTPForwardingRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPForwardingRuleTag {
		return vs[0].([]LBHTTPForwardingRuleTag)[vs[1].(int)]
	}).(LBHTTPForwardingRuleTagOutput)
}

type LBHTTPForwardingRuleTcpCondition struct {
	Inverse    *bool  `pulumi:"inverse"`
	SourcePort string `pulumi:"sourcePort"`
}

// LBHTTPForwardingRuleTcpConditionInput is an input type that accepts LBHTTPForwardingRuleTcpConditionArgs and LBHTTPForwardingRuleTcpConditionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleTcpConditionInput` via:
//
//          LBHTTPForwardingRuleTcpConditionArgs{...}
type LBHTTPForwardingRuleTcpConditionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleTcpConditionOutput() LBHTTPForwardingRuleTcpConditionOutput
	ToLBHTTPForwardingRuleTcpConditionOutputWithContext(context.Context) LBHTTPForwardingRuleTcpConditionOutput
}

type LBHTTPForwardingRuleTcpConditionArgs struct {
	Inverse    pulumi.BoolPtrInput `pulumi:"inverse"`
	SourcePort pulumi.StringInput  `pulumi:"sourcePort"`
}

func (LBHTTPForwardingRuleTcpConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleTcpCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleTcpConditionArgs) ToLBHTTPForwardingRuleTcpConditionOutput() LBHTTPForwardingRuleTcpConditionOutput {
	return i.ToLBHTTPForwardingRuleTcpConditionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleTcpConditionArgs) ToLBHTTPForwardingRuleTcpConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleTcpConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleTcpConditionOutput)
}

// LBHTTPForwardingRuleTcpConditionArrayInput is an input type that accepts LBHTTPForwardingRuleTcpConditionArray and LBHTTPForwardingRuleTcpConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleTcpConditionArrayInput` via:
//
//          LBHTTPForwardingRuleTcpConditionArray{ LBHTTPForwardingRuleTcpConditionArgs{...} }
type LBHTTPForwardingRuleTcpConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleTcpConditionArrayOutput() LBHTTPForwardingRuleTcpConditionArrayOutput
	ToLBHTTPForwardingRuleTcpConditionArrayOutputWithContext(context.Context) LBHTTPForwardingRuleTcpConditionArrayOutput
}

type LBHTTPForwardingRuleTcpConditionArray []LBHTTPForwardingRuleTcpConditionInput

func (LBHTTPForwardingRuleTcpConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleTcpCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleTcpConditionArray) ToLBHTTPForwardingRuleTcpConditionArrayOutput() LBHTTPForwardingRuleTcpConditionArrayOutput {
	return i.ToLBHTTPForwardingRuleTcpConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleTcpConditionArray) ToLBHTTPForwardingRuleTcpConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleTcpConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleTcpConditionArrayOutput)
}

type LBHTTPForwardingRuleTcpConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleTcpConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleTcpCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleTcpConditionOutput) ToLBHTTPForwardingRuleTcpConditionOutput() LBHTTPForwardingRuleTcpConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleTcpConditionOutput) ToLBHTTPForwardingRuleTcpConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleTcpConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleTcpConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleTcpCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleTcpConditionOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleTcpCondition) string { return v.SourcePort }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleTcpConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleTcpConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleTcpCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleTcpConditionArrayOutput) ToLBHTTPForwardingRuleTcpConditionArrayOutput() LBHTTPForwardingRuleTcpConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleTcpConditionArrayOutput) ToLBHTTPForwardingRuleTcpConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleTcpConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleTcpConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPForwardingRuleTcpConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPForwardingRuleTcpCondition {
		return vs[0].([]LBHTTPForwardingRuleTcpCondition)[vs[1].(int)]
	}).(LBHTTPForwardingRuleTcpConditionOutput)
}

type LBHTTPForwardingRuleUriCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Uri           string `pulumi:"uri"`
}

// LBHTTPForwardingRuleUriConditionInput is an input type that accepts LBHTTPForwardingRuleUriConditionArgs and LBHTTPForwardingRuleUriConditionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleUriConditionInput` via:
//
//          LBHTTPForwardingRuleUriConditionArgs{...}
type LBHTTPForwardingRuleUriConditionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleUriConditionOutput() LBHTTPForwardingRuleUriConditionOutput
	ToLBHTTPForwardingRuleUriConditionOutputWithContext(context.Context) LBHTTPForwardingRuleUriConditionOutput
}

type LBHTTPForwardingRuleUriConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Uri           pulumi.StringInput  `pulumi:"uri"`
}

func (LBHTTPForwardingRuleUriConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleUriCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleUriConditionArgs) ToLBHTTPForwardingRuleUriConditionOutput() LBHTTPForwardingRuleUriConditionOutput {
	return i.ToLBHTTPForwardingRuleUriConditionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleUriConditionArgs) ToLBHTTPForwardingRuleUriConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleUriConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleUriConditionOutput)
}

// LBHTTPForwardingRuleUriConditionArrayInput is an input type that accepts LBHTTPForwardingRuleUriConditionArray and LBHTTPForwardingRuleUriConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleUriConditionArrayInput` via:
//
//          LBHTTPForwardingRuleUriConditionArray{ LBHTTPForwardingRuleUriConditionArgs{...} }
type LBHTTPForwardingRuleUriConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleUriConditionArrayOutput() LBHTTPForwardingRuleUriConditionArrayOutput
	ToLBHTTPForwardingRuleUriConditionArrayOutputWithContext(context.Context) LBHTTPForwardingRuleUriConditionArrayOutput
}

type LBHTTPForwardingRuleUriConditionArray []LBHTTPForwardingRuleUriConditionInput

func (LBHTTPForwardingRuleUriConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleUriCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleUriConditionArray) ToLBHTTPForwardingRuleUriConditionArrayOutput() LBHTTPForwardingRuleUriConditionArrayOutput {
	return i.ToLBHTTPForwardingRuleUriConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleUriConditionArray) ToLBHTTPForwardingRuleUriConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleUriConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleUriConditionArrayOutput)
}

type LBHTTPForwardingRuleUriConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleUriConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleUriCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleUriConditionOutput) ToLBHTTPForwardingRuleUriConditionOutput() LBHTTPForwardingRuleUriConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleUriConditionOutput) ToLBHTTPForwardingRuleUriConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleUriConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleUriConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleUriCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleUriConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleUriCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleUriConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleUriCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPForwardingRuleUriConditionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleUriCondition) string { return v.Uri }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleUriConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleUriConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPForwardingRuleUriCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleUriConditionArrayOutput) ToLBHTTPForwardingRuleUriConditionArrayOutput() LBHTTPForwardingRuleUriConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleUriConditionArrayOutput) ToLBHTTPForwardingRuleUriConditionArrayOutputWithContext(ctx context.Context) LBHTTPForwardingRuleUriConditionArrayOutput {
	return o
}

func (o LBHTTPForwardingRuleUriConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPForwardingRuleUriConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPForwardingRuleUriCondition {
		return vs[0].([]LBHTTPForwardingRuleUriCondition)[vs[1].(int)]
	}).(LBHTTPForwardingRuleUriConditionOutput)
}

type LBHTTPForwardingRuleVersionCondition struct {
	Inverse *bool  `pulumi:"inverse"`
	Version string `pulumi:"version"`
}

// LBHTTPForwardingRuleVersionConditionInput is an input type that accepts LBHTTPForwardingRuleVersionConditionArgs and LBHTTPForwardingRuleVersionConditionOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleVersionConditionInput` via:
//
//          LBHTTPForwardingRuleVersionConditionArgs{...}
type LBHTTPForwardingRuleVersionConditionInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleVersionConditionOutput() LBHTTPForwardingRuleVersionConditionOutput
	ToLBHTTPForwardingRuleVersionConditionOutputWithContext(context.Context) LBHTTPForwardingRuleVersionConditionOutput
}

type LBHTTPForwardingRuleVersionConditionArgs struct {
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	Version pulumi.StringInput  `pulumi:"version"`
}

func (LBHTTPForwardingRuleVersionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleVersionCondition)(nil)).Elem()
}

func (i LBHTTPForwardingRuleVersionConditionArgs) ToLBHTTPForwardingRuleVersionConditionOutput() LBHTTPForwardingRuleVersionConditionOutput {
	return i.ToLBHTTPForwardingRuleVersionConditionOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleVersionConditionArgs) ToLBHTTPForwardingRuleVersionConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleVersionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleVersionConditionOutput)
}

func (i LBHTTPForwardingRuleVersionConditionArgs) ToLBHTTPForwardingRuleVersionConditionPtrOutput() LBHTTPForwardingRuleVersionConditionPtrOutput {
	return i.ToLBHTTPForwardingRuleVersionConditionPtrOutputWithContext(context.Background())
}

func (i LBHTTPForwardingRuleVersionConditionArgs) ToLBHTTPForwardingRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleVersionConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleVersionConditionOutput).ToLBHTTPForwardingRuleVersionConditionPtrOutputWithContext(ctx)
}

// LBHTTPForwardingRuleVersionConditionPtrInput is an input type that accepts LBHTTPForwardingRuleVersionConditionArgs, LBHTTPForwardingRuleVersionConditionPtr and LBHTTPForwardingRuleVersionConditionPtrOutput values.
// You can construct a concrete instance of `LBHTTPForwardingRuleVersionConditionPtrInput` via:
//
//          LBHTTPForwardingRuleVersionConditionArgs{...}
//
//  or:
//
//          nil
type LBHTTPForwardingRuleVersionConditionPtrInput interface {
	pulumi.Input

	ToLBHTTPForwardingRuleVersionConditionPtrOutput() LBHTTPForwardingRuleVersionConditionPtrOutput
	ToLBHTTPForwardingRuleVersionConditionPtrOutputWithContext(context.Context) LBHTTPForwardingRuleVersionConditionPtrOutput
}

type lbhttpforwardingRuleVersionConditionPtrType LBHTTPForwardingRuleVersionConditionArgs

func LBHTTPForwardingRuleVersionConditionPtr(v *LBHTTPForwardingRuleVersionConditionArgs) LBHTTPForwardingRuleVersionConditionPtrInput {
	return (*lbhttpforwardingRuleVersionConditionPtrType)(v)
}

func (*lbhttpforwardingRuleVersionConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPForwardingRuleVersionCondition)(nil)).Elem()
}

func (i *lbhttpforwardingRuleVersionConditionPtrType) ToLBHTTPForwardingRuleVersionConditionPtrOutput() LBHTTPForwardingRuleVersionConditionPtrOutput {
	return i.ToLBHTTPForwardingRuleVersionConditionPtrOutputWithContext(context.Background())
}

func (i *lbhttpforwardingRuleVersionConditionPtrType) ToLBHTTPForwardingRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleVersionConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPForwardingRuleVersionConditionPtrOutput)
}

type LBHTTPForwardingRuleVersionConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleVersionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPForwardingRuleVersionCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleVersionConditionOutput) ToLBHTTPForwardingRuleVersionConditionOutput() LBHTTPForwardingRuleVersionConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleVersionConditionOutput) ToLBHTTPForwardingRuleVersionConditionOutputWithContext(ctx context.Context) LBHTTPForwardingRuleVersionConditionOutput {
	return o
}

func (o LBHTTPForwardingRuleVersionConditionOutput) ToLBHTTPForwardingRuleVersionConditionPtrOutput() LBHTTPForwardingRuleVersionConditionPtrOutput {
	return o.ToLBHTTPForwardingRuleVersionConditionPtrOutputWithContext(context.Background())
}

func (o LBHTTPForwardingRuleVersionConditionOutput) ToLBHTTPForwardingRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleVersionConditionPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleVersionCondition) *LBHTTPForwardingRuleVersionCondition {
		return &v
	}).(LBHTTPForwardingRuleVersionConditionPtrOutput)
}
func (o LBHTTPForwardingRuleVersionConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleVersionCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleVersionConditionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPForwardingRuleVersionCondition) string { return v.Version }).(pulumi.StringOutput)
}

type LBHTTPForwardingRuleVersionConditionPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPForwardingRuleVersionConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPForwardingRuleVersionCondition)(nil)).Elem()
}

func (o LBHTTPForwardingRuleVersionConditionPtrOutput) ToLBHTTPForwardingRuleVersionConditionPtrOutput() LBHTTPForwardingRuleVersionConditionPtrOutput {
	return o
}

func (o LBHTTPForwardingRuleVersionConditionPtrOutput) ToLBHTTPForwardingRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPForwardingRuleVersionConditionPtrOutput {
	return o
}

func (o LBHTTPForwardingRuleVersionConditionPtrOutput) Elem() LBHTTPForwardingRuleVersionConditionOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleVersionCondition) LBHTTPForwardingRuleVersionCondition { return *v }).(LBHTTPForwardingRuleVersionConditionOutput)
}

func (o LBHTTPForwardingRuleVersionConditionPtrOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleVersionCondition) *bool {
		if v == nil {
			return nil
		}
		return v.Inverse
	}).(pulumi.BoolPtrOutput)
}

func (o LBHTTPForwardingRuleVersionConditionPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPForwardingRuleVersionCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type LBHTTPMonitorRequestHeader struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// LBHTTPMonitorRequestHeaderInput is an input type that accepts LBHTTPMonitorRequestHeaderArgs and LBHTTPMonitorRequestHeaderOutput values.
// You can construct a concrete instance of `LBHTTPMonitorRequestHeaderInput` via:
//
//          LBHTTPMonitorRequestHeaderArgs{...}
type LBHTTPMonitorRequestHeaderInput interface {
	pulumi.Input

	ToLBHTTPMonitorRequestHeaderOutput() LBHTTPMonitorRequestHeaderOutput
	ToLBHTTPMonitorRequestHeaderOutputWithContext(context.Context) LBHTTPMonitorRequestHeaderOutput
}

type LBHTTPMonitorRequestHeaderArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (LBHTTPMonitorRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPMonitorRequestHeader)(nil)).Elem()
}

func (i LBHTTPMonitorRequestHeaderArgs) ToLBHTTPMonitorRequestHeaderOutput() LBHTTPMonitorRequestHeaderOutput {
	return i.ToLBHTTPMonitorRequestHeaderOutputWithContext(context.Background())
}

func (i LBHTTPMonitorRequestHeaderArgs) ToLBHTTPMonitorRequestHeaderOutputWithContext(ctx context.Context) LBHTTPMonitorRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPMonitorRequestHeaderOutput)
}

// LBHTTPMonitorRequestHeaderArrayInput is an input type that accepts LBHTTPMonitorRequestHeaderArray and LBHTTPMonitorRequestHeaderArrayOutput values.
// You can construct a concrete instance of `LBHTTPMonitorRequestHeaderArrayInput` via:
//
//          LBHTTPMonitorRequestHeaderArray{ LBHTTPMonitorRequestHeaderArgs{...} }
type LBHTTPMonitorRequestHeaderArrayInput interface {
	pulumi.Input

	ToLBHTTPMonitorRequestHeaderArrayOutput() LBHTTPMonitorRequestHeaderArrayOutput
	ToLBHTTPMonitorRequestHeaderArrayOutputWithContext(context.Context) LBHTTPMonitorRequestHeaderArrayOutput
}

type LBHTTPMonitorRequestHeaderArray []LBHTTPMonitorRequestHeaderInput

func (LBHTTPMonitorRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPMonitorRequestHeader)(nil)).Elem()
}

func (i LBHTTPMonitorRequestHeaderArray) ToLBHTTPMonitorRequestHeaderArrayOutput() LBHTTPMonitorRequestHeaderArrayOutput {
	return i.ToLBHTTPMonitorRequestHeaderArrayOutputWithContext(context.Background())
}

func (i LBHTTPMonitorRequestHeaderArray) ToLBHTTPMonitorRequestHeaderArrayOutputWithContext(ctx context.Context) LBHTTPMonitorRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPMonitorRequestHeaderArrayOutput)
}

type LBHTTPMonitorRequestHeaderOutput struct{ *pulumi.OutputState }

func (LBHTTPMonitorRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPMonitorRequestHeader)(nil)).Elem()
}

func (o LBHTTPMonitorRequestHeaderOutput) ToLBHTTPMonitorRequestHeaderOutput() LBHTTPMonitorRequestHeaderOutput {
	return o
}

func (o LBHTTPMonitorRequestHeaderOutput) ToLBHTTPMonitorRequestHeaderOutputWithContext(ctx context.Context) LBHTTPMonitorRequestHeaderOutput {
	return o
}

func (o LBHTTPMonitorRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPMonitorRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPMonitorRequestHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPMonitorRequestHeader) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPMonitorRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPMonitorRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPMonitorRequestHeader)(nil)).Elem()
}

func (o LBHTTPMonitorRequestHeaderArrayOutput) ToLBHTTPMonitorRequestHeaderArrayOutput() LBHTTPMonitorRequestHeaderArrayOutput {
	return o
}

func (o LBHTTPMonitorRequestHeaderArrayOutput) ToLBHTTPMonitorRequestHeaderArrayOutputWithContext(ctx context.Context) LBHTTPMonitorRequestHeaderArrayOutput {
	return o
}

func (o LBHTTPMonitorRequestHeaderArrayOutput) Index(i pulumi.IntInput) LBHTTPMonitorRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPMonitorRequestHeader {
		return vs[0].([]LBHTTPMonitorRequestHeader)[vs[1].(int)]
	}).(LBHTTPMonitorRequestHeaderOutput)
}

type LBHTTPMonitorTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBHTTPMonitorTagInput is an input type that accepts LBHTTPMonitorTagArgs and LBHTTPMonitorTagOutput values.
// You can construct a concrete instance of `LBHTTPMonitorTagInput` via:
//
//          LBHTTPMonitorTagArgs{...}
type LBHTTPMonitorTagInput interface {
	pulumi.Input

	ToLBHTTPMonitorTagOutput() LBHTTPMonitorTagOutput
	ToLBHTTPMonitorTagOutputWithContext(context.Context) LBHTTPMonitorTagOutput
}

type LBHTTPMonitorTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBHTTPMonitorTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPMonitorTag)(nil)).Elem()
}

func (i LBHTTPMonitorTagArgs) ToLBHTTPMonitorTagOutput() LBHTTPMonitorTagOutput {
	return i.ToLBHTTPMonitorTagOutputWithContext(context.Background())
}

func (i LBHTTPMonitorTagArgs) ToLBHTTPMonitorTagOutputWithContext(ctx context.Context) LBHTTPMonitorTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPMonitorTagOutput)
}

// LBHTTPMonitorTagArrayInput is an input type that accepts LBHTTPMonitorTagArray and LBHTTPMonitorTagArrayOutput values.
// You can construct a concrete instance of `LBHTTPMonitorTagArrayInput` via:
//
//          LBHTTPMonitorTagArray{ LBHTTPMonitorTagArgs{...} }
type LBHTTPMonitorTagArrayInput interface {
	pulumi.Input

	ToLBHTTPMonitorTagArrayOutput() LBHTTPMonitorTagArrayOutput
	ToLBHTTPMonitorTagArrayOutputWithContext(context.Context) LBHTTPMonitorTagArrayOutput
}

type LBHTTPMonitorTagArray []LBHTTPMonitorTagInput

func (LBHTTPMonitorTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPMonitorTag)(nil)).Elem()
}

func (i LBHTTPMonitorTagArray) ToLBHTTPMonitorTagArrayOutput() LBHTTPMonitorTagArrayOutput {
	return i.ToLBHTTPMonitorTagArrayOutputWithContext(context.Background())
}

func (i LBHTTPMonitorTagArray) ToLBHTTPMonitorTagArrayOutputWithContext(ctx context.Context) LBHTTPMonitorTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPMonitorTagArrayOutput)
}

type LBHTTPMonitorTagOutput struct{ *pulumi.OutputState }

func (LBHTTPMonitorTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPMonitorTag)(nil)).Elem()
}

func (o LBHTTPMonitorTagOutput) ToLBHTTPMonitorTagOutput() LBHTTPMonitorTagOutput {
	return o
}

func (o LBHTTPMonitorTagOutput) ToLBHTTPMonitorTagOutputWithContext(ctx context.Context) LBHTTPMonitorTagOutput {
	return o
}

func (o LBHTTPMonitorTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPMonitorTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBHTTPMonitorTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPMonitorTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBHTTPMonitorTagArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPMonitorTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPMonitorTag)(nil)).Elem()
}

func (o LBHTTPMonitorTagArrayOutput) ToLBHTTPMonitorTagArrayOutput() LBHTTPMonitorTagArrayOutput {
	return o
}

func (o LBHTTPMonitorTagArrayOutput) ToLBHTTPMonitorTagArrayOutputWithContext(ctx context.Context) LBHTTPMonitorTagArrayOutput {
	return o
}

func (o LBHTTPMonitorTagArrayOutput) Index(i pulumi.IntInput) LBHTTPMonitorTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPMonitorTag {
		return vs[0].([]LBHTTPMonitorTag)[vs[1].(int)]
	}).(LBHTTPMonitorTagOutput)
}

type LBHTTPRequestRewriteRuleBodyCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Value         string `pulumi:"value"`
}

// LBHTTPRequestRewriteRuleBodyConditionInput is an input type that accepts LBHTTPRequestRewriteRuleBodyConditionArgs and LBHTTPRequestRewriteRuleBodyConditionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleBodyConditionInput` via:
//
//          LBHTTPRequestRewriteRuleBodyConditionArgs{...}
type LBHTTPRequestRewriteRuleBodyConditionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleBodyConditionOutput() LBHTTPRequestRewriteRuleBodyConditionOutput
	ToLBHTTPRequestRewriteRuleBodyConditionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleBodyConditionOutput
}

type LBHTTPRequestRewriteRuleBodyConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Value         pulumi.StringInput  `pulumi:"value"`
}

func (LBHTTPRequestRewriteRuleBodyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleBodyCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleBodyConditionArgs) ToLBHTTPRequestRewriteRuleBodyConditionOutput() LBHTTPRequestRewriteRuleBodyConditionOutput {
	return i.ToLBHTTPRequestRewriteRuleBodyConditionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleBodyConditionArgs) ToLBHTTPRequestRewriteRuleBodyConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleBodyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleBodyConditionOutput)
}

// LBHTTPRequestRewriteRuleBodyConditionArrayInput is an input type that accepts LBHTTPRequestRewriteRuleBodyConditionArray and LBHTTPRequestRewriteRuleBodyConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleBodyConditionArrayInput` via:
//
//          LBHTTPRequestRewriteRuleBodyConditionArray{ LBHTTPRequestRewriteRuleBodyConditionArgs{...} }
type LBHTTPRequestRewriteRuleBodyConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleBodyConditionArrayOutput() LBHTTPRequestRewriteRuleBodyConditionArrayOutput
	ToLBHTTPRequestRewriteRuleBodyConditionArrayOutputWithContext(context.Context) LBHTTPRequestRewriteRuleBodyConditionArrayOutput
}

type LBHTTPRequestRewriteRuleBodyConditionArray []LBHTTPRequestRewriteRuleBodyConditionInput

func (LBHTTPRequestRewriteRuleBodyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleBodyCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleBodyConditionArray) ToLBHTTPRequestRewriteRuleBodyConditionArrayOutput() LBHTTPRequestRewriteRuleBodyConditionArrayOutput {
	return i.ToLBHTTPRequestRewriteRuleBodyConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleBodyConditionArray) ToLBHTTPRequestRewriteRuleBodyConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleBodyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleBodyConditionArrayOutput)
}

type LBHTTPRequestRewriteRuleBodyConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleBodyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleBodyCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleBodyConditionOutput) ToLBHTTPRequestRewriteRuleBodyConditionOutput() LBHTTPRequestRewriteRuleBodyConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleBodyConditionOutput) ToLBHTTPRequestRewriteRuleBodyConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleBodyConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleBodyConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleBodyCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleBodyConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleBodyCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleBodyConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleBodyCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPRequestRewriteRuleBodyConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleBodyCondition) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPRequestRewriteRuleBodyConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleBodyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleBodyCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleBodyConditionArrayOutput) ToLBHTTPRequestRewriteRuleBodyConditionArrayOutput() LBHTTPRequestRewriteRuleBodyConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleBodyConditionArrayOutput) ToLBHTTPRequestRewriteRuleBodyConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleBodyConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleBodyConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPRequestRewriteRuleBodyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPRequestRewriteRuleBodyCondition {
		return vs[0].([]LBHTTPRequestRewriteRuleBodyCondition)[vs[1].(int)]
	}).(LBHTTPRequestRewriteRuleBodyConditionOutput)
}

type LBHTTPRequestRewriteRuleCookieCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Name          string `pulumi:"name"`
	Value         string `pulumi:"value"`
}

// LBHTTPRequestRewriteRuleCookieConditionInput is an input type that accepts LBHTTPRequestRewriteRuleCookieConditionArgs and LBHTTPRequestRewriteRuleCookieConditionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleCookieConditionInput` via:
//
//          LBHTTPRequestRewriteRuleCookieConditionArgs{...}
type LBHTTPRequestRewriteRuleCookieConditionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleCookieConditionOutput() LBHTTPRequestRewriteRuleCookieConditionOutput
	ToLBHTTPRequestRewriteRuleCookieConditionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleCookieConditionOutput
}

type LBHTTPRequestRewriteRuleCookieConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Name          pulumi.StringInput  `pulumi:"name"`
	Value         pulumi.StringInput  `pulumi:"value"`
}

func (LBHTTPRequestRewriteRuleCookieConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleCookieCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleCookieConditionArgs) ToLBHTTPRequestRewriteRuleCookieConditionOutput() LBHTTPRequestRewriteRuleCookieConditionOutput {
	return i.ToLBHTTPRequestRewriteRuleCookieConditionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleCookieConditionArgs) ToLBHTTPRequestRewriteRuleCookieConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleCookieConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleCookieConditionOutput)
}

// LBHTTPRequestRewriteRuleCookieConditionArrayInput is an input type that accepts LBHTTPRequestRewriteRuleCookieConditionArray and LBHTTPRequestRewriteRuleCookieConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleCookieConditionArrayInput` via:
//
//          LBHTTPRequestRewriteRuleCookieConditionArray{ LBHTTPRequestRewriteRuleCookieConditionArgs{...} }
type LBHTTPRequestRewriteRuleCookieConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleCookieConditionArrayOutput() LBHTTPRequestRewriteRuleCookieConditionArrayOutput
	ToLBHTTPRequestRewriteRuleCookieConditionArrayOutputWithContext(context.Context) LBHTTPRequestRewriteRuleCookieConditionArrayOutput
}

type LBHTTPRequestRewriteRuleCookieConditionArray []LBHTTPRequestRewriteRuleCookieConditionInput

func (LBHTTPRequestRewriteRuleCookieConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleCookieCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleCookieConditionArray) ToLBHTTPRequestRewriteRuleCookieConditionArrayOutput() LBHTTPRequestRewriteRuleCookieConditionArrayOutput {
	return i.ToLBHTTPRequestRewriteRuleCookieConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleCookieConditionArray) ToLBHTTPRequestRewriteRuleCookieConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleCookieConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleCookieConditionArrayOutput)
}

type LBHTTPRequestRewriteRuleCookieConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleCookieConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleCookieCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleCookieConditionOutput) ToLBHTTPRequestRewriteRuleCookieConditionOutput() LBHTTPRequestRewriteRuleCookieConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleCookieConditionOutput) ToLBHTTPRequestRewriteRuleCookieConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleCookieConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleCookieConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleCookieCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleCookieConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleCookieCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleCookieConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleCookieCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPRequestRewriteRuleCookieConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleCookieCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPRequestRewriteRuleCookieConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleCookieCondition) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPRequestRewriteRuleCookieConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleCookieConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleCookieCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleCookieConditionArrayOutput) ToLBHTTPRequestRewriteRuleCookieConditionArrayOutput() LBHTTPRequestRewriteRuleCookieConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleCookieConditionArrayOutput) ToLBHTTPRequestRewriteRuleCookieConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleCookieConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleCookieConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPRequestRewriteRuleCookieConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPRequestRewriteRuleCookieCondition {
		return vs[0].([]LBHTTPRequestRewriteRuleCookieCondition)[vs[1].(int)]
	}).(LBHTTPRequestRewriteRuleCookieConditionOutput)
}

type LBHTTPRequestRewriteRuleHeaderCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Name          string `pulumi:"name"`
	Value         string `pulumi:"value"`
}

// LBHTTPRequestRewriteRuleHeaderConditionInput is an input type that accepts LBHTTPRequestRewriteRuleHeaderConditionArgs and LBHTTPRequestRewriteRuleHeaderConditionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleHeaderConditionInput` via:
//
//          LBHTTPRequestRewriteRuleHeaderConditionArgs{...}
type LBHTTPRequestRewriteRuleHeaderConditionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleHeaderConditionOutput() LBHTTPRequestRewriteRuleHeaderConditionOutput
	ToLBHTTPRequestRewriteRuleHeaderConditionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleHeaderConditionOutput
}

type LBHTTPRequestRewriteRuleHeaderConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Name          pulumi.StringInput  `pulumi:"name"`
	Value         pulumi.StringInput  `pulumi:"value"`
}

func (LBHTTPRequestRewriteRuleHeaderConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleHeaderCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleHeaderConditionArgs) ToLBHTTPRequestRewriteRuleHeaderConditionOutput() LBHTTPRequestRewriteRuleHeaderConditionOutput {
	return i.ToLBHTTPRequestRewriteRuleHeaderConditionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleHeaderConditionArgs) ToLBHTTPRequestRewriteRuleHeaderConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleHeaderConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleHeaderConditionOutput)
}

// LBHTTPRequestRewriteRuleHeaderConditionArrayInput is an input type that accepts LBHTTPRequestRewriteRuleHeaderConditionArray and LBHTTPRequestRewriteRuleHeaderConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleHeaderConditionArrayInput` via:
//
//          LBHTTPRequestRewriteRuleHeaderConditionArray{ LBHTTPRequestRewriteRuleHeaderConditionArgs{...} }
type LBHTTPRequestRewriteRuleHeaderConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleHeaderConditionArrayOutput() LBHTTPRequestRewriteRuleHeaderConditionArrayOutput
	ToLBHTTPRequestRewriteRuleHeaderConditionArrayOutputWithContext(context.Context) LBHTTPRequestRewriteRuleHeaderConditionArrayOutput
}

type LBHTTPRequestRewriteRuleHeaderConditionArray []LBHTTPRequestRewriteRuleHeaderConditionInput

func (LBHTTPRequestRewriteRuleHeaderConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleHeaderCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleHeaderConditionArray) ToLBHTTPRequestRewriteRuleHeaderConditionArrayOutput() LBHTTPRequestRewriteRuleHeaderConditionArrayOutput {
	return i.ToLBHTTPRequestRewriteRuleHeaderConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleHeaderConditionArray) ToLBHTTPRequestRewriteRuleHeaderConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleHeaderConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleHeaderConditionArrayOutput)
}

type LBHTTPRequestRewriteRuleHeaderConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleHeaderConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleHeaderCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleHeaderConditionOutput) ToLBHTTPRequestRewriteRuleHeaderConditionOutput() LBHTTPRequestRewriteRuleHeaderConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleHeaderConditionOutput) ToLBHTTPRequestRewriteRuleHeaderConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleHeaderConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleHeaderConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleHeaderCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleHeaderConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleHeaderCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleHeaderConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleHeaderCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPRequestRewriteRuleHeaderConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleHeaderCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPRequestRewriteRuleHeaderConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleHeaderCondition) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPRequestRewriteRuleHeaderConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleHeaderConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleHeaderCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleHeaderConditionArrayOutput) ToLBHTTPRequestRewriteRuleHeaderConditionArrayOutput() LBHTTPRequestRewriteRuleHeaderConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleHeaderConditionArrayOutput) ToLBHTTPRequestRewriteRuleHeaderConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleHeaderConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleHeaderConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPRequestRewriteRuleHeaderConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPRequestRewriteRuleHeaderCondition {
		return vs[0].([]LBHTTPRequestRewriteRuleHeaderCondition)[vs[1].(int)]
	}).(LBHTTPRequestRewriteRuleHeaderConditionOutput)
}

type LBHTTPRequestRewriteRuleHeaderRewriteAction struct {
	Name  string  `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// LBHTTPRequestRewriteRuleHeaderRewriteActionInput is an input type that accepts LBHTTPRequestRewriteRuleHeaderRewriteActionArgs and LBHTTPRequestRewriteRuleHeaderRewriteActionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleHeaderRewriteActionInput` via:
//
//          LBHTTPRequestRewriteRuleHeaderRewriteActionArgs{...}
type LBHTTPRequestRewriteRuleHeaderRewriteActionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleHeaderRewriteActionOutput() LBHTTPRequestRewriteRuleHeaderRewriteActionOutput
	ToLBHTTPRequestRewriteRuleHeaderRewriteActionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleHeaderRewriteActionOutput
}

type LBHTTPRequestRewriteRuleHeaderRewriteActionArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LBHTTPRequestRewriteRuleHeaderRewriteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleHeaderRewriteAction)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleHeaderRewriteActionArgs) ToLBHTTPRequestRewriteRuleHeaderRewriteActionOutput() LBHTTPRequestRewriteRuleHeaderRewriteActionOutput {
	return i.ToLBHTTPRequestRewriteRuleHeaderRewriteActionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleHeaderRewriteActionArgs) ToLBHTTPRequestRewriteRuleHeaderRewriteActionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleHeaderRewriteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleHeaderRewriteActionOutput)
}

func (i LBHTTPRequestRewriteRuleHeaderRewriteActionArgs) ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput() LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput {
	return i.ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleHeaderRewriteActionArgs) ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleHeaderRewriteActionOutput).ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutputWithContext(ctx)
}

// LBHTTPRequestRewriteRuleHeaderRewriteActionPtrInput is an input type that accepts LBHTTPRequestRewriteRuleHeaderRewriteActionArgs, LBHTTPRequestRewriteRuleHeaderRewriteActionPtr and LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleHeaderRewriteActionPtrInput` via:
//
//          LBHTTPRequestRewriteRuleHeaderRewriteActionArgs{...}
//
//  or:
//
//          nil
type LBHTTPRequestRewriteRuleHeaderRewriteActionPtrInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput() LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput
	ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutputWithContext(context.Context) LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput
}

type lbhttprequestRewriteRuleHeaderRewriteActionPtrType LBHTTPRequestRewriteRuleHeaderRewriteActionArgs

func LBHTTPRequestRewriteRuleHeaderRewriteActionPtr(v *LBHTTPRequestRewriteRuleHeaderRewriteActionArgs) LBHTTPRequestRewriteRuleHeaderRewriteActionPtrInput {
	return (*lbhttprequestRewriteRuleHeaderRewriteActionPtrType)(v)
}

func (*lbhttprequestRewriteRuleHeaderRewriteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPRequestRewriteRuleHeaderRewriteAction)(nil)).Elem()
}

func (i *lbhttprequestRewriteRuleHeaderRewriteActionPtrType) ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput() LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput {
	return i.ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutputWithContext(context.Background())
}

func (i *lbhttprequestRewriteRuleHeaderRewriteActionPtrType) ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput)
}

type LBHTTPRequestRewriteRuleHeaderRewriteActionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleHeaderRewriteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleHeaderRewriteAction)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleHeaderRewriteActionOutput) ToLBHTTPRequestRewriteRuleHeaderRewriteActionOutput() LBHTTPRequestRewriteRuleHeaderRewriteActionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleHeaderRewriteActionOutput) ToLBHTTPRequestRewriteRuleHeaderRewriteActionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleHeaderRewriteActionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleHeaderRewriteActionOutput) ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput() LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput {
	return o.ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutputWithContext(context.Background())
}

func (o LBHTTPRequestRewriteRuleHeaderRewriteActionOutput) ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleHeaderRewriteAction) *LBHTTPRequestRewriteRuleHeaderRewriteAction {
		return &v
	}).(LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput)
}
func (o LBHTTPRequestRewriteRuleHeaderRewriteActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleHeaderRewriteAction) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPRequestRewriteRuleHeaderRewriteActionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleHeaderRewriteAction) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPRequestRewriteRuleHeaderRewriteAction)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput) ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput() LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput) ToLBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput) Elem() LBHTTPRequestRewriteRuleHeaderRewriteActionOutput {
	return o.ApplyT(func(v *LBHTTPRequestRewriteRuleHeaderRewriteAction) LBHTTPRequestRewriteRuleHeaderRewriteAction {
		return *v
	}).(LBHTTPRequestRewriteRuleHeaderRewriteActionOutput)
}

func (o LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPRequestRewriteRuleHeaderRewriteAction) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPRequestRewriteRuleHeaderRewriteAction) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type LBHTTPRequestRewriteRuleIpCondition struct {
	Inverse       *bool  `pulumi:"inverse"`
	SourceAddress string `pulumi:"sourceAddress"`
}

// LBHTTPRequestRewriteRuleIpConditionInput is an input type that accepts LBHTTPRequestRewriteRuleIpConditionArgs and LBHTTPRequestRewriteRuleIpConditionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleIpConditionInput` via:
//
//          LBHTTPRequestRewriteRuleIpConditionArgs{...}
type LBHTTPRequestRewriteRuleIpConditionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleIpConditionOutput() LBHTTPRequestRewriteRuleIpConditionOutput
	ToLBHTTPRequestRewriteRuleIpConditionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleIpConditionOutput
}

type LBHTTPRequestRewriteRuleIpConditionArgs struct {
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	SourceAddress pulumi.StringInput  `pulumi:"sourceAddress"`
}

func (LBHTTPRequestRewriteRuleIpConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleIpCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleIpConditionArgs) ToLBHTTPRequestRewriteRuleIpConditionOutput() LBHTTPRequestRewriteRuleIpConditionOutput {
	return i.ToLBHTTPRequestRewriteRuleIpConditionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleIpConditionArgs) ToLBHTTPRequestRewriteRuleIpConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleIpConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleIpConditionOutput)
}

// LBHTTPRequestRewriteRuleIpConditionArrayInput is an input type that accepts LBHTTPRequestRewriteRuleIpConditionArray and LBHTTPRequestRewriteRuleIpConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleIpConditionArrayInput` via:
//
//          LBHTTPRequestRewriteRuleIpConditionArray{ LBHTTPRequestRewriteRuleIpConditionArgs{...} }
type LBHTTPRequestRewriteRuleIpConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleIpConditionArrayOutput() LBHTTPRequestRewriteRuleIpConditionArrayOutput
	ToLBHTTPRequestRewriteRuleIpConditionArrayOutputWithContext(context.Context) LBHTTPRequestRewriteRuleIpConditionArrayOutput
}

type LBHTTPRequestRewriteRuleIpConditionArray []LBHTTPRequestRewriteRuleIpConditionInput

func (LBHTTPRequestRewriteRuleIpConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleIpCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleIpConditionArray) ToLBHTTPRequestRewriteRuleIpConditionArrayOutput() LBHTTPRequestRewriteRuleIpConditionArrayOutput {
	return i.ToLBHTTPRequestRewriteRuleIpConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleIpConditionArray) ToLBHTTPRequestRewriteRuleIpConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleIpConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleIpConditionArrayOutput)
}

type LBHTTPRequestRewriteRuleIpConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleIpConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleIpCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleIpConditionOutput) ToLBHTTPRequestRewriteRuleIpConditionOutput() LBHTTPRequestRewriteRuleIpConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleIpConditionOutput) ToLBHTTPRequestRewriteRuleIpConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleIpConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleIpConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleIpCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleIpConditionOutput) SourceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleIpCondition) string { return v.SourceAddress }).(pulumi.StringOutput)
}

type LBHTTPRequestRewriteRuleIpConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleIpConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleIpCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleIpConditionArrayOutput) ToLBHTTPRequestRewriteRuleIpConditionArrayOutput() LBHTTPRequestRewriteRuleIpConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleIpConditionArrayOutput) ToLBHTTPRequestRewriteRuleIpConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleIpConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleIpConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPRequestRewriteRuleIpConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPRequestRewriteRuleIpCondition {
		return vs[0].([]LBHTTPRequestRewriteRuleIpCondition)[vs[1].(int)]
	}).(LBHTTPRequestRewriteRuleIpConditionOutput)
}

type LBHTTPRequestRewriteRuleMethodCondition struct {
	Inverse *bool  `pulumi:"inverse"`
	Method  string `pulumi:"method"`
}

// LBHTTPRequestRewriteRuleMethodConditionInput is an input type that accepts LBHTTPRequestRewriteRuleMethodConditionArgs and LBHTTPRequestRewriteRuleMethodConditionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleMethodConditionInput` via:
//
//          LBHTTPRequestRewriteRuleMethodConditionArgs{...}
type LBHTTPRequestRewriteRuleMethodConditionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleMethodConditionOutput() LBHTTPRequestRewriteRuleMethodConditionOutput
	ToLBHTTPRequestRewriteRuleMethodConditionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleMethodConditionOutput
}

type LBHTTPRequestRewriteRuleMethodConditionArgs struct {
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	Method  pulumi.StringInput  `pulumi:"method"`
}

func (LBHTTPRequestRewriteRuleMethodConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleMethodCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleMethodConditionArgs) ToLBHTTPRequestRewriteRuleMethodConditionOutput() LBHTTPRequestRewriteRuleMethodConditionOutput {
	return i.ToLBHTTPRequestRewriteRuleMethodConditionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleMethodConditionArgs) ToLBHTTPRequestRewriteRuleMethodConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleMethodConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleMethodConditionOutput)
}

// LBHTTPRequestRewriteRuleMethodConditionArrayInput is an input type that accepts LBHTTPRequestRewriteRuleMethodConditionArray and LBHTTPRequestRewriteRuleMethodConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleMethodConditionArrayInput` via:
//
//          LBHTTPRequestRewriteRuleMethodConditionArray{ LBHTTPRequestRewriteRuleMethodConditionArgs{...} }
type LBHTTPRequestRewriteRuleMethodConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleMethodConditionArrayOutput() LBHTTPRequestRewriteRuleMethodConditionArrayOutput
	ToLBHTTPRequestRewriteRuleMethodConditionArrayOutputWithContext(context.Context) LBHTTPRequestRewriteRuleMethodConditionArrayOutput
}

type LBHTTPRequestRewriteRuleMethodConditionArray []LBHTTPRequestRewriteRuleMethodConditionInput

func (LBHTTPRequestRewriteRuleMethodConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleMethodCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleMethodConditionArray) ToLBHTTPRequestRewriteRuleMethodConditionArrayOutput() LBHTTPRequestRewriteRuleMethodConditionArrayOutput {
	return i.ToLBHTTPRequestRewriteRuleMethodConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleMethodConditionArray) ToLBHTTPRequestRewriteRuleMethodConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleMethodConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleMethodConditionArrayOutput)
}

type LBHTTPRequestRewriteRuleMethodConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleMethodConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleMethodCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleMethodConditionOutput) ToLBHTTPRequestRewriteRuleMethodConditionOutput() LBHTTPRequestRewriteRuleMethodConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleMethodConditionOutput) ToLBHTTPRequestRewriteRuleMethodConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleMethodConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleMethodConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleMethodCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleMethodConditionOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleMethodCondition) string { return v.Method }).(pulumi.StringOutput)
}

type LBHTTPRequestRewriteRuleMethodConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleMethodConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleMethodCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleMethodConditionArrayOutput) ToLBHTTPRequestRewriteRuleMethodConditionArrayOutput() LBHTTPRequestRewriteRuleMethodConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleMethodConditionArrayOutput) ToLBHTTPRequestRewriteRuleMethodConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleMethodConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleMethodConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPRequestRewriteRuleMethodConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPRequestRewriteRuleMethodCondition {
		return vs[0].([]LBHTTPRequestRewriteRuleMethodCondition)[vs[1].(int)]
	}).(LBHTTPRequestRewriteRuleMethodConditionOutput)
}

type LBHTTPRequestRewriteRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBHTTPRequestRewriteRuleTagInput is an input type that accepts LBHTTPRequestRewriteRuleTagArgs and LBHTTPRequestRewriteRuleTagOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleTagInput` via:
//
//          LBHTTPRequestRewriteRuleTagArgs{...}
type LBHTTPRequestRewriteRuleTagInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleTagOutput() LBHTTPRequestRewriteRuleTagOutput
	ToLBHTTPRequestRewriteRuleTagOutputWithContext(context.Context) LBHTTPRequestRewriteRuleTagOutput
}

type LBHTTPRequestRewriteRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBHTTPRequestRewriteRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleTag)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleTagArgs) ToLBHTTPRequestRewriteRuleTagOutput() LBHTTPRequestRewriteRuleTagOutput {
	return i.ToLBHTTPRequestRewriteRuleTagOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleTagArgs) ToLBHTTPRequestRewriteRuleTagOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleTagOutput)
}

// LBHTTPRequestRewriteRuleTagArrayInput is an input type that accepts LBHTTPRequestRewriteRuleTagArray and LBHTTPRequestRewriteRuleTagArrayOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleTagArrayInput` via:
//
//          LBHTTPRequestRewriteRuleTagArray{ LBHTTPRequestRewriteRuleTagArgs{...} }
type LBHTTPRequestRewriteRuleTagArrayInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleTagArrayOutput() LBHTTPRequestRewriteRuleTagArrayOutput
	ToLBHTTPRequestRewriteRuleTagArrayOutputWithContext(context.Context) LBHTTPRequestRewriteRuleTagArrayOutput
}

type LBHTTPRequestRewriteRuleTagArray []LBHTTPRequestRewriteRuleTagInput

func (LBHTTPRequestRewriteRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleTag)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleTagArray) ToLBHTTPRequestRewriteRuleTagArrayOutput() LBHTTPRequestRewriteRuleTagArrayOutput {
	return i.ToLBHTTPRequestRewriteRuleTagArrayOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleTagArray) ToLBHTTPRequestRewriteRuleTagArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleTagArrayOutput)
}

type LBHTTPRequestRewriteRuleTagOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleTag)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleTagOutput) ToLBHTTPRequestRewriteRuleTagOutput() LBHTTPRequestRewriteRuleTagOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleTagOutput) ToLBHTTPRequestRewriteRuleTagOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleTagOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBHTTPRequestRewriteRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBHTTPRequestRewriteRuleTagArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleTag)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleTagArrayOutput) ToLBHTTPRequestRewriteRuleTagArrayOutput() LBHTTPRequestRewriteRuleTagArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleTagArrayOutput) ToLBHTTPRequestRewriteRuleTagArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleTagArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleTagArrayOutput) Index(i pulumi.IntInput) LBHTTPRequestRewriteRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPRequestRewriteRuleTag {
		return vs[0].([]LBHTTPRequestRewriteRuleTag)[vs[1].(int)]
	}).(LBHTTPRequestRewriteRuleTagOutput)
}

type LBHTTPRequestRewriteRuleTcpCondition struct {
	Inverse    *bool  `pulumi:"inverse"`
	SourcePort string `pulumi:"sourcePort"`
}

// LBHTTPRequestRewriteRuleTcpConditionInput is an input type that accepts LBHTTPRequestRewriteRuleTcpConditionArgs and LBHTTPRequestRewriteRuleTcpConditionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleTcpConditionInput` via:
//
//          LBHTTPRequestRewriteRuleTcpConditionArgs{...}
type LBHTTPRequestRewriteRuleTcpConditionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleTcpConditionOutput() LBHTTPRequestRewriteRuleTcpConditionOutput
	ToLBHTTPRequestRewriteRuleTcpConditionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleTcpConditionOutput
}

type LBHTTPRequestRewriteRuleTcpConditionArgs struct {
	Inverse    pulumi.BoolPtrInput `pulumi:"inverse"`
	SourcePort pulumi.StringInput  `pulumi:"sourcePort"`
}

func (LBHTTPRequestRewriteRuleTcpConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleTcpCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleTcpConditionArgs) ToLBHTTPRequestRewriteRuleTcpConditionOutput() LBHTTPRequestRewriteRuleTcpConditionOutput {
	return i.ToLBHTTPRequestRewriteRuleTcpConditionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleTcpConditionArgs) ToLBHTTPRequestRewriteRuleTcpConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleTcpConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleTcpConditionOutput)
}

// LBHTTPRequestRewriteRuleTcpConditionArrayInput is an input type that accepts LBHTTPRequestRewriteRuleTcpConditionArray and LBHTTPRequestRewriteRuleTcpConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleTcpConditionArrayInput` via:
//
//          LBHTTPRequestRewriteRuleTcpConditionArray{ LBHTTPRequestRewriteRuleTcpConditionArgs{...} }
type LBHTTPRequestRewriteRuleTcpConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleTcpConditionArrayOutput() LBHTTPRequestRewriteRuleTcpConditionArrayOutput
	ToLBHTTPRequestRewriteRuleTcpConditionArrayOutputWithContext(context.Context) LBHTTPRequestRewriteRuleTcpConditionArrayOutput
}

type LBHTTPRequestRewriteRuleTcpConditionArray []LBHTTPRequestRewriteRuleTcpConditionInput

func (LBHTTPRequestRewriteRuleTcpConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleTcpCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleTcpConditionArray) ToLBHTTPRequestRewriteRuleTcpConditionArrayOutput() LBHTTPRequestRewriteRuleTcpConditionArrayOutput {
	return i.ToLBHTTPRequestRewriteRuleTcpConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleTcpConditionArray) ToLBHTTPRequestRewriteRuleTcpConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleTcpConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleTcpConditionArrayOutput)
}

type LBHTTPRequestRewriteRuleTcpConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleTcpConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleTcpCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleTcpConditionOutput) ToLBHTTPRequestRewriteRuleTcpConditionOutput() LBHTTPRequestRewriteRuleTcpConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleTcpConditionOutput) ToLBHTTPRequestRewriteRuleTcpConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleTcpConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleTcpConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleTcpCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleTcpConditionOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleTcpCondition) string { return v.SourcePort }).(pulumi.StringOutput)
}

type LBHTTPRequestRewriteRuleTcpConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleTcpConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleTcpCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleTcpConditionArrayOutput) ToLBHTTPRequestRewriteRuleTcpConditionArrayOutput() LBHTTPRequestRewriteRuleTcpConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleTcpConditionArrayOutput) ToLBHTTPRequestRewriteRuleTcpConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleTcpConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleTcpConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPRequestRewriteRuleTcpConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPRequestRewriteRuleTcpCondition {
		return vs[0].([]LBHTTPRequestRewriteRuleTcpCondition)[vs[1].(int)]
	}).(LBHTTPRequestRewriteRuleTcpConditionOutput)
}

type LBHTTPRequestRewriteRuleUriArgumentsCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	UriArguments  string `pulumi:"uriArguments"`
}

// LBHTTPRequestRewriteRuleUriArgumentsConditionInput is an input type that accepts LBHTTPRequestRewriteRuleUriArgumentsConditionArgs and LBHTTPRequestRewriteRuleUriArgumentsConditionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleUriArgumentsConditionInput` via:
//
//          LBHTTPRequestRewriteRuleUriArgumentsConditionArgs{...}
type LBHTTPRequestRewriteRuleUriArgumentsConditionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleUriArgumentsConditionOutput() LBHTTPRequestRewriteRuleUriArgumentsConditionOutput
	ToLBHTTPRequestRewriteRuleUriArgumentsConditionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleUriArgumentsConditionOutput
}

type LBHTTPRequestRewriteRuleUriArgumentsConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	UriArguments  pulumi.StringInput  `pulumi:"uriArguments"`
}

func (LBHTTPRequestRewriteRuleUriArgumentsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleUriArgumentsCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleUriArgumentsConditionArgs) ToLBHTTPRequestRewriteRuleUriArgumentsConditionOutput() LBHTTPRequestRewriteRuleUriArgumentsConditionOutput {
	return i.ToLBHTTPRequestRewriteRuleUriArgumentsConditionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleUriArgumentsConditionArgs) ToLBHTTPRequestRewriteRuleUriArgumentsConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriArgumentsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleUriArgumentsConditionOutput)
}

// LBHTTPRequestRewriteRuleUriArgumentsConditionArrayInput is an input type that accepts LBHTTPRequestRewriteRuleUriArgumentsConditionArray and LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleUriArgumentsConditionArrayInput` via:
//
//          LBHTTPRequestRewriteRuleUriArgumentsConditionArray{ LBHTTPRequestRewriteRuleUriArgumentsConditionArgs{...} }
type LBHTTPRequestRewriteRuleUriArgumentsConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput() LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput
	ToLBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutputWithContext(context.Context) LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput
}

type LBHTTPRequestRewriteRuleUriArgumentsConditionArray []LBHTTPRequestRewriteRuleUriArgumentsConditionInput

func (LBHTTPRequestRewriteRuleUriArgumentsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleUriArgumentsCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleUriArgumentsConditionArray) ToLBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput() LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput {
	return i.ToLBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleUriArgumentsConditionArray) ToLBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput)
}

type LBHTTPRequestRewriteRuleUriArgumentsConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleUriArgumentsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleUriArgumentsCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleUriArgumentsConditionOutput) ToLBHTTPRequestRewriteRuleUriArgumentsConditionOutput() LBHTTPRequestRewriteRuleUriArgumentsConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriArgumentsConditionOutput) ToLBHTTPRequestRewriteRuleUriArgumentsConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriArgumentsConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriArgumentsConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriArgumentsCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleUriArgumentsConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriArgumentsCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleUriArgumentsConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriArgumentsCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPRequestRewriteRuleUriArgumentsConditionOutput) UriArguments() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriArgumentsCondition) string { return v.UriArguments }).(pulumi.StringOutput)
}

type LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleUriArgumentsCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput) ToLBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput() LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput) ToLBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPRequestRewriteRuleUriArgumentsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPRequestRewriteRuleUriArgumentsCondition {
		return vs[0].([]LBHTTPRequestRewriteRuleUriArgumentsCondition)[vs[1].(int)]
	}).(LBHTTPRequestRewriteRuleUriArgumentsConditionOutput)
}

type LBHTTPRequestRewriteRuleUriCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Uri           string `pulumi:"uri"`
}

// LBHTTPRequestRewriteRuleUriConditionInput is an input type that accepts LBHTTPRequestRewriteRuleUriConditionArgs and LBHTTPRequestRewriteRuleUriConditionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleUriConditionInput` via:
//
//          LBHTTPRequestRewriteRuleUriConditionArgs{...}
type LBHTTPRequestRewriteRuleUriConditionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleUriConditionOutput() LBHTTPRequestRewriteRuleUriConditionOutput
	ToLBHTTPRequestRewriteRuleUriConditionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleUriConditionOutput
}

type LBHTTPRequestRewriteRuleUriConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Uri           pulumi.StringInput  `pulumi:"uri"`
}

func (LBHTTPRequestRewriteRuleUriConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleUriCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleUriConditionArgs) ToLBHTTPRequestRewriteRuleUriConditionOutput() LBHTTPRequestRewriteRuleUriConditionOutput {
	return i.ToLBHTTPRequestRewriteRuleUriConditionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleUriConditionArgs) ToLBHTTPRequestRewriteRuleUriConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleUriConditionOutput)
}

// LBHTTPRequestRewriteRuleUriConditionArrayInput is an input type that accepts LBHTTPRequestRewriteRuleUriConditionArray and LBHTTPRequestRewriteRuleUriConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleUriConditionArrayInput` via:
//
//          LBHTTPRequestRewriteRuleUriConditionArray{ LBHTTPRequestRewriteRuleUriConditionArgs{...} }
type LBHTTPRequestRewriteRuleUriConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleUriConditionArrayOutput() LBHTTPRequestRewriteRuleUriConditionArrayOutput
	ToLBHTTPRequestRewriteRuleUriConditionArrayOutputWithContext(context.Context) LBHTTPRequestRewriteRuleUriConditionArrayOutput
}

type LBHTTPRequestRewriteRuleUriConditionArray []LBHTTPRequestRewriteRuleUriConditionInput

func (LBHTTPRequestRewriteRuleUriConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleUriCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleUriConditionArray) ToLBHTTPRequestRewriteRuleUriConditionArrayOutput() LBHTTPRequestRewriteRuleUriConditionArrayOutput {
	return i.ToLBHTTPRequestRewriteRuleUriConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleUriConditionArray) ToLBHTTPRequestRewriteRuleUriConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleUriConditionArrayOutput)
}

type LBHTTPRequestRewriteRuleUriConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleUriConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleUriCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleUriConditionOutput) ToLBHTTPRequestRewriteRuleUriConditionOutput() LBHTTPRequestRewriteRuleUriConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriConditionOutput) ToLBHTTPRequestRewriteRuleUriConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleUriConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleUriConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPRequestRewriteRuleUriConditionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriCondition) string { return v.Uri }).(pulumi.StringOutput)
}

type LBHTTPRequestRewriteRuleUriConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleUriConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPRequestRewriteRuleUriCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleUriConditionArrayOutput) ToLBHTTPRequestRewriteRuleUriConditionArrayOutput() LBHTTPRequestRewriteRuleUriConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriConditionArrayOutput) ToLBHTTPRequestRewriteRuleUriConditionArrayOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriConditionArrayOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPRequestRewriteRuleUriConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPRequestRewriteRuleUriCondition {
		return vs[0].([]LBHTTPRequestRewriteRuleUriCondition)[vs[1].(int)]
	}).(LBHTTPRequestRewriteRuleUriConditionOutput)
}

type LBHTTPRequestRewriteRuleUriRewriteAction struct {
	Uri          string  `pulumi:"uri"`
	UriArguments *string `pulumi:"uriArguments"`
}

// LBHTTPRequestRewriteRuleUriRewriteActionInput is an input type that accepts LBHTTPRequestRewriteRuleUriRewriteActionArgs and LBHTTPRequestRewriteRuleUriRewriteActionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleUriRewriteActionInput` via:
//
//          LBHTTPRequestRewriteRuleUriRewriteActionArgs{...}
type LBHTTPRequestRewriteRuleUriRewriteActionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleUriRewriteActionOutput() LBHTTPRequestRewriteRuleUriRewriteActionOutput
	ToLBHTTPRequestRewriteRuleUriRewriteActionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleUriRewriteActionOutput
}

type LBHTTPRequestRewriteRuleUriRewriteActionArgs struct {
	Uri          pulumi.StringInput    `pulumi:"uri"`
	UriArguments pulumi.StringPtrInput `pulumi:"uriArguments"`
}

func (LBHTTPRequestRewriteRuleUriRewriteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleUriRewriteAction)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleUriRewriteActionArgs) ToLBHTTPRequestRewriteRuleUriRewriteActionOutput() LBHTTPRequestRewriteRuleUriRewriteActionOutput {
	return i.ToLBHTTPRequestRewriteRuleUriRewriteActionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleUriRewriteActionArgs) ToLBHTTPRequestRewriteRuleUriRewriteActionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriRewriteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleUriRewriteActionOutput)
}

func (i LBHTTPRequestRewriteRuleUriRewriteActionArgs) ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutput() LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput {
	return i.ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleUriRewriteActionArgs) ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleUriRewriteActionOutput).ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutputWithContext(ctx)
}

// LBHTTPRequestRewriteRuleUriRewriteActionPtrInput is an input type that accepts LBHTTPRequestRewriteRuleUriRewriteActionArgs, LBHTTPRequestRewriteRuleUriRewriteActionPtr and LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleUriRewriteActionPtrInput` via:
//
//          LBHTTPRequestRewriteRuleUriRewriteActionArgs{...}
//
//  or:
//
//          nil
type LBHTTPRequestRewriteRuleUriRewriteActionPtrInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutput() LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput
	ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutputWithContext(context.Context) LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput
}

type lbhttprequestRewriteRuleUriRewriteActionPtrType LBHTTPRequestRewriteRuleUriRewriteActionArgs

func LBHTTPRequestRewriteRuleUriRewriteActionPtr(v *LBHTTPRequestRewriteRuleUriRewriteActionArgs) LBHTTPRequestRewriteRuleUriRewriteActionPtrInput {
	return (*lbhttprequestRewriteRuleUriRewriteActionPtrType)(v)
}

func (*lbhttprequestRewriteRuleUriRewriteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPRequestRewriteRuleUriRewriteAction)(nil)).Elem()
}

func (i *lbhttprequestRewriteRuleUriRewriteActionPtrType) ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutput() LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput {
	return i.ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutputWithContext(context.Background())
}

func (i *lbhttprequestRewriteRuleUriRewriteActionPtrType) ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput)
}

type LBHTTPRequestRewriteRuleUriRewriteActionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleUriRewriteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleUriRewriteAction)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleUriRewriteActionOutput) ToLBHTTPRequestRewriteRuleUriRewriteActionOutput() LBHTTPRequestRewriteRuleUriRewriteActionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriRewriteActionOutput) ToLBHTTPRequestRewriteRuleUriRewriteActionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriRewriteActionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriRewriteActionOutput) ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutput() LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput {
	return o.ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutputWithContext(context.Background())
}

func (o LBHTTPRequestRewriteRuleUriRewriteActionOutput) ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriRewriteAction) *LBHTTPRequestRewriteRuleUriRewriteAction {
		return &v
	}).(LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput)
}
func (o LBHTTPRequestRewriteRuleUriRewriteActionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriRewriteAction) string { return v.Uri }).(pulumi.StringOutput)
}

func (o LBHTTPRequestRewriteRuleUriRewriteActionOutput) UriArguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleUriRewriteAction) *string { return v.UriArguments }).(pulumi.StringPtrOutput)
}

type LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPRequestRewriteRuleUriRewriteAction)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput) ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutput() LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput) ToLBHTTPRequestRewriteRuleUriRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput) Elem() LBHTTPRequestRewriteRuleUriRewriteActionOutput {
	return o.ApplyT(func(v *LBHTTPRequestRewriteRuleUriRewriteAction) LBHTTPRequestRewriteRuleUriRewriteAction { return *v }).(LBHTTPRequestRewriteRuleUriRewriteActionOutput)
}

func (o LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPRequestRewriteRuleUriRewriteAction) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

func (o LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput) UriArguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPRequestRewriteRuleUriRewriteAction) *string {
		if v == nil {
			return nil
		}
		return v.UriArguments
	}).(pulumi.StringPtrOutput)
}

type LBHTTPRequestRewriteRuleVersionCondition struct {
	Inverse *bool  `pulumi:"inverse"`
	Version string `pulumi:"version"`
}

// LBHTTPRequestRewriteRuleVersionConditionInput is an input type that accepts LBHTTPRequestRewriteRuleVersionConditionArgs and LBHTTPRequestRewriteRuleVersionConditionOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleVersionConditionInput` via:
//
//          LBHTTPRequestRewriteRuleVersionConditionArgs{...}
type LBHTTPRequestRewriteRuleVersionConditionInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleVersionConditionOutput() LBHTTPRequestRewriteRuleVersionConditionOutput
	ToLBHTTPRequestRewriteRuleVersionConditionOutputWithContext(context.Context) LBHTTPRequestRewriteRuleVersionConditionOutput
}

type LBHTTPRequestRewriteRuleVersionConditionArgs struct {
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	Version pulumi.StringInput  `pulumi:"version"`
}

func (LBHTTPRequestRewriteRuleVersionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleVersionCondition)(nil)).Elem()
}

func (i LBHTTPRequestRewriteRuleVersionConditionArgs) ToLBHTTPRequestRewriteRuleVersionConditionOutput() LBHTTPRequestRewriteRuleVersionConditionOutput {
	return i.ToLBHTTPRequestRewriteRuleVersionConditionOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleVersionConditionArgs) ToLBHTTPRequestRewriteRuleVersionConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleVersionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleVersionConditionOutput)
}

func (i LBHTTPRequestRewriteRuleVersionConditionArgs) ToLBHTTPRequestRewriteRuleVersionConditionPtrOutput() LBHTTPRequestRewriteRuleVersionConditionPtrOutput {
	return i.ToLBHTTPRequestRewriteRuleVersionConditionPtrOutputWithContext(context.Background())
}

func (i LBHTTPRequestRewriteRuleVersionConditionArgs) ToLBHTTPRequestRewriteRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleVersionConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleVersionConditionOutput).ToLBHTTPRequestRewriteRuleVersionConditionPtrOutputWithContext(ctx)
}

// LBHTTPRequestRewriteRuleVersionConditionPtrInput is an input type that accepts LBHTTPRequestRewriteRuleVersionConditionArgs, LBHTTPRequestRewriteRuleVersionConditionPtr and LBHTTPRequestRewriteRuleVersionConditionPtrOutput values.
// You can construct a concrete instance of `LBHTTPRequestRewriteRuleVersionConditionPtrInput` via:
//
//          LBHTTPRequestRewriteRuleVersionConditionArgs{...}
//
//  or:
//
//          nil
type LBHTTPRequestRewriteRuleVersionConditionPtrInput interface {
	pulumi.Input

	ToLBHTTPRequestRewriteRuleVersionConditionPtrOutput() LBHTTPRequestRewriteRuleVersionConditionPtrOutput
	ToLBHTTPRequestRewriteRuleVersionConditionPtrOutputWithContext(context.Context) LBHTTPRequestRewriteRuleVersionConditionPtrOutput
}

type lbhttprequestRewriteRuleVersionConditionPtrType LBHTTPRequestRewriteRuleVersionConditionArgs

func LBHTTPRequestRewriteRuleVersionConditionPtr(v *LBHTTPRequestRewriteRuleVersionConditionArgs) LBHTTPRequestRewriteRuleVersionConditionPtrInput {
	return (*lbhttprequestRewriteRuleVersionConditionPtrType)(v)
}

func (*lbhttprequestRewriteRuleVersionConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPRequestRewriteRuleVersionCondition)(nil)).Elem()
}

func (i *lbhttprequestRewriteRuleVersionConditionPtrType) ToLBHTTPRequestRewriteRuleVersionConditionPtrOutput() LBHTTPRequestRewriteRuleVersionConditionPtrOutput {
	return i.ToLBHTTPRequestRewriteRuleVersionConditionPtrOutputWithContext(context.Background())
}

func (i *lbhttprequestRewriteRuleVersionConditionPtrType) ToLBHTTPRequestRewriteRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleVersionConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPRequestRewriteRuleVersionConditionPtrOutput)
}

type LBHTTPRequestRewriteRuleVersionConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleVersionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPRequestRewriteRuleVersionCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleVersionConditionOutput) ToLBHTTPRequestRewriteRuleVersionConditionOutput() LBHTTPRequestRewriteRuleVersionConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleVersionConditionOutput) ToLBHTTPRequestRewriteRuleVersionConditionOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleVersionConditionOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleVersionConditionOutput) ToLBHTTPRequestRewriteRuleVersionConditionPtrOutput() LBHTTPRequestRewriteRuleVersionConditionPtrOutput {
	return o.ToLBHTTPRequestRewriteRuleVersionConditionPtrOutputWithContext(context.Background())
}

func (o LBHTTPRequestRewriteRuleVersionConditionOutput) ToLBHTTPRequestRewriteRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleVersionConditionPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleVersionCondition) *LBHTTPRequestRewriteRuleVersionCondition {
		return &v
	}).(LBHTTPRequestRewriteRuleVersionConditionPtrOutput)
}
func (o LBHTTPRequestRewriteRuleVersionConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleVersionCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleVersionConditionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPRequestRewriteRuleVersionCondition) string { return v.Version }).(pulumi.StringOutput)
}

type LBHTTPRequestRewriteRuleVersionConditionPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPRequestRewriteRuleVersionConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPRequestRewriteRuleVersionCondition)(nil)).Elem()
}

func (o LBHTTPRequestRewriteRuleVersionConditionPtrOutput) ToLBHTTPRequestRewriteRuleVersionConditionPtrOutput() LBHTTPRequestRewriteRuleVersionConditionPtrOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleVersionConditionPtrOutput) ToLBHTTPRequestRewriteRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPRequestRewriteRuleVersionConditionPtrOutput {
	return o
}

func (o LBHTTPRequestRewriteRuleVersionConditionPtrOutput) Elem() LBHTTPRequestRewriteRuleVersionConditionOutput {
	return o.ApplyT(func(v *LBHTTPRequestRewriteRuleVersionCondition) LBHTTPRequestRewriteRuleVersionCondition { return *v }).(LBHTTPRequestRewriteRuleVersionConditionOutput)
}

func (o LBHTTPRequestRewriteRuleVersionConditionPtrOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LBHTTPRequestRewriteRuleVersionCondition) *bool {
		if v == nil {
			return nil
		}
		return v.Inverse
	}).(pulumi.BoolPtrOutput)
}

func (o LBHTTPRequestRewriteRuleVersionConditionPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPRequestRewriteRuleVersionCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type LBHTTPResponseRewriteRuleCookieCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Name          string `pulumi:"name"`
	Value         string `pulumi:"value"`
}

// LBHTTPResponseRewriteRuleCookieConditionInput is an input type that accepts LBHTTPResponseRewriteRuleCookieConditionArgs and LBHTTPResponseRewriteRuleCookieConditionOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleCookieConditionInput` via:
//
//          LBHTTPResponseRewriteRuleCookieConditionArgs{...}
type LBHTTPResponseRewriteRuleCookieConditionInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleCookieConditionOutput() LBHTTPResponseRewriteRuleCookieConditionOutput
	ToLBHTTPResponseRewriteRuleCookieConditionOutputWithContext(context.Context) LBHTTPResponseRewriteRuleCookieConditionOutput
}

type LBHTTPResponseRewriteRuleCookieConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Name          pulumi.StringInput  `pulumi:"name"`
	Value         pulumi.StringInput  `pulumi:"value"`
}

func (LBHTTPResponseRewriteRuleCookieConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleCookieCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleCookieConditionArgs) ToLBHTTPResponseRewriteRuleCookieConditionOutput() LBHTTPResponseRewriteRuleCookieConditionOutput {
	return i.ToLBHTTPResponseRewriteRuleCookieConditionOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleCookieConditionArgs) ToLBHTTPResponseRewriteRuleCookieConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleCookieConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleCookieConditionOutput)
}

// LBHTTPResponseRewriteRuleCookieConditionArrayInput is an input type that accepts LBHTTPResponseRewriteRuleCookieConditionArray and LBHTTPResponseRewriteRuleCookieConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleCookieConditionArrayInput` via:
//
//          LBHTTPResponseRewriteRuleCookieConditionArray{ LBHTTPResponseRewriteRuleCookieConditionArgs{...} }
type LBHTTPResponseRewriteRuleCookieConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleCookieConditionArrayOutput() LBHTTPResponseRewriteRuleCookieConditionArrayOutput
	ToLBHTTPResponseRewriteRuleCookieConditionArrayOutputWithContext(context.Context) LBHTTPResponseRewriteRuleCookieConditionArrayOutput
}

type LBHTTPResponseRewriteRuleCookieConditionArray []LBHTTPResponseRewriteRuleCookieConditionInput

func (LBHTTPResponseRewriteRuleCookieConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleCookieCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleCookieConditionArray) ToLBHTTPResponseRewriteRuleCookieConditionArrayOutput() LBHTTPResponseRewriteRuleCookieConditionArrayOutput {
	return i.ToLBHTTPResponseRewriteRuleCookieConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleCookieConditionArray) ToLBHTTPResponseRewriteRuleCookieConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleCookieConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleCookieConditionArrayOutput)
}

type LBHTTPResponseRewriteRuleCookieConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleCookieConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleCookieCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleCookieConditionOutput) ToLBHTTPResponseRewriteRuleCookieConditionOutput() LBHTTPResponseRewriteRuleCookieConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleCookieConditionOutput) ToLBHTTPResponseRewriteRuleCookieConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleCookieConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleCookieConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleCookieCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleCookieConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleCookieCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleCookieConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleCookieCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPResponseRewriteRuleCookieConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleCookieCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPResponseRewriteRuleCookieConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleCookieCondition) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPResponseRewriteRuleCookieConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleCookieConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleCookieCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleCookieConditionArrayOutput) ToLBHTTPResponseRewriteRuleCookieConditionArrayOutput() LBHTTPResponseRewriteRuleCookieConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleCookieConditionArrayOutput) ToLBHTTPResponseRewriteRuleCookieConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleCookieConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleCookieConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPResponseRewriteRuleCookieConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPResponseRewriteRuleCookieCondition {
		return vs[0].([]LBHTTPResponseRewriteRuleCookieCondition)[vs[1].(int)]
	}).(LBHTTPResponseRewriteRuleCookieConditionOutput)
}

type LBHTTPResponseRewriteRuleHeaderRewriteAction struct {
	Name  string  `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// LBHTTPResponseRewriteRuleHeaderRewriteActionInput is an input type that accepts LBHTTPResponseRewriteRuleHeaderRewriteActionArgs and LBHTTPResponseRewriteRuleHeaderRewriteActionOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleHeaderRewriteActionInput` via:
//
//          LBHTTPResponseRewriteRuleHeaderRewriteActionArgs{...}
type LBHTTPResponseRewriteRuleHeaderRewriteActionInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleHeaderRewriteActionOutput() LBHTTPResponseRewriteRuleHeaderRewriteActionOutput
	ToLBHTTPResponseRewriteRuleHeaderRewriteActionOutputWithContext(context.Context) LBHTTPResponseRewriteRuleHeaderRewriteActionOutput
}

type LBHTTPResponseRewriteRuleHeaderRewriteActionArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LBHTTPResponseRewriteRuleHeaderRewriteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleHeaderRewriteAction)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleHeaderRewriteActionArgs) ToLBHTTPResponseRewriteRuleHeaderRewriteActionOutput() LBHTTPResponseRewriteRuleHeaderRewriteActionOutput {
	return i.ToLBHTTPResponseRewriteRuleHeaderRewriteActionOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleHeaderRewriteActionArgs) ToLBHTTPResponseRewriteRuleHeaderRewriteActionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleHeaderRewriteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleHeaderRewriteActionOutput)
}

func (i LBHTTPResponseRewriteRuleHeaderRewriteActionArgs) ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput() LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput {
	return i.ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleHeaderRewriteActionArgs) ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleHeaderRewriteActionOutput).ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutputWithContext(ctx)
}

// LBHTTPResponseRewriteRuleHeaderRewriteActionPtrInput is an input type that accepts LBHTTPResponseRewriteRuleHeaderRewriteActionArgs, LBHTTPResponseRewriteRuleHeaderRewriteActionPtr and LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleHeaderRewriteActionPtrInput` via:
//
//          LBHTTPResponseRewriteRuleHeaderRewriteActionArgs{...}
//
//  or:
//
//          nil
type LBHTTPResponseRewriteRuleHeaderRewriteActionPtrInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput() LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput
	ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutputWithContext(context.Context) LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput
}

type lbhttpresponseRewriteRuleHeaderRewriteActionPtrType LBHTTPResponseRewriteRuleHeaderRewriteActionArgs

func LBHTTPResponseRewriteRuleHeaderRewriteActionPtr(v *LBHTTPResponseRewriteRuleHeaderRewriteActionArgs) LBHTTPResponseRewriteRuleHeaderRewriteActionPtrInput {
	return (*lbhttpresponseRewriteRuleHeaderRewriteActionPtrType)(v)
}

func (*lbhttpresponseRewriteRuleHeaderRewriteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPResponseRewriteRuleHeaderRewriteAction)(nil)).Elem()
}

func (i *lbhttpresponseRewriteRuleHeaderRewriteActionPtrType) ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput() LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput {
	return i.ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutputWithContext(context.Background())
}

func (i *lbhttpresponseRewriteRuleHeaderRewriteActionPtrType) ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput)
}

type LBHTTPResponseRewriteRuleHeaderRewriteActionOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleHeaderRewriteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleHeaderRewriteAction)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleHeaderRewriteActionOutput) ToLBHTTPResponseRewriteRuleHeaderRewriteActionOutput() LBHTTPResponseRewriteRuleHeaderRewriteActionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleHeaderRewriteActionOutput) ToLBHTTPResponseRewriteRuleHeaderRewriteActionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleHeaderRewriteActionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleHeaderRewriteActionOutput) ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput() LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput {
	return o.ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutputWithContext(context.Background())
}

func (o LBHTTPResponseRewriteRuleHeaderRewriteActionOutput) ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleHeaderRewriteAction) *LBHTTPResponseRewriteRuleHeaderRewriteAction {
		return &v
	}).(LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput)
}
func (o LBHTTPResponseRewriteRuleHeaderRewriteActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleHeaderRewriteAction) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPResponseRewriteRuleHeaderRewriteActionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleHeaderRewriteAction) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPResponseRewriteRuleHeaderRewriteAction)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput) ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput() LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput) ToLBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput) Elem() LBHTTPResponseRewriteRuleHeaderRewriteActionOutput {
	return o.ApplyT(func(v *LBHTTPResponseRewriteRuleHeaderRewriteAction) LBHTTPResponseRewriteRuleHeaderRewriteAction {
		return *v
	}).(LBHTTPResponseRewriteRuleHeaderRewriteActionOutput)
}

func (o LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPResponseRewriteRuleHeaderRewriteAction) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPResponseRewriteRuleHeaderRewriteAction) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type LBHTTPResponseRewriteRuleIpCondition struct {
	Inverse       *bool  `pulumi:"inverse"`
	SourceAddress string `pulumi:"sourceAddress"`
}

// LBHTTPResponseRewriteRuleIpConditionInput is an input type that accepts LBHTTPResponseRewriteRuleIpConditionArgs and LBHTTPResponseRewriteRuleIpConditionOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleIpConditionInput` via:
//
//          LBHTTPResponseRewriteRuleIpConditionArgs{...}
type LBHTTPResponseRewriteRuleIpConditionInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleIpConditionOutput() LBHTTPResponseRewriteRuleIpConditionOutput
	ToLBHTTPResponseRewriteRuleIpConditionOutputWithContext(context.Context) LBHTTPResponseRewriteRuleIpConditionOutput
}

type LBHTTPResponseRewriteRuleIpConditionArgs struct {
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	SourceAddress pulumi.StringInput  `pulumi:"sourceAddress"`
}

func (LBHTTPResponseRewriteRuleIpConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleIpCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleIpConditionArgs) ToLBHTTPResponseRewriteRuleIpConditionOutput() LBHTTPResponseRewriteRuleIpConditionOutput {
	return i.ToLBHTTPResponseRewriteRuleIpConditionOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleIpConditionArgs) ToLBHTTPResponseRewriteRuleIpConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleIpConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleIpConditionOutput)
}

// LBHTTPResponseRewriteRuleIpConditionArrayInput is an input type that accepts LBHTTPResponseRewriteRuleIpConditionArray and LBHTTPResponseRewriteRuleIpConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleIpConditionArrayInput` via:
//
//          LBHTTPResponseRewriteRuleIpConditionArray{ LBHTTPResponseRewriteRuleIpConditionArgs{...} }
type LBHTTPResponseRewriteRuleIpConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleIpConditionArrayOutput() LBHTTPResponseRewriteRuleIpConditionArrayOutput
	ToLBHTTPResponseRewriteRuleIpConditionArrayOutputWithContext(context.Context) LBHTTPResponseRewriteRuleIpConditionArrayOutput
}

type LBHTTPResponseRewriteRuleIpConditionArray []LBHTTPResponseRewriteRuleIpConditionInput

func (LBHTTPResponseRewriteRuleIpConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleIpCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleIpConditionArray) ToLBHTTPResponseRewriteRuleIpConditionArrayOutput() LBHTTPResponseRewriteRuleIpConditionArrayOutput {
	return i.ToLBHTTPResponseRewriteRuleIpConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleIpConditionArray) ToLBHTTPResponseRewriteRuleIpConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleIpConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleIpConditionArrayOutput)
}

type LBHTTPResponseRewriteRuleIpConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleIpConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleIpCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleIpConditionOutput) ToLBHTTPResponseRewriteRuleIpConditionOutput() LBHTTPResponseRewriteRuleIpConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleIpConditionOutput) ToLBHTTPResponseRewriteRuleIpConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleIpConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleIpConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleIpCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleIpConditionOutput) SourceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleIpCondition) string { return v.SourceAddress }).(pulumi.StringOutput)
}

type LBHTTPResponseRewriteRuleIpConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleIpConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleIpCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleIpConditionArrayOutput) ToLBHTTPResponseRewriteRuleIpConditionArrayOutput() LBHTTPResponseRewriteRuleIpConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleIpConditionArrayOutput) ToLBHTTPResponseRewriteRuleIpConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleIpConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleIpConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPResponseRewriteRuleIpConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPResponseRewriteRuleIpCondition {
		return vs[0].([]LBHTTPResponseRewriteRuleIpCondition)[vs[1].(int)]
	}).(LBHTTPResponseRewriteRuleIpConditionOutput)
}

type LBHTTPResponseRewriteRuleMethodCondition struct {
	Inverse *bool  `pulumi:"inverse"`
	Method  string `pulumi:"method"`
}

// LBHTTPResponseRewriteRuleMethodConditionInput is an input type that accepts LBHTTPResponseRewriteRuleMethodConditionArgs and LBHTTPResponseRewriteRuleMethodConditionOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleMethodConditionInput` via:
//
//          LBHTTPResponseRewriteRuleMethodConditionArgs{...}
type LBHTTPResponseRewriteRuleMethodConditionInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleMethodConditionOutput() LBHTTPResponseRewriteRuleMethodConditionOutput
	ToLBHTTPResponseRewriteRuleMethodConditionOutputWithContext(context.Context) LBHTTPResponseRewriteRuleMethodConditionOutput
}

type LBHTTPResponseRewriteRuleMethodConditionArgs struct {
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	Method  pulumi.StringInput  `pulumi:"method"`
}

func (LBHTTPResponseRewriteRuleMethodConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleMethodCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleMethodConditionArgs) ToLBHTTPResponseRewriteRuleMethodConditionOutput() LBHTTPResponseRewriteRuleMethodConditionOutput {
	return i.ToLBHTTPResponseRewriteRuleMethodConditionOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleMethodConditionArgs) ToLBHTTPResponseRewriteRuleMethodConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleMethodConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleMethodConditionOutput)
}

// LBHTTPResponseRewriteRuleMethodConditionArrayInput is an input type that accepts LBHTTPResponseRewriteRuleMethodConditionArray and LBHTTPResponseRewriteRuleMethodConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleMethodConditionArrayInput` via:
//
//          LBHTTPResponseRewriteRuleMethodConditionArray{ LBHTTPResponseRewriteRuleMethodConditionArgs{...} }
type LBHTTPResponseRewriteRuleMethodConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleMethodConditionArrayOutput() LBHTTPResponseRewriteRuleMethodConditionArrayOutput
	ToLBHTTPResponseRewriteRuleMethodConditionArrayOutputWithContext(context.Context) LBHTTPResponseRewriteRuleMethodConditionArrayOutput
}

type LBHTTPResponseRewriteRuleMethodConditionArray []LBHTTPResponseRewriteRuleMethodConditionInput

func (LBHTTPResponseRewriteRuleMethodConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleMethodCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleMethodConditionArray) ToLBHTTPResponseRewriteRuleMethodConditionArrayOutput() LBHTTPResponseRewriteRuleMethodConditionArrayOutput {
	return i.ToLBHTTPResponseRewriteRuleMethodConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleMethodConditionArray) ToLBHTTPResponseRewriteRuleMethodConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleMethodConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleMethodConditionArrayOutput)
}

type LBHTTPResponseRewriteRuleMethodConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleMethodConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleMethodCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleMethodConditionOutput) ToLBHTTPResponseRewriteRuleMethodConditionOutput() LBHTTPResponseRewriteRuleMethodConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleMethodConditionOutput) ToLBHTTPResponseRewriteRuleMethodConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleMethodConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleMethodConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleMethodCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleMethodConditionOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleMethodCondition) string { return v.Method }).(pulumi.StringOutput)
}

type LBHTTPResponseRewriteRuleMethodConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleMethodConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleMethodCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleMethodConditionArrayOutput) ToLBHTTPResponseRewriteRuleMethodConditionArrayOutput() LBHTTPResponseRewriteRuleMethodConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleMethodConditionArrayOutput) ToLBHTTPResponseRewriteRuleMethodConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleMethodConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleMethodConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPResponseRewriteRuleMethodConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPResponseRewriteRuleMethodCondition {
		return vs[0].([]LBHTTPResponseRewriteRuleMethodCondition)[vs[1].(int)]
	}).(LBHTTPResponseRewriteRuleMethodConditionOutput)
}

type LBHTTPResponseRewriteRuleRequestHeaderCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Name          string `pulumi:"name"`
	Value         string `pulumi:"value"`
}

// LBHTTPResponseRewriteRuleRequestHeaderConditionInput is an input type that accepts LBHTTPResponseRewriteRuleRequestHeaderConditionArgs and LBHTTPResponseRewriteRuleRequestHeaderConditionOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleRequestHeaderConditionInput` via:
//
//          LBHTTPResponseRewriteRuleRequestHeaderConditionArgs{...}
type LBHTTPResponseRewriteRuleRequestHeaderConditionInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleRequestHeaderConditionOutput() LBHTTPResponseRewriteRuleRequestHeaderConditionOutput
	ToLBHTTPResponseRewriteRuleRequestHeaderConditionOutputWithContext(context.Context) LBHTTPResponseRewriteRuleRequestHeaderConditionOutput
}

type LBHTTPResponseRewriteRuleRequestHeaderConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Name          pulumi.StringInput  `pulumi:"name"`
	Value         pulumi.StringInput  `pulumi:"value"`
}

func (LBHTTPResponseRewriteRuleRequestHeaderConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleRequestHeaderCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleRequestHeaderConditionArgs) ToLBHTTPResponseRewriteRuleRequestHeaderConditionOutput() LBHTTPResponseRewriteRuleRequestHeaderConditionOutput {
	return i.ToLBHTTPResponseRewriteRuleRequestHeaderConditionOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleRequestHeaderConditionArgs) ToLBHTTPResponseRewriteRuleRequestHeaderConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleRequestHeaderConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleRequestHeaderConditionOutput)
}

// LBHTTPResponseRewriteRuleRequestHeaderConditionArrayInput is an input type that accepts LBHTTPResponseRewriteRuleRequestHeaderConditionArray and LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleRequestHeaderConditionArrayInput` via:
//
//          LBHTTPResponseRewriteRuleRequestHeaderConditionArray{ LBHTTPResponseRewriteRuleRequestHeaderConditionArgs{...} }
type LBHTTPResponseRewriteRuleRequestHeaderConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput() LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput
	ToLBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutputWithContext(context.Context) LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput
}

type LBHTTPResponseRewriteRuleRequestHeaderConditionArray []LBHTTPResponseRewriteRuleRequestHeaderConditionInput

func (LBHTTPResponseRewriteRuleRequestHeaderConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleRequestHeaderCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleRequestHeaderConditionArray) ToLBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput() LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput {
	return i.ToLBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleRequestHeaderConditionArray) ToLBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput)
}

type LBHTTPResponseRewriteRuleRequestHeaderConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleRequestHeaderConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleRequestHeaderCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleRequestHeaderConditionOutput) ToLBHTTPResponseRewriteRuleRequestHeaderConditionOutput() LBHTTPResponseRewriteRuleRequestHeaderConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleRequestHeaderConditionOutput) ToLBHTTPResponseRewriteRuleRequestHeaderConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleRequestHeaderConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleRequestHeaderConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleRequestHeaderCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleRequestHeaderConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleRequestHeaderCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleRequestHeaderConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleRequestHeaderCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPResponseRewriteRuleRequestHeaderConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleRequestHeaderCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPResponseRewriteRuleRequestHeaderConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleRequestHeaderCondition) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleRequestHeaderCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput) ToLBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput() LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput) ToLBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPResponseRewriteRuleRequestHeaderConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPResponseRewriteRuleRequestHeaderCondition {
		return vs[0].([]LBHTTPResponseRewriteRuleRequestHeaderCondition)[vs[1].(int)]
	}).(LBHTTPResponseRewriteRuleRequestHeaderConditionOutput)
}

type LBHTTPResponseRewriteRuleResponseHeaderCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Name          string `pulumi:"name"`
	Value         string `pulumi:"value"`
}

// LBHTTPResponseRewriteRuleResponseHeaderConditionInput is an input type that accepts LBHTTPResponseRewriteRuleResponseHeaderConditionArgs and LBHTTPResponseRewriteRuleResponseHeaderConditionOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleResponseHeaderConditionInput` via:
//
//          LBHTTPResponseRewriteRuleResponseHeaderConditionArgs{...}
type LBHTTPResponseRewriteRuleResponseHeaderConditionInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleResponseHeaderConditionOutput() LBHTTPResponseRewriteRuleResponseHeaderConditionOutput
	ToLBHTTPResponseRewriteRuleResponseHeaderConditionOutputWithContext(context.Context) LBHTTPResponseRewriteRuleResponseHeaderConditionOutput
}

type LBHTTPResponseRewriteRuleResponseHeaderConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Name          pulumi.StringInput  `pulumi:"name"`
	Value         pulumi.StringInput  `pulumi:"value"`
}

func (LBHTTPResponseRewriteRuleResponseHeaderConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleResponseHeaderCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleResponseHeaderConditionArgs) ToLBHTTPResponseRewriteRuleResponseHeaderConditionOutput() LBHTTPResponseRewriteRuleResponseHeaderConditionOutput {
	return i.ToLBHTTPResponseRewriteRuleResponseHeaderConditionOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleResponseHeaderConditionArgs) ToLBHTTPResponseRewriteRuleResponseHeaderConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleResponseHeaderConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleResponseHeaderConditionOutput)
}

// LBHTTPResponseRewriteRuleResponseHeaderConditionArrayInput is an input type that accepts LBHTTPResponseRewriteRuleResponseHeaderConditionArray and LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleResponseHeaderConditionArrayInput` via:
//
//          LBHTTPResponseRewriteRuleResponseHeaderConditionArray{ LBHTTPResponseRewriteRuleResponseHeaderConditionArgs{...} }
type LBHTTPResponseRewriteRuleResponseHeaderConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput() LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput
	ToLBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutputWithContext(context.Context) LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput
}

type LBHTTPResponseRewriteRuleResponseHeaderConditionArray []LBHTTPResponseRewriteRuleResponseHeaderConditionInput

func (LBHTTPResponseRewriteRuleResponseHeaderConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleResponseHeaderCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleResponseHeaderConditionArray) ToLBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput() LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput {
	return i.ToLBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleResponseHeaderConditionArray) ToLBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput)
}

type LBHTTPResponseRewriteRuleResponseHeaderConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleResponseHeaderConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleResponseHeaderCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleResponseHeaderConditionOutput) ToLBHTTPResponseRewriteRuleResponseHeaderConditionOutput() LBHTTPResponseRewriteRuleResponseHeaderConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleResponseHeaderConditionOutput) ToLBHTTPResponseRewriteRuleResponseHeaderConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleResponseHeaderConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleResponseHeaderConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleResponseHeaderCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleResponseHeaderConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleResponseHeaderCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleResponseHeaderConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleResponseHeaderCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPResponseRewriteRuleResponseHeaderConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleResponseHeaderCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPResponseRewriteRuleResponseHeaderConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleResponseHeaderCondition) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleResponseHeaderCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput) ToLBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput() LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput) ToLBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPResponseRewriteRuleResponseHeaderConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPResponseRewriteRuleResponseHeaderCondition {
		return vs[0].([]LBHTTPResponseRewriteRuleResponseHeaderCondition)[vs[1].(int)]
	}).(LBHTTPResponseRewriteRuleResponseHeaderConditionOutput)
}

type LBHTTPResponseRewriteRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBHTTPResponseRewriteRuleTagInput is an input type that accepts LBHTTPResponseRewriteRuleTagArgs and LBHTTPResponseRewriteRuleTagOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleTagInput` via:
//
//          LBHTTPResponseRewriteRuleTagArgs{...}
type LBHTTPResponseRewriteRuleTagInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleTagOutput() LBHTTPResponseRewriteRuleTagOutput
	ToLBHTTPResponseRewriteRuleTagOutputWithContext(context.Context) LBHTTPResponseRewriteRuleTagOutput
}

type LBHTTPResponseRewriteRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBHTTPResponseRewriteRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleTag)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleTagArgs) ToLBHTTPResponseRewriteRuleTagOutput() LBHTTPResponseRewriteRuleTagOutput {
	return i.ToLBHTTPResponseRewriteRuleTagOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleTagArgs) ToLBHTTPResponseRewriteRuleTagOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleTagOutput)
}

// LBHTTPResponseRewriteRuleTagArrayInput is an input type that accepts LBHTTPResponseRewriteRuleTagArray and LBHTTPResponseRewriteRuleTagArrayOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleTagArrayInput` via:
//
//          LBHTTPResponseRewriteRuleTagArray{ LBHTTPResponseRewriteRuleTagArgs{...} }
type LBHTTPResponseRewriteRuleTagArrayInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleTagArrayOutput() LBHTTPResponseRewriteRuleTagArrayOutput
	ToLBHTTPResponseRewriteRuleTagArrayOutputWithContext(context.Context) LBHTTPResponseRewriteRuleTagArrayOutput
}

type LBHTTPResponseRewriteRuleTagArray []LBHTTPResponseRewriteRuleTagInput

func (LBHTTPResponseRewriteRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleTag)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleTagArray) ToLBHTTPResponseRewriteRuleTagArrayOutput() LBHTTPResponseRewriteRuleTagArrayOutput {
	return i.ToLBHTTPResponseRewriteRuleTagArrayOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleTagArray) ToLBHTTPResponseRewriteRuleTagArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleTagArrayOutput)
}

type LBHTTPResponseRewriteRuleTagOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleTag)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleTagOutput) ToLBHTTPResponseRewriteRuleTagOutput() LBHTTPResponseRewriteRuleTagOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleTagOutput) ToLBHTTPResponseRewriteRuleTagOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleTagOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBHTTPResponseRewriteRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBHTTPResponseRewriteRuleTagArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleTag)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleTagArrayOutput) ToLBHTTPResponseRewriteRuleTagArrayOutput() LBHTTPResponseRewriteRuleTagArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleTagArrayOutput) ToLBHTTPResponseRewriteRuleTagArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleTagArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleTagArrayOutput) Index(i pulumi.IntInput) LBHTTPResponseRewriteRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPResponseRewriteRuleTag {
		return vs[0].([]LBHTTPResponseRewriteRuleTag)[vs[1].(int)]
	}).(LBHTTPResponseRewriteRuleTagOutput)
}

type LBHTTPResponseRewriteRuleTcpCondition struct {
	Inverse    *bool  `pulumi:"inverse"`
	SourcePort string `pulumi:"sourcePort"`
}

// LBHTTPResponseRewriteRuleTcpConditionInput is an input type that accepts LBHTTPResponseRewriteRuleTcpConditionArgs and LBHTTPResponseRewriteRuleTcpConditionOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleTcpConditionInput` via:
//
//          LBHTTPResponseRewriteRuleTcpConditionArgs{...}
type LBHTTPResponseRewriteRuleTcpConditionInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleTcpConditionOutput() LBHTTPResponseRewriteRuleTcpConditionOutput
	ToLBHTTPResponseRewriteRuleTcpConditionOutputWithContext(context.Context) LBHTTPResponseRewriteRuleTcpConditionOutput
}

type LBHTTPResponseRewriteRuleTcpConditionArgs struct {
	Inverse    pulumi.BoolPtrInput `pulumi:"inverse"`
	SourcePort pulumi.StringInput  `pulumi:"sourcePort"`
}

func (LBHTTPResponseRewriteRuleTcpConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleTcpCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleTcpConditionArgs) ToLBHTTPResponseRewriteRuleTcpConditionOutput() LBHTTPResponseRewriteRuleTcpConditionOutput {
	return i.ToLBHTTPResponseRewriteRuleTcpConditionOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleTcpConditionArgs) ToLBHTTPResponseRewriteRuleTcpConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleTcpConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleTcpConditionOutput)
}

// LBHTTPResponseRewriteRuleTcpConditionArrayInput is an input type that accepts LBHTTPResponseRewriteRuleTcpConditionArray and LBHTTPResponseRewriteRuleTcpConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleTcpConditionArrayInput` via:
//
//          LBHTTPResponseRewriteRuleTcpConditionArray{ LBHTTPResponseRewriteRuleTcpConditionArgs{...} }
type LBHTTPResponseRewriteRuleTcpConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleTcpConditionArrayOutput() LBHTTPResponseRewriteRuleTcpConditionArrayOutput
	ToLBHTTPResponseRewriteRuleTcpConditionArrayOutputWithContext(context.Context) LBHTTPResponseRewriteRuleTcpConditionArrayOutput
}

type LBHTTPResponseRewriteRuleTcpConditionArray []LBHTTPResponseRewriteRuleTcpConditionInput

func (LBHTTPResponseRewriteRuleTcpConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleTcpCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleTcpConditionArray) ToLBHTTPResponseRewriteRuleTcpConditionArrayOutput() LBHTTPResponseRewriteRuleTcpConditionArrayOutput {
	return i.ToLBHTTPResponseRewriteRuleTcpConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleTcpConditionArray) ToLBHTTPResponseRewriteRuleTcpConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleTcpConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleTcpConditionArrayOutput)
}

type LBHTTPResponseRewriteRuleTcpConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleTcpConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleTcpCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleTcpConditionOutput) ToLBHTTPResponseRewriteRuleTcpConditionOutput() LBHTTPResponseRewriteRuleTcpConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleTcpConditionOutput) ToLBHTTPResponseRewriteRuleTcpConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleTcpConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleTcpConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleTcpCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleTcpConditionOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleTcpCondition) string { return v.SourcePort }).(pulumi.StringOutput)
}

type LBHTTPResponseRewriteRuleTcpConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleTcpConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleTcpCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleTcpConditionArrayOutput) ToLBHTTPResponseRewriteRuleTcpConditionArrayOutput() LBHTTPResponseRewriteRuleTcpConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleTcpConditionArrayOutput) ToLBHTTPResponseRewriteRuleTcpConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleTcpConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleTcpConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPResponseRewriteRuleTcpConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPResponseRewriteRuleTcpCondition {
		return vs[0].([]LBHTTPResponseRewriteRuleTcpCondition)[vs[1].(int)]
	}).(LBHTTPResponseRewriteRuleTcpConditionOutput)
}

type LBHTTPResponseRewriteRuleUriArgumentsCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	UriArguments  string `pulumi:"uriArguments"`
}

// LBHTTPResponseRewriteRuleUriArgumentsConditionInput is an input type that accepts LBHTTPResponseRewriteRuleUriArgumentsConditionArgs and LBHTTPResponseRewriteRuleUriArgumentsConditionOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleUriArgumentsConditionInput` via:
//
//          LBHTTPResponseRewriteRuleUriArgumentsConditionArgs{...}
type LBHTTPResponseRewriteRuleUriArgumentsConditionInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleUriArgumentsConditionOutput() LBHTTPResponseRewriteRuleUriArgumentsConditionOutput
	ToLBHTTPResponseRewriteRuleUriArgumentsConditionOutputWithContext(context.Context) LBHTTPResponseRewriteRuleUriArgumentsConditionOutput
}

type LBHTTPResponseRewriteRuleUriArgumentsConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	UriArguments  pulumi.StringInput  `pulumi:"uriArguments"`
}

func (LBHTTPResponseRewriteRuleUriArgumentsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleUriArgumentsCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleUriArgumentsConditionArgs) ToLBHTTPResponseRewriteRuleUriArgumentsConditionOutput() LBHTTPResponseRewriteRuleUriArgumentsConditionOutput {
	return i.ToLBHTTPResponseRewriteRuleUriArgumentsConditionOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleUriArgumentsConditionArgs) ToLBHTTPResponseRewriteRuleUriArgumentsConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleUriArgumentsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleUriArgumentsConditionOutput)
}

// LBHTTPResponseRewriteRuleUriArgumentsConditionArrayInput is an input type that accepts LBHTTPResponseRewriteRuleUriArgumentsConditionArray and LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleUriArgumentsConditionArrayInput` via:
//
//          LBHTTPResponseRewriteRuleUriArgumentsConditionArray{ LBHTTPResponseRewriteRuleUriArgumentsConditionArgs{...} }
type LBHTTPResponseRewriteRuleUriArgumentsConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput() LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput
	ToLBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutputWithContext(context.Context) LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput
}

type LBHTTPResponseRewriteRuleUriArgumentsConditionArray []LBHTTPResponseRewriteRuleUriArgumentsConditionInput

func (LBHTTPResponseRewriteRuleUriArgumentsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleUriArgumentsCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleUriArgumentsConditionArray) ToLBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput() LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput {
	return i.ToLBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleUriArgumentsConditionArray) ToLBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput)
}

type LBHTTPResponseRewriteRuleUriArgumentsConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleUriArgumentsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleUriArgumentsCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleUriArgumentsConditionOutput) ToLBHTTPResponseRewriteRuleUriArgumentsConditionOutput() LBHTTPResponseRewriteRuleUriArgumentsConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleUriArgumentsConditionOutput) ToLBHTTPResponseRewriteRuleUriArgumentsConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleUriArgumentsConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleUriArgumentsConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleUriArgumentsCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleUriArgumentsConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleUriArgumentsCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleUriArgumentsConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleUriArgumentsCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPResponseRewriteRuleUriArgumentsConditionOutput) UriArguments() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleUriArgumentsCondition) string { return v.UriArguments }).(pulumi.StringOutput)
}

type LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleUriArgumentsCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput) ToLBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput() LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput) ToLBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPResponseRewriteRuleUriArgumentsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPResponseRewriteRuleUriArgumentsCondition {
		return vs[0].([]LBHTTPResponseRewriteRuleUriArgumentsCondition)[vs[1].(int)]
	}).(LBHTTPResponseRewriteRuleUriArgumentsConditionOutput)
}

type LBHTTPResponseRewriteRuleUriCondition struct {
	CaseSensitive *bool  `pulumi:"caseSensitive"`
	Inverse       *bool  `pulumi:"inverse"`
	MatchType     string `pulumi:"matchType"`
	Uri           string `pulumi:"uri"`
}

// LBHTTPResponseRewriteRuleUriConditionInput is an input type that accepts LBHTTPResponseRewriteRuleUriConditionArgs and LBHTTPResponseRewriteRuleUriConditionOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleUriConditionInput` via:
//
//          LBHTTPResponseRewriteRuleUriConditionArgs{...}
type LBHTTPResponseRewriteRuleUriConditionInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleUriConditionOutput() LBHTTPResponseRewriteRuleUriConditionOutput
	ToLBHTTPResponseRewriteRuleUriConditionOutputWithContext(context.Context) LBHTTPResponseRewriteRuleUriConditionOutput
}

type LBHTTPResponseRewriteRuleUriConditionArgs struct {
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	Inverse       pulumi.BoolPtrInput `pulumi:"inverse"`
	MatchType     pulumi.StringInput  `pulumi:"matchType"`
	Uri           pulumi.StringInput  `pulumi:"uri"`
}

func (LBHTTPResponseRewriteRuleUriConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleUriCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleUriConditionArgs) ToLBHTTPResponseRewriteRuleUriConditionOutput() LBHTTPResponseRewriteRuleUriConditionOutput {
	return i.ToLBHTTPResponseRewriteRuleUriConditionOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleUriConditionArgs) ToLBHTTPResponseRewriteRuleUriConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleUriConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleUriConditionOutput)
}

// LBHTTPResponseRewriteRuleUriConditionArrayInput is an input type that accepts LBHTTPResponseRewriteRuleUriConditionArray and LBHTTPResponseRewriteRuleUriConditionArrayOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleUriConditionArrayInput` via:
//
//          LBHTTPResponseRewriteRuleUriConditionArray{ LBHTTPResponseRewriteRuleUriConditionArgs{...} }
type LBHTTPResponseRewriteRuleUriConditionArrayInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleUriConditionArrayOutput() LBHTTPResponseRewriteRuleUriConditionArrayOutput
	ToLBHTTPResponseRewriteRuleUriConditionArrayOutputWithContext(context.Context) LBHTTPResponseRewriteRuleUriConditionArrayOutput
}

type LBHTTPResponseRewriteRuleUriConditionArray []LBHTTPResponseRewriteRuleUriConditionInput

func (LBHTTPResponseRewriteRuleUriConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleUriCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleUriConditionArray) ToLBHTTPResponseRewriteRuleUriConditionArrayOutput() LBHTTPResponseRewriteRuleUriConditionArrayOutput {
	return i.ToLBHTTPResponseRewriteRuleUriConditionArrayOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleUriConditionArray) ToLBHTTPResponseRewriteRuleUriConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleUriConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleUriConditionArrayOutput)
}

type LBHTTPResponseRewriteRuleUriConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleUriConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleUriCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleUriConditionOutput) ToLBHTTPResponseRewriteRuleUriConditionOutput() LBHTTPResponseRewriteRuleUriConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleUriConditionOutput) ToLBHTTPResponseRewriteRuleUriConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleUriConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleUriConditionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleUriCondition) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleUriConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleUriCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleUriConditionOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleUriCondition) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o LBHTTPResponseRewriteRuleUriConditionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleUriCondition) string { return v.Uri }).(pulumi.StringOutput)
}

type LBHTTPResponseRewriteRuleUriConditionArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleUriConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPResponseRewriteRuleUriCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleUriConditionArrayOutput) ToLBHTTPResponseRewriteRuleUriConditionArrayOutput() LBHTTPResponseRewriteRuleUriConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleUriConditionArrayOutput) ToLBHTTPResponseRewriteRuleUriConditionArrayOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleUriConditionArrayOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleUriConditionArrayOutput) Index(i pulumi.IntInput) LBHTTPResponseRewriteRuleUriConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPResponseRewriteRuleUriCondition {
		return vs[0].([]LBHTTPResponseRewriteRuleUriCondition)[vs[1].(int)]
	}).(LBHTTPResponseRewriteRuleUriConditionOutput)
}

type LBHTTPResponseRewriteRuleVersionCondition struct {
	Inverse *bool  `pulumi:"inverse"`
	Version string `pulumi:"version"`
}

// LBHTTPResponseRewriteRuleVersionConditionInput is an input type that accepts LBHTTPResponseRewriteRuleVersionConditionArgs and LBHTTPResponseRewriteRuleVersionConditionOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleVersionConditionInput` via:
//
//          LBHTTPResponseRewriteRuleVersionConditionArgs{...}
type LBHTTPResponseRewriteRuleVersionConditionInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleVersionConditionOutput() LBHTTPResponseRewriteRuleVersionConditionOutput
	ToLBHTTPResponseRewriteRuleVersionConditionOutputWithContext(context.Context) LBHTTPResponseRewriteRuleVersionConditionOutput
}

type LBHTTPResponseRewriteRuleVersionConditionArgs struct {
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	Version pulumi.StringInput  `pulumi:"version"`
}

func (LBHTTPResponseRewriteRuleVersionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleVersionCondition)(nil)).Elem()
}

func (i LBHTTPResponseRewriteRuleVersionConditionArgs) ToLBHTTPResponseRewriteRuleVersionConditionOutput() LBHTTPResponseRewriteRuleVersionConditionOutput {
	return i.ToLBHTTPResponseRewriteRuleVersionConditionOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleVersionConditionArgs) ToLBHTTPResponseRewriteRuleVersionConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleVersionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleVersionConditionOutput)
}

func (i LBHTTPResponseRewriteRuleVersionConditionArgs) ToLBHTTPResponseRewriteRuleVersionConditionPtrOutput() LBHTTPResponseRewriteRuleVersionConditionPtrOutput {
	return i.ToLBHTTPResponseRewriteRuleVersionConditionPtrOutputWithContext(context.Background())
}

func (i LBHTTPResponseRewriteRuleVersionConditionArgs) ToLBHTTPResponseRewriteRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleVersionConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleVersionConditionOutput).ToLBHTTPResponseRewriteRuleVersionConditionPtrOutputWithContext(ctx)
}

// LBHTTPResponseRewriteRuleVersionConditionPtrInput is an input type that accepts LBHTTPResponseRewriteRuleVersionConditionArgs, LBHTTPResponseRewriteRuleVersionConditionPtr and LBHTTPResponseRewriteRuleVersionConditionPtrOutput values.
// You can construct a concrete instance of `LBHTTPResponseRewriteRuleVersionConditionPtrInput` via:
//
//          LBHTTPResponseRewriteRuleVersionConditionArgs{...}
//
//  or:
//
//          nil
type LBHTTPResponseRewriteRuleVersionConditionPtrInput interface {
	pulumi.Input

	ToLBHTTPResponseRewriteRuleVersionConditionPtrOutput() LBHTTPResponseRewriteRuleVersionConditionPtrOutput
	ToLBHTTPResponseRewriteRuleVersionConditionPtrOutputWithContext(context.Context) LBHTTPResponseRewriteRuleVersionConditionPtrOutput
}

type lbhttpresponseRewriteRuleVersionConditionPtrType LBHTTPResponseRewriteRuleVersionConditionArgs

func LBHTTPResponseRewriteRuleVersionConditionPtr(v *LBHTTPResponseRewriteRuleVersionConditionArgs) LBHTTPResponseRewriteRuleVersionConditionPtrInput {
	return (*lbhttpresponseRewriteRuleVersionConditionPtrType)(v)
}

func (*lbhttpresponseRewriteRuleVersionConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPResponseRewriteRuleVersionCondition)(nil)).Elem()
}

func (i *lbhttpresponseRewriteRuleVersionConditionPtrType) ToLBHTTPResponseRewriteRuleVersionConditionPtrOutput() LBHTTPResponseRewriteRuleVersionConditionPtrOutput {
	return i.ToLBHTTPResponseRewriteRuleVersionConditionPtrOutputWithContext(context.Background())
}

func (i *lbhttpresponseRewriteRuleVersionConditionPtrType) ToLBHTTPResponseRewriteRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleVersionConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPResponseRewriteRuleVersionConditionPtrOutput)
}

type LBHTTPResponseRewriteRuleVersionConditionOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleVersionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPResponseRewriteRuleVersionCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleVersionConditionOutput) ToLBHTTPResponseRewriteRuleVersionConditionOutput() LBHTTPResponseRewriteRuleVersionConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleVersionConditionOutput) ToLBHTTPResponseRewriteRuleVersionConditionOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleVersionConditionOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleVersionConditionOutput) ToLBHTTPResponseRewriteRuleVersionConditionPtrOutput() LBHTTPResponseRewriteRuleVersionConditionPtrOutput {
	return o.ToLBHTTPResponseRewriteRuleVersionConditionPtrOutputWithContext(context.Background())
}

func (o LBHTTPResponseRewriteRuleVersionConditionOutput) ToLBHTTPResponseRewriteRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleVersionConditionPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleVersionCondition) *LBHTTPResponseRewriteRuleVersionCondition {
		return &v
	}).(LBHTTPResponseRewriteRuleVersionConditionPtrOutput)
}
func (o LBHTTPResponseRewriteRuleVersionConditionOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleVersionCondition) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleVersionConditionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPResponseRewriteRuleVersionCondition) string { return v.Version }).(pulumi.StringOutput)
}

type LBHTTPResponseRewriteRuleVersionConditionPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPResponseRewriteRuleVersionConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPResponseRewriteRuleVersionCondition)(nil)).Elem()
}

func (o LBHTTPResponseRewriteRuleVersionConditionPtrOutput) ToLBHTTPResponseRewriteRuleVersionConditionPtrOutput() LBHTTPResponseRewriteRuleVersionConditionPtrOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleVersionConditionPtrOutput) ToLBHTTPResponseRewriteRuleVersionConditionPtrOutputWithContext(ctx context.Context) LBHTTPResponseRewriteRuleVersionConditionPtrOutput {
	return o
}

func (o LBHTTPResponseRewriteRuleVersionConditionPtrOutput) Elem() LBHTTPResponseRewriteRuleVersionConditionOutput {
	return o.ApplyT(func(v *LBHTTPResponseRewriteRuleVersionCondition) LBHTTPResponseRewriteRuleVersionCondition {
		return *v
	}).(LBHTTPResponseRewriteRuleVersionConditionOutput)
}

func (o LBHTTPResponseRewriteRuleVersionConditionPtrOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LBHTTPResponseRewriteRuleVersionCondition) *bool {
		if v == nil {
			return nil
		}
		return v.Inverse
	}).(pulumi.BoolPtrOutput)
}

func (o LBHTTPResponseRewriteRuleVersionConditionPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPResponseRewriteRuleVersionCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type LBHTTPSMonitorRequestHeader struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// LBHTTPSMonitorRequestHeaderInput is an input type that accepts LBHTTPSMonitorRequestHeaderArgs and LBHTTPSMonitorRequestHeaderOutput values.
// You can construct a concrete instance of `LBHTTPSMonitorRequestHeaderInput` via:
//
//          LBHTTPSMonitorRequestHeaderArgs{...}
type LBHTTPSMonitorRequestHeaderInput interface {
	pulumi.Input

	ToLBHTTPSMonitorRequestHeaderOutput() LBHTTPSMonitorRequestHeaderOutput
	ToLBHTTPSMonitorRequestHeaderOutputWithContext(context.Context) LBHTTPSMonitorRequestHeaderOutput
}

type LBHTTPSMonitorRequestHeaderArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (LBHTTPSMonitorRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPSMonitorRequestHeader)(nil)).Elem()
}

func (i LBHTTPSMonitorRequestHeaderArgs) ToLBHTTPSMonitorRequestHeaderOutput() LBHTTPSMonitorRequestHeaderOutput {
	return i.ToLBHTTPSMonitorRequestHeaderOutputWithContext(context.Background())
}

func (i LBHTTPSMonitorRequestHeaderArgs) ToLBHTTPSMonitorRequestHeaderOutputWithContext(ctx context.Context) LBHTTPSMonitorRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPSMonitorRequestHeaderOutput)
}

// LBHTTPSMonitorRequestHeaderArrayInput is an input type that accepts LBHTTPSMonitorRequestHeaderArray and LBHTTPSMonitorRequestHeaderArrayOutput values.
// You can construct a concrete instance of `LBHTTPSMonitorRequestHeaderArrayInput` via:
//
//          LBHTTPSMonitorRequestHeaderArray{ LBHTTPSMonitorRequestHeaderArgs{...} }
type LBHTTPSMonitorRequestHeaderArrayInput interface {
	pulumi.Input

	ToLBHTTPSMonitorRequestHeaderArrayOutput() LBHTTPSMonitorRequestHeaderArrayOutput
	ToLBHTTPSMonitorRequestHeaderArrayOutputWithContext(context.Context) LBHTTPSMonitorRequestHeaderArrayOutput
}

type LBHTTPSMonitorRequestHeaderArray []LBHTTPSMonitorRequestHeaderInput

func (LBHTTPSMonitorRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPSMonitorRequestHeader)(nil)).Elem()
}

func (i LBHTTPSMonitorRequestHeaderArray) ToLBHTTPSMonitorRequestHeaderArrayOutput() LBHTTPSMonitorRequestHeaderArrayOutput {
	return i.ToLBHTTPSMonitorRequestHeaderArrayOutputWithContext(context.Background())
}

func (i LBHTTPSMonitorRequestHeaderArray) ToLBHTTPSMonitorRequestHeaderArrayOutputWithContext(ctx context.Context) LBHTTPSMonitorRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPSMonitorRequestHeaderArrayOutput)
}

type LBHTTPSMonitorRequestHeaderOutput struct{ *pulumi.OutputState }

func (LBHTTPSMonitorRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPSMonitorRequestHeader)(nil)).Elem()
}

func (o LBHTTPSMonitorRequestHeaderOutput) ToLBHTTPSMonitorRequestHeaderOutput() LBHTTPSMonitorRequestHeaderOutput {
	return o
}

func (o LBHTTPSMonitorRequestHeaderOutput) ToLBHTTPSMonitorRequestHeaderOutputWithContext(ctx context.Context) LBHTTPSMonitorRequestHeaderOutput {
	return o
}

func (o LBHTTPSMonitorRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPSMonitorRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

func (o LBHTTPSMonitorRequestHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPSMonitorRequestHeader) string { return v.Value }).(pulumi.StringOutput)
}

type LBHTTPSMonitorRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPSMonitorRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPSMonitorRequestHeader)(nil)).Elem()
}

func (o LBHTTPSMonitorRequestHeaderArrayOutput) ToLBHTTPSMonitorRequestHeaderArrayOutput() LBHTTPSMonitorRequestHeaderArrayOutput {
	return o
}

func (o LBHTTPSMonitorRequestHeaderArrayOutput) ToLBHTTPSMonitorRequestHeaderArrayOutputWithContext(ctx context.Context) LBHTTPSMonitorRequestHeaderArrayOutput {
	return o
}

func (o LBHTTPSMonitorRequestHeaderArrayOutput) Index(i pulumi.IntInput) LBHTTPSMonitorRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPSMonitorRequestHeader {
		return vs[0].([]LBHTTPSMonitorRequestHeader)[vs[1].(int)]
	}).(LBHTTPSMonitorRequestHeaderOutput)
}

type LBHTTPSMonitorTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBHTTPSMonitorTagInput is an input type that accepts LBHTTPSMonitorTagArgs and LBHTTPSMonitorTagOutput values.
// You can construct a concrete instance of `LBHTTPSMonitorTagInput` via:
//
//          LBHTTPSMonitorTagArgs{...}
type LBHTTPSMonitorTagInput interface {
	pulumi.Input

	ToLBHTTPSMonitorTagOutput() LBHTTPSMonitorTagOutput
	ToLBHTTPSMonitorTagOutputWithContext(context.Context) LBHTTPSMonitorTagOutput
}

type LBHTTPSMonitorTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBHTTPSMonitorTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPSMonitorTag)(nil)).Elem()
}

func (i LBHTTPSMonitorTagArgs) ToLBHTTPSMonitorTagOutput() LBHTTPSMonitorTagOutput {
	return i.ToLBHTTPSMonitorTagOutputWithContext(context.Background())
}

func (i LBHTTPSMonitorTagArgs) ToLBHTTPSMonitorTagOutputWithContext(ctx context.Context) LBHTTPSMonitorTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPSMonitorTagOutput)
}

// LBHTTPSMonitorTagArrayInput is an input type that accepts LBHTTPSMonitorTagArray and LBHTTPSMonitorTagArrayOutput values.
// You can construct a concrete instance of `LBHTTPSMonitorTagArrayInput` via:
//
//          LBHTTPSMonitorTagArray{ LBHTTPSMonitorTagArgs{...} }
type LBHTTPSMonitorTagArrayInput interface {
	pulumi.Input

	ToLBHTTPSMonitorTagArrayOutput() LBHTTPSMonitorTagArrayOutput
	ToLBHTTPSMonitorTagArrayOutputWithContext(context.Context) LBHTTPSMonitorTagArrayOutput
}

type LBHTTPSMonitorTagArray []LBHTTPSMonitorTagInput

func (LBHTTPSMonitorTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPSMonitorTag)(nil)).Elem()
}

func (i LBHTTPSMonitorTagArray) ToLBHTTPSMonitorTagArrayOutput() LBHTTPSMonitorTagArrayOutput {
	return i.ToLBHTTPSMonitorTagArrayOutputWithContext(context.Background())
}

func (i LBHTTPSMonitorTagArray) ToLBHTTPSMonitorTagArrayOutputWithContext(ctx context.Context) LBHTTPSMonitorTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPSMonitorTagArrayOutput)
}

type LBHTTPSMonitorTagOutput struct{ *pulumi.OutputState }

func (LBHTTPSMonitorTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPSMonitorTag)(nil)).Elem()
}

func (o LBHTTPSMonitorTagOutput) ToLBHTTPSMonitorTagOutput() LBHTTPSMonitorTagOutput {
	return o
}

func (o LBHTTPSMonitorTagOutput) ToLBHTTPSMonitorTagOutputWithContext(ctx context.Context) LBHTTPSMonitorTagOutput {
	return o
}

func (o LBHTTPSMonitorTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPSMonitorTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBHTTPSMonitorTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPSMonitorTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBHTTPSMonitorTagArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPSMonitorTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPSMonitorTag)(nil)).Elem()
}

func (o LBHTTPSMonitorTagArrayOutput) ToLBHTTPSMonitorTagArrayOutput() LBHTTPSMonitorTagArrayOutput {
	return o
}

func (o LBHTTPSMonitorTagArrayOutput) ToLBHTTPSMonitorTagArrayOutputWithContext(ctx context.Context) LBHTTPSMonitorTagArrayOutput {
	return o
}

func (o LBHTTPSMonitorTagArrayOutput) Index(i pulumi.IntInput) LBHTTPSMonitorTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPSMonitorTag {
		return vs[0].([]LBHTTPSMonitorTag)[vs[1].(int)]
	}).(LBHTTPSMonitorTagOutput)
}

type LBHTTPVirtualServerClientSsl struct {
	CaIds                 []string `pulumi:"caIds"`
	CertificateChainDepth *int     `pulumi:"certificateChainDepth"`
	ClientAuth            *bool    `pulumi:"clientAuth"`
	ClientSslProfileId    string   `pulumi:"clientSslProfileId"`
	CrlIds                []string `pulumi:"crlIds"`
	DefaultCertificateId  string   `pulumi:"defaultCertificateId"`
	SniCertificateIds     []string `pulumi:"sniCertificateIds"`
}

// LBHTTPVirtualServerClientSslInput is an input type that accepts LBHTTPVirtualServerClientSslArgs and LBHTTPVirtualServerClientSslOutput values.
// You can construct a concrete instance of `LBHTTPVirtualServerClientSslInput` via:
//
//          LBHTTPVirtualServerClientSslArgs{...}
type LBHTTPVirtualServerClientSslInput interface {
	pulumi.Input

	ToLBHTTPVirtualServerClientSslOutput() LBHTTPVirtualServerClientSslOutput
	ToLBHTTPVirtualServerClientSslOutputWithContext(context.Context) LBHTTPVirtualServerClientSslOutput
}

type LBHTTPVirtualServerClientSslArgs struct {
	CaIds                 pulumi.StringArrayInput `pulumi:"caIds"`
	CertificateChainDepth pulumi.IntPtrInput      `pulumi:"certificateChainDepth"`
	ClientAuth            pulumi.BoolPtrInput     `pulumi:"clientAuth"`
	ClientSslProfileId    pulumi.StringInput      `pulumi:"clientSslProfileId"`
	CrlIds                pulumi.StringArrayInput `pulumi:"crlIds"`
	DefaultCertificateId  pulumi.StringInput      `pulumi:"defaultCertificateId"`
	SniCertificateIds     pulumi.StringArrayInput `pulumi:"sniCertificateIds"`
}

func (LBHTTPVirtualServerClientSslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPVirtualServerClientSsl)(nil)).Elem()
}

func (i LBHTTPVirtualServerClientSslArgs) ToLBHTTPVirtualServerClientSslOutput() LBHTTPVirtualServerClientSslOutput {
	return i.ToLBHTTPVirtualServerClientSslOutputWithContext(context.Background())
}

func (i LBHTTPVirtualServerClientSslArgs) ToLBHTTPVirtualServerClientSslOutputWithContext(ctx context.Context) LBHTTPVirtualServerClientSslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPVirtualServerClientSslOutput)
}

func (i LBHTTPVirtualServerClientSslArgs) ToLBHTTPVirtualServerClientSslPtrOutput() LBHTTPVirtualServerClientSslPtrOutput {
	return i.ToLBHTTPVirtualServerClientSslPtrOutputWithContext(context.Background())
}

func (i LBHTTPVirtualServerClientSslArgs) ToLBHTTPVirtualServerClientSslPtrOutputWithContext(ctx context.Context) LBHTTPVirtualServerClientSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPVirtualServerClientSslOutput).ToLBHTTPVirtualServerClientSslPtrOutputWithContext(ctx)
}

// LBHTTPVirtualServerClientSslPtrInput is an input type that accepts LBHTTPVirtualServerClientSslArgs, LBHTTPVirtualServerClientSslPtr and LBHTTPVirtualServerClientSslPtrOutput values.
// You can construct a concrete instance of `LBHTTPVirtualServerClientSslPtrInput` via:
//
//          LBHTTPVirtualServerClientSslArgs{...}
//
//  or:
//
//          nil
type LBHTTPVirtualServerClientSslPtrInput interface {
	pulumi.Input

	ToLBHTTPVirtualServerClientSslPtrOutput() LBHTTPVirtualServerClientSslPtrOutput
	ToLBHTTPVirtualServerClientSslPtrOutputWithContext(context.Context) LBHTTPVirtualServerClientSslPtrOutput
}

type lbhttpvirtualServerClientSslPtrType LBHTTPVirtualServerClientSslArgs

func LBHTTPVirtualServerClientSslPtr(v *LBHTTPVirtualServerClientSslArgs) LBHTTPVirtualServerClientSslPtrInput {
	return (*lbhttpvirtualServerClientSslPtrType)(v)
}

func (*lbhttpvirtualServerClientSslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPVirtualServerClientSsl)(nil)).Elem()
}

func (i *lbhttpvirtualServerClientSslPtrType) ToLBHTTPVirtualServerClientSslPtrOutput() LBHTTPVirtualServerClientSslPtrOutput {
	return i.ToLBHTTPVirtualServerClientSslPtrOutputWithContext(context.Background())
}

func (i *lbhttpvirtualServerClientSslPtrType) ToLBHTTPVirtualServerClientSslPtrOutputWithContext(ctx context.Context) LBHTTPVirtualServerClientSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPVirtualServerClientSslPtrOutput)
}

type LBHTTPVirtualServerClientSslOutput struct{ *pulumi.OutputState }

func (LBHTTPVirtualServerClientSslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPVirtualServerClientSsl)(nil)).Elem()
}

func (o LBHTTPVirtualServerClientSslOutput) ToLBHTTPVirtualServerClientSslOutput() LBHTTPVirtualServerClientSslOutput {
	return o
}

func (o LBHTTPVirtualServerClientSslOutput) ToLBHTTPVirtualServerClientSslOutputWithContext(ctx context.Context) LBHTTPVirtualServerClientSslOutput {
	return o
}

func (o LBHTTPVirtualServerClientSslOutput) ToLBHTTPVirtualServerClientSslPtrOutput() LBHTTPVirtualServerClientSslPtrOutput {
	return o.ToLBHTTPVirtualServerClientSslPtrOutputWithContext(context.Background())
}

func (o LBHTTPVirtualServerClientSslOutput) ToLBHTTPVirtualServerClientSslPtrOutputWithContext(ctx context.Context) LBHTTPVirtualServerClientSslPtrOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerClientSsl) *LBHTTPVirtualServerClientSsl {
		return &v
	}).(LBHTTPVirtualServerClientSslPtrOutput)
}
func (o LBHTTPVirtualServerClientSslOutput) CaIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerClientSsl) []string { return v.CaIds }).(pulumi.StringArrayOutput)
}

func (o LBHTTPVirtualServerClientSslOutput) CertificateChainDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerClientSsl) *int { return v.CertificateChainDepth }).(pulumi.IntPtrOutput)
}

func (o LBHTTPVirtualServerClientSslOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerClientSsl) *bool { return v.ClientAuth }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPVirtualServerClientSslOutput) ClientSslProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerClientSsl) string { return v.ClientSslProfileId }).(pulumi.StringOutput)
}

func (o LBHTTPVirtualServerClientSslOutput) CrlIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerClientSsl) []string { return v.CrlIds }).(pulumi.StringArrayOutput)
}

func (o LBHTTPVirtualServerClientSslOutput) DefaultCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerClientSsl) string { return v.DefaultCertificateId }).(pulumi.StringOutput)
}

func (o LBHTTPVirtualServerClientSslOutput) SniCertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerClientSsl) []string { return v.SniCertificateIds }).(pulumi.StringArrayOutput)
}

type LBHTTPVirtualServerClientSslPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPVirtualServerClientSslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPVirtualServerClientSsl)(nil)).Elem()
}

func (o LBHTTPVirtualServerClientSslPtrOutput) ToLBHTTPVirtualServerClientSslPtrOutput() LBHTTPVirtualServerClientSslPtrOutput {
	return o
}

func (o LBHTTPVirtualServerClientSslPtrOutput) ToLBHTTPVirtualServerClientSslPtrOutputWithContext(ctx context.Context) LBHTTPVirtualServerClientSslPtrOutput {
	return o
}

func (o LBHTTPVirtualServerClientSslPtrOutput) Elem() LBHTTPVirtualServerClientSslOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerClientSsl) LBHTTPVirtualServerClientSsl { return *v }).(LBHTTPVirtualServerClientSslOutput)
}

func (o LBHTTPVirtualServerClientSslPtrOutput) CaIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerClientSsl) []string {
		if v == nil {
			return nil
		}
		return v.CaIds
	}).(pulumi.StringArrayOutput)
}

func (o LBHTTPVirtualServerClientSslPtrOutput) CertificateChainDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerClientSsl) *int {
		if v == nil {
			return nil
		}
		return v.CertificateChainDepth
	}).(pulumi.IntPtrOutput)
}

func (o LBHTTPVirtualServerClientSslPtrOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerClientSsl) *bool {
		if v == nil {
			return nil
		}
		return v.ClientAuth
	}).(pulumi.BoolPtrOutput)
}

func (o LBHTTPVirtualServerClientSslPtrOutput) ClientSslProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerClientSsl) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSslProfileId
	}).(pulumi.StringPtrOutput)
}

func (o LBHTTPVirtualServerClientSslPtrOutput) CrlIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerClientSsl) []string {
		if v == nil {
			return nil
		}
		return v.CrlIds
	}).(pulumi.StringArrayOutput)
}

func (o LBHTTPVirtualServerClientSslPtrOutput) DefaultCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerClientSsl) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultCertificateId
	}).(pulumi.StringPtrOutput)
}

func (o LBHTTPVirtualServerClientSslPtrOutput) SniCertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerClientSsl) []string {
		if v == nil {
			return nil
		}
		return v.SniCertificateIds
	}).(pulumi.StringArrayOutput)
}

type LBHTTPVirtualServerServerSsl struct {
	CaIds                 []string `pulumi:"caIds"`
	CertificateChainDepth *int     `pulumi:"certificateChainDepth"`
	ClientCertificateId   *string  `pulumi:"clientCertificateId"`
	CrlIds                []string `pulumi:"crlIds"`
	ServerAuth            *bool    `pulumi:"serverAuth"`
	ServerSslProfileId    string   `pulumi:"serverSslProfileId"`
}

// LBHTTPVirtualServerServerSslInput is an input type that accepts LBHTTPVirtualServerServerSslArgs and LBHTTPVirtualServerServerSslOutput values.
// You can construct a concrete instance of `LBHTTPVirtualServerServerSslInput` via:
//
//          LBHTTPVirtualServerServerSslArgs{...}
type LBHTTPVirtualServerServerSslInput interface {
	pulumi.Input

	ToLBHTTPVirtualServerServerSslOutput() LBHTTPVirtualServerServerSslOutput
	ToLBHTTPVirtualServerServerSslOutputWithContext(context.Context) LBHTTPVirtualServerServerSslOutput
}

type LBHTTPVirtualServerServerSslArgs struct {
	CaIds                 pulumi.StringArrayInput `pulumi:"caIds"`
	CertificateChainDepth pulumi.IntPtrInput      `pulumi:"certificateChainDepth"`
	ClientCertificateId   pulumi.StringPtrInput   `pulumi:"clientCertificateId"`
	CrlIds                pulumi.StringArrayInput `pulumi:"crlIds"`
	ServerAuth            pulumi.BoolPtrInput     `pulumi:"serverAuth"`
	ServerSslProfileId    pulumi.StringInput      `pulumi:"serverSslProfileId"`
}

func (LBHTTPVirtualServerServerSslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPVirtualServerServerSsl)(nil)).Elem()
}

func (i LBHTTPVirtualServerServerSslArgs) ToLBHTTPVirtualServerServerSslOutput() LBHTTPVirtualServerServerSslOutput {
	return i.ToLBHTTPVirtualServerServerSslOutputWithContext(context.Background())
}

func (i LBHTTPVirtualServerServerSslArgs) ToLBHTTPVirtualServerServerSslOutputWithContext(ctx context.Context) LBHTTPVirtualServerServerSslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPVirtualServerServerSslOutput)
}

func (i LBHTTPVirtualServerServerSslArgs) ToLBHTTPVirtualServerServerSslPtrOutput() LBHTTPVirtualServerServerSslPtrOutput {
	return i.ToLBHTTPVirtualServerServerSslPtrOutputWithContext(context.Background())
}

func (i LBHTTPVirtualServerServerSslArgs) ToLBHTTPVirtualServerServerSslPtrOutputWithContext(ctx context.Context) LBHTTPVirtualServerServerSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPVirtualServerServerSslOutput).ToLBHTTPVirtualServerServerSslPtrOutputWithContext(ctx)
}

// LBHTTPVirtualServerServerSslPtrInput is an input type that accepts LBHTTPVirtualServerServerSslArgs, LBHTTPVirtualServerServerSslPtr and LBHTTPVirtualServerServerSslPtrOutput values.
// You can construct a concrete instance of `LBHTTPVirtualServerServerSslPtrInput` via:
//
//          LBHTTPVirtualServerServerSslArgs{...}
//
//  or:
//
//          nil
type LBHTTPVirtualServerServerSslPtrInput interface {
	pulumi.Input

	ToLBHTTPVirtualServerServerSslPtrOutput() LBHTTPVirtualServerServerSslPtrOutput
	ToLBHTTPVirtualServerServerSslPtrOutputWithContext(context.Context) LBHTTPVirtualServerServerSslPtrOutput
}

type lbhttpvirtualServerServerSslPtrType LBHTTPVirtualServerServerSslArgs

func LBHTTPVirtualServerServerSslPtr(v *LBHTTPVirtualServerServerSslArgs) LBHTTPVirtualServerServerSslPtrInput {
	return (*lbhttpvirtualServerServerSslPtrType)(v)
}

func (*lbhttpvirtualServerServerSslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPVirtualServerServerSsl)(nil)).Elem()
}

func (i *lbhttpvirtualServerServerSslPtrType) ToLBHTTPVirtualServerServerSslPtrOutput() LBHTTPVirtualServerServerSslPtrOutput {
	return i.ToLBHTTPVirtualServerServerSslPtrOutputWithContext(context.Background())
}

func (i *lbhttpvirtualServerServerSslPtrType) ToLBHTTPVirtualServerServerSslPtrOutputWithContext(ctx context.Context) LBHTTPVirtualServerServerSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPVirtualServerServerSslPtrOutput)
}

type LBHTTPVirtualServerServerSslOutput struct{ *pulumi.OutputState }

func (LBHTTPVirtualServerServerSslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPVirtualServerServerSsl)(nil)).Elem()
}

func (o LBHTTPVirtualServerServerSslOutput) ToLBHTTPVirtualServerServerSslOutput() LBHTTPVirtualServerServerSslOutput {
	return o
}

func (o LBHTTPVirtualServerServerSslOutput) ToLBHTTPVirtualServerServerSslOutputWithContext(ctx context.Context) LBHTTPVirtualServerServerSslOutput {
	return o
}

func (o LBHTTPVirtualServerServerSslOutput) ToLBHTTPVirtualServerServerSslPtrOutput() LBHTTPVirtualServerServerSslPtrOutput {
	return o.ToLBHTTPVirtualServerServerSslPtrOutputWithContext(context.Background())
}

func (o LBHTTPVirtualServerServerSslOutput) ToLBHTTPVirtualServerServerSslPtrOutputWithContext(ctx context.Context) LBHTTPVirtualServerServerSslPtrOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerServerSsl) *LBHTTPVirtualServerServerSsl {
		return &v
	}).(LBHTTPVirtualServerServerSslPtrOutput)
}
func (o LBHTTPVirtualServerServerSslOutput) CaIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerServerSsl) []string { return v.CaIds }).(pulumi.StringArrayOutput)
}

func (o LBHTTPVirtualServerServerSslOutput) CertificateChainDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerServerSsl) *int { return v.CertificateChainDepth }).(pulumi.IntPtrOutput)
}

func (o LBHTTPVirtualServerServerSslOutput) ClientCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerServerSsl) *string { return v.ClientCertificateId }).(pulumi.StringPtrOutput)
}

func (o LBHTTPVirtualServerServerSslOutput) CrlIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerServerSsl) []string { return v.CrlIds }).(pulumi.StringArrayOutput)
}

func (o LBHTTPVirtualServerServerSslOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerServerSsl) *bool { return v.ServerAuth }).(pulumi.BoolPtrOutput)
}

func (o LBHTTPVirtualServerServerSslOutput) ServerSslProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerServerSsl) string { return v.ServerSslProfileId }).(pulumi.StringOutput)
}

type LBHTTPVirtualServerServerSslPtrOutput struct{ *pulumi.OutputState }

func (LBHTTPVirtualServerServerSslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBHTTPVirtualServerServerSsl)(nil)).Elem()
}

func (o LBHTTPVirtualServerServerSslPtrOutput) ToLBHTTPVirtualServerServerSslPtrOutput() LBHTTPVirtualServerServerSslPtrOutput {
	return o
}

func (o LBHTTPVirtualServerServerSslPtrOutput) ToLBHTTPVirtualServerServerSslPtrOutputWithContext(ctx context.Context) LBHTTPVirtualServerServerSslPtrOutput {
	return o
}

func (o LBHTTPVirtualServerServerSslPtrOutput) Elem() LBHTTPVirtualServerServerSslOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerServerSsl) LBHTTPVirtualServerServerSsl { return *v }).(LBHTTPVirtualServerServerSslOutput)
}

func (o LBHTTPVirtualServerServerSslPtrOutput) CaIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerServerSsl) []string {
		if v == nil {
			return nil
		}
		return v.CaIds
	}).(pulumi.StringArrayOutput)
}

func (o LBHTTPVirtualServerServerSslPtrOutput) CertificateChainDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerServerSsl) *int {
		if v == nil {
			return nil
		}
		return v.CertificateChainDepth
	}).(pulumi.IntPtrOutput)
}

func (o LBHTTPVirtualServerServerSslPtrOutput) ClientCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerServerSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificateId
	}).(pulumi.StringPtrOutput)
}

func (o LBHTTPVirtualServerServerSslPtrOutput) CrlIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerServerSsl) []string {
		if v == nil {
			return nil
		}
		return v.CrlIds
	}).(pulumi.StringArrayOutput)
}

func (o LBHTTPVirtualServerServerSslPtrOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerServerSsl) *bool {
		if v == nil {
			return nil
		}
		return v.ServerAuth
	}).(pulumi.BoolPtrOutput)
}

func (o LBHTTPVirtualServerServerSslPtrOutput) ServerSslProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBHTTPVirtualServerServerSsl) *string {
		if v == nil {
			return nil
		}
		return &v.ServerSslProfileId
	}).(pulumi.StringPtrOutput)
}

type LBHTTPVirtualServerTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBHTTPVirtualServerTagInput is an input type that accepts LBHTTPVirtualServerTagArgs and LBHTTPVirtualServerTagOutput values.
// You can construct a concrete instance of `LBHTTPVirtualServerTagInput` via:
//
//          LBHTTPVirtualServerTagArgs{...}
type LBHTTPVirtualServerTagInput interface {
	pulumi.Input

	ToLBHTTPVirtualServerTagOutput() LBHTTPVirtualServerTagOutput
	ToLBHTTPVirtualServerTagOutputWithContext(context.Context) LBHTTPVirtualServerTagOutput
}

type LBHTTPVirtualServerTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBHTTPVirtualServerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPVirtualServerTag)(nil)).Elem()
}

func (i LBHTTPVirtualServerTagArgs) ToLBHTTPVirtualServerTagOutput() LBHTTPVirtualServerTagOutput {
	return i.ToLBHTTPVirtualServerTagOutputWithContext(context.Background())
}

func (i LBHTTPVirtualServerTagArgs) ToLBHTTPVirtualServerTagOutputWithContext(ctx context.Context) LBHTTPVirtualServerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPVirtualServerTagOutput)
}

// LBHTTPVirtualServerTagArrayInput is an input type that accepts LBHTTPVirtualServerTagArray and LBHTTPVirtualServerTagArrayOutput values.
// You can construct a concrete instance of `LBHTTPVirtualServerTagArrayInput` via:
//
//          LBHTTPVirtualServerTagArray{ LBHTTPVirtualServerTagArgs{...} }
type LBHTTPVirtualServerTagArrayInput interface {
	pulumi.Input

	ToLBHTTPVirtualServerTagArrayOutput() LBHTTPVirtualServerTagArrayOutput
	ToLBHTTPVirtualServerTagArrayOutputWithContext(context.Context) LBHTTPVirtualServerTagArrayOutput
}

type LBHTTPVirtualServerTagArray []LBHTTPVirtualServerTagInput

func (LBHTTPVirtualServerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPVirtualServerTag)(nil)).Elem()
}

func (i LBHTTPVirtualServerTagArray) ToLBHTTPVirtualServerTagArrayOutput() LBHTTPVirtualServerTagArrayOutput {
	return i.ToLBHTTPVirtualServerTagArrayOutputWithContext(context.Background())
}

func (i LBHTTPVirtualServerTagArray) ToLBHTTPVirtualServerTagArrayOutputWithContext(ctx context.Context) LBHTTPVirtualServerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBHTTPVirtualServerTagArrayOutput)
}

type LBHTTPVirtualServerTagOutput struct{ *pulumi.OutputState }

func (LBHTTPVirtualServerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBHTTPVirtualServerTag)(nil)).Elem()
}

func (o LBHTTPVirtualServerTagOutput) ToLBHTTPVirtualServerTagOutput() LBHTTPVirtualServerTagOutput {
	return o
}

func (o LBHTTPVirtualServerTagOutput) ToLBHTTPVirtualServerTagOutputWithContext(ctx context.Context) LBHTTPVirtualServerTagOutput {
	return o
}

func (o LBHTTPVirtualServerTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBHTTPVirtualServerTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBHTTPVirtualServerTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBHTTPVirtualServerTagArrayOutput struct{ *pulumi.OutputState }

func (LBHTTPVirtualServerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBHTTPVirtualServerTag)(nil)).Elem()
}

func (o LBHTTPVirtualServerTagArrayOutput) ToLBHTTPVirtualServerTagArrayOutput() LBHTTPVirtualServerTagArrayOutput {
	return o
}

func (o LBHTTPVirtualServerTagArrayOutput) ToLBHTTPVirtualServerTagArrayOutputWithContext(ctx context.Context) LBHTTPVirtualServerTagArrayOutput {
	return o
}

func (o LBHTTPVirtualServerTagArrayOutput) Index(i pulumi.IntInput) LBHTTPVirtualServerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBHTTPVirtualServerTag {
		return vs[0].([]LBHTTPVirtualServerTag)[vs[1].(int)]
	}).(LBHTTPVirtualServerTagOutput)
}

type LBICMPMonitorTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBICMPMonitorTagInput is an input type that accepts LBICMPMonitorTagArgs and LBICMPMonitorTagOutput values.
// You can construct a concrete instance of `LBICMPMonitorTagInput` via:
//
//          LBICMPMonitorTagArgs{...}
type LBICMPMonitorTagInput interface {
	pulumi.Input

	ToLBICMPMonitorTagOutput() LBICMPMonitorTagOutput
	ToLBICMPMonitorTagOutputWithContext(context.Context) LBICMPMonitorTagOutput
}

type LBICMPMonitorTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBICMPMonitorTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBICMPMonitorTag)(nil)).Elem()
}

func (i LBICMPMonitorTagArgs) ToLBICMPMonitorTagOutput() LBICMPMonitorTagOutput {
	return i.ToLBICMPMonitorTagOutputWithContext(context.Background())
}

func (i LBICMPMonitorTagArgs) ToLBICMPMonitorTagOutputWithContext(ctx context.Context) LBICMPMonitorTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBICMPMonitorTagOutput)
}

// LBICMPMonitorTagArrayInput is an input type that accepts LBICMPMonitorTagArray and LBICMPMonitorTagArrayOutput values.
// You can construct a concrete instance of `LBICMPMonitorTagArrayInput` via:
//
//          LBICMPMonitorTagArray{ LBICMPMonitorTagArgs{...} }
type LBICMPMonitorTagArrayInput interface {
	pulumi.Input

	ToLBICMPMonitorTagArrayOutput() LBICMPMonitorTagArrayOutput
	ToLBICMPMonitorTagArrayOutputWithContext(context.Context) LBICMPMonitorTagArrayOutput
}

type LBICMPMonitorTagArray []LBICMPMonitorTagInput

func (LBICMPMonitorTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBICMPMonitorTag)(nil)).Elem()
}

func (i LBICMPMonitorTagArray) ToLBICMPMonitorTagArrayOutput() LBICMPMonitorTagArrayOutput {
	return i.ToLBICMPMonitorTagArrayOutputWithContext(context.Background())
}

func (i LBICMPMonitorTagArray) ToLBICMPMonitorTagArrayOutputWithContext(ctx context.Context) LBICMPMonitorTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBICMPMonitorTagArrayOutput)
}

type LBICMPMonitorTagOutput struct{ *pulumi.OutputState }

func (LBICMPMonitorTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBICMPMonitorTag)(nil)).Elem()
}

func (o LBICMPMonitorTagOutput) ToLBICMPMonitorTagOutput() LBICMPMonitorTagOutput {
	return o
}

func (o LBICMPMonitorTagOutput) ToLBICMPMonitorTagOutputWithContext(ctx context.Context) LBICMPMonitorTagOutput {
	return o
}

func (o LBICMPMonitorTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBICMPMonitorTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBICMPMonitorTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBICMPMonitorTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBICMPMonitorTagArrayOutput struct{ *pulumi.OutputState }

func (LBICMPMonitorTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBICMPMonitorTag)(nil)).Elem()
}

func (o LBICMPMonitorTagArrayOutput) ToLBICMPMonitorTagArrayOutput() LBICMPMonitorTagArrayOutput {
	return o
}

func (o LBICMPMonitorTagArrayOutput) ToLBICMPMonitorTagArrayOutputWithContext(ctx context.Context) LBICMPMonitorTagArrayOutput {
	return o
}

func (o LBICMPMonitorTagArrayOutput) Index(i pulumi.IntInput) LBICMPMonitorTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBICMPMonitorTag {
		return vs[0].([]LBICMPMonitorTag)[vs[1].(int)]
	}).(LBICMPMonitorTagOutput)
}

type LBPassiveMonitorTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBPassiveMonitorTagInput is an input type that accepts LBPassiveMonitorTagArgs and LBPassiveMonitorTagOutput values.
// You can construct a concrete instance of `LBPassiveMonitorTagInput` via:
//
//          LBPassiveMonitorTagArgs{...}
type LBPassiveMonitorTagInput interface {
	pulumi.Input

	ToLBPassiveMonitorTagOutput() LBPassiveMonitorTagOutput
	ToLBPassiveMonitorTagOutputWithContext(context.Context) LBPassiveMonitorTagOutput
}

type LBPassiveMonitorTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBPassiveMonitorTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPassiveMonitorTag)(nil)).Elem()
}

func (i LBPassiveMonitorTagArgs) ToLBPassiveMonitorTagOutput() LBPassiveMonitorTagOutput {
	return i.ToLBPassiveMonitorTagOutputWithContext(context.Background())
}

func (i LBPassiveMonitorTagArgs) ToLBPassiveMonitorTagOutputWithContext(ctx context.Context) LBPassiveMonitorTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPassiveMonitorTagOutput)
}

// LBPassiveMonitorTagArrayInput is an input type that accepts LBPassiveMonitorTagArray and LBPassiveMonitorTagArrayOutput values.
// You can construct a concrete instance of `LBPassiveMonitorTagArrayInput` via:
//
//          LBPassiveMonitorTagArray{ LBPassiveMonitorTagArgs{...} }
type LBPassiveMonitorTagArrayInput interface {
	pulumi.Input

	ToLBPassiveMonitorTagArrayOutput() LBPassiveMonitorTagArrayOutput
	ToLBPassiveMonitorTagArrayOutputWithContext(context.Context) LBPassiveMonitorTagArrayOutput
}

type LBPassiveMonitorTagArray []LBPassiveMonitorTagInput

func (LBPassiveMonitorTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBPassiveMonitorTag)(nil)).Elem()
}

func (i LBPassiveMonitorTagArray) ToLBPassiveMonitorTagArrayOutput() LBPassiveMonitorTagArrayOutput {
	return i.ToLBPassiveMonitorTagArrayOutputWithContext(context.Background())
}

func (i LBPassiveMonitorTagArray) ToLBPassiveMonitorTagArrayOutputWithContext(ctx context.Context) LBPassiveMonitorTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPassiveMonitorTagArrayOutput)
}

type LBPassiveMonitorTagOutput struct{ *pulumi.OutputState }

func (LBPassiveMonitorTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPassiveMonitorTag)(nil)).Elem()
}

func (o LBPassiveMonitorTagOutput) ToLBPassiveMonitorTagOutput() LBPassiveMonitorTagOutput {
	return o
}

func (o LBPassiveMonitorTagOutput) ToLBPassiveMonitorTagOutputWithContext(ctx context.Context) LBPassiveMonitorTagOutput {
	return o
}

func (o LBPassiveMonitorTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPassiveMonitorTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBPassiveMonitorTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPassiveMonitorTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBPassiveMonitorTagArrayOutput struct{ *pulumi.OutputState }

func (LBPassiveMonitorTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBPassiveMonitorTag)(nil)).Elem()
}

func (o LBPassiveMonitorTagArrayOutput) ToLBPassiveMonitorTagArrayOutput() LBPassiveMonitorTagArrayOutput {
	return o
}

func (o LBPassiveMonitorTagArrayOutput) ToLBPassiveMonitorTagArrayOutputWithContext(ctx context.Context) LBPassiveMonitorTagArrayOutput {
	return o
}

func (o LBPassiveMonitorTagArrayOutput) Index(i pulumi.IntInput) LBPassiveMonitorTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBPassiveMonitorTag {
		return vs[0].([]LBPassiveMonitorTag)[vs[1].(int)]
	}).(LBPassiveMonitorTagOutput)
}

type LBPoolMember struct {
	AdminState               *string `pulumi:"adminState"`
	BackupMember             *bool   `pulumi:"backupMember"`
	DisplayName              *string `pulumi:"displayName"`
	IpAddress                string  `pulumi:"ipAddress"`
	MaxConcurrentConnections *int    `pulumi:"maxConcurrentConnections"`
	Port                     *string `pulumi:"port"`
	Weight                   *int    `pulumi:"weight"`
}

// LBPoolMemberInput is an input type that accepts LBPoolMemberArgs and LBPoolMemberOutput values.
// You can construct a concrete instance of `LBPoolMemberInput` via:
//
//          LBPoolMemberArgs{...}
type LBPoolMemberInput interface {
	pulumi.Input

	ToLBPoolMemberOutput() LBPoolMemberOutput
	ToLBPoolMemberOutputWithContext(context.Context) LBPoolMemberOutput
}

type LBPoolMemberArgs struct {
	AdminState               pulumi.StringPtrInput `pulumi:"adminState"`
	BackupMember             pulumi.BoolPtrInput   `pulumi:"backupMember"`
	DisplayName              pulumi.StringPtrInput `pulumi:"displayName"`
	IpAddress                pulumi.StringInput    `pulumi:"ipAddress"`
	MaxConcurrentConnections pulumi.IntPtrInput    `pulumi:"maxConcurrentConnections"`
	Port                     pulumi.StringPtrInput `pulumi:"port"`
	Weight                   pulumi.IntPtrInput    `pulumi:"weight"`
}

func (LBPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPoolMember)(nil)).Elem()
}

func (i LBPoolMemberArgs) ToLBPoolMemberOutput() LBPoolMemberOutput {
	return i.ToLBPoolMemberOutputWithContext(context.Background())
}

func (i LBPoolMemberArgs) ToLBPoolMemberOutputWithContext(ctx context.Context) LBPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolMemberOutput)
}

// LBPoolMemberArrayInput is an input type that accepts LBPoolMemberArray and LBPoolMemberArrayOutput values.
// You can construct a concrete instance of `LBPoolMemberArrayInput` via:
//
//          LBPoolMemberArray{ LBPoolMemberArgs{...} }
type LBPoolMemberArrayInput interface {
	pulumi.Input

	ToLBPoolMemberArrayOutput() LBPoolMemberArrayOutput
	ToLBPoolMemberArrayOutputWithContext(context.Context) LBPoolMemberArrayOutput
}

type LBPoolMemberArray []LBPoolMemberInput

func (LBPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBPoolMember)(nil)).Elem()
}

func (i LBPoolMemberArray) ToLBPoolMemberArrayOutput() LBPoolMemberArrayOutput {
	return i.ToLBPoolMemberArrayOutputWithContext(context.Background())
}

func (i LBPoolMemberArray) ToLBPoolMemberArrayOutputWithContext(ctx context.Context) LBPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolMemberArrayOutput)
}

type LBPoolMemberOutput struct{ *pulumi.OutputState }

func (LBPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPoolMember)(nil)).Elem()
}

func (o LBPoolMemberOutput) ToLBPoolMemberOutput() LBPoolMemberOutput {
	return o
}

func (o LBPoolMemberOutput) ToLBPoolMemberOutputWithContext(ctx context.Context) LBPoolMemberOutput {
	return o
}

func (o LBPoolMemberOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolMember) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

func (o LBPoolMemberOutput) BackupMember() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBPoolMember) *bool { return v.BackupMember }).(pulumi.BoolPtrOutput)
}

func (o LBPoolMemberOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolMember) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LBPoolMemberOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LBPoolMember) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o LBPoolMemberOutput) MaxConcurrentConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LBPoolMember) *int { return v.MaxConcurrentConnections }).(pulumi.IntPtrOutput)
}

func (o LBPoolMemberOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolMember) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o LBPoolMemberOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LBPoolMember) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type LBPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (LBPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBPoolMember)(nil)).Elem()
}

func (o LBPoolMemberArrayOutput) ToLBPoolMemberArrayOutput() LBPoolMemberArrayOutput {
	return o
}

func (o LBPoolMemberArrayOutput) ToLBPoolMemberArrayOutputWithContext(ctx context.Context) LBPoolMemberArrayOutput {
	return o
}

func (o LBPoolMemberArrayOutput) Index(i pulumi.IntInput) LBPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBPoolMember {
		return vs[0].([]LBPoolMember)[vs[1].(int)]
	}).(LBPoolMemberOutput)
}

type LBPoolMemberGroup struct {
	GroupingObject  LBPoolMemberGroupGroupingObject `pulumi:"groupingObject"`
	IpVersionFilter *string                         `pulumi:"ipVersionFilter"`
	LimitIpListSize *bool                           `pulumi:"limitIpListSize"`
	MaxIpListSize   *int                            `pulumi:"maxIpListSize"`
	Port            *int                            `pulumi:"port"`
}

// LBPoolMemberGroupInput is an input type that accepts LBPoolMemberGroupArgs and LBPoolMemberGroupOutput values.
// You can construct a concrete instance of `LBPoolMemberGroupInput` via:
//
//          LBPoolMemberGroupArgs{...}
type LBPoolMemberGroupInput interface {
	pulumi.Input

	ToLBPoolMemberGroupOutput() LBPoolMemberGroupOutput
	ToLBPoolMemberGroupOutputWithContext(context.Context) LBPoolMemberGroupOutput
}

type LBPoolMemberGroupArgs struct {
	GroupingObject  LBPoolMemberGroupGroupingObjectInput `pulumi:"groupingObject"`
	IpVersionFilter pulumi.StringPtrInput                `pulumi:"ipVersionFilter"`
	LimitIpListSize pulumi.BoolPtrInput                  `pulumi:"limitIpListSize"`
	MaxIpListSize   pulumi.IntPtrInput                   `pulumi:"maxIpListSize"`
	Port            pulumi.IntPtrInput                   `pulumi:"port"`
}

func (LBPoolMemberGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPoolMemberGroup)(nil)).Elem()
}

func (i LBPoolMemberGroupArgs) ToLBPoolMemberGroupOutput() LBPoolMemberGroupOutput {
	return i.ToLBPoolMemberGroupOutputWithContext(context.Background())
}

func (i LBPoolMemberGroupArgs) ToLBPoolMemberGroupOutputWithContext(ctx context.Context) LBPoolMemberGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolMemberGroupOutput)
}

func (i LBPoolMemberGroupArgs) ToLBPoolMemberGroupPtrOutput() LBPoolMemberGroupPtrOutput {
	return i.ToLBPoolMemberGroupPtrOutputWithContext(context.Background())
}

func (i LBPoolMemberGroupArgs) ToLBPoolMemberGroupPtrOutputWithContext(ctx context.Context) LBPoolMemberGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolMemberGroupOutput).ToLBPoolMemberGroupPtrOutputWithContext(ctx)
}

// LBPoolMemberGroupPtrInput is an input type that accepts LBPoolMemberGroupArgs, LBPoolMemberGroupPtr and LBPoolMemberGroupPtrOutput values.
// You can construct a concrete instance of `LBPoolMemberGroupPtrInput` via:
//
//          LBPoolMemberGroupArgs{...}
//
//  or:
//
//          nil
type LBPoolMemberGroupPtrInput interface {
	pulumi.Input

	ToLBPoolMemberGroupPtrOutput() LBPoolMemberGroupPtrOutput
	ToLBPoolMemberGroupPtrOutputWithContext(context.Context) LBPoolMemberGroupPtrOutput
}

type lbpoolMemberGroupPtrType LBPoolMemberGroupArgs

func LBPoolMemberGroupPtr(v *LBPoolMemberGroupArgs) LBPoolMemberGroupPtrInput {
	return (*lbpoolMemberGroupPtrType)(v)
}

func (*lbpoolMemberGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBPoolMemberGroup)(nil)).Elem()
}

func (i *lbpoolMemberGroupPtrType) ToLBPoolMemberGroupPtrOutput() LBPoolMemberGroupPtrOutput {
	return i.ToLBPoolMemberGroupPtrOutputWithContext(context.Background())
}

func (i *lbpoolMemberGroupPtrType) ToLBPoolMemberGroupPtrOutputWithContext(ctx context.Context) LBPoolMemberGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolMemberGroupPtrOutput)
}

type LBPoolMemberGroupOutput struct{ *pulumi.OutputState }

func (LBPoolMemberGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPoolMemberGroup)(nil)).Elem()
}

func (o LBPoolMemberGroupOutput) ToLBPoolMemberGroupOutput() LBPoolMemberGroupOutput {
	return o
}

func (o LBPoolMemberGroupOutput) ToLBPoolMemberGroupOutputWithContext(ctx context.Context) LBPoolMemberGroupOutput {
	return o
}

func (o LBPoolMemberGroupOutput) ToLBPoolMemberGroupPtrOutput() LBPoolMemberGroupPtrOutput {
	return o.ToLBPoolMemberGroupPtrOutputWithContext(context.Background())
}

func (o LBPoolMemberGroupOutput) ToLBPoolMemberGroupPtrOutputWithContext(ctx context.Context) LBPoolMemberGroupPtrOutput {
	return o.ApplyT(func(v LBPoolMemberGroup) *LBPoolMemberGroup {
		return &v
	}).(LBPoolMemberGroupPtrOutput)
}
func (o LBPoolMemberGroupOutput) GroupingObject() LBPoolMemberGroupGroupingObjectOutput {
	return o.ApplyT(func(v LBPoolMemberGroup) LBPoolMemberGroupGroupingObject { return v.GroupingObject }).(LBPoolMemberGroupGroupingObjectOutput)
}

func (o LBPoolMemberGroupOutput) IpVersionFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolMemberGroup) *string { return v.IpVersionFilter }).(pulumi.StringPtrOutput)
}

func (o LBPoolMemberGroupOutput) LimitIpListSize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBPoolMemberGroup) *bool { return v.LimitIpListSize }).(pulumi.BoolPtrOutput)
}

func (o LBPoolMemberGroupOutput) MaxIpListSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LBPoolMemberGroup) *int { return v.MaxIpListSize }).(pulumi.IntPtrOutput)
}

func (o LBPoolMemberGroupOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LBPoolMemberGroup) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type LBPoolMemberGroupPtrOutput struct{ *pulumi.OutputState }

func (LBPoolMemberGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBPoolMemberGroup)(nil)).Elem()
}

func (o LBPoolMemberGroupPtrOutput) ToLBPoolMemberGroupPtrOutput() LBPoolMemberGroupPtrOutput {
	return o
}

func (o LBPoolMemberGroupPtrOutput) ToLBPoolMemberGroupPtrOutputWithContext(ctx context.Context) LBPoolMemberGroupPtrOutput {
	return o
}

func (o LBPoolMemberGroupPtrOutput) Elem() LBPoolMemberGroupOutput {
	return o.ApplyT(func(v *LBPoolMemberGroup) LBPoolMemberGroup { return *v }).(LBPoolMemberGroupOutput)
}

func (o LBPoolMemberGroupPtrOutput) GroupingObject() LBPoolMemberGroupGroupingObjectPtrOutput {
	return o.ApplyT(func(v *LBPoolMemberGroup) *LBPoolMemberGroupGroupingObject {
		if v == nil {
			return nil
		}
		return &v.GroupingObject
	}).(LBPoolMemberGroupGroupingObjectPtrOutput)
}

func (o LBPoolMemberGroupPtrOutput) IpVersionFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBPoolMemberGroup) *string {
		if v == nil {
			return nil
		}
		return v.IpVersionFilter
	}).(pulumi.StringPtrOutput)
}

func (o LBPoolMemberGroupPtrOutput) LimitIpListSize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LBPoolMemberGroup) *bool {
		if v == nil {
			return nil
		}
		return v.LimitIpListSize
	}).(pulumi.BoolPtrOutput)
}

func (o LBPoolMemberGroupPtrOutput) MaxIpListSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LBPoolMemberGroup) *int {
		if v == nil {
			return nil
		}
		return v.MaxIpListSize
	}).(pulumi.IntPtrOutput)
}

func (o LBPoolMemberGroupPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LBPoolMemberGroup) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type LBPoolMemberGroupGroupingObject struct {
	IsValid           *bool   `pulumi:"isValid"`
	TargetDisplayName *string `pulumi:"targetDisplayName"`
	TargetId          *string `pulumi:"targetId"`
	TargetType        *string `pulumi:"targetType"`
}

// LBPoolMemberGroupGroupingObjectInput is an input type that accepts LBPoolMemberGroupGroupingObjectArgs and LBPoolMemberGroupGroupingObjectOutput values.
// You can construct a concrete instance of `LBPoolMemberGroupGroupingObjectInput` via:
//
//          LBPoolMemberGroupGroupingObjectArgs{...}
type LBPoolMemberGroupGroupingObjectInput interface {
	pulumi.Input

	ToLBPoolMemberGroupGroupingObjectOutput() LBPoolMemberGroupGroupingObjectOutput
	ToLBPoolMemberGroupGroupingObjectOutputWithContext(context.Context) LBPoolMemberGroupGroupingObjectOutput
}

type LBPoolMemberGroupGroupingObjectArgs struct {
	IsValid           pulumi.BoolPtrInput   `pulumi:"isValid"`
	TargetDisplayName pulumi.StringPtrInput `pulumi:"targetDisplayName"`
	TargetId          pulumi.StringPtrInput `pulumi:"targetId"`
	TargetType        pulumi.StringPtrInput `pulumi:"targetType"`
}

func (LBPoolMemberGroupGroupingObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPoolMemberGroupGroupingObject)(nil)).Elem()
}

func (i LBPoolMemberGroupGroupingObjectArgs) ToLBPoolMemberGroupGroupingObjectOutput() LBPoolMemberGroupGroupingObjectOutput {
	return i.ToLBPoolMemberGroupGroupingObjectOutputWithContext(context.Background())
}

func (i LBPoolMemberGroupGroupingObjectArgs) ToLBPoolMemberGroupGroupingObjectOutputWithContext(ctx context.Context) LBPoolMemberGroupGroupingObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolMemberGroupGroupingObjectOutput)
}

func (i LBPoolMemberGroupGroupingObjectArgs) ToLBPoolMemberGroupGroupingObjectPtrOutput() LBPoolMemberGroupGroupingObjectPtrOutput {
	return i.ToLBPoolMemberGroupGroupingObjectPtrOutputWithContext(context.Background())
}

func (i LBPoolMemberGroupGroupingObjectArgs) ToLBPoolMemberGroupGroupingObjectPtrOutputWithContext(ctx context.Context) LBPoolMemberGroupGroupingObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolMemberGroupGroupingObjectOutput).ToLBPoolMemberGroupGroupingObjectPtrOutputWithContext(ctx)
}

// LBPoolMemberGroupGroupingObjectPtrInput is an input type that accepts LBPoolMemberGroupGroupingObjectArgs, LBPoolMemberGroupGroupingObjectPtr and LBPoolMemberGroupGroupingObjectPtrOutput values.
// You can construct a concrete instance of `LBPoolMemberGroupGroupingObjectPtrInput` via:
//
//          LBPoolMemberGroupGroupingObjectArgs{...}
//
//  or:
//
//          nil
type LBPoolMemberGroupGroupingObjectPtrInput interface {
	pulumi.Input

	ToLBPoolMemberGroupGroupingObjectPtrOutput() LBPoolMemberGroupGroupingObjectPtrOutput
	ToLBPoolMemberGroupGroupingObjectPtrOutputWithContext(context.Context) LBPoolMemberGroupGroupingObjectPtrOutput
}

type lbpoolMemberGroupGroupingObjectPtrType LBPoolMemberGroupGroupingObjectArgs

func LBPoolMemberGroupGroupingObjectPtr(v *LBPoolMemberGroupGroupingObjectArgs) LBPoolMemberGroupGroupingObjectPtrInput {
	return (*lbpoolMemberGroupGroupingObjectPtrType)(v)
}

func (*lbpoolMemberGroupGroupingObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBPoolMemberGroupGroupingObject)(nil)).Elem()
}

func (i *lbpoolMemberGroupGroupingObjectPtrType) ToLBPoolMemberGroupGroupingObjectPtrOutput() LBPoolMemberGroupGroupingObjectPtrOutput {
	return i.ToLBPoolMemberGroupGroupingObjectPtrOutputWithContext(context.Background())
}

func (i *lbpoolMemberGroupGroupingObjectPtrType) ToLBPoolMemberGroupGroupingObjectPtrOutputWithContext(ctx context.Context) LBPoolMemberGroupGroupingObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolMemberGroupGroupingObjectPtrOutput)
}

type LBPoolMemberGroupGroupingObjectOutput struct{ *pulumi.OutputState }

func (LBPoolMemberGroupGroupingObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPoolMemberGroupGroupingObject)(nil)).Elem()
}

func (o LBPoolMemberGroupGroupingObjectOutput) ToLBPoolMemberGroupGroupingObjectOutput() LBPoolMemberGroupGroupingObjectOutput {
	return o
}

func (o LBPoolMemberGroupGroupingObjectOutput) ToLBPoolMemberGroupGroupingObjectOutputWithContext(ctx context.Context) LBPoolMemberGroupGroupingObjectOutput {
	return o
}

func (o LBPoolMemberGroupGroupingObjectOutput) ToLBPoolMemberGroupGroupingObjectPtrOutput() LBPoolMemberGroupGroupingObjectPtrOutput {
	return o.ToLBPoolMemberGroupGroupingObjectPtrOutputWithContext(context.Background())
}

func (o LBPoolMemberGroupGroupingObjectOutput) ToLBPoolMemberGroupGroupingObjectPtrOutputWithContext(ctx context.Context) LBPoolMemberGroupGroupingObjectPtrOutput {
	return o.ApplyT(func(v LBPoolMemberGroupGroupingObject) *LBPoolMemberGroupGroupingObject {
		return &v
	}).(LBPoolMemberGroupGroupingObjectPtrOutput)
}
func (o LBPoolMemberGroupGroupingObjectOutput) IsValid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LBPoolMemberGroupGroupingObject) *bool { return v.IsValid }).(pulumi.BoolPtrOutput)
}

func (o LBPoolMemberGroupGroupingObjectOutput) TargetDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolMemberGroupGroupingObject) *string { return v.TargetDisplayName }).(pulumi.StringPtrOutput)
}

func (o LBPoolMemberGroupGroupingObjectOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolMemberGroupGroupingObject) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o LBPoolMemberGroupGroupingObjectOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolMemberGroupGroupingObject) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type LBPoolMemberGroupGroupingObjectPtrOutput struct{ *pulumi.OutputState }

func (LBPoolMemberGroupGroupingObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBPoolMemberGroupGroupingObject)(nil)).Elem()
}

func (o LBPoolMemberGroupGroupingObjectPtrOutput) ToLBPoolMemberGroupGroupingObjectPtrOutput() LBPoolMemberGroupGroupingObjectPtrOutput {
	return o
}

func (o LBPoolMemberGroupGroupingObjectPtrOutput) ToLBPoolMemberGroupGroupingObjectPtrOutputWithContext(ctx context.Context) LBPoolMemberGroupGroupingObjectPtrOutput {
	return o
}

func (o LBPoolMemberGroupGroupingObjectPtrOutput) Elem() LBPoolMemberGroupGroupingObjectOutput {
	return o.ApplyT(func(v *LBPoolMemberGroupGroupingObject) LBPoolMemberGroupGroupingObject { return *v }).(LBPoolMemberGroupGroupingObjectOutput)
}

func (o LBPoolMemberGroupGroupingObjectPtrOutput) IsValid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LBPoolMemberGroupGroupingObject) *bool {
		if v == nil {
			return nil
		}
		return v.IsValid
	}).(pulumi.BoolPtrOutput)
}

func (o LBPoolMemberGroupGroupingObjectPtrOutput) TargetDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBPoolMemberGroupGroupingObject) *string {
		if v == nil {
			return nil
		}
		return v.TargetDisplayName
	}).(pulumi.StringPtrOutput)
}

func (o LBPoolMemberGroupGroupingObjectPtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBPoolMemberGroupGroupingObject) *string {
		if v == nil {
			return nil
		}
		return v.TargetId
	}).(pulumi.StringPtrOutput)
}

func (o LBPoolMemberGroupGroupingObjectPtrOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBPoolMemberGroupGroupingObject) *string {
		if v == nil {
			return nil
		}
		return v.TargetType
	}).(pulumi.StringPtrOutput)
}

type LBPoolSnatTranslation struct {
	Ip   *string `pulumi:"ip"`
	Type *string `pulumi:"type"`
}

// LBPoolSnatTranslationInput is an input type that accepts LBPoolSnatTranslationArgs and LBPoolSnatTranslationOutput values.
// You can construct a concrete instance of `LBPoolSnatTranslationInput` via:
//
//          LBPoolSnatTranslationArgs{...}
type LBPoolSnatTranslationInput interface {
	pulumi.Input

	ToLBPoolSnatTranslationOutput() LBPoolSnatTranslationOutput
	ToLBPoolSnatTranslationOutputWithContext(context.Context) LBPoolSnatTranslationOutput
}

type LBPoolSnatTranslationArgs struct {
	Ip   pulumi.StringPtrInput `pulumi:"ip"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LBPoolSnatTranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPoolSnatTranslation)(nil)).Elem()
}

func (i LBPoolSnatTranslationArgs) ToLBPoolSnatTranslationOutput() LBPoolSnatTranslationOutput {
	return i.ToLBPoolSnatTranslationOutputWithContext(context.Background())
}

func (i LBPoolSnatTranslationArgs) ToLBPoolSnatTranslationOutputWithContext(ctx context.Context) LBPoolSnatTranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolSnatTranslationOutput)
}

func (i LBPoolSnatTranslationArgs) ToLBPoolSnatTranslationPtrOutput() LBPoolSnatTranslationPtrOutput {
	return i.ToLBPoolSnatTranslationPtrOutputWithContext(context.Background())
}

func (i LBPoolSnatTranslationArgs) ToLBPoolSnatTranslationPtrOutputWithContext(ctx context.Context) LBPoolSnatTranslationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolSnatTranslationOutput).ToLBPoolSnatTranslationPtrOutputWithContext(ctx)
}

// LBPoolSnatTranslationPtrInput is an input type that accepts LBPoolSnatTranslationArgs, LBPoolSnatTranslationPtr and LBPoolSnatTranslationPtrOutput values.
// You can construct a concrete instance of `LBPoolSnatTranslationPtrInput` via:
//
//          LBPoolSnatTranslationArgs{...}
//
//  or:
//
//          nil
type LBPoolSnatTranslationPtrInput interface {
	pulumi.Input

	ToLBPoolSnatTranslationPtrOutput() LBPoolSnatTranslationPtrOutput
	ToLBPoolSnatTranslationPtrOutputWithContext(context.Context) LBPoolSnatTranslationPtrOutput
}

type lbpoolSnatTranslationPtrType LBPoolSnatTranslationArgs

func LBPoolSnatTranslationPtr(v *LBPoolSnatTranslationArgs) LBPoolSnatTranslationPtrInput {
	return (*lbpoolSnatTranslationPtrType)(v)
}

func (*lbpoolSnatTranslationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LBPoolSnatTranslation)(nil)).Elem()
}

func (i *lbpoolSnatTranslationPtrType) ToLBPoolSnatTranslationPtrOutput() LBPoolSnatTranslationPtrOutput {
	return i.ToLBPoolSnatTranslationPtrOutputWithContext(context.Background())
}

func (i *lbpoolSnatTranslationPtrType) ToLBPoolSnatTranslationPtrOutputWithContext(ctx context.Context) LBPoolSnatTranslationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolSnatTranslationPtrOutput)
}

type LBPoolSnatTranslationOutput struct{ *pulumi.OutputState }

func (LBPoolSnatTranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPoolSnatTranslation)(nil)).Elem()
}

func (o LBPoolSnatTranslationOutput) ToLBPoolSnatTranslationOutput() LBPoolSnatTranslationOutput {
	return o
}

func (o LBPoolSnatTranslationOutput) ToLBPoolSnatTranslationOutputWithContext(ctx context.Context) LBPoolSnatTranslationOutput {
	return o
}

func (o LBPoolSnatTranslationOutput) ToLBPoolSnatTranslationPtrOutput() LBPoolSnatTranslationPtrOutput {
	return o.ToLBPoolSnatTranslationPtrOutputWithContext(context.Background())
}

func (o LBPoolSnatTranslationOutput) ToLBPoolSnatTranslationPtrOutputWithContext(ctx context.Context) LBPoolSnatTranslationPtrOutput {
	return o.ApplyT(func(v LBPoolSnatTranslation) *LBPoolSnatTranslation {
		return &v
	}).(LBPoolSnatTranslationPtrOutput)
}
func (o LBPoolSnatTranslationOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolSnatTranslation) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o LBPoolSnatTranslationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolSnatTranslation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type LBPoolSnatTranslationPtrOutput struct{ *pulumi.OutputState }

func (LBPoolSnatTranslationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LBPoolSnatTranslation)(nil)).Elem()
}

func (o LBPoolSnatTranslationPtrOutput) ToLBPoolSnatTranslationPtrOutput() LBPoolSnatTranslationPtrOutput {
	return o
}

func (o LBPoolSnatTranslationPtrOutput) ToLBPoolSnatTranslationPtrOutputWithContext(ctx context.Context) LBPoolSnatTranslationPtrOutput {
	return o
}

func (o LBPoolSnatTranslationPtrOutput) Elem() LBPoolSnatTranslationOutput {
	return o.ApplyT(func(v *LBPoolSnatTranslation) LBPoolSnatTranslation { return *v }).(LBPoolSnatTranslationOutput)
}

func (o LBPoolSnatTranslationPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBPoolSnatTranslation) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o LBPoolSnatTranslationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LBPoolSnatTranslation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type LBPoolTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBPoolTagInput is an input type that accepts LBPoolTagArgs and LBPoolTagOutput values.
// You can construct a concrete instance of `LBPoolTagInput` via:
//
//          LBPoolTagArgs{...}
type LBPoolTagInput interface {
	pulumi.Input

	ToLBPoolTagOutput() LBPoolTagOutput
	ToLBPoolTagOutputWithContext(context.Context) LBPoolTagOutput
}

type LBPoolTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBPoolTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPoolTag)(nil)).Elem()
}

func (i LBPoolTagArgs) ToLBPoolTagOutput() LBPoolTagOutput {
	return i.ToLBPoolTagOutputWithContext(context.Background())
}

func (i LBPoolTagArgs) ToLBPoolTagOutputWithContext(ctx context.Context) LBPoolTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolTagOutput)
}

// LBPoolTagArrayInput is an input type that accepts LBPoolTagArray and LBPoolTagArrayOutput values.
// You can construct a concrete instance of `LBPoolTagArrayInput` via:
//
//          LBPoolTagArray{ LBPoolTagArgs{...} }
type LBPoolTagArrayInput interface {
	pulumi.Input

	ToLBPoolTagArrayOutput() LBPoolTagArrayOutput
	ToLBPoolTagArrayOutputWithContext(context.Context) LBPoolTagArrayOutput
}

type LBPoolTagArray []LBPoolTagInput

func (LBPoolTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBPoolTag)(nil)).Elem()
}

func (i LBPoolTagArray) ToLBPoolTagArrayOutput() LBPoolTagArrayOutput {
	return i.ToLBPoolTagArrayOutputWithContext(context.Background())
}

func (i LBPoolTagArray) ToLBPoolTagArrayOutputWithContext(ctx context.Context) LBPoolTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPoolTagArrayOutput)
}

type LBPoolTagOutput struct{ *pulumi.OutputState }

func (LBPoolTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBPoolTag)(nil)).Elem()
}

func (o LBPoolTagOutput) ToLBPoolTagOutput() LBPoolTagOutput {
	return o
}

func (o LBPoolTagOutput) ToLBPoolTagOutputWithContext(ctx context.Context) LBPoolTagOutput {
	return o
}

func (o LBPoolTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBPoolTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBPoolTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBPoolTagArrayOutput struct{ *pulumi.OutputState }

func (LBPoolTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBPoolTag)(nil)).Elem()
}

func (o LBPoolTagArrayOutput) ToLBPoolTagArrayOutput() LBPoolTagArrayOutput {
	return o
}

func (o LBPoolTagArrayOutput) ToLBPoolTagArrayOutputWithContext(ctx context.Context) LBPoolTagArrayOutput {
	return o
}

func (o LBPoolTagArrayOutput) Index(i pulumi.IntInput) LBPoolTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBPoolTag {
		return vs[0].([]LBPoolTag)[vs[1].(int)]
	}).(LBPoolTagOutput)
}

type LBServerSSLProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBServerSSLProfileTagInput is an input type that accepts LBServerSSLProfileTagArgs and LBServerSSLProfileTagOutput values.
// You can construct a concrete instance of `LBServerSSLProfileTagInput` via:
//
//          LBServerSSLProfileTagArgs{...}
type LBServerSSLProfileTagInput interface {
	pulumi.Input

	ToLBServerSSLProfileTagOutput() LBServerSSLProfileTagOutput
	ToLBServerSSLProfileTagOutputWithContext(context.Context) LBServerSSLProfileTagOutput
}

type LBServerSSLProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBServerSSLProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBServerSSLProfileTag)(nil)).Elem()
}

func (i LBServerSSLProfileTagArgs) ToLBServerSSLProfileTagOutput() LBServerSSLProfileTagOutput {
	return i.ToLBServerSSLProfileTagOutputWithContext(context.Background())
}

func (i LBServerSSLProfileTagArgs) ToLBServerSSLProfileTagOutputWithContext(ctx context.Context) LBServerSSLProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBServerSSLProfileTagOutput)
}

// LBServerSSLProfileTagArrayInput is an input type that accepts LBServerSSLProfileTagArray and LBServerSSLProfileTagArrayOutput values.
// You can construct a concrete instance of `LBServerSSLProfileTagArrayInput` via:
//
//          LBServerSSLProfileTagArray{ LBServerSSLProfileTagArgs{...} }
type LBServerSSLProfileTagArrayInput interface {
	pulumi.Input

	ToLBServerSSLProfileTagArrayOutput() LBServerSSLProfileTagArrayOutput
	ToLBServerSSLProfileTagArrayOutputWithContext(context.Context) LBServerSSLProfileTagArrayOutput
}

type LBServerSSLProfileTagArray []LBServerSSLProfileTagInput

func (LBServerSSLProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBServerSSLProfileTag)(nil)).Elem()
}

func (i LBServerSSLProfileTagArray) ToLBServerSSLProfileTagArrayOutput() LBServerSSLProfileTagArrayOutput {
	return i.ToLBServerSSLProfileTagArrayOutputWithContext(context.Background())
}

func (i LBServerSSLProfileTagArray) ToLBServerSSLProfileTagArrayOutputWithContext(ctx context.Context) LBServerSSLProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBServerSSLProfileTagArrayOutput)
}

type LBServerSSLProfileTagOutput struct{ *pulumi.OutputState }

func (LBServerSSLProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBServerSSLProfileTag)(nil)).Elem()
}

func (o LBServerSSLProfileTagOutput) ToLBServerSSLProfileTagOutput() LBServerSSLProfileTagOutput {
	return o
}

func (o LBServerSSLProfileTagOutput) ToLBServerSSLProfileTagOutputWithContext(ctx context.Context) LBServerSSLProfileTagOutput {
	return o
}

func (o LBServerSSLProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBServerSSLProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBServerSSLProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBServerSSLProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBServerSSLProfileTagArrayOutput struct{ *pulumi.OutputState }

func (LBServerSSLProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBServerSSLProfileTag)(nil)).Elem()
}

func (o LBServerSSLProfileTagArrayOutput) ToLBServerSSLProfileTagArrayOutput() LBServerSSLProfileTagArrayOutput {
	return o
}

func (o LBServerSSLProfileTagArrayOutput) ToLBServerSSLProfileTagArrayOutputWithContext(ctx context.Context) LBServerSSLProfileTagArrayOutput {
	return o
}

func (o LBServerSSLProfileTagArrayOutput) Index(i pulumi.IntInput) LBServerSSLProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBServerSSLProfileTag {
		return vs[0].([]LBServerSSLProfileTag)[vs[1].(int)]
	}).(LBServerSSLProfileTagOutput)
}

type LBServiceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBServiceTagInput is an input type that accepts LBServiceTagArgs and LBServiceTagOutput values.
// You can construct a concrete instance of `LBServiceTagInput` via:
//
//          LBServiceTagArgs{...}
type LBServiceTagInput interface {
	pulumi.Input

	ToLBServiceTagOutput() LBServiceTagOutput
	ToLBServiceTagOutputWithContext(context.Context) LBServiceTagOutput
}

type LBServiceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBServiceTag)(nil)).Elem()
}

func (i LBServiceTagArgs) ToLBServiceTagOutput() LBServiceTagOutput {
	return i.ToLBServiceTagOutputWithContext(context.Background())
}

func (i LBServiceTagArgs) ToLBServiceTagOutputWithContext(ctx context.Context) LBServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBServiceTagOutput)
}

// LBServiceTagArrayInput is an input type that accepts LBServiceTagArray and LBServiceTagArrayOutput values.
// You can construct a concrete instance of `LBServiceTagArrayInput` via:
//
//          LBServiceTagArray{ LBServiceTagArgs{...} }
type LBServiceTagArrayInput interface {
	pulumi.Input

	ToLBServiceTagArrayOutput() LBServiceTagArrayOutput
	ToLBServiceTagArrayOutputWithContext(context.Context) LBServiceTagArrayOutput
}

type LBServiceTagArray []LBServiceTagInput

func (LBServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBServiceTag)(nil)).Elem()
}

func (i LBServiceTagArray) ToLBServiceTagArrayOutput() LBServiceTagArrayOutput {
	return i.ToLBServiceTagArrayOutputWithContext(context.Background())
}

func (i LBServiceTagArray) ToLBServiceTagArrayOutputWithContext(ctx context.Context) LBServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBServiceTagArrayOutput)
}

type LBServiceTagOutput struct{ *pulumi.OutputState }

func (LBServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBServiceTag)(nil)).Elem()
}

func (o LBServiceTagOutput) ToLBServiceTagOutput() LBServiceTagOutput {
	return o
}

func (o LBServiceTagOutput) ToLBServiceTagOutputWithContext(ctx context.Context) LBServiceTagOutput {
	return o
}

func (o LBServiceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBServiceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBServiceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBServiceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBServiceTagArrayOutput struct{ *pulumi.OutputState }

func (LBServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBServiceTag)(nil)).Elem()
}

func (o LBServiceTagArrayOutput) ToLBServiceTagArrayOutput() LBServiceTagArrayOutput {
	return o
}

func (o LBServiceTagArrayOutput) ToLBServiceTagArrayOutputWithContext(ctx context.Context) LBServiceTagArrayOutput {
	return o
}

func (o LBServiceTagArrayOutput) Index(i pulumi.IntInput) LBServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBServiceTag {
		return vs[0].([]LBServiceTag)[vs[1].(int)]
	}).(LBServiceTagOutput)
}

type LBSourceIPPersistenceProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBSourceIPPersistenceProfileTagInput is an input type that accepts LBSourceIPPersistenceProfileTagArgs and LBSourceIPPersistenceProfileTagOutput values.
// You can construct a concrete instance of `LBSourceIPPersistenceProfileTagInput` via:
//
//          LBSourceIPPersistenceProfileTagArgs{...}
type LBSourceIPPersistenceProfileTagInput interface {
	pulumi.Input

	ToLBSourceIPPersistenceProfileTagOutput() LBSourceIPPersistenceProfileTagOutput
	ToLBSourceIPPersistenceProfileTagOutputWithContext(context.Context) LBSourceIPPersistenceProfileTagOutput
}

type LBSourceIPPersistenceProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBSourceIPPersistenceProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBSourceIPPersistenceProfileTag)(nil)).Elem()
}

func (i LBSourceIPPersistenceProfileTagArgs) ToLBSourceIPPersistenceProfileTagOutput() LBSourceIPPersistenceProfileTagOutput {
	return i.ToLBSourceIPPersistenceProfileTagOutputWithContext(context.Background())
}

func (i LBSourceIPPersistenceProfileTagArgs) ToLBSourceIPPersistenceProfileTagOutputWithContext(ctx context.Context) LBSourceIPPersistenceProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBSourceIPPersistenceProfileTagOutput)
}

// LBSourceIPPersistenceProfileTagArrayInput is an input type that accepts LBSourceIPPersistenceProfileTagArray and LBSourceIPPersistenceProfileTagArrayOutput values.
// You can construct a concrete instance of `LBSourceIPPersistenceProfileTagArrayInput` via:
//
//          LBSourceIPPersistenceProfileTagArray{ LBSourceIPPersistenceProfileTagArgs{...} }
type LBSourceIPPersistenceProfileTagArrayInput interface {
	pulumi.Input

	ToLBSourceIPPersistenceProfileTagArrayOutput() LBSourceIPPersistenceProfileTagArrayOutput
	ToLBSourceIPPersistenceProfileTagArrayOutputWithContext(context.Context) LBSourceIPPersistenceProfileTagArrayOutput
}

type LBSourceIPPersistenceProfileTagArray []LBSourceIPPersistenceProfileTagInput

func (LBSourceIPPersistenceProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBSourceIPPersistenceProfileTag)(nil)).Elem()
}

func (i LBSourceIPPersistenceProfileTagArray) ToLBSourceIPPersistenceProfileTagArrayOutput() LBSourceIPPersistenceProfileTagArrayOutput {
	return i.ToLBSourceIPPersistenceProfileTagArrayOutputWithContext(context.Background())
}

func (i LBSourceIPPersistenceProfileTagArray) ToLBSourceIPPersistenceProfileTagArrayOutputWithContext(ctx context.Context) LBSourceIPPersistenceProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBSourceIPPersistenceProfileTagArrayOutput)
}

type LBSourceIPPersistenceProfileTagOutput struct{ *pulumi.OutputState }

func (LBSourceIPPersistenceProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBSourceIPPersistenceProfileTag)(nil)).Elem()
}

func (o LBSourceIPPersistenceProfileTagOutput) ToLBSourceIPPersistenceProfileTagOutput() LBSourceIPPersistenceProfileTagOutput {
	return o
}

func (o LBSourceIPPersistenceProfileTagOutput) ToLBSourceIPPersistenceProfileTagOutputWithContext(ctx context.Context) LBSourceIPPersistenceProfileTagOutput {
	return o
}

func (o LBSourceIPPersistenceProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBSourceIPPersistenceProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBSourceIPPersistenceProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBSourceIPPersistenceProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBSourceIPPersistenceProfileTagArrayOutput struct{ *pulumi.OutputState }

func (LBSourceIPPersistenceProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBSourceIPPersistenceProfileTag)(nil)).Elem()
}

func (o LBSourceIPPersistenceProfileTagArrayOutput) ToLBSourceIPPersistenceProfileTagArrayOutput() LBSourceIPPersistenceProfileTagArrayOutput {
	return o
}

func (o LBSourceIPPersistenceProfileTagArrayOutput) ToLBSourceIPPersistenceProfileTagArrayOutputWithContext(ctx context.Context) LBSourceIPPersistenceProfileTagArrayOutput {
	return o
}

func (o LBSourceIPPersistenceProfileTagArrayOutput) Index(i pulumi.IntInput) LBSourceIPPersistenceProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBSourceIPPersistenceProfileTag {
		return vs[0].([]LBSourceIPPersistenceProfileTag)[vs[1].(int)]
	}).(LBSourceIPPersistenceProfileTagOutput)
}

type LBTCPMonitorTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBTCPMonitorTagInput is an input type that accepts LBTCPMonitorTagArgs and LBTCPMonitorTagOutput values.
// You can construct a concrete instance of `LBTCPMonitorTagInput` via:
//
//          LBTCPMonitorTagArgs{...}
type LBTCPMonitorTagInput interface {
	pulumi.Input

	ToLBTCPMonitorTagOutput() LBTCPMonitorTagOutput
	ToLBTCPMonitorTagOutputWithContext(context.Context) LBTCPMonitorTagOutput
}

type LBTCPMonitorTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBTCPMonitorTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBTCPMonitorTag)(nil)).Elem()
}

func (i LBTCPMonitorTagArgs) ToLBTCPMonitorTagOutput() LBTCPMonitorTagOutput {
	return i.ToLBTCPMonitorTagOutputWithContext(context.Background())
}

func (i LBTCPMonitorTagArgs) ToLBTCPMonitorTagOutputWithContext(ctx context.Context) LBTCPMonitorTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBTCPMonitorTagOutput)
}

// LBTCPMonitorTagArrayInput is an input type that accepts LBTCPMonitorTagArray and LBTCPMonitorTagArrayOutput values.
// You can construct a concrete instance of `LBTCPMonitorTagArrayInput` via:
//
//          LBTCPMonitorTagArray{ LBTCPMonitorTagArgs{...} }
type LBTCPMonitorTagArrayInput interface {
	pulumi.Input

	ToLBTCPMonitorTagArrayOutput() LBTCPMonitorTagArrayOutput
	ToLBTCPMonitorTagArrayOutputWithContext(context.Context) LBTCPMonitorTagArrayOutput
}

type LBTCPMonitorTagArray []LBTCPMonitorTagInput

func (LBTCPMonitorTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBTCPMonitorTag)(nil)).Elem()
}

func (i LBTCPMonitorTagArray) ToLBTCPMonitorTagArrayOutput() LBTCPMonitorTagArrayOutput {
	return i.ToLBTCPMonitorTagArrayOutputWithContext(context.Background())
}

func (i LBTCPMonitorTagArray) ToLBTCPMonitorTagArrayOutputWithContext(ctx context.Context) LBTCPMonitorTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBTCPMonitorTagArrayOutput)
}

type LBTCPMonitorTagOutput struct{ *pulumi.OutputState }

func (LBTCPMonitorTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBTCPMonitorTag)(nil)).Elem()
}

func (o LBTCPMonitorTagOutput) ToLBTCPMonitorTagOutput() LBTCPMonitorTagOutput {
	return o
}

func (o LBTCPMonitorTagOutput) ToLBTCPMonitorTagOutputWithContext(ctx context.Context) LBTCPMonitorTagOutput {
	return o
}

func (o LBTCPMonitorTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBTCPMonitorTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBTCPMonitorTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBTCPMonitorTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBTCPMonitorTagArrayOutput struct{ *pulumi.OutputState }

func (LBTCPMonitorTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBTCPMonitorTag)(nil)).Elem()
}

func (o LBTCPMonitorTagArrayOutput) ToLBTCPMonitorTagArrayOutput() LBTCPMonitorTagArrayOutput {
	return o
}

func (o LBTCPMonitorTagArrayOutput) ToLBTCPMonitorTagArrayOutputWithContext(ctx context.Context) LBTCPMonitorTagArrayOutput {
	return o
}

func (o LBTCPMonitorTagArrayOutput) Index(i pulumi.IntInput) LBTCPMonitorTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBTCPMonitorTag {
		return vs[0].([]LBTCPMonitorTag)[vs[1].(int)]
	}).(LBTCPMonitorTagOutput)
}

type LBTCPVirtualServerTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBTCPVirtualServerTagInput is an input type that accepts LBTCPVirtualServerTagArgs and LBTCPVirtualServerTagOutput values.
// You can construct a concrete instance of `LBTCPVirtualServerTagInput` via:
//
//          LBTCPVirtualServerTagArgs{...}
type LBTCPVirtualServerTagInput interface {
	pulumi.Input

	ToLBTCPVirtualServerTagOutput() LBTCPVirtualServerTagOutput
	ToLBTCPVirtualServerTagOutputWithContext(context.Context) LBTCPVirtualServerTagOutput
}

type LBTCPVirtualServerTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBTCPVirtualServerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBTCPVirtualServerTag)(nil)).Elem()
}

func (i LBTCPVirtualServerTagArgs) ToLBTCPVirtualServerTagOutput() LBTCPVirtualServerTagOutput {
	return i.ToLBTCPVirtualServerTagOutputWithContext(context.Background())
}

func (i LBTCPVirtualServerTagArgs) ToLBTCPVirtualServerTagOutputWithContext(ctx context.Context) LBTCPVirtualServerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBTCPVirtualServerTagOutput)
}

// LBTCPVirtualServerTagArrayInput is an input type that accepts LBTCPVirtualServerTagArray and LBTCPVirtualServerTagArrayOutput values.
// You can construct a concrete instance of `LBTCPVirtualServerTagArrayInput` via:
//
//          LBTCPVirtualServerTagArray{ LBTCPVirtualServerTagArgs{...} }
type LBTCPVirtualServerTagArrayInput interface {
	pulumi.Input

	ToLBTCPVirtualServerTagArrayOutput() LBTCPVirtualServerTagArrayOutput
	ToLBTCPVirtualServerTagArrayOutputWithContext(context.Context) LBTCPVirtualServerTagArrayOutput
}

type LBTCPVirtualServerTagArray []LBTCPVirtualServerTagInput

func (LBTCPVirtualServerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBTCPVirtualServerTag)(nil)).Elem()
}

func (i LBTCPVirtualServerTagArray) ToLBTCPVirtualServerTagArrayOutput() LBTCPVirtualServerTagArrayOutput {
	return i.ToLBTCPVirtualServerTagArrayOutputWithContext(context.Background())
}

func (i LBTCPVirtualServerTagArray) ToLBTCPVirtualServerTagArrayOutputWithContext(ctx context.Context) LBTCPVirtualServerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBTCPVirtualServerTagArrayOutput)
}

type LBTCPVirtualServerTagOutput struct{ *pulumi.OutputState }

func (LBTCPVirtualServerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBTCPVirtualServerTag)(nil)).Elem()
}

func (o LBTCPVirtualServerTagOutput) ToLBTCPVirtualServerTagOutput() LBTCPVirtualServerTagOutput {
	return o
}

func (o LBTCPVirtualServerTagOutput) ToLBTCPVirtualServerTagOutputWithContext(ctx context.Context) LBTCPVirtualServerTagOutput {
	return o
}

func (o LBTCPVirtualServerTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBTCPVirtualServerTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBTCPVirtualServerTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBTCPVirtualServerTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBTCPVirtualServerTagArrayOutput struct{ *pulumi.OutputState }

func (LBTCPVirtualServerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBTCPVirtualServerTag)(nil)).Elem()
}

func (o LBTCPVirtualServerTagArrayOutput) ToLBTCPVirtualServerTagArrayOutput() LBTCPVirtualServerTagArrayOutput {
	return o
}

func (o LBTCPVirtualServerTagArrayOutput) ToLBTCPVirtualServerTagArrayOutputWithContext(ctx context.Context) LBTCPVirtualServerTagArrayOutput {
	return o
}

func (o LBTCPVirtualServerTagArrayOutput) Index(i pulumi.IntInput) LBTCPVirtualServerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBTCPVirtualServerTag {
		return vs[0].([]LBTCPVirtualServerTag)[vs[1].(int)]
	}).(LBTCPVirtualServerTagOutput)
}

type LBUDPMonitorTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBUDPMonitorTagInput is an input type that accepts LBUDPMonitorTagArgs and LBUDPMonitorTagOutput values.
// You can construct a concrete instance of `LBUDPMonitorTagInput` via:
//
//          LBUDPMonitorTagArgs{...}
type LBUDPMonitorTagInput interface {
	pulumi.Input

	ToLBUDPMonitorTagOutput() LBUDPMonitorTagOutput
	ToLBUDPMonitorTagOutputWithContext(context.Context) LBUDPMonitorTagOutput
}

type LBUDPMonitorTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBUDPMonitorTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBUDPMonitorTag)(nil)).Elem()
}

func (i LBUDPMonitorTagArgs) ToLBUDPMonitorTagOutput() LBUDPMonitorTagOutput {
	return i.ToLBUDPMonitorTagOutputWithContext(context.Background())
}

func (i LBUDPMonitorTagArgs) ToLBUDPMonitorTagOutputWithContext(ctx context.Context) LBUDPMonitorTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBUDPMonitorTagOutput)
}

// LBUDPMonitorTagArrayInput is an input type that accepts LBUDPMonitorTagArray and LBUDPMonitorTagArrayOutput values.
// You can construct a concrete instance of `LBUDPMonitorTagArrayInput` via:
//
//          LBUDPMonitorTagArray{ LBUDPMonitorTagArgs{...} }
type LBUDPMonitorTagArrayInput interface {
	pulumi.Input

	ToLBUDPMonitorTagArrayOutput() LBUDPMonitorTagArrayOutput
	ToLBUDPMonitorTagArrayOutputWithContext(context.Context) LBUDPMonitorTagArrayOutput
}

type LBUDPMonitorTagArray []LBUDPMonitorTagInput

func (LBUDPMonitorTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBUDPMonitorTag)(nil)).Elem()
}

func (i LBUDPMonitorTagArray) ToLBUDPMonitorTagArrayOutput() LBUDPMonitorTagArrayOutput {
	return i.ToLBUDPMonitorTagArrayOutputWithContext(context.Background())
}

func (i LBUDPMonitorTagArray) ToLBUDPMonitorTagArrayOutputWithContext(ctx context.Context) LBUDPMonitorTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBUDPMonitorTagArrayOutput)
}

type LBUDPMonitorTagOutput struct{ *pulumi.OutputState }

func (LBUDPMonitorTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBUDPMonitorTag)(nil)).Elem()
}

func (o LBUDPMonitorTagOutput) ToLBUDPMonitorTagOutput() LBUDPMonitorTagOutput {
	return o
}

func (o LBUDPMonitorTagOutput) ToLBUDPMonitorTagOutputWithContext(ctx context.Context) LBUDPMonitorTagOutput {
	return o
}

func (o LBUDPMonitorTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBUDPMonitorTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBUDPMonitorTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBUDPMonitorTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBUDPMonitorTagArrayOutput struct{ *pulumi.OutputState }

func (LBUDPMonitorTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBUDPMonitorTag)(nil)).Elem()
}

func (o LBUDPMonitorTagArrayOutput) ToLBUDPMonitorTagArrayOutput() LBUDPMonitorTagArrayOutput {
	return o
}

func (o LBUDPMonitorTagArrayOutput) ToLBUDPMonitorTagArrayOutputWithContext(ctx context.Context) LBUDPMonitorTagArrayOutput {
	return o
}

func (o LBUDPMonitorTagArrayOutput) Index(i pulumi.IntInput) LBUDPMonitorTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBUDPMonitorTag {
		return vs[0].([]LBUDPMonitorTag)[vs[1].(int)]
	}).(LBUDPMonitorTagOutput)
}

type LBUDPVirtualServerTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LBUDPVirtualServerTagInput is an input type that accepts LBUDPVirtualServerTagArgs and LBUDPVirtualServerTagOutput values.
// You can construct a concrete instance of `LBUDPVirtualServerTagInput` via:
//
//          LBUDPVirtualServerTagArgs{...}
type LBUDPVirtualServerTagInput interface {
	pulumi.Input

	ToLBUDPVirtualServerTagOutput() LBUDPVirtualServerTagOutput
	ToLBUDPVirtualServerTagOutputWithContext(context.Context) LBUDPVirtualServerTagOutput
}

type LBUDPVirtualServerTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LBUDPVirtualServerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBUDPVirtualServerTag)(nil)).Elem()
}

func (i LBUDPVirtualServerTagArgs) ToLBUDPVirtualServerTagOutput() LBUDPVirtualServerTagOutput {
	return i.ToLBUDPVirtualServerTagOutputWithContext(context.Background())
}

func (i LBUDPVirtualServerTagArgs) ToLBUDPVirtualServerTagOutputWithContext(ctx context.Context) LBUDPVirtualServerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBUDPVirtualServerTagOutput)
}

// LBUDPVirtualServerTagArrayInput is an input type that accepts LBUDPVirtualServerTagArray and LBUDPVirtualServerTagArrayOutput values.
// You can construct a concrete instance of `LBUDPVirtualServerTagArrayInput` via:
//
//          LBUDPVirtualServerTagArray{ LBUDPVirtualServerTagArgs{...} }
type LBUDPVirtualServerTagArrayInput interface {
	pulumi.Input

	ToLBUDPVirtualServerTagArrayOutput() LBUDPVirtualServerTagArrayOutput
	ToLBUDPVirtualServerTagArrayOutputWithContext(context.Context) LBUDPVirtualServerTagArrayOutput
}

type LBUDPVirtualServerTagArray []LBUDPVirtualServerTagInput

func (LBUDPVirtualServerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBUDPVirtualServerTag)(nil)).Elem()
}

func (i LBUDPVirtualServerTagArray) ToLBUDPVirtualServerTagArrayOutput() LBUDPVirtualServerTagArrayOutput {
	return i.ToLBUDPVirtualServerTagArrayOutputWithContext(context.Background())
}

func (i LBUDPVirtualServerTagArray) ToLBUDPVirtualServerTagArrayOutputWithContext(ctx context.Context) LBUDPVirtualServerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBUDPVirtualServerTagArrayOutput)
}

type LBUDPVirtualServerTagOutput struct{ *pulumi.OutputState }

func (LBUDPVirtualServerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBUDPVirtualServerTag)(nil)).Elem()
}

func (o LBUDPVirtualServerTagOutput) ToLBUDPVirtualServerTagOutput() LBUDPVirtualServerTagOutput {
	return o
}

func (o LBUDPVirtualServerTagOutput) ToLBUDPVirtualServerTagOutputWithContext(ctx context.Context) LBUDPVirtualServerTagOutput {
	return o
}

func (o LBUDPVirtualServerTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBUDPVirtualServerTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LBUDPVirtualServerTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBUDPVirtualServerTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LBUDPVirtualServerTagArrayOutput struct{ *pulumi.OutputState }

func (LBUDPVirtualServerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBUDPVirtualServerTag)(nil)).Elem()
}

func (o LBUDPVirtualServerTagArrayOutput) ToLBUDPVirtualServerTagArrayOutput() LBUDPVirtualServerTagArrayOutput {
	return o
}

func (o LBUDPVirtualServerTagArrayOutput) ToLBUDPVirtualServerTagArrayOutputWithContext(ctx context.Context) LBUDPVirtualServerTagArrayOutput {
	return o
}

func (o LBUDPVirtualServerTagArrayOutput) Index(i pulumi.IntInput) LBUDPVirtualServerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBUDPVirtualServerTag {
		return vs[0].([]LBUDPVirtualServerTag)[vs[1].(int)]
	}).(LBUDPVirtualServerTagOutput)
}

type LogicalDHCPPortTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LogicalDHCPPortTagInput is an input type that accepts LogicalDHCPPortTagArgs and LogicalDHCPPortTagOutput values.
// You can construct a concrete instance of `LogicalDHCPPortTagInput` via:
//
//          LogicalDHCPPortTagArgs{...}
type LogicalDHCPPortTagInput interface {
	pulumi.Input

	ToLogicalDHCPPortTagOutput() LogicalDHCPPortTagOutput
	ToLogicalDHCPPortTagOutputWithContext(context.Context) LogicalDHCPPortTagOutput
}

type LogicalDHCPPortTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LogicalDHCPPortTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalDHCPPortTag)(nil)).Elem()
}

func (i LogicalDHCPPortTagArgs) ToLogicalDHCPPortTagOutput() LogicalDHCPPortTagOutput {
	return i.ToLogicalDHCPPortTagOutputWithContext(context.Background())
}

func (i LogicalDHCPPortTagArgs) ToLogicalDHCPPortTagOutputWithContext(ctx context.Context) LogicalDHCPPortTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalDHCPPortTagOutput)
}

// LogicalDHCPPortTagArrayInput is an input type that accepts LogicalDHCPPortTagArray and LogicalDHCPPortTagArrayOutput values.
// You can construct a concrete instance of `LogicalDHCPPortTagArrayInput` via:
//
//          LogicalDHCPPortTagArray{ LogicalDHCPPortTagArgs{...} }
type LogicalDHCPPortTagArrayInput interface {
	pulumi.Input

	ToLogicalDHCPPortTagArrayOutput() LogicalDHCPPortTagArrayOutput
	ToLogicalDHCPPortTagArrayOutputWithContext(context.Context) LogicalDHCPPortTagArrayOutput
}

type LogicalDHCPPortTagArray []LogicalDHCPPortTagInput

func (LogicalDHCPPortTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalDHCPPortTag)(nil)).Elem()
}

func (i LogicalDHCPPortTagArray) ToLogicalDHCPPortTagArrayOutput() LogicalDHCPPortTagArrayOutput {
	return i.ToLogicalDHCPPortTagArrayOutputWithContext(context.Background())
}

func (i LogicalDHCPPortTagArray) ToLogicalDHCPPortTagArrayOutputWithContext(ctx context.Context) LogicalDHCPPortTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalDHCPPortTagArrayOutput)
}

type LogicalDHCPPortTagOutput struct{ *pulumi.OutputState }

func (LogicalDHCPPortTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalDHCPPortTag)(nil)).Elem()
}

func (o LogicalDHCPPortTagOutput) ToLogicalDHCPPortTagOutput() LogicalDHCPPortTagOutput {
	return o
}

func (o LogicalDHCPPortTagOutput) ToLogicalDHCPPortTagOutputWithContext(ctx context.Context) LogicalDHCPPortTagOutput {
	return o
}

func (o LogicalDHCPPortTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalDHCPPortTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LogicalDHCPPortTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalDHCPPortTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LogicalDHCPPortTagArrayOutput struct{ *pulumi.OutputState }

func (LogicalDHCPPortTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalDHCPPortTag)(nil)).Elem()
}

func (o LogicalDHCPPortTagArrayOutput) ToLogicalDHCPPortTagArrayOutput() LogicalDHCPPortTagArrayOutput {
	return o
}

func (o LogicalDHCPPortTagArrayOutput) ToLogicalDHCPPortTagArrayOutputWithContext(ctx context.Context) LogicalDHCPPortTagArrayOutput {
	return o
}

func (o LogicalDHCPPortTagArrayOutput) Index(i pulumi.IntInput) LogicalDHCPPortTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalDHCPPortTag {
		return vs[0].([]LogicalDHCPPortTag)[vs[1].(int)]
	}).(LogicalDHCPPortTagOutput)
}

type LogicalDHCPerverDhcpGenericOption struct {
	Code   int      `pulumi:"code"`
	Values []string `pulumi:"values"`
}

// LogicalDHCPerverDhcpGenericOptionInput is an input type that accepts LogicalDHCPerverDhcpGenericOptionArgs and LogicalDHCPerverDhcpGenericOptionOutput values.
// You can construct a concrete instance of `LogicalDHCPerverDhcpGenericOptionInput` via:
//
//          LogicalDHCPerverDhcpGenericOptionArgs{...}
type LogicalDHCPerverDhcpGenericOptionInput interface {
	pulumi.Input

	ToLogicalDHCPerverDhcpGenericOptionOutput() LogicalDHCPerverDhcpGenericOptionOutput
	ToLogicalDHCPerverDhcpGenericOptionOutputWithContext(context.Context) LogicalDHCPerverDhcpGenericOptionOutput
}

type LogicalDHCPerverDhcpGenericOptionArgs struct {
	Code   pulumi.IntInput         `pulumi:"code"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (LogicalDHCPerverDhcpGenericOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalDHCPerverDhcpGenericOption)(nil)).Elem()
}

func (i LogicalDHCPerverDhcpGenericOptionArgs) ToLogicalDHCPerverDhcpGenericOptionOutput() LogicalDHCPerverDhcpGenericOptionOutput {
	return i.ToLogicalDHCPerverDhcpGenericOptionOutputWithContext(context.Background())
}

func (i LogicalDHCPerverDhcpGenericOptionArgs) ToLogicalDHCPerverDhcpGenericOptionOutputWithContext(ctx context.Context) LogicalDHCPerverDhcpGenericOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalDHCPerverDhcpGenericOptionOutput)
}

// LogicalDHCPerverDhcpGenericOptionArrayInput is an input type that accepts LogicalDHCPerverDhcpGenericOptionArray and LogicalDHCPerverDhcpGenericOptionArrayOutput values.
// You can construct a concrete instance of `LogicalDHCPerverDhcpGenericOptionArrayInput` via:
//
//          LogicalDHCPerverDhcpGenericOptionArray{ LogicalDHCPerverDhcpGenericOptionArgs{...} }
type LogicalDHCPerverDhcpGenericOptionArrayInput interface {
	pulumi.Input

	ToLogicalDHCPerverDhcpGenericOptionArrayOutput() LogicalDHCPerverDhcpGenericOptionArrayOutput
	ToLogicalDHCPerverDhcpGenericOptionArrayOutputWithContext(context.Context) LogicalDHCPerverDhcpGenericOptionArrayOutput
}

type LogicalDHCPerverDhcpGenericOptionArray []LogicalDHCPerverDhcpGenericOptionInput

func (LogicalDHCPerverDhcpGenericOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalDHCPerverDhcpGenericOption)(nil)).Elem()
}

func (i LogicalDHCPerverDhcpGenericOptionArray) ToLogicalDHCPerverDhcpGenericOptionArrayOutput() LogicalDHCPerverDhcpGenericOptionArrayOutput {
	return i.ToLogicalDHCPerverDhcpGenericOptionArrayOutputWithContext(context.Background())
}

func (i LogicalDHCPerverDhcpGenericOptionArray) ToLogicalDHCPerverDhcpGenericOptionArrayOutputWithContext(ctx context.Context) LogicalDHCPerverDhcpGenericOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalDHCPerverDhcpGenericOptionArrayOutput)
}

type LogicalDHCPerverDhcpGenericOptionOutput struct{ *pulumi.OutputState }

func (LogicalDHCPerverDhcpGenericOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalDHCPerverDhcpGenericOption)(nil)).Elem()
}

func (o LogicalDHCPerverDhcpGenericOptionOutput) ToLogicalDHCPerverDhcpGenericOptionOutput() LogicalDHCPerverDhcpGenericOptionOutput {
	return o
}

func (o LogicalDHCPerverDhcpGenericOptionOutput) ToLogicalDHCPerverDhcpGenericOptionOutputWithContext(ctx context.Context) LogicalDHCPerverDhcpGenericOptionOutput {
	return o
}

func (o LogicalDHCPerverDhcpGenericOptionOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v LogicalDHCPerverDhcpGenericOption) int { return v.Code }).(pulumi.IntOutput)
}

func (o LogicalDHCPerverDhcpGenericOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogicalDHCPerverDhcpGenericOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type LogicalDHCPerverDhcpGenericOptionArrayOutput struct{ *pulumi.OutputState }

func (LogicalDHCPerverDhcpGenericOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalDHCPerverDhcpGenericOption)(nil)).Elem()
}

func (o LogicalDHCPerverDhcpGenericOptionArrayOutput) ToLogicalDHCPerverDhcpGenericOptionArrayOutput() LogicalDHCPerverDhcpGenericOptionArrayOutput {
	return o
}

func (o LogicalDHCPerverDhcpGenericOptionArrayOutput) ToLogicalDHCPerverDhcpGenericOptionArrayOutputWithContext(ctx context.Context) LogicalDHCPerverDhcpGenericOptionArrayOutput {
	return o
}

func (o LogicalDHCPerverDhcpGenericOptionArrayOutput) Index(i pulumi.IntInput) LogicalDHCPerverDhcpGenericOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalDHCPerverDhcpGenericOption {
		return vs[0].([]LogicalDHCPerverDhcpGenericOption)[vs[1].(int)]
	}).(LogicalDHCPerverDhcpGenericOptionOutput)
}

type LogicalDHCPerverDhcpOption121 struct {
	Network string `pulumi:"network"`
	NextHop string `pulumi:"nextHop"`
}

// LogicalDHCPerverDhcpOption121Input is an input type that accepts LogicalDHCPerverDhcpOption121Args and LogicalDHCPerverDhcpOption121Output values.
// You can construct a concrete instance of `LogicalDHCPerverDhcpOption121Input` via:
//
//          LogicalDHCPerverDhcpOption121Args{...}
type LogicalDHCPerverDhcpOption121Input interface {
	pulumi.Input

	ToLogicalDHCPerverDhcpOption121Output() LogicalDHCPerverDhcpOption121Output
	ToLogicalDHCPerverDhcpOption121OutputWithContext(context.Context) LogicalDHCPerverDhcpOption121Output
}

type LogicalDHCPerverDhcpOption121Args struct {
	Network pulumi.StringInput `pulumi:"network"`
	NextHop pulumi.StringInput `pulumi:"nextHop"`
}

func (LogicalDHCPerverDhcpOption121Args) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalDHCPerverDhcpOption121)(nil)).Elem()
}

func (i LogicalDHCPerverDhcpOption121Args) ToLogicalDHCPerverDhcpOption121Output() LogicalDHCPerverDhcpOption121Output {
	return i.ToLogicalDHCPerverDhcpOption121OutputWithContext(context.Background())
}

func (i LogicalDHCPerverDhcpOption121Args) ToLogicalDHCPerverDhcpOption121OutputWithContext(ctx context.Context) LogicalDHCPerverDhcpOption121Output {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalDHCPerverDhcpOption121Output)
}

// LogicalDHCPerverDhcpOption121ArrayInput is an input type that accepts LogicalDHCPerverDhcpOption121Array and LogicalDHCPerverDhcpOption121ArrayOutput values.
// You can construct a concrete instance of `LogicalDHCPerverDhcpOption121ArrayInput` via:
//
//          LogicalDHCPerverDhcpOption121Array{ LogicalDHCPerverDhcpOption121Args{...} }
type LogicalDHCPerverDhcpOption121ArrayInput interface {
	pulumi.Input

	ToLogicalDHCPerverDhcpOption121ArrayOutput() LogicalDHCPerverDhcpOption121ArrayOutput
	ToLogicalDHCPerverDhcpOption121ArrayOutputWithContext(context.Context) LogicalDHCPerverDhcpOption121ArrayOutput
}

type LogicalDHCPerverDhcpOption121Array []LogicalDHCPerverDhcpOption121Input

func (LogicalDHCPerverDhcpOption121Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalDHCPerverDhcpOption121)(nil)).Elem()
}

func (i LogicalDHCPerverDhcpOption121Array) ToLogicalDHCPerverDhcpOption121ArrayOutput() LogicalDHCPerverDhcpOption121ArrayOutput {
	return i.ToLogicalDHCPerverDhcpOption121ArrayOutputWithContext(context.Background())
}

func (i LogicalDHCPerverDhcpOption121Array) ToLogicalDHCPerverDhcpOption121ArrayOutputWithContext(ctx context.Context) LogicalDHCPerverDhcpOption121ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalDHCPerverDhcpOption121ArrayOutput)
}

type LogicalDHCPerverDhcpOption121Output struct{ *pulumi.OutputState }

func (LogicalDHCPerverDhcpOption121Output) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalDHCPerverDhcpOption121)(nil)).Elem()
}

func (o LogicalDHCPerverDhcpOption121Output) ToLogicalDHCPerverDhcpOption121Output() LogicalDHCPerverDhcpOption121Output {
	return o
}

func (o LogicalDHCPerverDhcpOption121Output) ToLogicalDHCPerverDhcpOption121OutputWithContext(ctx context.Context) LogicalDHCPerverDhcpOption121Output {
	return o
}

func (o LogicalDHCPerverDhcpOption121Output) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LogicalDHCPerverDhcpOption121) string { return v.Network }).(pulumi.StringOutput)
}

func (o LogicalDHCPerverDhcpOption121Output) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v LogicalDHCPerverDhcpOption121) string { return v.NextHop }).(pulumi.StringOutput)
}

type LogicalDHCPerverDhcpOption121ArrayOutput struct{ *pulumi.OutputState }

func (LogicalDHCPerverDhcpOption121ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalDHCPerverDhcpOption121)(nil)).Elem()
}

func (o LogicalDHCPerverDhcpOption121ArrayOutput) ToLogicalDHCPerverDhcpOption121ArrayOutput() LogicalDHCPerverDhcpOption121ArrayOutput {
	return o
}

func (o LogicalDHCPerverDhcpOption121ArrayOutput) ToLogicalDHCPerverDhcpOption121ArrayOutputWithContext(ctx context.Context) LogicalDHCPerverDhcpOption121ArrayOutput {
	return o
}

func (o LogicalDHCPerverDhcpOption121ArrayOutput) Index(i pulumi.IntInput) LogicalDHCPerverDhcpOption121Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalDHCPerverDhcpOption121 {
		return vs[0].([]LogicalDHCPerverDhcpOption121)[vs[1].(int)]
	}).(LogicalDHCPerverDhcpOption121Output)
}

type LogicalDHCPerverTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LogicalDHCPerverTagInput is an input type that accepts LogicalDHCPerverTagArgs and LogicalDHCPerverTagOutput values.
// You can construct a concrete instance of `LogicalDHCPerverTagInput` via:
//
//          LogicalDHCPerverTagArgs{...}
type LogicalDHCPerverTagInput interface {
	pulumi.Input

	ToLogicalDHCPerverTagOutput() LogicalDHCPerverTagOutput
	ToLogicalDHCPerverTagOutputWithContext(context.Context) LogicalDHCPerverTagOutput
}

type LogicalDHCPerverTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LogicalDHCPerverTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalDHCPerverTag)(nil)).Elem()
}

func (i LogicalDHCPerverTagArgs) ToLogicalDHCPerverTagOutput() LogicalDHCPerverTagOutput {
	return i.ToLogicalDHCPerverTagOutputWithContext(context.Background())
}

func (i LogicalDHCPerverTagArgs) ToLogicalDHCPerverTagOutputWithContext(ctx context.Context) LogicalDHCPerverTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalDHCPerverTagOutput)
}

// LogicalDHCPerverTagArrayInput is an input type that accepts LogicalDHCPerverTagArray and LogicalDHCPerverTagArrayOutput values.
// You can construct a concrete instance of `LogicalDHCPerverTagArrayInput` via:
//
//          LogicalDHCPerverTagArray{ LogicalDHCPerverTagArgs{...} }
type LogicalDHCPerverTagArrayInput interface {
	pulumi.Input

	ToLogicalDHCPerverTagArrayOutput() LogicalDHCPerverTagArrayOutput
	ToLogicalDHCPerverTagArrayOutputWithContext(context.Context) LogicalDHCPerverTagArrayOutput
}

type LogicalDHCPerverTagArray []LogicalDHCPerverTagInput

func (LogicalDHCPerverTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalDHCPerverTag)(nil)).Elem()
}

func (i LogicalDHCPerverTagArray) ToLogicalDHCPerverTagArrayOutput() LogicalDHCPerverTagArrayOutput {
	return i.ToLogicalDHCPerverTagArrayOutputWithContext(context.Background())
}

func (i LogicalDHCPerverTagArray) ToLogicalDHCPerverTagArrayOutputWithContext(ctx context.Context) LogicalDHCPerverTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalDHCPerverTagArrayOutput)
}

type LogicalDHCPerverTagOutput struct{ *pulumi.OutputState }

func (LogicalDHCPerverTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalDHCPerverTag)(nil)).Elem()
}

func (o LogicalDHCPerverTagOutput) ToLogicalDHCPerverTagOutput() LogicalDHCPerverTagOutput {
	return o
}

func (o LogicalDHCPerverTagOutput) ToLogicalDHCPerverTagOutputWithContext(ctx context.Context) LogicalDHCPerverTagOutput {
	return o
}

func (o LogicalDHCPerverTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalDHCPerverTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LogicalDHCPerverTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalDHCPerverTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LogicalDHCPerverTagArrayOutput struct{ *pulumi.OutputState }

func (LogicalDHCPerverTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalDHCPerverTag)(nil)).Elem()
}

func (o LogicalDHCPerverTagArrayOutput) ToLogicalDHCPerverTagArrayOutput() LogicalDHCPerverTagArrayOutput {
	return o
}

func (o LogicalDHCPerverTagArrayOutput) ToLogicalDHCPerverTagArrayOutputWithContext(ctx context.Context) LogicalDHCPerverTagArrayOutput {
	return o
}

func (o LogicalDHCPerverTagArrayOutput) Index(i pulumi.IntInput) LogicalDHCPerverTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalDHCPerverTag {
		return vs[0].([]LogicalDHCPerverTag)[vs[1].(int)]
	}).(LogicalDHCPerverTagOutput)
}

type LogicalPortSwitchingProfileId struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// LogicalPortSwitchingProfileIdInput is an input type that accepts LogicalPortSwitchingProfileIdArgs and LogicalPortSwitchingProfileIdOutput values.
// You can construct a concrete instance of `LogicalPortSwitchingProfileIdInput` via:
//
//          LogicalPortSwitchingProfileIdArgs{...}
type LogicalPortSwitchingProfileIdInput interface {
	pulumi.Input

	ToLogicalPortSwitchingProfileIdOutput() LogicalPortSwitchingProfileIdOutput
	ToLogicalPortSwitchingProfileIdOutputWithContext(context.Context) LogicalPortSwitchingProfileIdOutput
}

type LogicalPortSwitchingProfileIdArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (LogicalPortSwitchingProfileIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalPortSwitchingProfileId)(nil)).Elem()
}

func (i LogicalPortSwitchingProfileIdArgs) ToLogicalPortSwitchingProfileIdOutput() LogicalPortSwitchingProfileIdOutput {
	return i.ToLogicalPortSwitchingProfileIdOutputWithContext(context.Background())
}

func (i LogicalPortSwitchingProfileIdArgs) ToLogicalPortSwitchingProfileIdOutputWithContext(ctx context.Context) LogicalPortSwitchingProfileIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalPortSwitchingProfileIdOutput)
}

// LogicalPortSwitchingProfileIdArrayInput is an input type that accepts LogicalPortSwitchingProfileIdArray and LogicalPortSwitchingProfileIdArrayOutput values.
// You can construct a concrete instance of `LogicalPortSwitchingProfileIdArrayInput` via:
//
//          LogicalPortSwitchingProfileIdArray{ LogicalPortSwitchingProfileIdArgs{...} }
type LogicalPortSwitchingProfileIdArrayInput interface {
	pulumi.Input

	ToLogicalPortSwitchingProfileIdArrayOutput() LogicalPortSwitchingProfileIdArrayOutput
	ToLogicalPortSwitchingProfileIdArrayOutputWithContext(context.Context) LogicalPortSwitchingProfileIdArrayOutput
}

type LogicalPortSwitchingProfileIdArray []LogicalPortSwitchingProfileIdInput

func (LogicalPortSwitchingProfileIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalPortSwitchingProfileId)(nil)).Elem()
}

func (i LogicalPortSwitchingProfileIdArray) ToLogicalPortSwitchingProfileIdArrayOutput() LogicalPortSwitchingProfileIdArrayOutput {
	return i.ToLogicalPortSwitchingProfileIdArrayOutputWithContext(context.Background())
}

func (i LogicalPortSwitchingProfileIdArray) ToLogicalPortSwitchingProfileIdArrayOutputWithContext(ctx context.Context) LogicalPortSwitchingProfileIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalPortSwitchingProfileIdArrayOutput)
}

type LogicalPortSwitchingProfileIdOutput struct{ *pulumi.OutputState }

func (LogicalPortSwitchingProfileIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalPortSwitchingProfileId)(nil)).Elem()
}

func (o LogicalPortSwitchingProfileIdOutput) ToLogicalPortSwitchingProfileIdOutput() LogicalPortSwitchingProfileIdOutput {
	return o
}

func (o LogicalPortSwitchingProfileIdOutput) ToLogicalPortSwitchingProfileIdOutputWithContext(ctx context.Context) LogicalPortSwitchingProfileIdOutput {
	return o
}

func (o LogicalPortSwitchingProfileIdOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LogicalPortSwitchingProfileId) string { return v.Key }).(pulumi.StringOutput)
}

func (o LogicalPortSwitchingProfileIdOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LogicalPortSwitchingProfileId) string { return v.Value }).(pulumi.StringOutput)
}

type LogicalPortSwitchingProfileIdArrayOutput struct{ *pulumi.OutputState }

func (LogicalPortSwitchingProfileIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalPortSwitchingProfileId)(nil)).Elem()
}

func (o LogicalPortSwitchingProfileIdArrayOutput) ToLogicalPortSwitchingProfileIdArrayOutput() LogicalPortSwitchingProfileIdArrayOutput {
	return o
}

func (o LogicalPortSwitchingProfileIdArrayOutput) ToLogicalPortSwitchingProfileIdArrayOutputWithContext(ctx context.Context) LogicalPortSwitchingProfileIdArrayOutput {
	return o
}

func (o LogicalPortSwitchingProfileIdArrayOutput) Index(i pulumi.IntInput) LogicalPortSwitchingProfileIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalPortSwitchingProfileId {
		return vs[0].([]LogicalPortSwitchingProfileId)[vs[1].(int)]
	}).(LogicalPortSwitchingProfileIdOutput)
}

type LogicalPortTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LogicalPortTagInput is an input type that accepts LogicalPortTagArgs and LogicalPortTagOutput values.
// You can construct a concrete instance of `LogicalPortTagInput` via:
//
//          LogicalPortTagArgs{...}
type LogicalPortTagInput interface {
	pulumi.Input

	ToLogicalPortTagOutput() LogicalPortTagOutput
	ToLogicalPortTagOutputWithContext(context.Context) LogicalPortTagOutput
}

type LogicalPortTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LogicalPortTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalPortTag)(nil)).Elem()
}

func (i LogicalPortTagArgs) ToLogicalPortTagOutput() LogicalPortTagOutput {
	return i.ToLogicalPortTagOutputWithContext(context.Background())
}

func (i LogicalPortTagArgs) ToLogicalPortTagOutputWithContext(ctx context.Context) LogicalPortTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalPortTagOutput)
}

// LogicalPortTagArrayInput is an input type that accepts LogicalPortTagArray and LogicalPortTagArrayOutput values.
// You can construct a concrete instance of `LogicalPortTagArrayInput` via:
//
//          LogicalPortTagArray{ LogicalPortTagArgs{...} }
type LogicalPortTagArrayInput interface {
	pulumi.Input

	ToLogicalPortTagArrayOutput() LogicalPortTagArrayOutput
	ToLogicalPortTagArrayOutputWithContext(context.Context) LogicalPortTagArrayOutput
}

type LogicalPortTagArray []LogicalPortTagInput

func (LogicalPortTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalPortTag)(nil)).Elem()
}

func (i LogicalPortTagArray) ToLogicalPortTagArrayOutput() LogicalPortTagArrayOutput {
	return i.ToLogicalPortTagArrayOutputWithContext(context.Background())
}

func (i LogicalPortTagArray) ToLogicalPortTagArrayOutputWithContext(ctx context.Context) LogicalPortTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalPortTagArrayOutput)
}

type LogicalPortTagOutput struct{ *pulumi.OutputState }

func (LogicalPortTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalPortTag)(nil)).Elem()
}

func (o LogicalPortTagOutput) ToLogicalPortTagOutput() LogicalPortTagOutput {
	return o
}

func (o LogicalPortTagOutput) ToLogicalPortTagOutputWithContext(ctx context.Context) LogicalPortTagOutput {
	return o
}

func (o LogicalPortTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalPortTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LogicalPortTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalPortTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LogicalPortTagArrayOutput struct{ *pulumi.OutputState }

func (LogicalPortTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalPortTag)(nil)).Elem()
}

func (o LogicalPortTagArrayOutput) ToLogicalPortTagArrayOutput() LogicalPortTagArrayOutput {
	return o
}

func (o LogicalPortTagArrayOutput) ToLogicalPortTagArrayOutputWithContext(ctx context.Context) LogicalPortTagArrayOutput {
	return o
}

func (o LogicalPortTagArrayOutput) Index(i pulumi.IntInput) LogicalPortTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalPortTag {
		return vs[0].([]LogicalPortTag)[vs[1].(int)]
	}).(LogicalPortTagOutput)
}

type LogicalRouterCentralizedServicePortTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LogicalRouterCentralizedServicePortTagInput is an input type that accepts LogicalRouterCentralizedServicePortTagArgs and LogicalRouterCentralizedServicePortTagOutput values.
// You can construct a concrete instance of `LogicalRouterCentralizedServicePortTagInput` via:
//
//          LogicalRouterCentralizedServicePortTagArgs{...}
type LogicalRouterCentralizedServicePortTagInput interface {
	pulumi.Input

	ToLogicalRouterCentralizedServicePortTagOutput() LogicalRouterCentralizedServicePortTagOutput
	ToLogicalRouterCentralizedServicePortTagOutputWithContext(context.Context) LogicalRouterCentralizedServicePortTagOutput
}

type LogicalRouterCentralizedServicePortTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LogicalRouterCentralizedServicePortTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalRouterCentralizedServicePortTag)(nil)).Elem()
}

func (i LogicalRouterCentralizedServicePortTagArgs) ToLogicalRouterCentralizedServicePortTagOutput() LogicalRouterCentralizedServicePortTagOutput {
	return i.ToLogicalRouterCentralizedServicePortTagOutputWithContext(context.Background())
}

func (i LogicalRouterCentralizedServicePortTagArgs) ToLogicalRouterCentralizedServicePortTagOutputWithContext(ctx context.Context) LogicalRouterCentralizedServicePortTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalRouterCentralizedServicePortTagOutput)
}

// LogicalRouterCentralizedServicePortTagArrayInput is an input type that accepts LogicalRouterCentralizedServicePortTagArray and LogicalRouterCentralizedServicePortTagArrayOutput values.
// You can construct a concrete instance of `LogicalRouterCentralizedServicePortTagArrayInput` via:
//
//          LogicalRouterCentralizedServicePortTagArray{ LogicalRouterCentralizedServicePortTagArgs{...} }
type LogicalRouterCentralizedServicePortTagArrayInput interface {
	pulumi.Input

	ToLogicalRouterCentralizedServicePortTagArrayOutput() LogicalRouterCentralizedServicePortTagArrayOutput
	ToLogicalRouterCentralizedServicePortTagArrayOutputWithContext(context.Context) LogicalRouterCentralizedServicePortTagArrayOutput
}

type LogicalRouterCentralizedServicePortTagArray []LogicalRouterCentralizedServicePortTagInput

func (LogicalRouterCentralizedServicePortTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalRouterCentralizedServicePortTag)(nil)).Elem()
}

func (i LogicalRouterCentralizedServicePortTagArray) ToLogicalRouterCentralizedServicePortTagArrayOutput() LogicalRouterCentralizedServicePortTagArrayOutput {
	return i.ToLogicalRouterCentralizedServicePortTagArrayOutputWithContext(context.Background())
}

func (i LogicalRouterCentralizedServicePortTagArray) ToLogicalRouterCentralizedServicePortTagArrayOutputWithContext(ctx context.Context) LogicalRouterCentralizedServicePortTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalRouterCentralizedServicePortTagArrayOutput)
}

type LogicalRouterCentralizedServicePortTagOutput struct{ *pulumi.OutputState }

func (LogicalRouterCentralizedServicePortTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalRouterCentralizedServicePortTag)(nil)).Elem()
}

func (o LogicalRouterCentralizedServicePortTagOutput) ToLogicalRouterCentralizedServicePortTagOutput() LogicalRouterCentralizedServicePortTagOutput {
	return o
}

func (o LogicalRouterCentralizedServicePortTagOutput) ToLogicalRouterCentralizedServicePortTagOutputWithContext(ctx context.Context) LogicalRouterCentralizedServicePortTagOutput {
	return o
}

func (o LogicalRouterCentralizedServicePortTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterCentralizedServicePortTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LogicalRouterCentralizedServicePortTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterCentralizedServicePortTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LogicalRouterCentralizedServicePortTagArrayOutput struct{ *pulumi.OutputState }

func (LogicalRouterCentralizedServicePortTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalRouterCentralizedServicePortTag)(nil)).Elem()
}

func (o LogicalRouterCentralizedServicePortTagArrayOutput) ToLogicalRouterCentralizedServicePortTagArrayOutput() LogicalRouterCentralizedServicePortTagArrayOutput {
	return o
}

func (o LogicalRouterCentralizedServicePortTagArrayOutput) ToLogicalRouterCentralizedServicePortTagArrayOutputWithContext(ctx context.Context) LogicalRouterCentralizedServicePortTagArrayOutput {
	return o
}

func (o LogicalRouterCentralizedServicePortTagArrayOutput) Index(i pulumi.IntInput) LogicalRouterCentralizedServicePortTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalRouterCentralizedServicePortTag {
		return vs[0].([]LogicalRouterCentralizedServicePortTag)[vs[1].(int)]
	}).(LogicalRouterCentralizedServicePortTagOutput)
}

type LogicalRouterDownlinkPortServiceBinding struct {
	IsValid           *bool   `pulumi:"isValid"`
	TargetDisplayName *string `pulumi:"targetDisplayName"`
	TargetId          *string `pulumi:"targetId"`
	TargetType        *string `pulumi:"targetType"`
}

// LogicalRouterDownlinkPortServiceBindingInput is an input type that accepts LogicalRouterDownlinkPortServiceBindingArgs and LogicalRouterDownlinkPortServiceBindingOutput values.
// You can construct a concrete instance of `LogicalRouterDownlinkPortServiceBindingInput` via:
//
//          LogicalRouterDownlinkPortServiceBindingArgs{...}
type LogicalRouterDownlinkPortServiceBindingInput interface {
	pulumi.Input

	ToLogicalRouterDownlinkPortServiceBindingOutput() LogicalRouterDownlinkPortServiceBindingOutput
	ToLogicalRouterDownlinkPortServiceBindingOutputWithContext(context.Context) LogicalRouterDownlinkPortServiceBindingOutput
}

type LogicalRouterDownlinkPortServiceBindingArgs struct {
	IsValid           pulumi.BoolPtrInput   `pulumi:"isValid"`
	TargetDisplayName pulumi.StringPtrInput `pulumi:"targetDisplayName"`
	TargetId          pulumi.StringPtrInput `pulumi:"targetId"`
	TargetType        pulumi.StringPtrInput `pulumi:"targetType"`
}

func (LogicalRouterDownlinkPortServiceBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalRouterDownlinkPortServiceBinding)(nil)).Elem()
}

func (i LogicalRouterDownlinkPortServiceBindingArgs) ToLogicalRouterDownlinkPortServiceBindingOutput() LogicalRouterDownlinkPortServiceBindingOutput {
	return i.ToLogicalRouterDownlinkPortServiceBindingOutputWithContext(context.Background())
}

func (i LogicalRouterDownlinkPortServiceBindingArgs) ToLogicalRouterDownlinkPortServiceBindingOutputWithContext(ctx context.Context) LogicalRouterDownlinkPortServiceBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalRouterDownlinkPortServiceBindingOutput)
}

// LogicalRouterDownlinkPortServiceBindingArrayInput is an input type that accepts LogicalRouterDownlinkPortServiceBindingArray and LogicalRouterDownlinkPortServiceBindingArrayOutput values.
// You can construct a concrete instance of `LogicalRouterDownlinkPortServiceBindingArrayInput` via:
//
//          LogicalRouterDownlinkPortServiceBindingArray{ LogicalRouterDownlinkPortServiceBindingArgs{...} }
type LogicalRouterDownlinkPortServiceBindingArrayInput interface {
	pulumi.Input

	ToLogicalRouterDownlinkPortServiceBindingArrayOutput() LogicalRouterDownlinkPortServiceBindingArrayOutput
	ToLogicalRouterDownlinkPortServiceBindingArrayOutputWithContext(context.Context) LogicalRouterDownlinkPortServiceBindingArrayOutput
}

type LogicalRouterDownlinkPortServiceBindingArray []LogicalRouterDownlinkPortServiceBindingInput

func (LogicalRouterDownlinkPortServiceBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalRouterDownlinkPortServiceBinding)(nil)).Elem()
}

func (i LogicalRouterDownlinkPortServiceBindingArray) ToLogicalRouterDownlinkPortServiceBindingArrayOutput() LogicalRouterDownlinkPortServiceBindingArrayOutput {
	return i.ToLogicalRouterDownlinkPortServiceBindingArrayOutputWithContext(context.Background())
}

func (i LogicalRouterDownlinkPortServiceBindingArray) ToLogicalRouterDownlinkPortServiceBindingArrayOutputWithContext(ctx context.Context) LogicalRouterDownlinkPortServiceBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalRouterDownlinkPortServiceBindingArrayOutput)
}

type LogicalRouterDownlinkPortServiceBindingOutput struct{ *pulumi.OutputState }

func (LogicalRouterDownlinkPortServiceBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalRouterDownlinkPortServiceBinding)(nil)).Elem()
}

func (o LogicalRouterDownlinkPortServiceBindingOutput) ToLogicalRouterDownlinkPortServiceBindingOutput() LogicalRouterDownlinkPortServiceBindingOutput {
	return o
}

func (o LogicalRouterDownlinkPortServiceBindingOutput) ToLogicalRouterDownlinkPortServiceBindingOutputWithContext(ctx context.Context) LogicalRouterDownlinkPortServiceBindingOutput {
	return o
}

func (o LogicalRouterDownlinkPortServiceBindingOutput) IsValid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogicalRouterDownlinkPortServiceBinding) *bool { return v.IsValid }).(pulumi.BoolPtrOutput)
}

func (o LogicalRouterDownlinkPortServiceBindingOutput) TargetDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterDownlinkPortServiceBinding) *string { return v.TargetDisplayName }).(pulumi.StringPtrOutput)
}

func (o LogicalRouterDownlinkPortServiceBindingOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterDownlinkPortServiceBinding) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o LogicalRouterDownlinkPortServiceBindingOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterDownlinkPortServiceBinding) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type LogicalRouterDownlinkPortServiceBindingArrayOutput struct{ *pulumi.OutputState }

func (LogicalRouterDownlinkPortServiceBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalRouterDownlinkPortServiceBinding)(nil)).Elem()
}

func (o LogicalRouterDownlinkPortServiceBindingArrayOutput) ToLogicalRouterDownlinkPortServiceBindingArrayOutput() LogicalRouterDownlinkPortServiceBindingArrayOutput {
	return o
}

func (o LogicalRouterDownlinkPortServiceBindingArrayOutput) ToLogicalRouterDownlinkPortServiceBindingArrayOutputWithContext(ctx context.Context) LogicalRouterDownlinkPortServiceBindingArrayOutput {
	return o
}

func (o LogicalRouterDownlinkPortServiceBindingArrayOutput) Index(i pulumi.IntInput) LogicalRouterDownlinkPortServiceBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalRouterDownlinkPortServiceBinding {
		return vs[0].([]LogicalRouterDownlinkPortServiceBinding)[vs[1].(int)]
	}).(LogicalRouterDownlinkPortServiceBindingOutput)
}

type LogicalRouterDownlinkPortTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LogicalRouterDownlinkPortTagInput is an input type that accepts LogicalRouterDownlinkPortTagArgs and LogicalRouterDownlinkPortTagOutput values.
// You can construct a concrete instance of `LogicalRouterDownlinkPortTagInput` via:
//
//          LogicalRouterDownlinkPortTagArgs{...}
type LogicalRouterDownlinkPortTagInput interface {
	pulumi.Input

	ToLogicalRouterDownlinkPortTagOutput() LogicalRouterDownlinkPortTagOutput
	ToLogicalRouterDownlinkPortTagOutputWithContext(context.Context) LogicalRouterDownlinkPortTagOutput
}

type LogicalRouterDownlinkPortTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LogicalRouterDownlinkPortTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalRouterDownlinkPortTag)(nil)).Elem()
}

func (i LogicalRouterDownlinkPortTagArgs) ToLogicalRouterDownlinkPortTagOutput() LogicalRouterDownlinkPortTagOutput {
	return i.ToLogicalRouterDownlinkPortTagOutputWithContext(context.Background())
}

func (i LogicalRouterDownlinkPortTagArgs) ToLogicalRouterDownlinkPortTagOutputWithContext(ctx context.Context) LogicalRouterDownlinkPortTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalRouterDownlinkPortTagOutput)
}

// LogicalRouterDownlinkPortTagArrayInput is an input type that accepts LogicalRouterDownlinkPortTagArray and LogicalRouterDownlinkPortTagArrayOutput values.
// You can construct a concrete instance of `LogicalRouterDownlinkPortTagArrayInput` via:
//
//          LogicalRouterDownlinkPortTagArray{ LogicalRouterDownlinkPortTagArgs{...} }
type LogicalRouterDownlinkPortTagArrayInput interface {
	pulumi.Input

	ToLogicalRouterDownlinkPortTagArrayOutput() LogicalRouterDownlinkPortTagArrayOutput
	ToLogicalRouterDownlinkPortTagArrayOutputWithContext(context.Context) LogicalRouterDownlinkPortTagArrayOutput
}

type LogicalRouterDownlinkPortTagArray []LogicalRouterDownlinkPortTagInput

func (LogicalRouterDownlinkPortTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalRouterDownlinkPortTag)(nil)).Elem()
}

func (i LogicalRouterDownlinkPortTagArray) ToLogicalRouterDownlinkPortTagArrayOutput() LogicalRouterDownlinkPortTagArrayOutput {
	return i.ToLogicalRouterDownlinkPortTagArrayOutputWithContext(context.Background())
}

func (i LogicalRouterDownlinkPortTagArray) ToLogicalRouterDownlinkPortTagArrayOutputWithContext(ctx context.Context) LogicalRouterDownlinkPortTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalRouterDownlinkPortTagArrayOutput)
}

type LogicalRouterDownlinkPortTagOutput struct{ *pulumi.OutputState }

func (LogicalRouterDownlinkPortTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalRouterDownlinkPortTag)(nil)).Elem()
}

func (o LogicalRouterDownlinkPortTagOutput) ToLogicalRouterDownlinkPortTagOutput() LogicalRouterDownlinkPortTagOutput {
	return o
}

func (o LogicalRouterDownlinkPortTagOutput) ToLogicalRouterDownlinkPortTagOutputWithContext(ctx context.Context) LogicalRouterDownlinkPortTagOutput {
	return o
}

func (o LogicalRouterDownlinkPortTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterDownlinkPortTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LogicalRouterDownlinkPortTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterDownlinkPortTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LogicalRouterDownlinkPortTagArrayOutput struct{ *pulumi.OutputState }

func (LogicalRouterDownlinkPortTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalRouterDownlinkPortTag)(nil)).Elem()
}

func (o LogicalRouterDownlinkPortTagArrayOutput) ToLogicalRouterDownlinkPortTagArrayOutput() LogicalRouterDownlinkPortTagArrayOutput {
	return o
}

func (o LogicalRouterDownlinkPortTagArrayOutput) ToLogicalRouterDownlinkPortTagArrayOutputWithContext(ctx context.Context) LogicalRouterDownlinkPortTagArrayOutput {
	return o
}

func (o LogicalRouterDownlinkPortTagArrayOutput) Index(i pulumi.IntInput) LogicalRouterDownlinkPortTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalRouterDownlinkPortTag {
		return vs[0].([]LogicalRouterDownlinkPortTag)[vs[1].(int)]
	}).(LogicalRouterDownlinkPortTagOutput)
}

type LogicalRouterLinkPortOnTier0Tag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LogicalRouterLinkPortOnTier0TagInput is an input type that accepts LogicalRouterLinkPortOnTier0TagArgs and LogicalRouterLinkPortOnTier0TagOutput values.
// You can construct a concrete instance of `LogicalRouterLinkPortOnTier0TagInput` via:
//
//          LogicalRouterLinkPortOnTier0TagArgs{...}
type LogicalRouterLinkPortOnTier0TagInput interface {
	pulumi.Input

	ToLogicalRouterLinkPortOnTier0TagOutput() LogicalRouterLinkPortOnTier0TagOutput
	ToLogicalRouterLinkPortOnTier0TagOutputWithContext(context.Context) LogicalRouterLinkPortOnTier0TagOutput
}

type LogicalRouterLinkPortOnTier0TagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LogicalRouterLinkPortOnTier0TagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalRouterLinkPortOnTier0Tag)(nil)).Elem()
}

func (i LogicalRouterLinkPortOnTier0TagArgs) ToLogicalRouterLinkPortOnTier0TagOutput() LogicalRouterLinkPortOnTier0TagOutput {
	return i.ToLogicalRouterLinkPortOnTier0TagOutputWithContext(context.Background())
}

func (i LogicalRouterLinkPortOnTier0TagArgs) ToLogicalRouterLinkPortOnTier0TagOutputWithContext(ctx context.Context) LogicalRouterLinkPortOnTier0TagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalRouterLinkPortOnTier0TagOutput)
}

// LogicalRouterLinkPortOnTier0TagArrayInput is an input type that accepts LogicalRouterLinkPortOnTier0TagArray and LogicalRouterLinkPortOnTier0TagArrayOutput values.
// You can construct a concrete instance of `LogicalRouterLinkPortOnTier0TagArrayInput` via:
//
//          LogicalRouterLinkPortOnTier0TagArray{ LogicalRouterLinkPortOnTier0TagArgs{...} }
type LogicalRouterLinkPortOnTier0TagArrayInput interface {
	pulumi.Input

	ToLogicalRouterLinkPortOnTier0TagArrayOutput() LogicalRouterLinkPortOnTier0TagArrayOutput
	ToLogicalRouterLinkPortOnTier0TagArrayOutputWithContext(context.Context) LogicalRouterLinkPortOnTier0TagArrayOutput
}

type LogicalRouterLinkPortOnTier0TagArray []LogicalRouterLinkPortOnTier0TagInput

func (LogicalRouterLinkPortOnTier0TagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalRouterLinkPortOnTier0Tag)(nil)).Elem()
}

func (i LogicalRouterLinkPortOnTier0TagArray) ToLogicalRouterLinkPortOnTier0TagArrayOutput() LogicalRouterLinkPortOnTier0TagArrayOutput {
	return i.ToLogicalRouterLinkPortOnTier0TagArrayOutputWithContext(context.Background())
}

func (i LogicalRouterLinkPortOnTier0TagArray) ToLogicalRouterLinkPortOnTier0TagArrayOutputWithContext(ctx context.Context) LogicalRouterLinkPortOnTier0TagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalRouterLinkPortOnTier0TagArrayOutput)
}

type LogicalRouterLinkPortOnTier0TagOutput struct{ *pulumi.OutputState }

func (LogicalRouterLinkPortOnTier0TagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalRouterLinkPortOnTier0Tag)(nil)).Elem()
}

func (o LogicalRouterLinkPortOnTier0TagOutput) ToLogicalRouterLinkPortOnTier0TagOutput() LogicalRouterLinkPortOnTier0TagOutput {
	return o
}

func (o LogicalRouterLinkPortOnTier0TagOutput) ToLogicalRouterLinkPortOnTier0TagOutputWithContext(ctx context.Context) LogicalRouterLinkPortOnTier0TagOutput {
	return o
}

func (o LogicalRouterLinkPortOnTier0TagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterLinkPortOnTier0Tag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LogicalRouterLinkPortOnTier0TagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterLinkPortOnTier0Tag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LogicalRouterLinkPortOnTier0TagArrayOutput struct{ *pulumi.OutputState }

func (LogicalRouterLinkPortOnTier0TagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalRouterLinkPortOnTier0Tag)(nil)).Elem()
}

func (o LogicalRouterLinkPortOnTier0TagArrayOutput) ToLogicalRouterLinkPortOnTier0TagArrayOutput() LogicalRouterLinkPortOnTier0TagArrayOutput {
	return o
}

func (o LogicalRouterLinkPortOnTier0TagArrayOutput) ToLogicalRouterLinkPortOnTier0TagArrayOutputWithContext(ctx context.Context) LogicalRouterLinkPortOnTier0TagArrayOutput {
	return o
}

func (o LogicalRouterLinkPortOnTier0TagArrayOutput) Index(i pulumi.IntInput) LogicalRouterLinkPortOnTier0TagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalRouterLinkPortOnTier0Tag {
		return vs[0].([]LogicalRouterLinkPortOnTier0Tag)[vs[1].(int)]
	}).(LogicalRouterLinkPortOnTier0TagOutput)
}

type LogicalRouterLinkPortOnTier1Tag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LogicalRouterLinkPortOnTier1TagInput is an input type that accepts LogicalRouterLinkPortOnTier1TagArgs and LogicalRouterLinkPortOnTier1TagOutput values.
// You can construct a concrete instance of `LogicalRouterLinkPortOnTier1TagInput` via:
//
//          LogicalRouterLinkPortOnTier1TagArgs{...}
type LogicalRouterLinkPortOnTier1TagInput interface {
	pulumi.Input

	ToLogicalRouterLinkPortOnTier1TagOutput() LogicalRouterLinkPortOnTier1TagOutput
	ToLogicalRouterLinkPortOnTier1TagOutputWithContext(context.Context) LogicalRouterLinkPortOnTier1TagOutput
}

type LogicalRouterLinkPortOnTier1TagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LogicalRouterLinkPortOnTier1TagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalRouterLinkPortOnTier1Tag)(nil)).Elem()
}

func (i LogicalRouterLinkPortOnTier1TagArgs) ToLogicalRouterLinkPortOnTier1TagOutput() LogicalRouterLinkPortOnTier1TagOutput {
	return i.ToLogicalRouterLinkPortOnTier1TagOutputWithContext(context.Background())
}

func (i LogicalRouterLinkPortOnTier1TagArgs) ToLogicalRouterLinkPortOnTier1TagOutputWithContext(ctx context.Context) LogicalRouterLinkPortOnTier1TagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalRouterLinkPortOnTier1TagOutput)
}

// LogicalRouterLinkPortOnTier1TagArrayInput is an input type that accepts LogicalRouterLinkPortOnTier1TagArray and LogicalRouterLinkPortOnTier1TagArrayOutput values.
// You can construct a concrete instance of `LogicalRouterLinkPortOnTier1TagArrayInput` via:
//
//          LogicalRouterLinkPortOnTier1TagArray{ LogicalRouterLinkPortOnTier1TagArgs{...} }
type LogicalRouterLinkPortOnTier1TagArrayInput interface {
	pulumi.Input

	ToLogicalRouterLinkPortOnTier1TagArrayOutput() LogicalRouterLinkPortOnTier1TagArrayOutput
	ToLogicalRouterLinkPortOnTier1TagArrayOutputWithContext(context.Context) LogicalRouterLinkPortOnTier1TagArrayOutput
}

type LogicalRouterLinkPortOnTier1TagArray []LogicalRouterLinkPortOnTier1TagInput

func (LogicalRouterLinkPortOnTier1TagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalRouterLinkPortOnTier1Tag)(nil)).Elem()
}

func (i LogicalRouterLinkPortOnTier1TagArray) ToLogicalRouterLinkPortOnTier1TagArrayOutput() LogicalRouterLinkPortOnTier1TagArrayOutput {
	return i.ToLogicalRouterLinkPortOnTier1TagArrayOutputWithContext(context.Background())
}

func (i LogicalRouterLinkPortOnTier1TagArray) ToLogicalRouterLinkPortOnTier1TagArrayOutputWithContext(ctx context.Context) LogicalRouterLinkPortOnTier1TagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalRouterLinkPortOnTier1TagArrayOutput)
}

type LogicalRouterLinkPortOnTier1TagOutput struct{ *pulumi.OutputState }

func (LogicalRouterLinkPortOnTier1TagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalRouterLinkPortOnTier1Tag)(nil)).Elem()
}

func (o LogicalRouterLinkPortOnTier1TagOutput) ToLogicalRouterLinkPortOnTier1TagOutput() LogicalRouterLinkPortOnTier1TagOutput {
	return o
}

func (o LogicalRouterLinkPortOnTier1TagOutput) ToLogicalRouterLinkPortOnTier1TagOutputWithContext(ctx context.Context) LogicalRouterLinkPortOnTier1TagOutput {
	return o
}

func (o LogicalRouterLinkPortOnTier1TagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterLinkPortOnTier1Tag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LogicalRouterLinkPortOnTier1TagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalRouterLinkPortOnTier1Tag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LogicalRouterLinkPortOnTier1TagArrayOutput struct{ *pulumi.OutputState }

func (LogicalRouterLinkPortOnTier1TagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalRouterLinkPortOnTier1Tag)(nil)).Elem()
}

func (o LogicalRouterLinkPortOnTier1TagArrayOutput) ToLogicalRouterLinkPortOnTier1TagArrayOutput() LogicalRouterLinkPortOnTier1TagArrayOutput {
	return o
}

func (o LogicalRouterLinkPortOnTier1TagArrayOutput) ToLogicalRouterLinkPortOnTier1TagArrayOutputWithContext(ctx context.Context) LogicalRouterLinkPortOnTier1TagArrayOutput {
	return o
}

func (o LogicalRouterLinkPortOnTier1TagArrayOutput) Index(i pulumi.IntInput) LogicalRouterLinkPortOnTier1TagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalRouterLinkPortOnTier1Tag {
		return vs[0].([]LogicalRouterLinkPortOnTier1Tag)[vs[1].(int)]
	}).(LogicalRouterLinkPortOnTier1TagOutput)
}

type LogicalSwitchAddressBinding struct {
	IpAddress  *string `pulumi:"ipAddress"`
	MacAddress *string `pulumi:"macAddress"`
	Vlan       *int    `pulumi:"vlan"`
}

// LogicalSwitchAddressBindingInput is an input type that accepts LogicalSwitchAddressBindingArgs and LogicalSwitchAddressBindingOutput values.
// You can construct a concrete instance of `LogicalSwitchAddressBindingInput` via:
//
//          LogicalSwitchAddressBindingArgs{...}
type LogicalSwitchAddressBindingInput interface {
	pulumi.Input

	ToLogicalSwitchAddressBindingOutput() LogicalSwitchAddressBindingOutput
	ToLogicalSwitchAddressBindingOutputWithContext(context.Context) LogicalSwitchAddressBindingOutput
}

type LogicalSwitchAddressBindingArgs struct {
	IpAddress  pulumi.StringPtrInput `pulumi:"ipAddress"`
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	Vlan       pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (LogicalSwitchAddressBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalSwitchAddressBinding)(nil)).Elem()
}

func (i LogicalSwitchAddressBindingArgs) ToLogicalSwitchAddressBindingOutput() LogicalSwitchAddressBindingOutput {
	return i.ToLogicalSwitchAddressBindingOutputWithContext(context.Background())
}

func (i LogicalSwitchAddressBindingArgs) ToLogicalSwitchAddressBindingOutputWithContext(ctx context.Context) LogicalSwitchAddressBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalSwitchAddressBindingOutput)
}

// LogicalSwitchAddressBindingArrayInput is an input type that accepts LogicalSwitchAddressBindingArray and LogicalSwitchAddressBindingArrayOutput values.
// You can construct a concrete instance of `LogicalSwitchAddressBindingArrayInput` via:
//
//          LogicalSwitchAddressBindingArray{ LogicalSwitchAddressBindingArgs{...} }
type LogicalSwitchAddressBindingArrayInput interface {
	pulumi.Input

	ToLogicalSwitchAddressBindingArrayOutput() LogicalSwitchAddressBindingArrayOutput
	ToLogicalSwitchAddressBindingArrayOutputWithContext(context.Context) LogicalSwitchAddressBindingArrayOutput
}

type LogicalSwitchAddressBindingArray []LogicalSwitchAddressBindingInput

func (LogicalSwitchAddressBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalSwitchAddressBinding)(nil)).Elem()
}

func (i LogicalSwitchAddressBindingArray) ToLogicalSwitchAddressBindingArrayOutput() LogicalSwitchAddressBindingArrayOutput {
	return i.ToLogicalSwitchAddressBindingArrayOutputWithContext(context.Background())
}

func (i LogicalSwitchAddressBindingArray) ToLogicalSwitchAddressBindingArrayOutputWithContext(ctx context.Context) LogicalSwitchAddressBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalSwitchAddressBindingArrayOutput)
}

type LogicalSwitchAddressBindingOutput struct{ *pulumi.OutputState }

func (LogicalSwitchAddressBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalSwitchAddressBinding)(nil)).Elem()
}

func (o LogicalSwitchAddressBindingOutput) ToLogicalSwitchAddressBindingOutput() LogicalSwitchAddressBindingOutput {
	return o
}

func (o LogicalSwitchAddressBindingOutput) ToLogicalSwitchAddressBindingOutputWithContext(ctx context.Context) LogicalSwitchAddressBindingOutput {
	return o
}

func (o LogicalSwitchAddressBindingOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalSwitchAddressBinding) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o LogicalSwitchAddressBindingOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalSwitchAddressBinding) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

func (o LogicalSwitchAddressBindingOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogicalSwitchAddressBinding) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type LogicalSwitchAddressBindingArrayOutput struct{ *pulumi.OutputState }

func (LogicalSwitchAddressBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalSwitchAddressBinding)(nil)).Elem()
}

func (o LogicalSwitchAddressBindingArrayOutput) ToLogicalSwitchAddressBindingArrayOutput() LogicalSwitchAddressBindingArrayOutput {
	return o
}

func (o LogicalSwitchAddressBindingArrayOutput) ToLogicalSwitchAddressBindingArrayOutputWithContext(ctx context.Context) LogicalSwitchAddressBindingArrayOutput {
	return o
}

func (o LogicalSwitchAddressBindingArrayOutput) Index(i pulumi.IntInput) LogicalSwitchAddressBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalSwitchAddressBinding {
		return vs[0].([]LogicalSwitchAddressBinding)[vs[1].(int)]
	}).(LogicalSwitchAddressBindingOutput)
}

type LogicalSwitchSwitchingProfileId struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// LogicalSwitchSwitchingProfileIdInput is an input type that accepts LogicalSwitchSwitchingProfileIdArgs and LogicalSwitchSwitchingProfileIdOutput values.
// You can construct a concrete instance of `LogicalSwitchSwitchingProfileIdInput` via:
//
//          LogicalSwitchSwitchingProfileIdArgs{...}
type LogicalSwitchSwitchingProfileIdInput interface {
	pulumi.Input

	ToLogicalSwitchSwitchingProfileIdOutput() LogicalSwitchSwitchingProfileIdOutput
	ToLogicalSwitchSwitchingProfileIdOutputWithContext(context.Context) LogicalSwitchSwitchingProfileIdOutput
}

type LogicalSwitchSwitchingProfileIdArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (LogicalSwitchSwitchingProfileIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalSwitchSwitchingProfileId)(nil)).Elem()
}

func (i LogicalSwitchSwitchingProfileIdArgs) ToLogicalSwitchSwitchingProfileIdOutput() LogicalSwitchSwitchingProfileIdOutput {
	return i.ToLogicalSwitchSwitchingProfileIdOutputWithContext(context.Background())
}

func (i LogicalSwitchSwitchingProfileIdArgs) ToLogicalSwitchSwitchingProfileIdOutputWithContext(ctx context.Context) LogicalSwitchSwitchingProfileIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalSwitchSwitchingProfileIdOutput)
}

// LogicalSwitchSwitchingProfileIdArrayInput is an input type that accepts LogicalSwitchSwitchingProfileIdArray and LogicalSwitchSwitchingProfileIdArrayOutput values.
// You can construct a concrete instance of `LogicalSwitchSwitchingProfileIdArrayInput` via:
//
//          LogicalSwitchSwitchingProfileIdArray{ LogicalSwitchSwitchingProfileIdArgs{...} }
type LogicalSwitchSwitchingProfileIdArrayInput interface {
	pulumi.Input

	ToLogicalSwitchSwitchingProfileIdArrayOutput() LogicalSwitchSwitchingProfileIdArrayOutput
	ToLogicalSwitchSwitchingProfileIdArrayOutputWithContext(context.Context) LogicalSwitchSwitchingProfileIdArrayOutput
}

type LogicalSwitchSwitchingProfileIdArray []LogicalSwitchSwitchingProfileIdInput

func (LogicalSwitchSwitchingProfileIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalSwitchSwitchingProfileId)(nil)).Elem()
}

func (i LogicalSwitchSwitchingProfileIdArray) ToLogicalSwitchSwitchingProfileIdArrayOutput() LogicalSwitchSwitchingProfileIdArrayOutput {
	return i.ToLogicalSwitchSwitchingProfileIdArrayOutputWithContext(context.Background())
}

func (i LogicalSwitchSwitchingProfileIdArray) ToLogicalSwitchSwitchingProfileIdArrayOutputWithContext(ctx context.Context) LogicalSwitchSwitchingProfileIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalSwitchSwitchingProfileIdArrayOutput)
}

type LogicalSwitchSwitchingProfileIdOutput struct{ *pulumi.OutputState }

func (LogicalSwitchSwitchingProfileIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalSwitchSwitchingProfileId)(nil)).Elem()
}

func (o LogicalSwitchSwitchingProfileIdOutput) ToLogicalSwitchSwitchingProfileIdOutput() LogicalSwitchSwitchingProfileIdOutput {
	return o
}

func (o LogicalSwitchSwitchingProfileIdOutput) ToLogicalSwitchSwitchingProfileIdOutputWithContext(ctx context.Context) LogicalSwitchSwitchingProfileIdOutput {
	return o
}

func (o LogicalSwitchSwitchingProfileIdOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LogicalSwitchSwitchingProfileId) string { return v.Key }).(pulumi.StringOutput)
}

func (o LogicalSwitchSwitchingProfileIdOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LogicalSwitchSwitchingProfileId) string { return v.Value }).(pulumi.StringOutput)
}

type LogicalSwitchSwitchingProfileIdArrayOutput struct{ *pulumi.OutputState }

func (LogicalSwitchSwitchingProfileIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalSwitchSwitchingProfileId)(nil)).Elem()
}

func (o LogicalSwitchSwitchingProfileIdArrayOutput) ToLogicalSwitchSwitchingProfileIdArrayOutput() LogicalSwitchSwitchingProfileIdArrayOutput {
	return o
}

func (o LogicalSwitchSwitchingProfileIdArrayOutput) ToLogicalSwitchSwitchingProfileIdArrayOutputWithContext(ctx context.Context) LogicalSwitchSwitchingProfileIdArrayOutput {
	return o
}

func (o LogicalSwitchSwitchingProfileIdArrayOutput) Index(i pulumi.IntInput) LogicalSwitchSwitchingProfileIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalSwitchSwitchingProfileId {
		return vs[0].([]LogicalSwitchSwitchingProfileId)[vs[1].(int)]
	}).(LogicalSwitchSwitchingProfileIdOutput)
}

type LogicalSwitchTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LogicalSwitchTagInput is an input type that accepts LogicalSwitchTagArgs and LogicalSwitchTagOutput values.
// You can construct a concrete instance of `LogicalSwitchTagInput` via:
//
//          LogicalSwitchTagArgs{...}
type LogicalSwitchTagInput interface {
	pulumi.Input

	ToLogicalSwitchTagOutput() LogicalSwitchTagOutput
	ToLogicalSwitchTagOutputWithContext(context.Context) LogicalSwitchTagOutput
}

type LogicalSwitchTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LogicalSwitchTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalSwitchTag)(nil)).Elem()
}

func (i LogicalSwitchTagArgs) ToLogicalSwitchTagOutput() LogicalSwitchTagOutput {
	return i.ToLogicalSwitchTagOutputWithContext(context.Background())
}

func (i LogicalSwitchTagArgs) ToLogicalSwitchTagOutputWithContext(ctx context.Context) LogicalSwitchTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalSwitchTagOutput)
}

// LogicalSwitchTagArrayInput is an input type that accepts LogicalSwitchTagArray and LogicalSwitchTagArrayOutput values.
// You can construct a concrete instance of `LogicalSwitchTagArrayInput` via:
//
//          LogicalSwitchTagArray{ LogicalSwitchTagArgs{...} }
type LogicalSwitchTagArrayInput interface {
	pulumi.Input

	ToLogicalSwitchTagArrayOutput() LogicalSwitchTagArrayOutput
	ToLogicalSwitchTagArrayOutputWithContext(context.Context) LogicalSwitchTagArrayOutput
}

type LogicalSwitchTagArray []LogicalSwitchTagInput

func (LogicalSwitchTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalSwitchTag)(nil)).Elem()
}

func (i LogicalSwitchTagArray) ToLogicalSwitchTagArrayOutput() LogicalSwitchTagArrayOutput {
	return i.ToLogicalSwitchTagArrayOutputWithContext(context.Background())
}

func (i LogicalSwitchTagArray) ToLogicalSwitchTagArrayOutputWithContext(ctx context.Context) LogicalSwitchTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalSwitchTagArrayOutput)
}

type LogicalSwitchTagOutput struct{ *pulumi.OutputState }

func (LogicalSwitchTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalSwitchTag)(nil)).Elem()
}

func (o LogicalSwitchTagOutput) ToLogicalSwitchTagOutput() LogicalSwitchTagOutput {
	return o
}

func (o LogicalSwitchTagOutput) ToLogicalSwitchTagOutputWithContext(ctx context.Context) LogicalSwitchTagOutput {
	return o
}

func (o LogicalSwitchTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalSwitchTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LogicalSwitchTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalSwitchTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LogicalSwitchTagArrayOutput struct{ *pulumi.OutputState }

func (LogicalSwitchTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalSwitchTag)(nil)).Elem()
}

func (o LogicalSwitchTagArrayOutput) ToLogicalSwitchTagArrayOutput() LogicalSwitchTagArrayOutput {
	return o
}

func (o LogicalSwitchTagArrayOutput) ToLogicalSwitchTagArrayOutputWithContext(ctx context.Context) LogicalSwitchTagArrayOutput {
	return o
}

func (o LogicalSwitchTagArrayOutput) Index(i pulumi.IntInput) LogicalSwitchTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalSwitchTag {
		return vs[0].([]LogicalSwitchTag)[vs[1].(int)]
	}).(LogicalSwitchTagOutput)
}

type LogicalTier0RouterFirewallSection struct {
	IsValid           *bool   `pulumi:"isValid"`
	TargetDisplayName *string `pulumi:"targetDisplayName"`
	TargetId          *string `pulumi:"targetId"`
	TargetType        *string `pulumi:"targetType"`
}

// LogicalTier0RouterFirewallSectionInput is an input type that accepts LogicalTier0RouterFirewallSectionArgs and LogicalTier0RouterFirewallSectionOutput values.
// You can construct a concrete instance of `LogicalTier0RouterFirewallSectionInput` via:
//
//          LogicalTier0RouterFirewallSectionArgs{...}
type LogicalTier0RouterFirewallSectionInput interface {
	pulumi.Input

	ToLogicalTier0RouterFirewallSectionOutput() LogicalTier0RouterFirewallSectionOutput
	ToLogicalTier0RouterFirewallSectionOutputWithContext(context.Context) LogicalTier0RouterFirewallSectionOutput
}

type LogicalTier0RouterFirewallSectionArgs struct {
	IsValid           pulumi.BoolPtrInput   `pulumi:"isValid"`
	TargetDisplayName pulumi.StringPtrInput `pulumi:"targetDisplayName"`
	TargetId          pulumi.StringPtrInput `pulumi:"targetId"`
	TargetType        pulumi.StringPtrInput `pulumi:"targetType"`
}

func (LogicalTier0RouterFirewallSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalTier0RouterFirewallSection)(nil)).Elem()
}

func (i LogicalTier0RouterFirewallSectionArgs) ToLogicalTier0RouterFirewallSectionOutput() LogicalTier0RouterFirewallSectionOutput {
	return i.ToLogicalTier0RouterFirewallSectionOutputWithContext(context.Background())
}

func (i LogicalTier0RouterFirewallSectionArgs) ToLogicalTier0RouterFirewallSectionOutputWithContext(ctx context.Context) LogicalTier0RouterFirewallSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalTier0RouterFirewallSectionOutput)
}

// LogicalTier0RouterFirewallSectionArrayInput is an input type that accepts LogicalTier0RouterFirewallSectionArray and LogicalTier0RouterFirewallSectionArrayOutput values.
// You can construct a concrete instance of `LogicalTier0RouterFirewallSectionArrayInput` via:
//
//          LogicalTier0RouterFirewallSectionArray{ LogicalTier0RouterFirewallSectionArgs{...} }
type LogicalTier0RouterFirewallSectionArrayInput interface {
	pulumi.Input

	ToLogicalTier0RouterFirewallSectionArrayOutput() LogicalTier0RouterFirewallSectionArrayOutput
	ToLogicalTier0RouterFirewallSectionArrayOutputWithContext(context.Context) LogicalTier0RouterFirewallSectionArrayOutput
}

type LogicalTier0RouterFirewallSectionArray []LogicalTier0RouterFirewallSectionInput

func (LogicalTier0RouterFirewallSectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalTier0RouterFirewallSection)(nil)).Elem()
}

func (i LogicalTier0RouterFirewallSectionArray) ToLogicalTier0RouterFirewallSectionArrayOutput() LogicalTier0RouterFirewallSectionArrayOutput {
	return i.ToLogicalTier0RouterFirewallSectionArrayOutputWithContext(context.Background())
}

func (i LogicalTier0RouterFirewallSectionArray) ToLogicalTier0RouterFirewallSectionArrayOutputWithContext(ctx context.Context) LogicalTier0RouterFirewallSectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalTier0RouterFirewallSectionArrayOutput)
}

type LogicalTier0RouterFirewallSectionOutput struct{ *pulumi.OutputState }

func (LogicalTier0RouterFirewallSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalTier0RouterFirewallSection)(nil)).Elem()
}

func (o LogicalTier0RouterFirewallSectionOutput) ToLogicalTier0RouterFirewallSectionOutput() LogicalTier0RouterFirewallSectionOutput {
	return o
}

func (o LogicalTier0RouterFirewallSectionOutput) ToLogicalTier0RouterFirewallSectionOutputWithContext(ctx context.Context) LogicalTier0RouterFirewallSectionOutput {
	return o
}

func (o LogicalTier0RouterFirewallSectionOutput) IsValid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogicalTier0RouterFirewallSection) *bool { return v.IsValid }).(pulumi.BoolPtrOutput)
}

func (o LogicalTier0RouterFirewallSectionOutput) TargetDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalTier0RouterFirewallSection) *string { return v.TargetDisplayName }).(pulumi.StringPtrOutput)
}

func (o LogicalTier0RouterFirewallSectionOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalTier0RouterFirewallSection) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o LogicalTier0RouterFirewallSectionOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalTier0RouterFirewallSection) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type LogicalTier0RouterFirewallSectionArrayOutput struct{ *pulumi.OutputState }

func (LogicalTier0RouterFirewallSectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalTier0RouterFirewallSection)(nil)).Elem()
}

func (o LogicalTier0RouterFirewallSectionArrayOutput) ToLogicalTier0RouterFirewallSectionArrayOutput() LogicalTier0RouterFirewallSectionArrayOutput {
	return o
}

func (o LogicalTier0RouterFirewallSectionArrayOutput) ToLogicalTier0RouterFirewallSectionArrayOutputWithContext(ctx context.Context) LogicalTier0RouterFirewallSectionArrayOutput {
	return o
}

func (o LogicalTier0RouterFirewallSectionArrayOutput) Index(i pulumi.IntInput) LogicalTier0RouterFirewallSectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalTier0RouterFirewallSection {
		return vs[0].([]LogicalTier0RouterFirewallSection)[vs[1].(int)]
	}).(LogicalTier0RouterFirewallSectionOutput)
}

type LogicalTier0RouterTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LogicalTier0RouterTagInput is an input type that accepts LogicalTier0RouterTagArgs and LogicalTier0RouterTagOutput values.
// You can construct a concrete instance of `LogicalTier0RouterTagInput` via:
//
//          LogicalTier0RouterTagArgs{...}
type LogicalTier0RouterTagInput interface {
	pulumi.Input

	ToLogicalTier0RouterTagOutput() LogicalTier0RouterTagOutput
	ToLogicalTier0RouterTagOutputWithContext(context.Context) LogicalTier0RouterTagOutput
}

type LogicalTier0RouterTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LogicalTier0RouterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalTier0RouterTag)(nil)).Elem()
}

func (i LogicalTier0RouterTagArgs) ToLogicalTier0RouterTagOutput() LogicalTier0RouterTagOutput {
	return i.ToLogicalTier0RouterTagOutputWithContext(context.Background())
}

func (i LogicalTier0RouterTagArgs) ToLogicalTier0RouterTagOutputWithContext(ctx context.Context) LogicalTier0RouterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalTier0RouterTagOutput)
}

// LogicalTier0RouterTagArrayInput is an input type that accepts LogicalTier0RouterTagArray and LogicalTier0RouterTagArrayOutput values.
// You can construct a concrete instance of `LogicalTier0RouterTagArrayInput` via:
//
//          LogicalTier0RouterTagArray{ LogicalTier0RouterTagArgs{...} }
type LogicalTier0RouterTagArrayInput interface {
	pulumi.Input

	ToLogicalTier0RouterTagArrayOutput() LogicalTier0RouterTagArrayOutput
	ToLogicalTier0RouterTagArrayOutputWithContext(context.Context) LogicalTier0RouterTagArrayOutput
}

type LogicalTier0RouterTagArray []LogicalTier0RouterTagInput

func (LogicalTier0RouterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalTier0RouterTag)(nil)).Elem()
}

func (i LogicalTier0RouterTagArray) ToLogicalTier0RouterTagArrayOutput() LogicalTier0RouterTagArrayOutput {
	return i.ToLogicalTier0RouterTagArrayOutputWithContext(context.Background())
}

func (i LogicalTier0RouterTagArray) ToLogicalTier0RouterTagArrayOutputWithContext(ctx context.Context) LogicalTier0RouterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalTier0RouterTagArrayOutput)
}

type LogicalTier0RouterTagOutput struct{ *pulumi.OutputState }

func (LogicalTier0RouterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalTier0RouterTag)(nil)).Elem()
}

func (o LogicalTier0RouterTagOutput) ToLogicalTier0RouterTagOutput() LogicalTier0RouterTagOutput {
	return o
}

func (o LogicalTier0RouterTagOutput) ToLogicalTier0RouterTagOutputWithContext(ctx context.Context) LogicalTier0RouterTagOutput {
	return o
}

func (o LogicalTier0RouterTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalTier0RouterTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LogicalTier0RouterTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalTier0RouterTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LogicalTier0RouterTagArrayOutput struct{ *pulumi.OutputState }

func (LogicalTier0RouterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalTier0RouterTag)(nil)).Elem()
}

func (o LogicalTier0RouterTagArrayOutput) ToLogicalTier0RouterTagArrayOutput() LogicalTier0RouterTagArrayOutput {
	return o
}

func (o LogicalTier0RouterTagArrayOutput) ToLogicalTier0RouterTagArrayOutputWithContext(ctx context.Context) LogicalTier0RouterTagArrayOutput {
	return o
}

func (o LogicalTier0RouterTagArrayOutput) Index(i pulumi.IntInput) LogicalTier0RouterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalTier0RouterTag {
		return vs[0].([]LogicalTier0RouterTag)[vs[1].(int)]
	}).(LogicalTier0RouterTagOutput)
}

type LogicalTier1RouterFirewallSection struct {
	IsValid           *bool   `pulumi:"isValid"`
	TargetDisplayName *string `pulumi:"targetDisplayName"`
	TargetId          *string `pulumi:"targetId"`
	TargetType        *string `pulumi:"targetType"`
}

// LogicalTier1RouterFirewallSectionInput is an input type that accepts LogicalTier1RouterFirewallSectionArgs and LogicalTier1RouterFirewallSectionOutput values.
// You can construct a concrete instance of `LogicalTier1RouterFirewallSectionInput` via:
//
//          LogicalTier1RouterFirewallSectionArgs{...}
type LogicalTier1RouterFirewallSectionInput interface {
	pulumi.Input

	ToLogicalTier1RouterFirewallSectionOutput() LogicalTier1RouterFirewallSectionOutput
	ToLogicalTier1RouterFirewallSectionOutputWithContext(context.Context) LogicalTier1RouterFirewallSectionOutput
}

type LogicalTier1RouterFirewallSectionArgs struct {
	IsValid           pulumi.BoolPtrInput   `pulumi:"isValid"`
	TargetDisplayName pulumi.StringPtrInput `pulumi:"targetDisplayName"`
	TargetId          pulumi.StringPtrInput `pulumi:"targetId"`
	TargetType        pulumi.StringPtrInput `pulumi:"targetType"`
}

func (LogicalTier1RouterFirewallSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalTier1RouterFirewallSection)(nil)).Elem()
}

func (i LogicalTier1RouterFirewallSectionArgs) ToLogicalTier1RouterFirewallSectionOutput() LogicalTier1RouterFirewallSectionOutput {
	return i.ToLogicalTier1RouterFirewallSectionOutputWithContext(context.Background())
}

func (i LogicalTier1RouterFirewallSectionArgs) ToLogicalTier1RouterFirewallSectionOutputWithContext(ctx context.Context) LogicalTier1RouterFirewallSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalTier1RouterFirewallSectionOutput)
}

// LogicalTier1RouterFirewallSectionArrayInput is an input type that accepts LogicalTier1RouterFirewallSectionArray and LogicalTier1RouterFirewallSectionArrayOutput values.
// You can construct a concrete instance of `LogicalTier1RouterFirewallSectionArrayInput` via:
//
//          LogicalTier1RouterFirewallSectionArray{ LogicalTier1RouterFirewallSectionArgs{...} }
type LogicalTier1RouterFirewallSectionArrayInput interface {
	pulumi.Input

	ToLogicalTier1RouterFirewallSectionArrayOutput() LogicalTier1RouterFirewallSectionArrayOutput
	ToLogicalTier1RouterFirewallSectionArrayOutputWithContext(context.Context) LogicalTier1RouterFirewallSectionArrayOutput
}

type LogicalTier1RouterFirewallSectionArray []LogicalTier1RouterFirewallSectionInput

func (LogicalTier1RouterFirewallSectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalTier1RouterFirewallSection)(nil)).Elem()
}

func (i LogicalTier1RouterFirewallSectionArray) ToLogicalTier1RouterFirewallSectionArrayOutput() LogicalTier1RouterFirewallSectionArrayOutput {
	return i.ToLogicalTier1RouterFirewallSectionArrayOutputWithContext(context.Background())
}

func (i LogicalTier1RouterFirewallSectionArray) ToLogicalTier1RouterFirewallSectionArrayOutputWithContext(ctx context.Context) LogicalTier1RouterFirewallSectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalTier1RouterFirewallSectionArrayOutput)
}

type LogicalTier1RouterFirewallSectionOutput struct{ *pulumi.OutputState }

func (LogicalTier1RouterFirewallSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalTier1RouterFirewallSection)(nil)).Elem()
}

func (o LogicalTier1RouterFirewallSectionOutput) ToLogicalTier1RouterFirewallSectionOutput() LogicalTier1RouterFirewallSectionOutput {
	return o
}

func (o LogicalTier1RouterFirewallSectionOutput) ToLogicalTier1RouterFirewallSectionOutputWithContext(ctx context.Context) LogicalTier1RouterFirewallSectionOutput {
	return o
}

func (o LogicalTier1RouterFirewallSectionOutput) IsValid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogicalTier1RouterFirewallSection) *bool { return v.IsValid }).(pulumi.BoolPtrOutput)
}

func (o LogicalTier1RouterFirewallSectionOutput) TargetDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalTier1RouterFirewallSection) *string { return v.TargetDisplayName }).(pulumi.StringPtrOutput)
}

func (o LogicalTier1RouterFirewallSectionOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalTier1RouterFirewallSection) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o LogicalTier1RouterFirewallSectionOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalTier1RouterFirewallSection) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

type LogicalTier1RouterFirewallSectionArrayOutput struct{ *pulumi.OutputState }

func (LogicalTier1RouterFirewallSectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalTier1RouterFirewallSection)(nil)).Elem()
}

func (o LogicalTier1RouterFirewallSectionArrayOutput) ToLogicalTier1RouterFirewallSectionArrayOutput() LogicalTier1RouterFirewallSectionArrayOutput {
	return o
}

func (o LogicalTier1RouterFirewallSectionArrayOutput) ToLogicalTier1RouterFirewallSectionArrayOutputWithContext(ctx context.Context) LogicalTier1RouterFirewallSectionArrayOutput {
	return o
}

func (o LogicalTier1RouterFirewallSectionArrayOutput) Index(i pulumi.IntInput) LogicalTier1RouterFirewallSectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalTier1RouterFirewallSection {
		return vs[0].([]LogicalTier1RouterFirewallSection)[vs[1].(int)]
	}).(LogicalTier1RouterFirewallSectionOutput)
}

type LogicalTier1RouterTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// LogicalTier1RouterTagInput is an input type that accepts LogicalTier1RouterTagArgs and LogicalTier1RouterTagOutput values.
// You can construct a concrete instance of `LogicalTier1RouterTagInput` via:
//
//          LogicalTier1RouterTagArgs{...}
type LogicalTier1RouterTagInput interface {
	pulumi.Input

	ToLogicalTier1RouterTagOutput() LogicalTier1RouterTagOutput
	ToLogicalTier1RouterTagOutputWithContext(context.Context) LogicalTier1RouterTagOutput
}

type LogicalTier1RouterTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (LogicalTier1RouterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalTier1RouterTag)(nil)).Elem()
}

func (i LogicalTier1RouterTagArgs) ToLogicalTier1RouterTagOutput() LogicalTier1RouterTagOutput {
	return i.ToLogicalTier1RouterTagOutputWithContext(context.Background())
}

func (i LogicalTier1RouterTagArgs) ToLogicalTier1RouterTagOutputWithContext(ctx context.Context) LogicalTier1RouterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalTier1RouterTagOutput)
}

// LogicalTier1RouterTagArrayInput is an input type that accepts LogicalTier1RouterTagArray and LogicalTier1RouterTagArrayOutput values.
// You can construct a concrete instance of `LogicalTier1RouterTagArrayInput` via:
//
//          LogicalTier1RouterTagArray{ LogicalTier1RouterTagArgs{...} }
type LogicalTier1RouterTagArrayInput interface {
	pulumi.Input

	ToLogicalTier1RouterTagArrayOutput() LogicalTier1RouterTagArrayOutput
	ToLogicalTier1RouterTagArrayOutputWithContext(context.Context) LogicalTier1RouterTagArrayOutput
}

type LogicalTier1RouterTagArray []LogicalTier1RouterTagInput

func (LogicalTier1RouterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalTier1RouterTag)(nil)).Elem()
}

func (i LogicalTier1RouterTagArray) ToLogicalTier1RouterTagArrayOutput() LogicalTier1RouterTagArrayOutput {
	return i.ToLogicalTier1RouterTagArrayOutputWithContext(context.Background())
}

func (i LogicalTier1RouterTagArray) ToLogicalTier1RouterTagArrayOutputWithContext(ctx context.Context) LogicalTier1RouterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalTier1RouterTagArrayOutput)
}

type LogicalTier1RouterTagOutput struct{ *pulumi.OutputState }

func (LogicalTier1RouterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalTier1RouterTag)(nil)).Elem()
}

func (o LogicalTier1RouterTagOutput) ToLogicalTier1RouterTagOutput() LogicalTier1RouterTagOutput {
	return o
}

func (o LogicalTier1RouterTagOutput) ToLogicalTier1RouterTagOutputWithContext(ctx context.Context) LogicalTier1RouterTagOutput {
	return o
}

func (o LogicalTier1RouterTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalTier1RouterTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o LogicalTier1RouterTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalTier1RouterTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type LogicalTier1RouterTagArrayOutput struct{ *pulumi.OutputState }

func (LogicalTier1RouterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalTier1RouterTag)(nil)).Elem()
}

func (o LogicalTier1RouterTagArrayOutput) ToLogicalTier1RouterTagArrayOutput() LogicalTier1RouterTagArrayOutput {
	return o
}

func (o LogicalTier1RouterTagArrayOutput) ToLogicalTier1RouterTagArrayOutputWithContext(ctx context.Context) LogicalTier1RouterTagArrayOutput {
	return o
}

func (o LogicalTier1RouterTagArrayOutput) Index(i pulumi.IntInput) LogicalTier1RouterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalTier1RouterTag {
		return vs[0].([]LogicalTier1RouterTag)[vs[1].(int)]
	}).(LogicalTier1RouterTagOutput)
}

type MACManagementSwitchingProfileMacLearning struct {
	Enabled                *bool   `pulumi:"enabled"`
	Limit                  *int    `pulumi:"limit"`
	LimitPolicy            *string `pulumi:"limitPolicy"`
	UnicastFloodingAllowed *bool   `pulumi:"unicastFloodingAllowed"`
}

// MACManagementSwitchingProfileMacLearningInput is an input type that accepts MACManagementSwitchingProfileMacLearningArgs and MACManagementSwitchingProfileMacLearningOutput values.
// You can construct a concrete instance of `MACManagementSwitchingProfileMacLearningInput` via:
//
//          MACManagementSwitchingProfileMacLearningArgs{...}
type MACManagementSwitchingProfileMacLearningInput interface {
	pulumi.Input

	ToMACManagementSwitchingProfileMacLearningOutput() MACManagementSwitchingProfileMacLearningOutput
	ToMACManagementSwitchingProfileMacLearningOutputWithContext(context.Context) MACManagementSwitchingProfileMacLearningOutput
}

type MACManagementSwitchingProfileMacLearningArgs struct {
	Enabled                pulumi.BoolPtrInput   `pulumi:"enabled"`
	Limit                  pulumi.IntPtrInput    `pulumi:"limit"`
	LimitPolicy            pulumi.StringPtrInput `pulumi:"limitPolicy"`
	UnicastFloodingAllowed pulumi.BoolPtrInput   `pulumi:"unicastFloodingAllowed"`
}

func (MACManagementSwitchingProfileMacLearningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MACManagementSwitchingProfileMacLearning)(nil)).Elem()
}

func (i MACManagementSwitchingProfileMacLearningArgs) ToMACManagementSwitchingProfileMacLearningOutput() MACManagementSwitchingProfileMacLearningOutput {
	return i.ToMACManagementSwitchingProfileMacLearningOutputWithContext(context.Background())
}

func (i MACManagementSwitchingProfileMacLearningArgs) ToMACManagementSwitchingProfileMacLearningOutputWithContext(ctx context.Context) MACManagementSwitchingProfileMacLearningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MACManagementSwitchingProfileMacLearningOutput)
}

func (i MACManagementSwitchingProfileMacLearningArgs) ToMACManagementSwitchingProfileMacLearningPtrOutput() MACManagementSwitchingProfileMacLearningPtrOutput {
	return i.ToMACManagementSwitchingProfileMacLearningPtrOutputWithContext(context.Background())
}

func (i MACManagementSwitchingProfileMacLearningArgs) ToMACManagementSwitchingProfileMacLearningPtrOutputWithContext(ctx context.Context) MACManagementSwitchingProfileMacLearningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MACManagementSwitchingProfileMacLearningOutput).ToMACManagementSwitchingProfileMacLearningPtrOutputWithContext(ctx)
}

// MACManagementSwitchingProfileMacLearningPtrInput is an input type that accepts MACManagementSwitchingProfileMacLearningArgs, MACManagementSwitchingProfileMacLearningPtr and MACManagementSwitchingProfileMacLearningPtrOutput values.
// You can construct a concrete instance of `MACManagementSwitchingProfileMacLearningPtrInput` via:
//
//          MACManagementSwitchingProfileMacLearningArgs{...}
//
//  or:
//
//          nil
type MACManagementSwitchingProfileMacLearningPtrInput interface {
	pulumi.Input

	ToMACManagementSwitchingProfileMacLearningPtrOutput() MACManagementSwitchingProfileMacLearningPtrOutput
	ToMACManagementSwitchingProfileMacLearningPtrOutputWithContext(context.Context) MACManagementSwitchingProfileMacLearningPtrOutput
}

type macmanagementSwitchingProfileMacLearningPtrType MACManagementSwitchingProfileMacLearningArgs

func MACManagementSwitchingProfileMacLearningPtr(v *MACManagementSwitchingProfileMacLearningArgs) MACManagementSwitchingProfileMacLearningPtrInput {
	return (*macmanagementSwitchingProfileMacLearningPtrType)(v)
}

func (*macmanagementSwitchingProfileMacLearningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MACManagementSwitchingProfileMacLearning)(nil)).Elem()
}

func (i *macmanagementSwitchingProfileMacLearningPtrType) ToMACManagementSwitchingProfileMacLearningPtrOutput() MACManagementSwitchingProfileMacLearningPtrOutput {
	return i.ToMACManagementSwitchingProfileMacLearningPtrOutputWithContext(context.Background())
}

func (i *macmanagementSwitchingProfileMacLearningPtrType) ToMACManagementSwitchingProfileMacLearningPtrOutputWithContext(ctx context.Context) MACManagementSwitchingProfileMacLearningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MACManagementSwitchingProfileMacLearningPtrOutput)
}

type MACManagementSwitchingProfileMacLearningOutput struct{ *pulumi.OutputState }

func (MACManagementSwitchingProfileMacLearningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MACManagementSwitchingProfileMacLearning)(nil)).Elem()
}

func (o MACManagementSwitchingProfileMacLearningOutput) ToMACManagementSwitchingProfileMacLearningOutput() MACManagementSwitchingProfileMacLearningOutput {
	return o
}

func (o MACManagementSwitchingProfileMacLearningOutput) ToMACManagementSwitchingProfileMacLearningOutputWithContext(ctx context.Context) MACManagementSwitchingProfileMacLearningOutput {
	return o
}

func (o MACManagementSwitchingProfileMacLearningOutput) ToMACManagementSwitchingProfileMacLearningPtrOutput() MACManagementSwitchingProfileMacLearningPtrOutput {
	return o.ToMACManagementSwitchingProfileMacLearningPtrOutputWithContext(context.Background())
}

func (o MACManagementSwitchingProfileMacLearningOutput) ToMACManagementSwitchingProfileMacLearningPtrOutputWithContext(ctx context.Context) MACManagementSwitchingProfileMacLearningPtrOutput {
	return o.ApplyT(func(v MACManagementSwitchingProfileMacLearning) *MACManagementSwitchingProfileMacLearning {
		return &v
	}).(MACManagementSwitchingProfileMacLearningPtrOutput)
}
func (o MACManagementSwitchingProfileMacLearningOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MACManagementSwitchingProfileMacLearning) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o MACManagementSwitchingProfileMacLearningOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MACManagementSwitchingProfileMacLearning) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o MACManagementSwitchingProfileMacLearningOutput) LimitPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MACManagementSwitchingProfileMacLearning) *string { return v.LimitPolicy }).(pulumi.StringPtrOutput)
}

func (o MACManagementSwitchingProfileMacLearningOutput) UnicastFloodingAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MACManagementSwitchingProfileMacLearning) *bool { return v.UnicastFloodingAllowed }).(pulumi.BoolPtrOutput)
}

type MACManagementSwitchingProfileMacLearningPtrOutput struct{ *pulumi.OutputState }

func (MACManagementSwitchingProfileMacLearningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MACManagementSwitchingProfileMacLearning)(nil)).Elem()
}

func (o MACManagementSwitchingProfileMacLearningPtrOutput) ToMACManagementSwitchingProfileMacLearningPtrOutput() MACManagementSwitchingProfileMacLearningPtrOutput {
	return o
}

func (o MACManagementSwitchingProfileMacLearningPtrOutput) ToMACManagementSwitchingProfileMacLearningPtrOutputWithContext(ctx context.Context) MACManagementSwitchingProfileMacLearningPtrOutput {
	return o
}

func (o MACManagementSwitchingProfileMacLearningPtrOutput) Elem() MACManagementSwitchingProfileMacLearningOutput {
	return o.ApplyT(func(v *MACManagementSwitchingProfileMacLearning) MACManagementSwitchingProfileMacLearning { return *v }).(MACManagementSwitchingProfileMacLearningOutput)
}

func (o MACManagementSwitchingProfileMacLearningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MACManagementSwitchingProfileMacLearning) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o MACManagementSwitchingProfileMacLearningPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MACManagementSwitchingProfileMacLearning) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

func (o MACManagementSwitchingProfileMacLearningPtrOutput) LimitPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MACManagementSwitchingProfileMacLearning) *string {
		if v == nil {
			return nil
		}
		return v.LimitPolicy
	}).(pulumi.StringPtrOutput)
}

func (o MACManagementSwitchingProfileMacLearningPtrOutput) UnicastFloodingAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MACManagementSwitchingProfileMacLearning) *bool {
		if v == nil {
			return nil
		}
		return v.UnicastFloodingAllowed
	}).(pulumi.BoolPtrOutput)
}

type MACManagementSwitchingProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// MACManagementSwitchingProfileTagInput is an input type that accepts MACManagementSwitchingProfileTagArgs and MACManagementSwitchingProfileTagOutput values.
// You can construct a concrete instance of `MACManagementSwitchingProfileTagInput` via:
//
//          MACManagementSwitchingProfileTagArgs{...}
type MACManagementSwitchingProfileTagInput interface {
	pulumi.Input

	ToMACManagementSwitchingProfileTagOutput() MACManagementSwitchingProfileTagOutput
	ToMACManagementSwitchingProfileTagOutputWithContext(context.Context) MACManagementSwitchingProfileTagOutput
}

type MACManagementSwitchingProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (MACManagementSwitchingProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MACManagementSwitchingProfileTag)(nil)).Elem()
}

func (i MACManagementSwitchingProfileTagArgs) ToMACManagementSwitchingProfileTagOutput() MACManagementSwitchingProfileTagOutput {
	return i.ToMACManagementSwitchingProfileTagOutputWithContext(context.Background())
}

func (i MACManagementSwitchingProfileTagArgs) ToMACManagementSwitchingProfileTagOutputWithContext(ctx context.Context) MACManagementSwitchingProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MACManagementSwitchingProfileTagOutput)
}

// MACManagementSwitchingProfileTagArrayInput is an input type that accepts MACManagementSwitchingProfileTagArray and MACManagementSwitchingProfileTagArrayOutput values.
// You can construct a concrete instance of `MACManagementSwitchingProfileTagArrayInput` via:
//
//          MACManagementSwitchingProfileTagArray{ MACManagementSwitchingProfileTagArgs{...} }
type MACManagementSwitchingProfileTagArrayInput interface {
	pulumi.Input

	ToMACManagementSwitchingProfileTagArrayOutput() MACManagementSwitchingProfileTagArrayOutput
	ToMACManagementSwitchingProfileTagArrayOutputWithContext(context.Context) MACManagementSwitchingProfileTagArrayOutput
}

type MACManagementSwitchingProfileTagArray []MACManagementSwitchingProfileTagInput

func (MACManagementSwitchingProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MACManagementSwitchingProfileTag)(nil)).Elem()
}

func (i MACManagementSwitchingProfileTagArray) ToMACManagementSwitchingProfileTagArrayOutput() MACManagementSwitchingProfileTagArrayOutput {
	return i.ToMACManagementSwitchingProfileTagArrayOutputWithContext(context.Background())
}

func (i MACManagementSwitchingProfileTagArray) ToMACManagementSwitchingProfileTagArrayOutputWithContext(ctx context.Context) MACManagementSwitchingProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MACManagementSwitchingProfileTagArrayOutput)
}

type MACManagementSwitchingProfileTagOutput struct{ *pulumi.OutputState }

func (MACManagementSwitchingProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MACManagementSwitchingProfileTag)(nil)).Elem()
}

func (o MACManagementSwitchingProfileTagOutput) ToMACManagementSwitchingProfileTagOutput() MACManagementSwitchingProfileTagOutput {
	return o
}

func (o MACManagementSwitchingProfileTagOutput) ToMACManagementSwitchingProfileTagOutputWithContext(ctx context.Context) MACManagementSwitchingProfileTagOutput {
	return o
}

func (o MACManagementSwitchingProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MACManagementSwitchingProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o MACManagementSwitchingProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MACManagementSwitchingProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type MACManagementSwitchingProfileTagArrayOutput struct{ *pulumi.OutputState }

func (MACManagementSwitchingProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MACManagementSwitchingProfileTag)(nil)).Elem()
}

func (o MACManagementSwitchingProfileTagArrayOutput) ToMACManagementSwitchingProfileTagArrayOutput() MACManagementSwitchingProfileTagArrayOutput {
	return o
}

func (o MACManagementSwitchingProfileTagArrayOutput) ToMACManagementSwitchingProfileTagArrayOutputWithContext(ctx context.Context) MACManagementSwitchingProfileTagArrayOutput {
	return o
}

func (o MACManagementSwitchingProfileTagArrayOutput) Index(i pulumi.IntInput) MACManagementSwitchingProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MACManagementSwitchingProfileTag {
		return vs[0].([]MACManagementSwitchingProfileTag)[vs[1].(int)]
	}).(MACManagementSwitchingProfileTagOutput)
}

type NATRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// NATRuleTagInput is an input type that accepts NATRuleTagArgs and NATRuleTagOutput values.
// You can construct a concrete instance of `NATRuleTagInput` via:
//
//          NATRuleTagArgs{...}
type NATRuleTagInput interface {
	pulumi.Input

	ToNATRuleTagOutput() NATRuleTagOutput
	ToNATRuleTagOutputWithContext(context.Context) NATRuleTagOutput
}

type NATRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (NATRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NATRuleTag)(nil)).Elem()
}

func (i NATRuleTagArgs) ToNATRuleTagOutput() NATRuleTagOutput {
	return i.ToNATRuleTagOutputWithContext(context.Background())
}

func (i NATRuleTagArgs) ToNATRuleTagOutputWithContext(ctx context.Context) NATRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NATRuleTagOutput)
}

// NATRuleTagArrayInput is an input type that accepts NATRuleTagArray and NATRuleTagArrayOutput values.
// You can construct a concrete instance of `NATRuleTagArrayInput` via:
//
//          NATRuleTagArray{ NATRuleTagArgs{...} }
type NATRuleTagArrayInput interface {
	pulumi.Input

	ToNATRuleTagArrayOutput() NATRuleTagArrayOutput
	ToNATRuleTagArrayOutputWithContext(context.Context) NATRuleTagArrayOutput
}

type NATRuleTagArray []NATRuleTagInput

func (NATRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NATRuleTag)(nil)).Elem()
}

func (i NATRuleTagArray) ToNATRuleTagArrayOutput() NATRuleTagArrayOutput {
	return i.ToNATRuleTagArrayOutputWithContext(context.Background())
}

func (i NATRuleTagArray) ToNATRuleTagArrayOutputWithContext(ctx context.Context) NATRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NATRuleTagArrayOutput)
}

type NATRuleTagOutput struct{ *pulumi.OutputState }

func (NATRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NATRuleTag)(nil)).Elem()
}

func (o NATRuleTagOutput) ToNATRuleTagOutput() NATRuleTagOutput {
	return o
}

func (o NATRuleTagOutput) ToNATRuleTagOutputWithContext(ctx context.Context) NATRuleTagOutput {
	return o
}

func (o NATRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NATRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NATRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NATRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type NATRuleTagArrayOutput struct{ *pulumi.OutputState }

func (NATRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NATRuleTag)(nil)).Elem()
}

func (o NATRuleTagArrayOutput) ToNATRuleTagArrayOutput() NATRuleTagArrayOutput {
	return o
}

func (o NATRuleTagArrayOutput) ToNATRuleTagArrayOutputWithContext(ctx context.Context) NATRuleTagArrayOutput {
	return o
}

func (o NATRuleTagArrayOutput) Index(i pulumi.IntInput) NATRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NATRuleTag {
		return vs[0].([]NATRuleTag)[vs[1].(int)]
	}).(NATRuleTagOutput)
}

type NSServiceGroupTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// NSServiceGroupTagInput is an input type that accepts NSServiceGroupTagArgs and NSServiceGroupTagOutput values.
// You can construct a concrete instance of `NSServiceGroupTagInput` via:
//
//          NSServiceGroupTagArgs{...}
type NSServiceGroupTagInput interface {
	pulumi.Input

	ToNSServiceGroupTagOutput() NSServiceGroupTagOutput
	ToNSServiceGroupTagOutputWithContext(context.Context) NSServiceGroupTagOutput
}

type NSServiceGroupTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (NSServiceGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NSServiceGroupTag)(nil)).Elem()
}

func (i NSServiceGroupTagArgs) ToNSServiceGroupTagOutput() NSServiceGroupTagOutput {
	return i.ToNSServiceGroupTagOutputWithContext(context.Background())
}

func (i NSServiceGroupTagArgs) ToNSServiceGroupTagOutputWithContext(ctx context.Context) NSServiceGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSServiceGroupTagOutput)
}

// NSServiceGroupTagArrayInput is an input type that accepts NSServiceGroupTagArray and NSServiceGroupTagArrayOutput values.
// You can construct a concrete instance of `NSServiceGroupTagArrayInput` via:
//
//          NSServiceGroupTagArray{ NSServiceGroupTagArgs{...} }
type NSServiceGroupTagArrayInput interface {
	pulumi.Input

	ToNSServiceGroupTagArrayOutput() NSServiceGroupTagArrayOutput
	ToNSServiceGroupTagArrayOutputWithContext(context.Context) NSServiceGroupTagArrayOutput
}

type NSServiceGroupTagArray []NSServiceGroupTagInput

func (NSServiceGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NSServiceGroupTag)(nil)).Elem()
}

func (i NSServiceGroupTagArray) ToNSServiceGroupTagArrayOutput() NSServiceGroupTagArrayOutput {
	return i.ToNSServiceGroupTagArrayOutputWithContext(context.Background())
}

func (i NSServiceGroupTagArray) ToNSServiceGroupTagArrayOutputWithContext(ctx context.Context) NSServiceGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSServiceGroupTagArrayOutput)
}

type NSServiceGroupTagOutput struct{ *pulumi.OutputState }

func (NSServiceGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NSServiceGroupTag)(nil)).Elem()
}

func (o NSServiceGroupTagOutput) ToNSServiceGroupTagOutput() NSServiceGroupTagOutput {
	return o
}

func (o NSServiceGroupTagOutput) ToNSServiceGroupTagOutputWithContext(ctx context.Context) NSServiceGroupTagOutput {
	return o
}

func (o NSServiceGroupTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NSServiceGroupTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NSServiceGroupTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NSServiceGroupTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type NSServiceGroupTagArrayOutput struct{ *pulumi.OutputState }

func (NSServiceGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NSServiceGroupTag)(nil)).Elem()
}

func (o NSServiceGroupTagArrayOutput) ToNSServiceGroupTagArrayOutput() NSServiceGroupTagArrayOutput {
	return o
}

func (o NSServiceGroupTagArrayOutput) ToNSServiceGroupTagArrayOutputWithContext(ctx context.Context) NSServiceGroupTagArrayOutput {
	return o
}

func (o NSServiceGroupTagArrayOutput) Index(i pulumi.IntInput) NSServiceGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NSServiceGroupTag {
		return vs[0].([]NSServiceGroupTag)[vs[1].(int)]
	}).(NSServiceGroupTagOutput)
}

type NSroupMember struct {
	TargetType string `pulumi:"targetType"`
	Value      string `pulumi:"value"`
}

// NSroupMemberInput is an input type that accepts NSroupMemberArgs and NSroupMemberOutput values.
// You can construct a concrete instance of `NSroupMemberInput` via:
//
//          NSroupMemberArgs{...}
type NSroupMemberInput interface {
	pulumi.Input

	ToNSroupMemberOutput() NSroupMemberOutput
	ToNSroupMemberOutputWithContext(context.Context) NSroupMemberOutput
}

type NSroupMemberArgs struct {
	TargetType pulumi.StringInput `pulumi:"targetType"`
	Value      pulumi.StringInput `pulumi:"value"`
}

func (NSroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NSroupMember)(nil)).Elem()
}

func (i NSroupMemberArgs) ToNSroupMemberOutput() NSroupMemberOutput {
	return i.ToNSroupMemberOutputWithContext(context.Background())
}

func (i NSroupMemberArgs) ToNSroupMemberOutputWithContext(ctx context.Context) NSroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSroupMemberOutput)
}

// NSroupMemberArrayInput is an input type that accepts NSroupMemberArray and NSroupMemberArrayOutput values.
// You can construct a concrete instance of `NSroupMemberArrayInput` via:
//
//          NSroupMemberArray{ NSroupMemberArgs{...} }
type NSroupMemberArrayInput interface {
	pulumi.Input

	ToNSroupMemberArrayOutput() NSroupMemberArrayOutput
	ToNSroupMemberArrayOutputWithContext(context.Context) NSroupMemberArrayOutput
}

type NSroupMemberArray []NSroupMemberInput

func (NSroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NSroupMember)(nil)).Elem()
}

func (i NSroupMemberArray) ToNSroupMemberArrayOutput() NSroupMemberArrayOutput {
	return i.ToNSroupMemberArrayOutputWithContext(context.Background())
}

func (i NSroupMemberArray) ToNSroupMemberArrayOutputWithContext(ctx context.Context) NSroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSroupMemberArrayOutput)
}

type NSroupMemberOutput struct{ *pulumi.OutputState }

func (NSroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NSroupMember)(nil)).Elem()
}

func (o NSroupMemberOutput) ToNSroupMemberOutput() NSroupMemberOutput {
	return o
}

func (o NSroupMemberOutput) ToNSroupMemberOutputWithContext(ctx context.Context) NSroupMemberOutput {
	return o
}

func (o NSroupMemberOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v NSroupMember) string { return v.TargetType }).(pulumi.StringOutput)
}

func (o NSroupMemberOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NSroupMember) string { return v.Value }).(pulumi.StringOutput)
}

type NSroupMemberArrayOutput struct{ *pulumi.OutputState }

func (NSroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NSroupMember)(nil)).Elem()
}

func (o NSroupMemberArrayOutput) ToNSroupMemberArrayOutput() NSroupMemberArrayOutput {
	return o
}

func (o NSroupMemberArrayOutput) ToNSroupMemberArrayOutputWithContext(ctx context.Context) NSroupMemberArrayOutput {
	return o
}

func (o NSroupMemberArrayOutput) Index(i pulumi.IntInput) NSroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NSroupMember {
		return vs[0].([]NSroupMember)[vs[1].(int)]
	}).(NSroupMemberOutput)
}

type NSroupMembershipCriteria struct {
	Scope      *string `pulumi:"scope"`
	ScopeOp    *string `pulumi:"scopeOp"`
	Tag        *string `pulumi:"tag"`
	TagOp      *string `pulumi:"tagOp"`
	TargetType string  `pulumi:"targetType"`
}

// NSroupMembershipCriteriaInput is an input type that accepts NSroupMembershipCriteriaArgs and NSroupMembershipCriteriaOutput values.
// You can construct a concrete instance of `NSroupMembershipCriteriaInput` via:
//
//          NSroupMembershipCriteriaArgs{...}
type NSroupMembershipCriteriaInput interface {
	pulumi.Input

	ToNSroupMembershipCriteriaOutput() NSroupMembershipCriteriaOutput
	ToNSroupMembershipCriteriaOutputWithContext(context.Context) NSroupMembershipCriteriaOutput
}

type NSroupMembershipCriteriaArgs struct {
	Scope      pulumi.StringPtrInput `pulumi:"scope"`
	ScopeOp    pulumi.StringPtrInput `pulumi:"scopeOp"`
	Tag        pulumi.StringPtrInput `pulumi:"tag"`
	TagOp      pulumi.StringPtrInput `pulumi:"tagOp"`
	TargetType pulumi.StringInput    `pulumi:"targetType"`
}

func (NSroupMembershipCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NSroupMembershipCriteria)(nil)).Elem()
}

func (i NSroupMembershipCriteriaArgs) ToNSroupMembershipCriteriaOutput() NSroupMembershipCriteriaOutput {
	return i.ToNSroupMembershipCriteriaOutputWithContext(context.Background())
}

func (i NSroupMembershipCriteriaArgs) ToNSroupMembershipCriteriaOutputWithContext(ctx context.Context) NSroupMembershipCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSroupMembershipCriteriaOutput)
}

// NSroupMembershipCriteriaArrayInput is an input type that accepts NSroupMembershipCriteriaArray and NSroupMembershipCriteriaArrayOutput values.
// You can construct a concrete instance of `NSroupMembershipCriteriaArrayInput` via:
//
//          NSroupMembershipCriteriaArray{ NSroupMembershipCriteriaArgs{...} }
type NSroupMembershipCriteriaArrayInput interface {
	pulumi.Input

	ToNSroupMembershipCriteriaArrayOutput() NSroupMembershipCriteriaArrayOutput
	ToNSroupMembershipCriteriaArrayOutputWithContext(context.Context) NSroupMembershipCriteriaArrayOutput
}

type NSroupMembershipCriteriaArray []NSroupMembershipCriteriaInput

func (NSroupMembershipCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NSroupMembershipCriteria)(nil)).Elem()
}

func (i NSroupMembershipCriteriaArray) ToNSroupMembershipCriteriaArrayOutput() NSroupMembershipCriteriaArrayOutput {
	return i.ToNSroupMembershipCriteriaArrayOutputWithContext(context.Background())
}

func (i NSroupMembershipCriteriaArray) ToNSroupMembershipCriteriaArrayOutputWithContext(ctx context.Context) NSroupMembershipCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSroupMembershipCriteriaArrayOutput)
}

type NSroupMembershipCriteriaOutput struct{ *pulumi.OutputState }

func (NSroupMembershipCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NSroupMembershipCriteria)(nil)).Elem()
}

func (o NSroupMembershipCriteriaOutput) ToNSroupMembershipCriteriaOutput() NSroupMembershipCriteriaOutput {
	return o
}

func (o NSroupMembershipCriteriaOutput) ToNSroupMembershipCriteriaOutputWithContext(ctx context.Context) NSroupMembershipCriteriaOutput {
	return o
}

func (o NSroupMembershipCriteriaOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NSroupMembershipCriteria) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NSroupMembershipCriteriaOutput) ScopeOp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NSroupMembershipCriteria) *string { return v.ScopeOp }).(pulumi.StringPtrOutput)
}

func (o NSroupMembershipCriteriaOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NSroupMembershipCriteria) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func (o NSroupMembershipCriteriaOutput) TagOp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NSroupMembershipCriteria) *string { return v.TagOp }).(pulumi.StringPtrOutput)
}

func (o NSroupMembershipCriteriaOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v NSroupMembershipCriteria) string { return v.TargetType }).(pulumi.StringOutput)
}

type NSroupMembershipCriteriaArrayOutput struct{ *pulumi.OutputState }

func (NSroupMembershipCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NSroupMembershipCriteria)(nil)).Elem()
}

func (o NSroupMembershipCriteriaArrayOutput) ToNSroupMembershipCriteriaArrayOutput() NSroupMembershipCriteriaArrayOutput {
	return o
}

func (o NSroupMembershipCriteriaArrayOutput) ToNSroupMembershipCriteriaArrayOutputWithContext(ctx context.Context) NSroupMembershipCriteriaArrayOutput {
	return o
}

func (o NSroupMembershipCriteriaArrayOutput) Index(i pulumi.IntInput) NSroupMembershipCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NSroupMembershipCriteria {
		return vs[0].([]NSroupMembershipCriteria)[vs[1].(int)]
	}).(NSroupMembershipCriteriaOutput)
}

type NSroupTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// NSroupTagInput is an input type that accepts NSroupTagArgs and NSroupTagOutput values.
// You can construct a concrete instance of `NSroupTagInput` via:
//
//          NSroupTagArgs{...}
type NSroupTagInput interface {
	pulumi.Input

	ToNSroupTagOutput() NSroupTagOutput
	ToNSroupTagOutputWithContext(context.Context) NSroupTagOutput
}

type NSroupTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (NSroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NSroupTag)(nil)).Elem()
}

func (i NSroupTagArgs) ToNSroupTagOutput() NSroupTagOutput {
	return i.ToNSroupTagOutputWithContext(context.Background())
}

func (i NSroupTagArgs) ToNSroupTagOutputWithContext(ctx context.Context) NSroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSroupTagOutput)
}

// NSroupTagArrayInput is an input type that accepts NSroupTagArray and NSroupTagArrayOutput values.
// You can construct a concrete instance of `NSroupTagArrayInput` via:
//
//          NSroupTagArray{ NSroupTagArgs{...} }
type NSroupTagArrayInput interface {
	pulumi.Input

	ToNSroupTagArrayOutput() NSroupTagArrayOutput
	ToNSroupTagArrayOutputWithContext(context.Context) NSroupTagArrayOutput
}

type NSroupTagArray []NSroupTagInput

func (NSroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NSroupTag)(nil)).Elem()
}

func (i NSroupTagArray) ToNSroupTagArrayOutput() NSroupTagArrayOutput {
	return i.ToNSroupTagArrayOutputWithContext(context.Background())
}

func (i NSroupTagArray) ToNSroupTagArrayOutputWithContext(ctx context.Context) NSroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSroupTagArrayOutput)
}

type NSroupTagOutput struct{ *pulumi.OutputState }

func (NSroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NSroupTag)(nil)).Elem()
}

func (o NSroupTagOutput) ToNSroupTagOutput() NSroupTagOutput {
	return o
}

func (o NSroupTagOutput) ToNSroupTagOutputWithContext(ctx context.Context) NSroupTagOutput {
	return o
}

func (o NSroupTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NSroupTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NSroupTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NSroupTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type NSroupTagArrayOutput struct{ *pulumi.OutputState }

func (NSroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NSroupTag)(nil)).Elem()
}

func (o NSroupTagArrayOutput) ToNSroupTagArrayOutput() NSroupTagArrayOutput {
	return o
}

func (o NSroupTagArrayOutput) ToNSroupTagArrayOutputWithContext(ctx context.Context) NSroupTagArrayOutput {
	return o
}

func (o NSroupTagArrayOutput) Index(i pulumi.IntInput) NSroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NSroupTag {
		return vs[0].([]NSroupTag)[vs[1].(int)]
	}).(NSroupTagOutput)
}

type PolicyBGPConfigRouteAggregation struct {
	Prefix      *string `pulumi:"prefix"`
	SummaryOnly *bool   `pulumi:"summaryOnly"`
}

// PolicyBGPConfigRouteAggregationInput is an input type that accepts PolicyBGPConfigRouteAggregationArgs and PolicyBGPConfigRouteAggregationOutput values.
// You can construct a concrete instance of `PolicyBGPConfigRouteAggregationInput` via:
//
//          PolicyBGPConfigRouteAggregationArgs{...}
type PolicyBGPConfigRouteAggregationInput interface {
	pulumi.Input

	ToPolicyBGPConfigRouteAggregationOutput() PolicyBGPConfigRouteAggregationOutput
	ToPolicyBGPConfigRouteAggregationOutputWithContext(context.Context) PolicyBGPConfigRouteAggregationOutput
}

type PolicyBGPConfigRouteAggregationArgs struct {
	Prefix      pulumi.StringPtrInput `pulumi:"prefix"`
	SummaryOnly pulumi.BoolPtrInput   `pulumi:"summaryOnly"`
}

func (PolicyBGPConfigRouteAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBGPConfigRouteAggregation)(nil)).Elem()
}

func (i PolicyBGPConfigRouteAggregationArgs) ToPolicyBGPConfigRouteAggregationOutput() PolicyBGPConfigRouteAggregationOutput {
	return i.ToPolicyBGPConfigRouteAggregationOutputWithContext(context.Background())
}

func (i PolicyBGPConfigRouteAggregationArgs) ToPolicyBGPConfigRouteAggregationOutputWithContext(ctx context.Context) PolicyBGPConfigRouteAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPConfigRouteAggregationOutput)
}

// PolicyBGPConfigRouteAggregationArrayInput is an input type that accepts PolicyBGPConfigRouteAggregationArray and PolicyBGPConfigRouteAggregationArrayOutput values.
// You can construct a concrete instance of `PolicyBGPConfigRouteAggregationArrayInput` via:
//
//          PolicyBGPConfigRouteAggregationArray{ PolicyBGPConfigRouteAggregationArgs{...} }
type PolicyBGPConfigRouteAggregationArrayInput interface {
	pulumi.Input

	ToPolicyBGPConfigRouteAggregationArrayOutput() PolicyBGPConfigRouteAggregationArrayOutput
	ToPolicyBGPConfigRouteAggregationArrayOutputWithContext(context.Context) PolicyBGPConfigRouteAggregationArrayOutput
}

type PolicyBGPConfigRouteAggregationArray []PolicyBGPConfigRouteAggregationInput

func (PolicyBGPConfigRouteAggregationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBGPConfigRouteAggregation)(nil)).Elem()
}

func (i PolicyBGPConfigRouteAggregationArray) ToPolicyBGPConfigRouteAggregationArrayOutput() PolicyBGPConfigRouteAggregationArrayOutput {
	return i.ToPolicyBGPConfigRouteAggregationArrayOutputWithContext(context.Background())
}

func (i PolicyBGPConfigRouteAggregationArray) ToPolicyBGPConfigRouteAggregationArrayOutputWithContext(ctx context.Context) PolicyBGPConfigRouteAggregationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPConfigRouteAggregationArrayOutput)
}

type PolicyBGPConfigRouteAggregationOutput struct{ *pulumi.OutputState }

func (PolicyBGPConfigRouteAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBGPConfigRouteAggregation)(nil)).Elem()
}

func (o PolicyBGPConfigRouteAggregationOutput) ToPolicyBGPConfigRouteAggregationOutput() PolicyBGPConfigRouteAggregationOutput {
	return o
}

func (o PolicyBGPConfigRouteAggregationOutput) ToPolicyBGPConfigRouteAggregationOutputWithContext(ctx context.Context) PolicyBGPConfigRouteAggregationOutput {
	return o
}

func (o PolicyBGPConfigRouteAggregationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBGPConfigRouteAggregation) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o PolicyBGPConfigRouteAggregationOutput) SummaryOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyBGPConfigRouteAggregation) *bool { return v.SummaryOnly }).(pulumi.BoolPtrOutput)
}

type PolicyBGPConfigRouteAggregationArrayOutput struct{ *pulumi.OutputState }

func (PolicyBGPConfigRouteAggregationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBGPConfigRouteAggregation)(nil)).Elem()
}

func (o PolicyBGPConfigRouteAggregationArrayOutput) ToPolicyBGPConfigRouteAggregationArrayOutput() PolicyBGPConfigRouteAggregationArrayOutput {
	return o
}

func (o PolicyBGPConfigRouteAggregationArrayOutput) ToPolicyBGPConfigRouteAggregationArrayOutputWithContext(ctx context.Context) PolicyBGPConfigRouteAggregationArrayOutput {
	return o
}

func (o PolicyBGPConfigRouteAggregationArrayOutput) Index(i pulumi.IntInput) PolicyBGPConfigRouteAggregationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyBGPConfigRouteAggregation {
		return vs[0].([]PolicyBGPConfigRouteAggregation)[vs[1].(int)]
	}).(PolicyBGPConfigRouteAggregationOutput)
}

type PolicyBGPConfigTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyBGPConfigTagInput is an input type that accepts PolicyBGPConfigTagArgs and PolicyBGPConfigTagOutput values.
// You can construct a concrete instance of `PolicyBGPConfigTagInput` via:
//
//          PolicyBGPConfigTagArgs{...}
type PolicyBGPConfigTagInput interface {
	pulumi.Input

	ToPolicyBGPConfigTagOutput() PolicyBGPConfigTagOutput
	ToPolicyBGPConfigTagOutputWithContext(context.Context) PolicyBGPConfigTagOutput
}

type PolicyBGPConfigTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyBGPConfigTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBGPConfigTag)(nil)).Elem()
}

func (i PolicyBGPConfigTagArgs) ToPolicyBGPConfigTagOutput() PolicyBGPConfigTagOutput {
	return i.ToPolicyBGPConfigTagOutputWithContext(context.Background())
}

func (i PolicyBGPConfigTagArgs) ToPolicyBGPConfigTagOutputWithContext(ctx context.Context) PolicyBGPConfigTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPConfigTagOutput)
}

// PolicyBGPConfigTagArrayInput is an input type that accepts PolicyBGPConfigTagArray and PolicyBGPConfigTagArrayOutput values.
// You can construct a concrete instance of `PolicyBGPConfigTagArrayInput` via:
//
//          PolicyBGPConfigTagArray{ PolicyBGPConfigTagArgs{...} }
type PolicyBGPConfigTagArrayInput interface {
	pulumi.Input

	ToPolicyBGPConfigTagArrayOutput() PolicyBGPConfigTagArrayOutput
	ToPolicyBGPConfigTagArrayOutputWithContext(context.Context) PolicyBGPConfigTagArrayOutput
}

type PolicyBGPConfigTagArray []PolicyBGPConfigTagInput

func (PolicyBGPConfigTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBGPConfigTag)(nil)).Elem()
}

func (i PolicyBGPConfigTagArray) ToPolicyBGPConfigTagArrayOutput() PolicyBGPConfigTagArrayOutput {
	return i.ToPolicyBGPConfigTagArrayOutputWithContext(context.Background())
}

func (i PolicyBGPConfigTagArray) ToPolicyBGPConfigTagArrayOutputWithContext(ctx context.Context) PolicyBGPConfigTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPConfigTagArrayOutput)
}

type PolicyBGPConfigTagOutput struct{ *pulumi.OutputState }

func (PolicyBGPConfigTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBGPConfigTag)(nil)).Elem()
}

func (o PolicyBGPConfigTagOutput) ToPolicyBGPConfigTagOutput() PolicyBGPConfigTagOutput {
	return o
}

func (o PolicyBGPConfigTagOutput) ToPolicyBGPConfigTagOutputWithContext(ctx context.Context) PolicyBGPConfigTagOutput {
	return o
}

func (o PolicyBGPConfigTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBGPConfigTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyBGPConfigTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBGPConfigTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyBGPConfigTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyBGPConfigTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBGPConfigTag)(nil)).Elem()
}

func (o PolicyBGPConfigTagArrayOutput) ToPolicyBGPConfigTagArrayOutput() PolicyBGPConfigTagArrayOutput {
	return o
}

func (o PolicyBGPConfigTagArrayOutput) ToPolicyBGPConfigTagArrayOutputWithContext(ctx context.Context) PolicyBGPConfigTagArrayOutput {
	return o
}

func (o PolicyBGPConfigTagArrayOutput) Index(i pulumi.IntInput) PolicyBGPConfigTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyBGPConfigTag {
		return vs[0].([]PolicyBGPConfigTag)[vs[1].(int)]
	}).(PolicyBGPConfigTagOutput)
}

type PolicyBGPNeighborBfdConfig struct {
	Enabled  *bool `pulumi:"enabled"`
	Interval *int  `pulumi:"interval"`
	Multiple *int  `pulumi:"multiple"`
}

// PolicyBGPNeighborBfdConfigInput is an input type that accepts PolicyBGPNeighborBfdConfigArgs and PolicyBGPNeighborBfdConfigOutput values.
// You can construct a concrete instance of `PolicyBGPNeighborBfdConfigInput` via:
//
//          PolicyBGPNeighborBfdConfigArgs{...}
type PolicyBGPNeighborBfdConfigInput interface {
	pulumi.Input

	ToPolicyBGPNeighborBfdConfigOutput() PolicyBGPNeighborBfdConfigOutput
	ToPolicyBGPNeighborBfdConfigOutputWithContext(context.Context) PolicyBGPNeighborBfdConfigOutput
}

type PolicyBGPNeighborBfdConfigArgs struct {
	Enabled  pulumi.BoolPtrInput `pulumi:"enabled"`
	Interval pulumi.IntPtrInput  `pulumi:"interval"`
	Multiple pulumi.IntPtrInput  `pulumi:"multiple"`
}

func (PolicyBGPNeighborBfdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBGPNeighborBfdConfig)(nil)).Elem()
}

func (i PolicyBGPNeighborBfdConfigArgs) ToPolicyBGPNeighborBfdConfigOutput() PolicyBGPNeighborBfdConfigOutput {
	return i.ToPolicyBGPNeighborBfdConfigOutputWithContext(context.Background())
}

func (i PolicyBGPNeighborBfdConfigArgs) ToPolicyBGPNeighborBfdConfigOutputWithContext(ctx context.Context) PolicyBGPNeighborBfdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPNeighborBfdConfigOutput)
}

func (i PolicyBGPNeighborBfdConfigArgs) ToPolicyBGPNeighborBfdConfigPtrOutput() PolicyBGPNeighborBfdConfigPtrOutput {
	return i.ToPolicyBGPNeighborBfdConfigPtrOutputWithContext(context.Background())
}

func (i PolicyBGPNeighborBfdConfigArgs) ToPolicyBGPNeighborBfdConfigPtrOutputWithContext(ctx context.Context) PolicyBGPNeighborBfdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPNeighborBfdConfigOutput).ToPolicyBGPNeighborBfdConfigPtrOutputWithContext(ctx)
}

// PolicyBGPNeighborBfdConfigPtrInput is an input type that accepts PolicyBGPNeighborBfdConfigArgs, PolicyBGPNeighborBfdConfigPtr and PolicyBGPNeighborBfdConfigPtrOutput values.
// You can construct a concrete instance of `PolicyBGPNeighborBfdConfigPtrInput` via:
//
//          PolicyBGPNeighborBfdConfigArgs{...}
//
//  or:
//
//          nil
type PolicyBGPNeighborBfdConfigPtrInput interface {
	pulumi.Input

	ToPolicyBGPNeighborBfdConfigPtrOutput() PolicyBGPNeighborBfdConfigPtrOutput
	ToPolicyBGPNeighborBfdConfigPtrOutputWithContext(context.Context) PolicyBGPNeighborBfdConfigPtrOutput
}

type policyBGPNeighborBfdConfigPtrType PolicyBGPNeighborBfdConfigArgs

func PolicyBGPNeighborBfdConfigPtr(v *PolicyBGPNeighborBfdConfigArgs) PolicyBGPNeighborBfdConfigPtrInput {
	return (*policyBGPNeighborBfdConfigPtrType)(v)
}

func (*policyBGPNeighborBfdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBGPNeighborBfdConfig)(nil)).Elem()
}

func (i *policyBGPNeighborBfdConfigPtrType) ToPolicyBGPNeighborBfdConfigPtrOutput() PolicyBGPNeighborBfdConfigPtrOutput {
	return i.ToPolicyBGPNeighborBfdConfigPtrOutputWithContext(context.Background())
}

func (i *policyBGPNeighborBfdConfigPtrType) ToPolicyBGPNeighborBfdConfigPtrOutputWithContext(ctx context.Context) PolicyBGPNeighborBfdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPNeighborBfdConfigPtrOutput)
}

type PolicyBGPNeighborBfdConfigOutput struct{ *pulumi.OutputState }

func (PolicyBGPNeighborBfdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBGPNeighborBfdConfig)(nil)).Elem()
}

func (o PolicyBGPNeighborBfdConfigOutput) ToPolicyBGPNeighborBfdConfigOutput() PolicyBGPNeighborBfdConfigOutput {
	return o
}

func (o PolicyBGPNeighborBfdConfigOutput) ToPolicyBGPNeighborBfdConfigOutputWithContext(ctx context.Context) PolicyBGPNeighborBfdConfigOutput {
	return o
}

func (o PolicyBGPNeighborBfdConfigOutput) ToPolicyBGPNeighborBfdConfigPtrOutput() PolicyBGPNeighborBfdConfigPtrOutput {
	return o.ToPolicyBGPNeighborBfdConfigPtrOutputWithContext(context.Background())
}

func (o PolicyBGPNeighborBfdConfigOutput) ToPolicyBGPNeighborBfdConfigPtrOutputWithContext(ctx context.Context) PolicyBGPNeighborBfdConfigPtrOutput {
	return o.ApplyT(func(v PolicyBGPNeighborBfdConfig) *PolicyBGPNeighborBfdConfig {
		return &v
	}).(PolicyBGPNeighborBfdConfigPtrOutput)
}
func (o PolicyBGPNeighborBfdConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyBGPNeighborBfdConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyBGPNeighborBfdConfigOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyBGPNeighborBfdConfig) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o PolicyBGPNeighborBfdConfigOutput) Multiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyBGPNeighborBfdConfig) *int { return v.Multiple }).(pulumi.IntPtrOutput)
}

type PolicyBGPNeighborBfdConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyBGPNeighborBfdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBGPNeighborBfdConfig)(nil)).Elem()
}

func (o PolicyBGPNeighborBfdConfigPtrOutput) ToPolicyBGPNeighborBfdConfigPtrOutput() PolicyBGPNeighborBfdConfigPtrOutput {
	return o
}

func (o PolicyBGPNeighborBfdConfigPtrOutput) ToPolicyBGPNeighborBfdConfigPtrOutputWithContext(ctx context.Context) PolicyBGPNeighborBfdConfigPtrOutput {
	return o
}

func (o PolicyBGPNeighborBfdConfigPtrOutput) Elem() PolicyBGPNeighborBfdConfigOutput {
	return o.ApplyT(func(v *PolicyBGPNeighborBfdConfig) PolicyBGPNeighborBfdConfig { return *v }).(PolicyBGPNeighborBfdConfigOutput)
}

func (o PolicyBGPNeighborBfdConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyBGPNeighborBfdConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyBGPNeighborBfdConfigPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyBGPNeighborBfdConfig) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o PolicyBGPNeighborBfdConfigPtrOutput) Multiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyBGPNeighborBfdConfig) *int {
		if v == nil {
			return nil
		}
		return v.Multiple
	}).(pulumi.IntPtrOutput)
}

type PolicyBGPNeighborRouteFiltering struct {
	AddressFamily  string  `pulumi:"addressFamily"`
	Enabled        *bool   `pulumi:"enabled"`
	InRouteFilter  *string `pulumi:"inRouteFilter"`
	MaximumRoutes  *int    `pulumi:"maximumRoutes"`
	OutRouteFilter *string `pulumi:"outRouteFilter"`
}

// PolicyBGPNeighborRouteFilteringInput is an input type that accepts PolicyBGPNeighborRouteFilteringArgs and PolicyBGPNeighborRouteFilteringOutput values.
// You can construct a concrete instance of `PolicyBGPNeighborRouteFilteringInput` via:
//
//          PolicyBGPNeighborRouteFilteringArgs{...}
type PolicyBGPNeighborRouteFilteringInput interface {
	pulumi.Input

	ToPolicyBGPNeighborRouteFilteringOutput() PolicyBGPNeighborRouteFilteringOutput
	ToPolicyBGPNeighborRouteFilteringOutputWithContext(context.Context) PolicyBGPNeighborRouteFilteringOutput
}

type PolicyBGPNeighborRouteFilteringArgs struct {
	AddressFamily  pulumi.StringInput    `pulumi:"addressFamily"`
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
	InRouteFilter  pulumi.StringPtrInput `pulumi:"inRouteFilter"`
	MaximumRoutes  pulumi.IntPtrInput    `pulumi:"maximumRoutes"`
	OutRouteFilter pulumi.StringPtrInput `pulumi:"outRouteFilter"`
}

func (PolicyBGPNeighborRouteFilteringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBGPNeighborRouteFiltering)(nil)).Elem()
}

func (i PolicyBGPNeighborRouteFilteringArgs) ToPolicyBGPNeighborRouteFilteringOutput() PolicyBGPNeighborRouteFilteringOutput {
	return i.ToPolicyBGPNeighborRouteFilteringOutputWithContext(context.Background())
}

func (i PolicyBGPNeighborRouteFilteringArgs) ToPolicyBGPNeighborRouteFilteringOutputWithContext(ctx context.Context) PolicyBGPNeighborRouteFilteringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPNeighborRouteFilteringOutput)
}

// PolicyBGPNeighborRouteFilteringArrayInput is an input type that accepts PolicyBGPNeighborRouteFilteringArray and PolicyBGPNeighborRouteFilteringArrayOutput values.
// You can construct a concrete instance of `PolicyBGPNeighborRouteFilteringArrayInput` via:
//
//          PolicyBGPNeighborRouteFilteringArray{ PolicyBGPNeighborRouteFilteringArgs{...} }
type PolicyBGPNeighborRouteFilteringArrayInput interface {
	pulumi.Input

	ToPolicyBGPNeighborRouteFilteringArrayOutput() PolicyBGPNeighborRouteFilteringArrayOutput
	ToPolicyBGPNeighborRouteFilteringArrayOutputWithContext(context.Context) PolicyBGPNeighborRouteFilteringArrayOutput
}

type PolicyBGPNeighborRouteFilteringArray []PolicyBGPNeighborRouteFilteringInput

func (PolicyBGPNeighborRouteFilteringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBGPNeighborRouteFiltering)(nil)).Elem()
}

func (i PolicyBGPNeighborRouteFilteringArray) ToPolicyBGPNeighborRouteFilteringArrayOutput() PolicyBGPNeighborRouteFilteringArrayOutput {
	return i.ToPolicyBGPNeighborRouteFilteringArrayOutputWithContext(context.Background())
}

func (i PolicyBGPNeighborRouteFilteringArray) ToPolicyBGPNeighborRouteFilteringArrayOutputWithContext(ctx context.Context) PolicyBGPNeighborRouteFilteringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPNeighborRouteFilteringArrayOutput)
}

type PolicyBGPNeighborRouteFilteringOutput struct{ *pulumi.OutputState }

func (PolicyBGPNeighborRouteFilteringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBGPNeighborRouteFiltering)(nil)).Elem()
}

func (o PolicyBGPNeighborRouteFilteringOutput) ToPolicyBGPNeighborRouteFilteringOutput() PolicyBGPNeighborRouteFilteringOutput {
	return o
}

func (o PolicyBGPNeighborRouteFilteringOutput) ToPolicyBGPNeighborRouteFilteringOutputWithContext(ctx context.Context) PolicyBGPNeighborRouteFilteringOutput {
	return o
}

func (o PolicyBGPNeighborRouteFilteringOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyBGPNeighborRouteFiltering) string { return v.AddressFamily }).(pulumi.StringOutput)
}

func (o PolicyBGPNeighborRouteFilteringOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyBGPNeighborRouteFiltering) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyBGPNeighborRouteFilteringOutput) InRouteFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBGPNeighborRouteFiltering) *string { return v.InRouteFilter }).(pulumi.StringPtrOutput)
}

func (o PolicyBGPNeighborRouteFilteringOutput) MaximumRoutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyBGPNeighborRouteFiltering) *int { return v.MaximumRoutes }).(pulumi.IntPtrOutput)
}

func (o PolicyBGPNeighborRouteFilteringOutput) OutRouteFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBGPNeighborRouteFiltering) *string { return v.OutRouteFilter }).(pulumi.StringPtrOutput)
}

type PolicyBGPNeighborRouteFilteringArrayOutput struct{ *pulumi.OutputState }

func (PolicyBGPNeighborRouteFilteringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBGPNeighborRouteFiltering)(nil)).Elem()
}

func (o PolicyBGPNeighborRouteFilteringArrayOutput) ToPolicyBGPNeighborRouteFilteringArrayOutput() PolicyBGPNeighborRouteFilteringArrayOutput {
	return o
}

func (o PolicyBGPNeighborRouteFilteringArrayOutput) ToPolicyBGPNeighborRouteFilteringArrayOutputWithContext(ctx context.Context) PolicyBGPNeighborRouteFilteringArrayOutput {
	return o
}

func (o PolicyBGPNeighborRouteFilteringArrayOutput) Index(i pulumi.IntInput) PolicyBGPNeighborRouteFilteringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyBGPNeighborRouteFiltering {
		return vs[0].([]PolicyBGPNeighborRouteFiltering)[vs[1].(int)]
	}).(PolicyBGPNeighborRouteFilteringOutput)
}

type PolicyBGPNeighborTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyBGPNeighborTagInput is an input type that accepts PolicyBGPNeighborTagArgs and PolicyBGPNeighborTagOutput values.
// You can construct a concrete instance of `PolicyBGPNeighborTagInput` via:
//
//          PolicyBGPNeighborTagArgs{...}
type PolicyBGPNeighborTagInput interface {
	pulumi.Input

	ToPolicyBGPNeighborTagOutput() PolicyBGPNeighborTagOutput
	ToPolicyBGPNeighborTagOutputWithContext(context.Context) PolicyBGPNeighborTagOutput
}

type PolicyBGPNeighborTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyBGPNeighborTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBGPNeighborTag)(nil)).Elem()
}

func (i PolicyBGPNeighborTagArgs) ToPolicyBGPNeighborTagOutput() PolicyBGPNeighborTagOutput {
	return i.ToPolicyBGPNeighborTagOutputWithContext(context.Background())
}

func (i PolicyBGPNeighborTagArgs) ToPolicyBGPNeighborTagOutputWithContext(ctx context.Context) PolicyBGPNeighborTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPNeighborTagOutput)
}

// PolicyBGPNeighborTagArrayInput is an input type that accepts PolicyBGPNeighborTagArray and PolicyBGPNeighborTagArrayOutput values.
// You can construct a concrete instance of `PolicyBGPNeighborTagArrayInput` via:
//
//          PolicyBGPNeighborTagArray{ PolicyBGPNeighborTagArgs{...} }
type PolicyBGPNeighborTagArrayInput interface {
	pulumi.Input

	ToPolicyBGPNeighborTagArrayOutput() PolicyBGPNeighborTagArrayOutput
	ToPolicyBGPNeighborTagArrayOutputWithContext(context.Context) PolicyBGPNeighborTagArrayOutput
}

type PolicyBGPNeighborTagArray []PolicyBGPNeighborTagInput

func (PolicyBGPNeighborTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBGPNeighborTag)(nil)).Elem()
}

func (i PolicyBGPNeighborTagArray) ToPolicyBGPNeighborTagArrayOutput() PolicyBGPNeighborTagArrayOutput {
	return i.ToPolicyBGPNeighborTagArrayOutputWithContext(context.Background())
}

func (i PolicyBGPNeighborTagArray) ToPolicyBGPNeighborTagArrayOutputWithContext(ctx context.Context) PolicyBGPNeighborTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBGPNeighborTagArrayOutput)
}

type PolicyBGPNeighborTagOutput struct{ *pulumi.OutputState }

func (PolicyBGPNeighborTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBGPNeighborTag)(nil)).Elem()
}

func (o PolicyBGPNeighborTagOutput) ToPolicyBGPNeighborTagOutput() PolicyBGPNeighborTagOutput {
	return o
}

func (o PolicyBGPNeighborTagOutput) ToPolicyBGPNeighborTagOutputWithContext(ctx context.Context) PolicyBGPNeighborTagOutput {
	return o
}

func (o PolicyBGPNeighborTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBGPNeighborTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyBGPNeighborTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBGPNeighborTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyBGPNeighborTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyBGPNeighborTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBGPNeighborTag)(nil)).Elem()
}

func (o PolicyBGPNeighborTagArrayOutput) ToPolicyBGPNeighborTagArrayOutput() PolicyBGPNeighborTagArrayOutput {
	return o
}

func (o PolicyBGPNeighborTagArrayOutput) ToPolicyBGPNeighborTagArrayOutputWithContext(ctx context.Context) PolicyBGPNeighborTagArrayOutput {
	return o
}

func (o PolicyBGPNeighborTagArrayOutput) Index(i pulumi.IntInput) PolicyBGPNeighborTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyBGPNeighborTag {
		return vs[0].([]PolicyBGPNeighborTag)[vs[1].(int)]
	}).(PolicyBGPNeighborTagOutput)
}

type PolicyContextProfileAppId struct {
	Description  *string                                `pulumi:"description"`
	IsAlgType    *bool                                  `pulumi:"isAlgType"`
	SubAttribute *PolicyContextProfileAppIdSubAttribute `pulumi:"subAttribute"`
	Values       []string                               `pulumi:"values"`
}

// PolicyContextProfileAppIdInput is an input type that accepts PolicyContextProfileAppIdArgs and PolicyContextProfileAppIdOutput values.
// You can construct a concrete instance of `PolicyContextProfileAppIdInput` via:
//
//          PolicyContextProfileAppIdArgs{...}
type PolicyContextProfileAppIdInput interface {
	pulumi.Input

	ToPolicyContextProfileAppIdOutput() PolicyContextProfileAppIdOutput
	ToPolicyContextProfileAppIdOutputWithContext(context.Context) PolicyContextProfileAppIdOutput
}

type PolicyContextProfileAppIdArgs struct {
	Description  pulumi.StringPtrInput                         `pulumi:"description"`
	IsAlgType    pulumi.BoolPtrInput                           `pulumi:"isAlgType"`
	SubAttribute PolicyContextProfileAppIdSubAttributePtrInput `pulumi:"subAttribute"`
	Values       pulumi.StringArrayInput                       `pulumi:"values"`
}

func (PolicyContextProfileAppIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContextProfileAppId)(nil)).Elem()
}

func (i PolicyContextProfileAppIdArgs) ToPolicyContextProfileAppIdOutput() PolicyContextProfileAppIdOutput {
	return i.ToPolicyContextProfileAppIdOutputWithContext(context.Background())
}

func (i PolicyContextProfileAppIdArgs) ToPolicyContextProfileAppIdOutputWithContext(ctx context.Context) PolicyContextProfileAppIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileAppIdOutput)
}

// PolicyContextProfileAppIdArrayInput is an input type that accepts PolicyContextProfileAppIdArray and PolicyContextProfileAppIdArrayOutput values.
// You can construct a concrete instance of `PolicyContextProfileAppIdArrayInput` via:
//
//          PolicyContextProfileAppIdArray{ PolicyContextProfileAppIdArgs{...} }
type PolicyContextProfileAppIdArrayInput interface {
	pulumi.Input

	ToPolicyContextProfileAppIdArrayOutput() PolicyContextProfileAppIdArrayOutput
	ToPolicyContextProfileAppIdArrayOutputWithContext(context.Context) PolicyContextProfileAppIdArrayOutput
}

type PolicyContextProfileAppIdArray []PolicyContextProfileAppIdInput

func (PolicyContextProfileAppIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyContextProfileAppId)(nil)).Elem()
}

func (i PolicyContextProfileAppIdArray) ToPolicyContextProfileAppIdArrayOutput() PolicyContextProfileAppIdArrayOutput {
	return i.ToPolicyContextProfileAppIdArrayOutputWithContext(context.Background())
}

func (i PolicyContextProfileAppIdArray) ToPolicyContextProfileAppIdArrayOutputWithContext(ctx context.Context) PolicyContextProfileAppIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileAppIdArrayOutput)
}

type PolicyContextProfileAppIdOutput struct{ *pulumi.OutputState }

func (PolicyContextProfileAppIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContextProfileAppId)(nil)).Elem()
}

func (o PolicyContextProfileAppIdOutput) ToPolicyContextProfileAppIdOutput() PolicyContextProfileAppIdOutput {
	return o
}

func (o PolicyContextProfileAppIdOutput) ToPolicyContextProfileAppIdOutputWithContext(ctx context.Context) PolicyContextProfileAppIdOutput {
	return o
}

func (o PolicyContextProfileAppIdOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyContextProfileAppId) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyContextProfileAppIdOutput) IsAlgType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyContextProfileAppId) *bool { return v.IsAlgType }).(pulumi.BoolPtrOutput)
}

func (o PolicyContextProfileAppIdOutput) SubAttribute() PolicyContextProfileAppIdSubAttributePtrOutput {
	return o.ApplyT(func(v PolicyContextProfileAppId) *PolicyContextProfileAppIdSubAttribute { return v.SubAttribute }).(PolicyContextProfileAppIdSubAttributePtrOutput)
}

func (o PolicyContextProfileAppIdOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyContextProfileAppId) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyContextProfileAppIdArrayOutput struct{ *pulumi.OutputState }

func (PolicyContextProfileAppIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyContextProfileAppId)(nil)).Elem()
}

func (o PolicyContextProfileAppIdArrayOutput) ToPolicyContextProfileAppIdArrayOutput() PolicyContextProfileAppIdArrayOutput {
	return o
}

func (o PolicyContextProfileAppIdArrayOutput) ToPolicyContextProfileAppIdArrayOutputWithContext(ctx context.Context) PolicyContextProfileAppIdArrayOutput {
	return o
}

func (o PolicyContextProfileAppIdArrayOutput) Index(i pulumi.IntInput) PolicyContextProfileAppIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyContextProfileAppId {
		return vs[0].([]PolicyContextProfileAppId)[vs[1].(int)]
	}).(PolicyContextProfileAppIdOutput)
}

type PolicyContextProfileAppIdSubAttribute struct {
	CifsSmbVersions []string `pulumi:"cifsSmbVersions"`
	TlsCipherSuites []string `pulumi:"tlsCipherSuites"`
	TlsVersions     []string `pulumi:"tlsVersions"`
}

// PolicyContextProfileAppIdSubAttributeInput is an input type that accepts PolicyContextProfileAppIdSubAttributeArgs and PolicyContextProfileAppIdSubAttributeOutput values.
// You can construct a concrete instance of `PolicyContextProfileAppIdSubAttributeInput` via:
//
//          PolicyContextProfileAppIdSubAttributeArgs{...}
type PolicyContextProfileAppIdSubAttributeInput interface {
	pulumi.Input

	ToPolicyContextProfileAppIdSubAttributeOutput() PolicyContextProfileAppIdSubAttributeOutput
	ToPolicyContextProfileAppIdSubAttributeOutputWithContext(context.Context) PolicyContextProfileAppIdSubAttributeOutput
}

type PolicyContextProfileAppIdSubAttributeArgs struct {
	CifsSmbVersions pulumi.StringArrayInput `pulumi:"cifsSmbVersions"`
	TlsCipherSuites pulumi.StringArrayInput `pulumi:"tlsCipherSuites"`
	TlsVersions     pulumi.StringArrayInput `pulumi:"tlsVersions"`
}

func (PolicyContextProfileAppIdSubAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContextProfileAppIdSubAttribute)(nil)).Elem()
}

func (i PolicyContextProfileAppIdSubAttributeArgs) ToPolicyContextProfileAppIdSubAttributeOutput() PolicyContextProfileAppIdSubAttributeOutput {
	return i.ToPolicyContextProfileAppIdSubAttributeOutputWithContext(context.Background())
}

func (i PolicyContextProfileAppIdSubAttributeArgs) ToPolicyContextProfileAppIdSubAttributeOutputWithContext(ctx context.Context) PolicyContextProfileAppIdSubAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileAppIdSubAttributeOutput)
}

func (i PolicyContextProfileAppIdSubAttributeArgs) ToPolicyContextProfileAppIdSubAttributePtrOutput() PolicyContextProfileAppIdSubAttributePtrOutput {
	return i.ToPolicyContextProfileAppIdSubAttributePtrOutputWithContext(context.Background())
}

func (i PolicyContextProfileAppIdSubAttributeArgs) ToPolicyContextProfileAppIdSubAttributePtrOutputWithContext(ctx context.Context) PolicyContextProfileAppIdSubAttributePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileAppIdSubAttributeOutput).ToPolicyContextProfileAppIdSubAttributePtrOutputWithContext(ctx)
}

// PolicyContextProfileAppIdSubAttributePtrInput is an input type that accepts PolicyContextProfileAppIdSubAttributeArgs, PolicyContextProfileAppIdSubAttributePtr and PolicyContextProfileAppIdSubAttributePtrOutput values.
// You can construct a concrete instance of `PolicyContextProfileAppIdSubAttributePtrInput` via:
//
//          PolicyContextProfileAppIdSubAttributeArgs{...}
//
//  or:
//
//          nil
type PolicyContextProfileAppIdSubAttributePtrInput interface {
	pulumi.Input

	ToPolicyContextProfileAppIdSubAttributePtrOutput() PolicyContextProfileAppIdSubAttributePtrOutput
	ToPolicyContextProfileAppIdSubAttributePtrOutputWithContext(context.Context) PolicyContextProfileAppIdSubAttributePtrOutput
}

type policyContextProfileAppIdSubAttributePtrType PolicyContextProfileAppIdSubAttributeArgs

func PolicyContextProfileAppIdSubAttributePtr(v *PolicyContextProfileAppIdSubAttributeArgs) PolicyContextProfileAppIdSubAttributePtrInput {
	return (*policyContextProfileAppIdSubAttributePtrType)(v)
}

func (*policyContextProfileAppIdSubAttributePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyContextProfileAppIdSubAttribute)(nil)).Elem()
}

func (i *policyContextProfileAppIdSubAttributePtrType) ToPolicyContextProfileAppIdSubAttributePtrOutput() PolicyContextProfileAppIdSubAttributePtrOutput {
	return i.ToPolicyContextProfileAppIdSubAttributePtrOutputWithContext(context.Background())
}

func (i *policyContextProfileAppIdSubAttributePtrType) ToPolicyContextProfileAppIdSubAttributePtrOutputWithContext(ctx context.Context) PolicyContextProfileAppIdSubAttributePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileAppIdSubAttributePtrOutput)
}

type PolicyContextProfileAppIdSubAttributeOutput struct{ *pulumi.OutputState }

func (PolicyContextProfileAppIdSubAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContextProfileAppIdSubAttribute)(nil)).Elem()
}

func (o PolicyContextProfileAppIdSubAttributeOutput) ToPolicyContextProfileAppIdSubAttributeOutput() PolicyContextProfileAppIdSubAttributeOutput {
	return o
}

func (o PolicyContextProfileAppIdSubAttributeOutput) ToPolicyContextProfileAppIdSubAttributeOutputWithContext(ctx context.Context) PolicyContextProfileAppIdSubAttributeOutput {
	return o
}

func (o PolicyContextProfileAppIdSubAttributeOutput) ToPolicyContextProfileAppIdSubAttributePtrOutput() PolicyContextProfileAppIdSubAttributePtrOutput {
	return o.ToPolicyContextProfileAppIdSubAttributePtrOutputWithContext(context.Background())
}

func (o PolicyContextProfileAppIdSubAttributeOutput) ToPolicyContextProfileAppIdSubAttributePtrOutputWithContext(ctx context.Context) PolicyContextProfileAppIdSubAttributePtrOutput {
	return o.ApplyT(func(v PolicyContextProfileAppIdSubAttribute) *PolicyContextProfileAppIdSubAttribute {
		return &v
	}).(PolicyContextProfileAppIdSubAttributePtrOutput)
}
func (o PolicyContextProfileAppIdSubAttributeOutput) CifsSmbVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyContextProfileAppIdSubAttribute) []string { return v.CifsSmbVersions }).(pulumi.StringArrayOutput)
}

func (o PolicyContextProfileAppIdSubAttributeOutput) TlsCipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyContextProfileAppIdSubAttribute) []string { return v.TlsCipherSuites }).(pulumi.StringArrayOutput)
}

func (o PolicyContextProfileAppIdSubAttributeOutput) TlsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyContextProfileAppIdSubAttribute) []string { return v.TlsVersions }).(pulumi.StringArrayOutput)
}

type PolicyContextProfileAppIdSubAttributePtrOutput struct{ *pulumi.OutputState }

func (PolicyContextProfileAppIdSubAttributePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyContextProfileAppIdSubAttribute)(nil)).Elem()
}

func (o PolicyContextProfileAppIdSubAttributePtrOutput) ToPolicyContextProfileAppIdSubAttributePtrOutput() PolicyContextProfileAppIdSubAttributePtrOutput {
	return o
}

func (o PolicyContextProfileAppIdSubAttributePtrOutput) ToPolicyContextProfileAppIdSubAttributePtrOutputWithContext(ctx context.Context) PolicyContextProfileAppIdSubAttributePtrOutput {
	return o
}

func (o PolicyContextProfileAppIdSubAttributePtrOutput) Elem() PolicyContextProfileAppIdSubAttributeOutput {
	return o.ApplyT(func(v *PolicyContextProfileAppIdSubAttribute) PolicyContextProfileAppIdSubAttribute { return *v }).(PolicyContextProfileAppIdSubAttributeOutput)
}

func (o PolicyContextProfileAppIdSubAttributePtrOutput) CifsSmbVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyContextProfileAppIdSubAttribute) []string {
		if v == nil {
			return nil
		}
		return v.CifsSmbVersions
	}).(pulumi.StringArrayOutput)
}

func (o PolicyContextProfileAppIdSubAttributePtrOutput) TlsCipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyContextProfileAppIdSubAttribute) []string {
		if v == nil {
			return nil
		}
		return v.TlsCipherSuites
	}).(pulumi.StringArrayOutput)
}

func (o PolicyContextProfileAppIdSubAttributePtrOutput) TlsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyContextProfileAppIdSubAttribute) []string {
		if v == nil {
			return nil
		}
		return v.TlsVersions
	}).(pulumi.StringArrayOutput)
}

type PolicyContextProfileDomainName struct {
	Description *string  `pulumi:"description"`
	Values      []string `pulumi:"values"`
}

// PolicyContextProfileDomainNameInput is an input type that accepts PolicyContextProfileDomainNameArgs and PolicyContextProfileDomainNameOutput values.
// You can construct a concrete instance of `PolicyContextProfileDomainNameInput` via:
//
//          PolicyContextProfileDomainNameArgs{...}
type PolicyContextProfileDomainNameInput interface {
	pulumi.Input

	ToPolicyContextProfileDomainNameOutput() PolicyContextProfileDomainNameOutput
	ToPolicyContextProfileDomainNameOutputWithContext(context.Context) PolicyContextProfileDomainNameOutput
}

type PolicyContextProfileDomainNameArgs struct {
	Description pulumi.StringPtrInput   `pulumi:"description"`
	Values      pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyContextProfileDomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContextProfileDomainName)(nil)).Elem()
}

func (i PolicyContextProfileDomainNameArgs) ToPolicyContextProfileDomainNameOutput() PolicyContextProfileDomainNameOutput {
	return i.ToPolicyContextProfileDomainNameOutputWithContext(context.Background())
}

func (i PolicyContextProfileDomainNameArgs) ToPolicyContextProfileDomainNameOutputWithContext(ctx context.Context) PolicyContextProfileDomainNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileDomainNameOutput)
}

func (i PolicyContextProfileDomainNameArgs) ToPolicyContextProfileDomainNamePtrOutput() PolicyContextProfileDomainNamePtrOutput {
	return i.ToPolicyContextProfileDomainNamePtrOutputWithContext(context.Background())
}

func (i PolicyContextProfileDomainNameArgs) ToPolicyContextProfileDomainNamePtrOutputWithContext(ctx context.Context) PolicyContextProfileDomainNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileDomainNameOutput).ToPolicyContextProfileDomainNamePtrOutputWithContext(ctx)
}

// PolicyContextProfileDomainNamePtrInput is an input type that accepts PolicyContextProfileDomainNameArgs, PolicyContextProfileDomainNamePtr and PolicyContextProfileDomainNamePtrOutput values.
// You can construct a concrete instance of `PolicyContextProfileDomainNamePtrInput` via:
//
//          PolicyContextProfileDomainNameArgs{...}
//
//  or:
//
//          nil
type PolicyContextProfileDomainNamePtrInput interface {
	pulumi.Input

	ToPolicyContextProfileDomainNamePtrOutput() PolicyContextProfileDomainNamePtrOutput
	ToPolicyContextProfileDomainNamePtrOutputWithContext(context.Context) PolicyContextProfileDomainNamePtrOutput
}

type policyContextProfileDomainNamePtrType PolicyContextProfileDomainNameArgs

func PolicyContextProfileDomainNamePtr(v *PolicyContextProfileDomainNameArgs) PolicyContextProfileDomainNamePtrInput {
	return (*policyContextProfileDomainNamePtrType)(v)
}

func (*policyContextProfileDomainNamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyContextProfileDomainName)(nil)).Elem()
}

func (i *policyContextProfileDomainNamePtrType) ToPolicyContextProfileDomainNamePtrOutput() PolicyContextProfileDomainNamePtrOutput {
	return i.ToPolicyContextProfileDomainNamePtrOutputWithContext(context.Background())
}

func (i *policyContextProfileDomainNamePtrType) ToPolicyContextProfileDomainNamePtrOutputWithContext(ctx context.Context) PolicyContextProfileDomainNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileDomainNamePtrOutput)
}

type PolicyContextProfileDomainNameOutput struct{ *pulumi.OutputState }

func (PolicyContextProfileDomainNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContextProfileDomainName)(nil)).Elem()
}

func (o PolicyContextProfileDomainNameOutput) ToPolicyContextProfileDomainNameOutput() PolicyContextProfileDomainNameOutput {
	return o
}

func (o PolicyContextProfileDomainNameOutput) ToPolicyContextProfileDomainNameOutputWithContext(ctx context.Context) PolicyContextProfileDomainNameOutput {
	return o
}

func (o PolicyContextProfileDomainNameOutput) ToPolicyContextProfileDomainNamePtrOutput() PolicyContextProfileDomainNamePtrOutput {
	return o.ToPolicyContextProfileDomainNamePtrOutputWithContext(context.Background())
}

func (o PolicyContextProfileDomainNameOutput) ToPolicyContextProfileDomainNamePtrOutputWithContext(ctx context.Context) PolicyContextProfileDomainNamePtrOutput {
	return o.ApplyT(func(v PolicyContextProfileDomainName) *PolicyContextProfileDomainName {
		return &v
	}).(PolicyContextProfileDomainNamePtrOutput)
}
func (o PolicyContextProfileDomainNameOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyContextProfileDomainName) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyContextProfileDomainNameOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyContextProfileDomainName) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyContextProfileDomainNamePtrOutput struct{ *pulumi.OutputState }

func (PolicyContextProfileDomainNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyContextProfileDomainName)(nil)).Elem()
}

func (o PolicyContextProfileDomainNamePtrOutput) ToPolicyContextProfileDomainNamePtrOutput() PolicyContextProfileDomainNamePtrOutput {
	return o
}

func (o PolicyContextProfileDomainNamePtrOutput) ToPolicyContextProfileDomainNamePtrOutputWithContext(ctx context.Context) PolicyContextProfileDomainNamePtrOutput {
	return o
}

func (o PolicyContextProfileDomainNamePtrOutput) Elem() PolicyContextProfileDomainNameOutput {
	return o.ApplyT(func(v *PolicyContextProfileDomainName) PolicyContextProfileDomainName { return *v }).(PolicyContextProfileDomainNameOutput)
}

func (o PolicyContextProfileDomainNamePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyContextProfileDomainName) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o PolicyContextProfileDomainNamePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyContextProfileDomainName) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PolicyContextProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyContextProfileTagInput is an input type that accepts PolicyContextProfileTagArgs and PolicyContextProfileTagOutput values.
// You can construct a concrete instance of `PolicyContextProfileTagInput` via:
//
//          PolicyContextProfileTagArgs{...}
type PolicyContextProfileTagInput interface {
	pulumi.Input

	ToPolicyContextProfileTagOutput() PolicyContextProfileTagOutput
	ToPolicyContextProfileTagOutputWithContext(context.Context) PolicyContextProfileTagOutput
}

type PolicyContextProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyContextProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContextProfileTag)(nil)).Elem()
}

func (i PolicyContextProfileTagArgs) ToPolicyContextProfileTagOutput() PolicyContextProfileTagOutput {
	return i.ToPolicyContextProfileTagOutputWithContext(context.Background())
}

func (i PolicyContextProfileTagArgs) ToPolicyContextProfileTagOutputWithContext(ctx context.Context) PolicyContextProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileTagOutput)
}

// PolicyContextProfileTagArrayInput is an input type that accepts PolicyContextProfileTagArray and PolicyContextProfileTagArrayOutput values.
// You can construct a concrete instance of `PolicyContextProfileTagArrayInput` via:
//
//          PolicyContextProfileTagArray{ PolicyContextProfileTagArgs{...} }
type PolicyContextProfileTagArrayInput interface {
	pulumi.Input

	ToPolicyContextProfileTagArrayOutput() PolicyContextProfileTagArrayOutput
	ToPolicyContextProfileTagArrayOutputWithContext(context.Context) PolicyContextProfileTagArrayOutput
}

type PolicyContextProfileTagArray []PolicyContextProfileTagInput

func (PolicyContextProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyContextProfileTag)(nil)).Elem()
}

func (i PolicyContextProfileTagArray) ToPolicyContextProfileTagArrayOutput() PolicyContextProfileTagArrayOutput {
	return i.ToPolicyContextProfileTagArrayOutputWithContext(context.Background())
}

func (i PolicyContextProfileTagArray) ToPolicyContextProfileTagArrayOutputWithContext(ctx context.Context) PolicyContextProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileTagArrayOutput)
}

type PolicyContextProfileTagOutput struct{ *pulumi.OutputState }

func (PolicyContextProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContextProfileTag)(nil)).Elem()
}

func (o PolicyContextProfileTagOutput) ToPolicyContextProfileTagOutput() PolicyContextProfileTagOutput {
	return o
}

func (o PolicyContextProfileTagOutput) ToPolicyContextProfileTagOutputWithContext(ctx context.Context) PolicyContextProfileTagOutput {
	return o
}

func (o PolicyContextProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyContextProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyContextProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyContextProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyContextProfileTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyContextProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyContextProfileTag)(nil)).Elem()
}

func (o PolicyContextProfileTagArrayOutput) ToPolicyContextProfileTagArrayOutput() PolicyContextProfileTagArrayOutput {
	return o
}

func (o PolicyContextProfileTagArrayOutput) ToPolicyContextProfileTagArrayOutputWithContext(ctx context.Context) PolicyContextProfileTagArrayOutput {
	return o
}

func (o PolicyContextProfileTagArrayOutput) Index(i pulumi.IntInput) PolicyContextProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyContextProfileTag {
		return vs[0].([]PolicyContextProfileTag)[vs[1].(int)]
	}).(PolicyContextProfileTagOutput)
}

type PolicyContextProfileUrlCategory struct {
	Description *string  `pulumi:"description"`
	Values      []string `pulumi:"values"`
}

// PolicyContextProfileUrlCategoryInput is an input type that accepts PolicyContextProfileUrlCategoryArgs and PolicyContextProfileUrlCategoryOutput values.
// You can construct a concrete instance of `PolicyContextProfileUrlCategoryInput` via:
//
//          PolicyContextProfileUrlCategoryArgs{...}
type PolicyContextProfileUrlCategoryInput interface {
	pulumi.Input

	ToPolicyContextProfileUrlCategoryOutput() PolicyContextProfileUrlCategoryOutput
	ToPolicyContextProfileUrlCategoryOutputWithContext(context.Context) PolicyContextProfileUrlCategoryOutput
}

type PolicyContextProfileUrlCategoryArgs struct {
	Description pulumi.StringPtrInput   `pulumi:"description"`
	Values      pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyContextProfileUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContextProfileUrlCategory)(nil)).Elem()
}

func (i PolicyContextProfileUrlCategoryArgs) ToPolicyContextProfileUrlCategoryOutput() PolicyContextProfileUrlCategoryOutput {
	return i.ToPolicyContextProfileUrlCategoryOutputWithContext(context.Background())
}

func (i PolicyContextProfileUrlCategoryArgs) ToPolicyContextProfileUrlCategoryOutputWithContext(ctx context.Context) PolicyContextProfileUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileUrlCategoryOutput)
}

func (i PolicyContextProfileUrlCategoryArgs) ToPolicyContextProfileUrlCategoryPtrOutput() PolicyContextProfileUrlCategoryPtrOutput {
	return i.ToPolicyContextProfileUrlCategoryPtrOutputWithContext(context.Background())
}

func (i PolicyContextProfileUrlCategoryArgs) ToPolicyContextProfileUrlCategoryPtrOutputWithContext(ctx context.Context) PolicyContextProfileUrlCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileUrlCategoryOutput).ToPolicyContextProfileUrlCategoryPtrOutputWithContext(ctx)
}

// PolicyContextProfileUrlCategoryPtrInput is an input type that accepts PolicyContextProfileUrlCategoryArgs, PolicyContextProfileUrlCategoryPtr and PolicyContextProfileUrlCategoryPtrOutput values.
// You can construct a concrete instance of `PolicyContextProfileUrlCategoryPtrInput` via:
//
//          PolicyContextProfileUrlCategoryArgs{...}
//
//  or:
//
//          nil
type PolicyContextProfileUrlCategoryPtrInput interface {
	pulumi.Input

	ToPolicyContextProfileUrlCategoryPtrOutput() PolicyContextProfileUrlCategoryPtrOutput
	ToPolicyContextProfileUrlCategoryPtrOutputWithContext(context.Context) PolicyContextProfileUrlCategoryPtrOutput
}

type policyContextProfileUrlCategoryPtrType PolicyContextProfileUrlCategoryArgs

func PolicyContextProfileUrlCategoryPtr(v *PolicyContextProfileUrlCategoryArgs) PolicyContextProfileUrlCategoryPtrInput {
	return (*policyContextProfileUrlCategoryPtrType)(v)
}

func (*policyContextProfileUrlCategoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyContextProfileUrlCategory)(nil)).Elem()
}

func (i *policyContextProfileUrlCategoryPtrType) ToPolicyContextProfileUrlCategoryPtrOutput() PolicyContextProfileUrlCategoryPtrOutput {
	return i.ToPolicyContextProfileUrlCategoryPtrOutputWithContext(context.Background())
}

func (i *policyContextProfileUrlCategoryPtrType) ToPolicyContextProfileUrlCategoryPtrOutputWithContext(ctx context.Context) PolicyContextProfileUrlCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContextProfileUrlCategoryPtrOutput)
}

type PolicyContextProfileUrlCategoryOutput struct{ *pulumi.OutputState }

func (PolicyContextProfileUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContextProfileUrlCategory)(nil)).Elem()
}

func (o PolicyContextProfileUrlCategoryOutput) ToPolicyContextProfileUrlCategoryOutput() PolicyContextProfileUrlCategoryOutput {
	return o
}

func (o PolicyContextProfileUrlCategoryOutput) ToPolicyContextProfileUrlCategoryOutputWithContext(ctx context.Context) PolicyContextProfileUrlCategoryOutput {
	return o
}

func (o PolicyContextProfileUrlCategoryOutput) ToPolicyContextProfileUrlCategoryPtrOutput() PolicyContextProfileUrlCategoryPtrOutput {
	return o.ToPolicyContextProfileUrlCategoryPtrOutputWithContext(context.Background())
}

func (o PolicyContextProfileUrlCategoryOutput) ToPolicyContextProfileUrlCategoryPtrOutputWithContext(ctx context.Context) PolicyContextProfileUrlCategoryPtrOutput {
	return o.ApplyT(func(v PolicyContextProfileUrlCategory) *PolicyContextProfileUrlCategory {
		return &v
	}).(PolicyContextProfileUrlCategoryPtrOutput)
}
func (o PolicyContextProfileUrlCategoryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyContextProfileUrlCategory) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyContextProfileUrlCategoryOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyContextProfileUrlCategory) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyContextProfileUrlCategoryPtrOutput struct{ *pulumi.OutputState }

func (PolicyContextProfileUrlCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyContextProfileUrlCategory)(nil)).Elem()
}

func (o PolicyContextProfileUrlCategoryPtrOutput) ToPolicyContextProfileUrlCategoryPtrOutput() PolicyContextProfileUrlCategoryPtrOutput {
	return o
}

func (o PolicyContextProfileUrlCategoryPtrOutput) ToPolicyContextProfileUrlCategoryPtrOutputWithContext(ctx context.Context) PolicyContextProfileUrlCategoryPtrOutput {
	return o
}

func (o PolicyContextProfileUrlCategoryPtrOutput) Elem() PolicyContextProfileUrlCategoryOutput {
	return o.ApplyT(func(v *PolicyContextProfileUrlCategory) PolicyContextProfileUrlCategory { return *v }).(PolicyContextProfileUrlCategoryOutput)
}

func (o PolicyContextProfileUrlCategoryPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyContextProfileUrlCategory) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o PolicyContextProfileUrlCategoryPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyContextProfileUrlCategory) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PolicyDHCPRelayTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyDHCPRelayTagInput is an input type that accepts PolicyDHCPRelayTagArgs and PolicyDHCPRelayTagOutput values.
// You can construct a concrete instance of `PolicyDHCPRelayTagInput` via:
//
//          PolicyDHCPRelayTagArgs{...}
type PolicyDHCPRelayTagInput interface {
	pulumi.Input

	ToPolicyDHCPRelayTagOutput() PolicyDHCPRelayTagOutput
	ToPolicyDHCPRelayTagOutputWithContext(context.Context) PolicyDHCPRelayTagOutput
}

type PolicyDHCPRelayTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyDHCPRelayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDHCPRelayTag)(nil)).Elem()
}

func (i PolicyDHCPRelayTagArgs) ToPolicyDHCPRelayTagOutput() PolicyDHCPRelayTagOutput {
	return i.ToPolicyDHCPRelayTagOutputWithContext(context.Background())
}

func (i PolicyDHCPRelayTagArgs) ToPolicyDHCPRelayTagOutputWithContext(ctx context.Context) PolicyDHCPRelayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDHCPRelayTagOutput)
}

// PolicyDHCPRelayTagArrayInput is an input type that accepts PolicyDHCPRelayTagArray and PolicyDHCPRelayTagArrayOutput values.
// You can construct a concrete instance of `PolicyDHCPRelayTagArrayInput` via:
//
//          PolicyDHCPRelayTagArray{ PolicyDHCPRelayTagArgs{...} }
type PolicyDHCPRelayTagArrayInput interface {
	pulumi.Input

	ToPolicyDHCPRelayTagArrayOutput() PolicyDHCPRelayTagArrayOutput
	ToPolicyDHCPRelayTagArrayOutputWithContext(context.Context) PolicyDHCPRelayTagArrayOutput
}

type PolicyDHCPRelayTagArray []PolicyDHCPRelayTagInput

func (PolicyDHCPRelayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDHCPRelayTag)(nil)).Elem()
}

func (i PolicyDHCPRelayTagArray) ToPolicyDHCPRelayTagArrayOutput() PolicyDHCPRelayTagArrayOutput {
	return i.ToPolicyDHCPRelayTagArrayOutputWithContext(context.Background())
}

func (i PolicyDHCPRelayTagArray) ToPolicyDHCPRelayTagArrayOutputWithContext(ctx context.Context) PolicyDHCPRelayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDHCPRelayTagArrayOutput)
}

type PolicyDHCPRelayTagOutput struct{ *pulumi.OutputState }

func (PolicyDHCPRelayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDHCPRelayTag)(nil)).Elem()
}

func (o PolicyDHCPRelayTagOutput) ToPolicyDHCPRelayTagOutput() PolicyDHCPRelayTagOutput {
	return o
}

func (o PolicyDHCPRelayTagOutput) ToPolicyDHCPRelayTagOutputWithContext(ctx context.Context) PolicyDHCPRelayTagOutput {
	return o
}

func (o PolicyDHCPRelayTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDHCPRelayTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyDHCPRelayTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDHCPRelayTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyDHCPRelayTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyDHCPRelayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDHCPRelayTag)(nil)).Elem()
}

func (o PolicyDHCPRelayTagArrayOutput) ToPolicyDHCPRelayTagArrayOutput() PolicyDHCPRelayTagArrayOutput {
	return o
}

func (o PolicyDHCPRelayTagArrayOutput) ToPolicyDHCPRelayTagArrayOutputWithContext(ctx context.Context) PolicyDHCPRelayTagArrayOutput {
	return o
}

func (o PolicyDHCPRelayTagArrayOutput) Index(i pulumi.IntInput) PolicyDHCPRelayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDHCPRelayTag {
		return vs[0].([]PolicyDHCPRelayTag)[vs[1].(int)]
	}).(PolicyDHCPRelayTagOutput)
}

type PolicyDHCPServerTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyDHCPServerTagInput is an input type that accepts PolicyDHCPServerTagArgs and PolicyDHCPServerTagOutput values.
// You can construct a concrete instance of `PolicyDHCPServerTagInput` via:
//
//          PolicyDHCPServerTagArgs{...}
type PolicyDHCPServerTagInput interface {
	pulumi.Input

	ToPolicyDHCPServerTagOutput() PolicyDHCPServerTagOutput
	ToPolicyDHCPServerTagOutputWithContext(context.Context) PolicyDHCPServerTagOutput
}

type PolicyDHCPServerTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyDHCPServerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDHCPServerTag)(nil)).Elem()
}

func (i PolicyDHCPServerTagArgs) ToPolicyDHCPServerTagOutput() PolicyDHCPServerTagOutput {
	return i.ToPolicyDHCPServerTagOutputWithContext(context.Background())
}

func (i PolicyDHCPServerTagArgs) ToPolicyDHCPServerTagOutputWithContext(ctx context.Context) PolicyDHCPServerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDHCPServerTagOutput)
}

// PolicyDHCPServerTagArrayInput is an input type that accepts PolicyDHCPServerTagArray and PolicyDHCPServerTagArrayOutput values.
// You can construct a concrete instance of `PolicyDHCPServerTagArrayInput` via:
//
//          PolicyDHCPServerTagArray{ PolicyDHCPServerTagArgs{...} }
type PolicyDHCPServerTagArrayInput interface {
	pulumi.Input

	ToPolicyDHCPServerTagArrayOutput() PolicyDHCPServerTagArrayOutput
	ToPolicyDHCPServerTagArrayOutputWithContext(context.Context) PolicyDHCPServerTagArrayOutput
}

type PolicyDHCPServerTagArray []PolicyDHCPServerTagInput

func (PolicyDHCPServerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDHCPServerTag)(nil)).Elem()
}

func (i PolicyDHCPServerTagArray) ToPolicyDHCPServerTagArrayOutput() PolicyDHCPServerTagArrayOutput {
	return i.ToPolicyDHCPServerTagArrayOutputWithContext(context.Background())
}

func (i PolicyDHCPServerTagArray) ToPolicyDHCPServerTagArrayOutputWithContext(ctx context.Context) PolicyDHCPServerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDHCPServerTagArrayOutput)
}

type PolicyDHCPServerTagOutput struct{ *pulumi.OutputState }

func (PolicyDHCPServerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDHCPServerTag)(nil)).Elem()
}

func (o PolicyDHCPServerTagOutput) ToPolicyDHCPServerTagOutput() PolicyDHCPServerTagOutput {
	return o
}

func (o PolicyDHCPServerTagOutput) ToPolicyDHCPServerTagOutputWithContext(ctx context.Context) PolicyDHCPServerTagOutput {
	return o
}

func (o PolicyDHCPServerTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDHCPServerTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyDHCPServerTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDHCPServerTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyDHCPServerTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyDHCPServerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDHCPServerTag)(nil)).Elem()
}

func (o PolicyDHCPServerTagArrayOutput) ToPolicyDHCPServerTagArrayOutput() PolicyDHCPServerTagArrayOutput {
	return o
}

func (o PolicyDHCPServerTagArrayOutput) ToPolicyDHCPServerTagArrayOutputWithContext(ctx context.Context) PolicyDHCPServerTagArrayOutput {
	return o
}

func (o PolicyDHCPServerTagArrayOutput) Index(i pulumi.IntInput) PolicyDHCPServerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDHCPServerTag {
		return vs[0].([]PolicyDHCPServerTag)[vs[1].(int)]
	}).(PolicyDHCPServerTagOutput)
}

type PolicyGatewayPolicyRule struct {
	Action               *string                      `pulumi:"action"`
	Description          *string                      `pulumi:"description"`
	DestinationGroups    []string                     `pulumi:"destinationGroups"`
	DestinationsExcluded *bool                        `pulumi:"destinationsExcluded"`
	Direction            *string                      `pulumi:"direction"`
	Disabled             *bool                        `pulumi:"disabled"`
	DisplayName          string                       `pulumi:"displayName"`
	IpVersion            *string                      `pulumi:"ipVersion"`
	LogLabel             *string                      `pulumi:"logLabel"`
	Logged               *bool                        `pulumi:"logged"`
	Notes                *string                      `pulumi:"notes"`
	NsxId                *string                      `pulumi:"nsxId"`
	Profiles             []string                     `pulumi:"profiles"`
	Revision             *int                         `pulumi:"revision"`
	RuleId               *int                         `pulumi:"ruleId"`
	Scopes               []string                     `pulumi:"scopes"`
	SequenceNumber       *int                         `pulumi:"sequenceNumber"`
	Services             []string                     `pulumi:"services"`
	SourceGroups         []string                     `pulumi:"sourceGroups"`
	SourcesExcluded      *bool                        `pulumi:"sourcesExcluded"`
	Tags                 []PolicyGatewayPolicyRuleTag `pulumi:"tags"`
}

// PolicyGatewayPolicyRuleInput is an input type that accepts PolicyGatewayPolicyRuleArgs and PolicyGatewayPolicyRuleOutput values.
// You can construct a concrete instance of `PolicyGatewayPolicyRuleInput` via:
//
//          PolicyGatewayPolicyRuleArgs{...}
type PolicyGatewayPolicyRuleInput interface {
	pulumi.Input

	ToPolicyGatewayPolicyRuleOutput() PolicyGatewayPolicyRuleOutput
	ToPolicyGatewayPolicyRuleOutputWithContext(context.Context) PolicyGatewayPolicyRuleOutput
}

type PolicyGatewayPolicyRuleArgs struct {
	Action               pulumi.StringPtrInput                `pulumi:"action"`
	Description          pulumi.StringPtrInput                `pulumi:"description"`
	DestinationGroups    pulumi.StringArrayInput              `pulumi:"destinationGroups"`
	DestinationsExcluded pulumi.BoolPtrInput                  `pulumi:"destinationsExcluded"`
	Direction            pulumi.StringPtrInput                `pulumi:"direction"`
	Disabled             pulumi.BoolPtrInput                  `pulumi:"disabled"`
	DisplayName          pulumi.StringInput                   `pulumi:"displayName"`
	IpVersion            pulumi.StringPtrInput                `pulumi:"ipVersion"`
	LogLabel             pulumi.StringPtrInput                `pulumi:"logLabel"`
	Logged               pulumi.BoolPtrInput                  `pulumi:"logged"`
	Notes                pulumi.StringPtrInput                `pulumi:"notes"`
	NsxId                pulumi.StringPtrInput                `pulumi:"nsxId"`
	Profiles             pulumi.StringArrayInput              `pulumi:"profiles"`
	Revision             pulumi.IntPtrInput                   `pulumi:"revision"`
	RuleId               pulumi.IntPtrInput                   `pulumi:"ruleId"`
	Scopes               pulumi.StringArrayInput              `pulumi:"scopes"`
	SequenceNumber       pulumi.IntPtrInput                   `pulumi:"sequenceNumber"`
	Services             pulumi.StringArrayInput              `pulumi:"services"`
	SourceGroups         pulumi.StringArrayInput              `pulumi:"sourceGroups"`
	SourcesExcluded      pulumi.BoolPtrInput                  `pulumi:"sourcesExcluded"`
	Tags                 PolicyGatewayPolicyRuleTagArrayInput `pulumi:"tags"`
}

func (PolicyGatewayPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGatewayPolicyRule)(nil)).Elem()
}

func (i PolicyGatewayPolicyRuleArgs) ToPolicyGatewayPolicyRuleOutput() PolicyGatewayPolicyRuleOutput {
	return i.ToPolicyGatewayPolicyRuleOutputWithContext(context.Background())
}

func (i PolicyGatewayPolicyRuleArgs) ToPolicyGatewayPolicyRuleOutputWithContext(ctx context.Context) PolicyGatewayPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGatewayPolicyRuleOutput)
}

// PolicyGatewayPolicyRuleArrayInput is an input type that accepts PolicyGatewayPolicyRuleArray and PolicyGatewayPolicyRuleArrayOutput values.
// You can construct a concrete instance of `PolicyGatewayPolicyRuleArrayInput` via:
//
//          PolicyGatewayPolicyRuleArray{ PolicyGatewayPolicyRuleArgs{...} }
type PolicyGatewayPolicyRuleArrayInput interface {
	pulumi.Input

	ToPolicyGatewayPolicyRuleArrayOutput() PolicyGatewayPolicyRuleArrayOutput
	ToPolicyGatewayPolicyRuleArrayOutputWithContext(context.Context) PolicyGatewayPolicyRuleArrayOutput
}

type PolicyGatewayPolicyRuleArray []PolicyGatewayPolicyRuleInput

func (PolicyGatewayPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGatewayPolicyRule)(nil)).Elem()
}

func (i PolicyGatewayPolicyRuleArray) ToPolicyGatewayPolicyRuleArrayOutput() PolicyGatewayPolicyRuleArrayOutput {
	return i.ToPolicyGatewayPolicyRuleArrayOutputWithContext(context.Background())
}

func (i PolicyGatewayPolicyRuleArray) ToPolicyGatewayPolicyRuleArrayOutputWithContext(ctx context.Context) PolicyGatewayPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGatewayPolicyRuleArrayOutput)
}

type PolicyGatewayPolicyRuleOutput struct{ *pulumi.OutputState }

func (PolicyGatewayPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGatewayPolicyRule)(nil)).Elem()
}

func (o PolicyGatewayPolicyRuleOutput) ToPolicyGatewayPolicyRuleOutput() PolicyGatewayPolicyRuleOutput {
	return o
}

func (o PolicyGatewayPolicyRuleOutput) ToPolicyGatewayPolicyRuleOutputWithContext(ctx context.Context) PolicyGatewayPolicyRuleOutput {
	return o
}

func (o PolicyGatewayPolicyRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) DestinationGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) []string { return v.DestinationGroups }).(pulumi.StringArrayOutput)
}

func (o PolicyGatewayPolicyRuleOutput) DestinationsExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *bool { return v.DestinationsExcluded }).(pulumi.BoolPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o PolicyGatewayPolicyRuleOutput) IpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *string { return v.IpVersion }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) LogLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *string { return v.LogLabel }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) Logged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *bool { return v.Logged }).(pulumi.BoolPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) NsxId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *string { return v.NsxId }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) Profiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) []string { return v.Profiles }).(pulumi.StringArrayOutput)
}

func (o PolicyGatewayPolicyRuleOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) RuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *int { return v.RuleId }).(pulumi.IntPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o PolicyGatewayPolicyRuleOutput) SequenceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *int { return v.SequenceNumber }).(pulumi.IntPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) []string { return v.Services }).(pulumi.StringArrayOutput)
}

func (o PolicyGatewayPolicyRuleOutput) SourceGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) []string { return v.SourceGroups }).(pulumi.StringArrayOutput)
}

func (o PolicyGatewayPolicyRuleOutput) SourcesExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) *bool { return v.SourcesExcluded }).(pulumi.BoolPtrOutput)
}

func (o PolicyGatewayPolicyRuleOutput) Tags() PolicyGatewayPolicyRuleTagArrayOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRule) []PolicyGatewayPolicyRuleTag { return v.Tags }).(PolicyGatewayPolicyRuleTagArrayOutput)
}

type PolicyGatewayPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyGatewayPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGatewayPolicyRule)(nil)).Elem()
}

func (o PolicyGatewayPolicyRuleArrayOutput) ToPolicyGatewayPolicyRuleArrayOutput() PolicyGatewayPolicyRuleArrayOutput {
	return o
}

func (o PolicyGatewayPolicyRuleArrayOutput) ToPolicyGatewayPolicyRuleArrayOutputWithContext(ctx context.Context) PolicyGatewayPolicyRuleArrayOutput {
	return o
}

func (o PolicyGatewayPolicyRuleArrayOutput) Index(i pulumi.IntInput) PolicyGatewayPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGatewayPolicyRule {
		return vs[0].([]PolicyGatewayPolicyRule)[vs[1].(int)]
	}).(PolicyGatewayPolicyRuleOutput)
}

type PolicyGatewayPolicyRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyGatewayPolicyRuleTagInput is an input type that accepts PolicyGatewayPolicyRuleTagArgs and PolicyGatewayPolicyRuleTagOutput values.
// You can construct a concrete instance of `PolicyGatewayPolicyRuleTagInput` via:
//
//          PolicyGatewayPolicyRuleTagArgs{...}
type PolicyGatewayPolicyRuleTagInput interface {
	pulumi.Input

	ToPolicyGatewayPolicyRuleTagOutput() PolicyGatewayPolicyRuleTagOutput
	ToPolicyGatewayPolicyRuleTagOutputWithContext(context.Context) PolicyGatewayPolicyRuleTagOutput
}

type PolicyGatewayPolicyRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyGatewayPolicyRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGatewayPolicyRuleTag)(nil)).Elem()
}

func (i PolicyGatewayPolicyRuleTagArgs) ToPolicyGatewayPolicyRuleTagOutput() PolicyGatewayPolicyRuleTagOutput {
	return i.ToPolicyGatewayPolicyRuleTagOutputWithContext(context.Background())
}

func (i PolicyGatewayPolicyRuleTagArgs) ToPolicyGatewayPolicyRuleTagOutputWithContext(ctx context.Context) PolicyGatewayPolicyRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGatewayPolicyRuleTagOutput)
}

// PolicyGatewayPolicyRuleTagArrayInput is an input type that accepts PolicyGatewayPolicyRuleTagArray and PolicyGatewayPolicyRuleTagArrayOutput values.
// You can construct a concrete instance of `PolicyGatewayPolicyRuleTagArrayInput` via:
//
//          PolicyGatewayPolicyRuleTagArray{ PolicyGatewayPolicyRuleTagArgs{...} }
type PolicyGatewayPolicyRuleTagArrayInput interface {
	pulumi.Input

	ToPolicyGatewayPolicyRuleTagArrayOutput() PolicyGatewayPolicyRuleTagArrayOutput
	ToPolicyGatewayPolicyRuleTagArrayOutputWithContext(context.Context) PolicyGatewayPolicyRuleTagArrayOutput
}

type PolicyGatewayPolicyRuleTagArray []PolicyGatewayPolicyRuleTagInput

func (PolicyGatewayPolicyRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGatewayPolicyRuleTag)(nil)).Elem()
}

func (i PolicyGatewayPolicyRuleTagArray) ToPolicyGatewayPolicyRuleTagArrayOutput() PolicyGatewayPolicyRuleTagArrayOutput {
	return i.ToPolicyGatewayPolicyRuleTagArrayOutputWithContext(context.Background())
}

func (i PolicyGatewayPolicyRuleTagArray) ToPolicyGatewayPolicyRuleTagArrayOutputWithContext(ctx context.Context) PolicyGatewayPolicyRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGatewayPolicyRuleTagArrayOutput)
}

type PolicyGatewayPolicyRuleTagOutput struct{ *pulumi.OutputState }

func (PolicyGatewayPolicyRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGatewayPolicyRuleTag)(nil)).Elem()
}

func (o PolicyGatewayPolicyRuleTagOutput) ToPolicyGatewayPolicyRuleTagOutput() PolicyGatewayPolicyRuleTagOutput {
	return o
}

func (o PolicyGatewayPolicyRuleTagOutput) ToPolicyGatewayPolicyRuleTagOutputWithContext(ctx context.Context) PolicyGatewayPolicyRuleTagOutput {
	return o
}

func (o PolicyGatewayPolicyRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPolicyRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyGatewayPolicyRuleTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyGatewayPolicyRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGatewayPolicyRuleTag)(nil)).Elem()
}

func (o PolicyGatewayPolicyRuleTagArrayOutput) ToPolicyGatewayPolicyRuleTagArrayOutput() PolicyGatewayPolicyRuleTagArrayOutput {
	return o
}

func (o PolicyGatewayPolicyRuleTagArrayOutput) ToPolicyGatewayPolicyRuleTagArrayOutputWithContext(ctx context.Context) PolicyGatewayPolicyRuleTagArrayOutput {
	return o
}

func (o PolicyGatewayPolicyRuleTagArrayOutput) Index(i pulumi.IntInput) PolicyGatewayPolicyRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGatewayPolicyRuleTag {
		return vs[0].([]PolicyGatewayPolicyRuleTag)[vs[1].(int)]
	}).(PolicyGatewayPolicyRuleTagOutput)
}

type PolicyGatewayPolicyTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyGatewayPolicyTagInput is an input type that accepts PolicyGatewayPolicyTagArgs and PolicyGatewayPolicyTagOutput values.
// You can construct a concrete instance of `PolicyGatewayPolicyTagInput` via:
//
//          PolicyGatewayPolicyTagArgs{...}
type PolicyGatewayPolicyTagInput interface {
	pulumi.Input

	ToPolicyGatewayPolicyTagOutput() PolicyGatewayPolicyTagOutput
	ToPolicyGatewayPolicyTagOutputWithContext(context.Context) PolicyGatewayPolicyTagOutput
}

type PolicyGatewayPolicyTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyGatewayPolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGatewayPolicyTag)(nil)).Elem()
}

func (i PolicyGatewayPolicyTagArgs) ToPolicyGatewayPolicyTagOutput() PolicyGatewayPolicyTagOutput {
	return i.ToPolicyGatewayPolicyTagOutputWithContext(context.Background())
}

func (i PolicyGatewayPolicyTagArgs) ToPolicyGatewayPolicyTagOutputWithContext(ctx context.Context) PolicyGatewayPolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGatewayPolicyTagOutput)
}

// PolicyGatewayPolicyTagArrayInput is an input type that accepts PolicyGatewayPolicyTagArray and PolicyGatewayPolicyTagArrayOutput values.
// You can construct a concrete instance of `PolicyGatewayPolicyTagArrayInput` via:
//
//          PolicyGatewayPolicyTagArray{ PolicyGatewayPolicyTagArgs{...} }
type PolicyGatewayPolicyTagArrayInput interface {
	pulumi.Input

	ToPolicyGatewayPolicyTagArrayOutput() PolicyGatewayPolicyTagArrayOutput
	ToPolicyGatewayPolicyTagArrayOutputWithContext(context.Context) PolicyGatewayPolicyTagArrayOutput
}

type PolicyGatewayPolicyTagArray []PolicyGatewayPolicyTagInput

func (PolicyGatewayPolicyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGatewayPolicyTag)(nil)).Elem()
}

func (i PolicyGatewayPolicyTagArray) ToPolicyGatewayPolicyTagArrayOutput() PolicyGatewayPolicyTagArrayOutput {
	return i.ToPolicyGatewayPolicyTagArrayOutputWithContext(context.Background())
}

func (i PolicyGatewayPolicyTagArray) ToPolicyGatewayPolicyTagArrayOutputWithContext(ctx context.Context) PolicyGatewayPolicyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGatewayPolicyTagArrayOutput)
}

type PolicyGatewayPolicyTagOutput struct{ *pulumi.OutputState }

func (PolicyGatewayPolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGatewayPolicyTag)(nil)).Elem()
}

func (o PolicyGatewayPolicyTagOutput) ToPolicyGatewayPolicyTagOutput() PolicyGatewayPolicyTagOutput {
	return o
}

func (o PolicyGatewayPolicyTagOutput) ToPolicyGatewayPolicyTagOutputWithContext(ctx context.Context) PolicyGatewayPolicyTagOutput {
	return o
}

func (o PolicyGatewayPolicyTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPolicyTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPolicyTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyGatewayPolicyTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyGatewayPolicyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGatewayPolicyTag)(nil)).Elem()
}

func (o PolicyGatewayPolicyTagArrayOutput) ToPolicyGatewayPolicyTagArrayOutput() PolicyGatewayPolicyTagArrayOutput {
	return o
}

func (o PolicyGatewayPolicyTagArrayOutput) ToPolicyGatewayPolicyTagArrayOutputWithContext(ctx context.Context) PolicyGatewayPolicyTagArrayOutput {
	return o
}

func (o PolicyGatewayPolicyTagArrayOutput) Index(i pulumi.IntInput) PolicyGatewayPolicyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGatewayPolicyTag {
		return vs[0].([]PolicyGatewayPolicyTag)[vs[1].(int)]
	}).(PolicyGatewayPolicyTagOutput)
}

type PolicyGatewayPrefixListPrefix struct {
	Action  *string `pulumi:"action"`
	Ge      *int    `pulumi:"ge"`
	Le      *int    `pulumi:"le"`
	Network *string `pulumi:"network"`
}

// PolicyGatewayPrefixListPrefixInput is an input type that accepts PolicyGatewayPrefixListPrefixArgs and PolicyGatewayPrefixListPrefixOutput values.
// You can construct a concrete instance of `PolicyGatewayPrefixListPrefixInput` via:
//
//          PolicyGatewayPrefixListPrefixArgs{...}
type PolicyGatewayPrefixListPrefixInput interface {
	pulumi.Input

	ToPolicyGatewayPrefixListPrefixOutput() PolicyGatewayPrefixListPrefixOutput
	ToPolicyGatewayPrefixListPrefixOutputWithContext(context.Context) PolicyGatewayPrefixListPrefixOutput
}

type PolicyGatewayPrefixListPrefixArgs struct {
	Action  pulumi.StringPtrInput `pulumi:"action"`
	Ge      pulumi.IntPtrInput    `pulumi:"ge"`
	Le      pulumi.IntPtrInput    `pulumi:"le"`
	Network pulumi.StringPtrInput `pulumi:"network"`
}

func (PolicyGatewayPrefixListPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGatewayPrefixListPrefix)(nil)).Elem()
}

func (i PolicyGatewayPrefixListPrefixArgs) ToPolicyGatewayPrefixListPrefixOutput() PolicyGatewayPrefixListPrefixOutput {
	return i.ToPolicyGatewayPrefixListPrefixOutputWithContext(context.Background())
}

func (i PolicyGatewayPrefixListPrefixArgs) ToPolicyGatewayPrefixListPrefixOutputWithContext(ctx context.Context) PolicyGatewayPrefixListPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGatewayPrefixListPrefixOutput)
}

// PolicyGatewayPrefixListPrefixArrayInput is an input type that accepts PolicyGatewayPrefixListPrefixArray and PolicyGatewayPrefixListPrefixArrayOutput values.
// You can construct a concrete instance of `PolicyGatewayPrefixListPrefixArrayInput` via:
//
//          PolicyGatewayPrefixListPrefixArray{ PolicyGatewayPrefixListPrefixArgs{...} }
type PolicyGatewayPrefixListPrefixArrayInput interface {
	pulumi.Input

	ToPolicyGatewayPrefixListPrefixArrayOutput() PolicyGatewayPrefixListPrefixArrayOutput
	ToPolicyGatewayPrefixListPrefixArrayOutputWithContext(context.Context) PolicyGatewayPrefixListPrefixArrayOutput
}

type PolicyGatewayPrefixListPrefixArray []PolicyGatewayPrefixListPrefixInput

func (PolicyGatewayPrefixListPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGatewayPrefixListPrefix)(nil)).Elem()
}

func (i PolicyGatewayPrefixListPrefixArray) ToPolicyGatewayPrefixListPrefixArrayOutput() PolicyGatewayPrefixListPrefixArrayOutput {
	return i.ToPolicyGatewayPrefixListPrefixArrayOutputWithContext(context.Background())
}

func (i PolicyGatewayPrefixListPrefixArray) ToPolicyGatewayPrefixListPrefixArrayOutputWithContext(ctx context.Context) PolicyGatewayPrefixListPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGatewayPrefixListPrefixArrayOutput)
}

type PolicyGatewayPrefixListPrefixOutput struct{ *pulumi.OutputState }

func (PolicyGatewayPrefixListPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGatewayPrefixListPrefix)(nil)).Elem()
}

func (o PolicyGatewayPrefixListPrefixOutput) ToPolicyGatewayPrefixListPrefixOutput() PolicyGatewayPrefixListPrefixOutput {
	return o
}

func (o PolicyGatewayPrefixListPrefixOutput) ToPolicyGatewayPrefixListPrefixOutputWithContext(ctx context.Context) PolicyGatewayPrefixListPrefixOutput {
	return o
}

func (o PolicyGatewayPrefixListPrefixOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPrefixListPrefix) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPrefixListPrefixOutput) Ge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPrefixListPrefix) *int { return v.Ge }).(pulumi.IntPtrOutput)
}

func (o PolicyGatewayPrefixListPrefixOutput) Le() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPrefixListPrefix) *int { return v.Le }).(pulumi.IntPtrOutput)
}

func (o PolicyGatewayPrefixListPrefixOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPrefixListPrefix) *string { return v.Network }).(pulumi.StringPtrOutput)
}

type PolicyGatewayPrefixListPrefixArrayOutput struct{ *pulumi.OutputState }

func (PolicyGatewayPrefixListPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGatewayPrefixListPrefix)(nil)).Elem()
}

func (o PolicyGatewayPrefixListPrefixArrayOutput) ToPolicyGatewayPrefixListPrefixArrayOutput() PolicyGatewayPrefixListPrefixArrayOutput {
	return o
}

func (o PolicyGatewayPrefixListPrefixArrayOutput) ToPolicyGatewayPrefixListPrefixArrayOutputWithContext(ctx context.Context) PolicyGatewayPrefixListPrefixArrayOutput {
	return o
}

func (o PolicyGatewayPrefixListPrefixArrayOutput) Index(i pulumi.IntInput) PolicyGatewayPrefixListPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGatewayPrefixListPrefix {
		return vs[0].([]PolicyGatewayPrefixListPrefix)[vs[1].(int)]
	}).(PolicyGatewayPrefixListPrefixOutput)
}

type PolicyGatewayPrefixListTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyGatewayPrefixListTagInput is an input type that accepts PolicyGatewayPrefixListTagArgs and PolicyGatewayPrefixListTagOutput values.
// You can construct a concrete instance of `PolicyGatewayPrefixListTagInput` via:
//
//          PolicyGatewayPrefixListTagArgs{...}
type PolicyGatewayPrefixListTagInput interface {
	pulumi.Input

	ToPolicyGatewayPrefixListTagOutput() PolicyGatewayPrefixListTagOutput
	ToPolicyGatewayPrefixListTagOutputWithContext(context.Context) PolicyGatewayPrefixListTagOutput
}

type PolicyGatewayPrefixListTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyGatewayPrefixListTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGatewayPrefixListTag)(nil)).Elem()
}

func (i PolicyGatewayPrefixListTagArgs) ToPolicyGatewayPrefixListTagOutput() PolicyGatewayPrefixListTagOutput {
	return i.ToPolicyGatewayPrefixListTagOutputWithContext(context.Background())
}

func (i PolicyGatewayPrefixListTagArgs) ToPolicyGatewayPrefixListTagOutputWithContext(ctx context.Context) PolicyGatewayPrefixListTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGatewayPrefixListTagOutput)
}

// PolicyGatewayPrefixListTagArrayInput is an input type that accepts PolicyGatewayPrefixListTagArray and PolicyGatewayPrefixListTagArrayOutput values.
// You can construct a concrete instance of `PolicyGatewayPrefixListTagArrayInput` via:
//
//          PolicyGatewayPrefixListTagArray{ PolicyGatewayPrefixListTagArgs{...} }
type PolicyGatewayPrefixListTagArrayInput interface {
	pulumi.Input

	ToPolicyGatewayPrefixListTagArrayOutput() PolicyGatewayPrefixListTagArrayOutput
	ToPolicyGatewayPrefixListTagArrayOutputWithContext(context.Context) PolicyGatewayPrefixListTagArrayOutput
}

type PolicyGatewayPrefixListTagArray []PolicyGatewayPrefixListTagInput

func (PolicyGatewayPrefixListTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGatewayPrefixListTag)(nil)).Elem()
}

func (i PolicyGatewayPrefixListTagArray) ToPolicyGatewayPrefixListTagArrayOutput() PolicyGatewayPrefixListTagArrayOutput {
	return i.ToPolicyGatewayPrefixListTagArrayOutputWithContext(context.Background())
}

func (i PolicyGatewayPrefixListTagArray) ToPolicyGatewayPrefixListTagArrayOutputWithContext(ctx context.Context) PolicyGatewayPrefixListTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGatewayPrefixListTagArrayOutput)
}

type PolicyGatewayPrefixListTagOutput struct{ *pulumi.OutputState }

func (PolicyGatewayPrefixListTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGatewayPrefixListTag)(nil)).Elem()
}

func (o PolicyGatewayPrefixListTagOutput) ToPolicyGatewayPrefixListTagOutput() PolicyGatewayPrefixListTagOutput {
	return o
}

func (o PolicyGatewayPrefixListTagOutput) ToPolicyGatewayPrefixListTagOutputWithContext(ctx context.Context) PolicyGatewayPrefixListTagOutput {
	return o
}

func (o PolicyGatewayPrefixListTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPrefixListTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyGatewayPrefixListTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGatewayPrefixListTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyGatewayPrefixListTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyGatewayPrefixListTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGatewayPrefixListTag)(nil)).Elem()
}

func (o PolicyGatewayPrefixListTagArrayOutput) ToPolicyGatewayPrefixListTagArrayOutput() PolicyGatewayPrefixListTagArrayOutput {
	return o
}

func (o PolicyGatewayPrefixListTagArrayOutput) ToPolicyGatewayPrefixListTagArrayOutputWithContext(ctx context.Context) PolicyGatewayPrefixListTagArrayOutput {
	return o
}

func (o PolicyGatewayPrefixListTagArrayOutput) Index(i pulumi.IntInput) PolicyGatewayPrefixListTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGatewayPrefixListTag {
		return vs[0].([]PolicyGatewayPrefixListTag)[vs[1].(int)]
	}).(PolicyGatewayPrefixListTagOutput)
}

type PolicyGroupConjunction struct {
	Operator string `pulumi:"operator"`
}

// PolicyGroupConjunctionInput is an input type that accepts PolicyGroupConjunctionArgs and PolicyGroupConjunctionOutput values.
// You can construct a concrete instance of `PolicyGroupConjunctionInput` via:
//
//          PolicyGroupConjunctionArgs{...}
type PolicyGroupConjunctionInput interface {
	pulumi.Input

	ToPolicyGroupConjunctionOutput() PolicyGroupConjunctionOutput
	ToPolicyGroupConjunctionOutputWithContext(context.Context) PolicyGroupConjunctionOutput
}

type PolicyGroupConjunctionArgs struct {
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (PolicyGroupConjunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupConjunction)(nil)).Elem()
}

func (i PolicyGroupConjunctionArgs) ToPolicyGroupConjunctionOutput() PolicyGroupConjunctionOutput {
	return i.ToPolicyGroupConjunctionOutputWithContext(context.Background())
}

func (i PolicyGroupConjunctionArgs) ToPolicyGroupConjunctionOutputWithContext(ctx context.Context) PolicyGroupConjunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupConjunctionOutput)
}

// PolicyGroupConjunctionArrayInput is an input type that accepts PolicyGroupConjunctionArray and PolicyGroupConjunctionArrayOutput values.
// You can construct a concrete instance of `PolicyGroupConjunctionArrayInput` via:
//
//          PolicyGroupConjunctionArray{ PolicyGroupConjunctionArgs{...} }
type PolicyGroupConjunctionArrayInput interface {
	pulumi.Input

	ToPolicyGroupConjunctionArrayOutput() PolicyGroupConjunctionArrayOutput
	ToPolicyGroupConjunctionArrayOutputWithContext(context.Context) PolicyGroupConjunctionArrayOutput
}

type PolicyGroupConjunctionArray []PolicyGroupConjunctionInput

func (PolicyGroupConjunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupConjunction)(nil)).Elem()
}

func (i PolicyGroupConjunctionArray) ToPolicyGroupConjunctionArrayOutput() PolicyGroupConjunctionArrayOutput {
	return i.ToPolicyGroupConjunctionArrayOutputWithContext(context.Background())
}

func (i PolicyGroupConjunctionArray) ToPolicyGroupConjunctionArrayOutputWithContext(ctx context.Context) PolicyGroupConjunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupConjunctionArrayOutput)
}

type PolicyGroupConjunctionOutput struct{ *pulumi.OutputState }

func (PolicyGroupConjunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupConjunction)(nil)).Elem()
}

func (o PolicyGroupConjunctionOutput) ToPolicyGroupConjunctionOutput() PolicyGroupConjunctionOutput {
	return o
}

func (o PolicyGroupConjunctionOutput) ToPolicyGroupConjunctionOutputWithContext(ctx context.Context) PolicyGroupConjunctionOutput {
	return o
}

func (o PolicyGroupConjunctionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupConjunction) string { return v.Operator }).(pulumi.StringOutput)
}

type PolicyGroupConjunctionArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupConjunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupConjunction)(nil)).Elem()
}

func (o PolicyGroupConjunctionArrayOutput) ToPolicyGroupConjunctionArrayOutput() PolicyGroupConjunctionArrayOutput {
	return o
}

func (o PolicyGroupConjunctionArrayOutput) ToPolicyGroupConjunctionArrayOutputWithContext(ctx context.Context) PolicyGroupConjunctionArrayOutput {
	return o
}

func (o PolicyGroupConjunctionArrayOutput) Index(i pulumi.IntInput) PolicyGroupConjunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupConjunction {
		return vs[0].([]PolicyGroupConjunction)[vs[1].(int)]
	}).(PolicyGroupConjunctionOutput)
}

type PolicyGroupCriteria struct {
	Conditions           []PolicyGroupCriteriaCondition           `pulumi:"conditions"`
	IpaddressExpression  *PolicyGroupCriteriaIpaddressExpression  `pulumi:"ipaddressExpression"`
	MacaddressExpression *PolicyGroupCriteriaMacaddressExpression `pulumi:"macaddressExpression"`
	PathExpression       *PolicyGroupCriteriaPathExpression       `pulumi:"pathExpression"`
}

// PolicyGroupCriteriaInput is an input type that accepts PolicyGroupCriteriaArgs and PolicyGroupCriteriaOutput values.
// You can construct a concrete instance of `PolicyGroupCriteriaInput` via:
//
//          PolicyGroupCriteriaArgs{...}
type PolicyGroupCriteriaInput interface {
	pulumi.Input

	ToPolicyGroupCriteriaOutput() PolicyGroupCriteriaOutput
	ToPolicyGroupCriteriaOutputWithContext(context.Context) PolicyGroupCriteriaOutput
}

type PolicyGroupCriteriaArgs struct {
	Conditions           PolicyGroupCriteriaConditionArrayInput          `pulumi:"conditions"`
	IpaddressExpression  PolicyGroupCriteriaIpaddressExpressionPtrInput  `pulumi:"ipaddressExpression"`
	MacaddressExpression PolicyGroupCriteriaMacaddressExpressionPtrInput `pulumi:"macaddressExpression"`
	PathExpression       PolicyGroupCriteriaPathExpressionPtrInput       `pulumi:"pathExpression"`
}

func (PolicyGroupCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCriteria)(nil)).Elem()
}

func (i PolicyGroupCriteriaArgs) ToPolicyGroupCriteriaOutput() PolicyGroupCriteriaOutput {
	return i.ToPolicyGroupCriteriaOutputWithContext(context.Background())
}

func (i PolicyGroupCriteriaArgs) ToPolicyGroupCriteriaOutputWithContext(ctx context.Context) PolicyGroupCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaOutput)
}

// PolicyGroupCriteriaArrayInput is an input type that accepts PolicyGroupCriteriaArray and PolicyGroupCriteriaArrayOutput values.
// You can construct a concrete instance of `PolicyGroupCriteriaArrayInput` via:
//
//          PolicyGroupCriteriaArray{ PolicyGroupCriteriaArgs{...} }
type PolicyGroupCriteriaArrayInput interface {
	pulumi.Input

	ToPolicyGroupCriteriaArrayOutput() PolicyGroupCriteriaArrayOutput
	ToPolicyGroupCriteriaArrayOutputWithContext(context.Context) PolicyGroupCriteriaArrayOutput
}

type PolicyGroupCriteriaArray []PolicyGroupCriteriaInput

func (PolicyGroupCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupCriteria)(nil)).Elem()
}

func (i PolicyGroupCriteriaArray) ToPolicyGroupCriteriaArrayOutput() PolicyGroupCriteriaArrayOutput {
	return i.ToPolicyGroupCriteriaArrayOutputWithContext(context.Background())
}

func (i PolicyGroupCriteriaArray) ToPolicyGroupCriteriaArrayOutputWithContext(ctx context.Context) PolicyGroupCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaArrayOutput)
}

type PolicyGroupCriteriaOutput struct{ *pulumi.OutputState }

func (PolicyGroupCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCriteria)(nil)).Elem()
}

func (o PolicyGroupCriteriaOutput) ToPolicyGroupCriteriaOutput() PolicyGroupCriteriaOutput {
	return o
}

func (o PolicyGroupCriteriaOutput) ToPolicyGroupCriteriaOutputWithContext(ctx context.Context) PolicyGroupCriteriaOutput {
	return o
}

func (o PolicyGroupCriteriaOutput) Conditions() PolicyGroupCriteriaConditionArrayOutput {
	return o.ApplyT(func(v PolicyGroupCriteria) []PolicyGroupCriteriaCondition { return v.Conditions }).(PolicyGroupCriteriaConditionArrayOutput)
}

func (o PolicyGroupCriteriaOutput) IpaddressExpression() PolicyGroupCriteriaIpaddressExpressionPtrOutput {
	return o.ApplyT(func(v PolicyGroupCriteria) *PolicyGroupCriteriaIpaddressExpression { return v.IpaddressExpression }).(PolicyGroupCriteriaIpaddressExpressionPtrOutput)
}

func (o PolicyGroupCriteriaOutput) MacaddressExpression() PolicyGroupCriteriaMacaddressExpressionPtrOutput {
	return o.ApplyT(func(v PolicyGroupCriteria) *PolicyGroupCriteriaMacaddressExpression { return v.MacaddressExpression }).(PolicyGroupCriteriaMacaddressExpressionPtrOutput)
}

func (o PolicyGroupCriteriaOutput) PathExpression() PolicyGroupCriteriaPathExpressionPtrOutput {
	return o.ApplyT(func(v PolicyGroupCriteria) *PolicyGroupCriteriaPathExpression { return v.PathExpression }).(PolicyGroupCriteriaPathExpressionPtrOutput)
}

type PolicyGroupCriteriaArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupCriteria)(nil)).Elem()
}

func (o PolicyGroupCriteriaArrayOutput) ToPolicyGroupCriteriaArrayOutput() PolicyGroupCriteriaArrayOutput {
	return o
}

func (o PolicyGroupCriteriaArrayOutput) ToPolicyGroupCriteriaArrayOutputWithContext(ctx context.Context) PolicyGroupCriteriaArrayOutput {
	return o
}

func (o PolicyGroupCriteriaArrayOutput) Index(i pulumi.IntInput) PolicyGroupCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupCriteria {
		return vs[0].([]PolicyGroupCriteria)[vs[1].(int)]
	}).(PolicyGroupCriteriaOutput)
}

type PolicyGroupCriteriaCondition struct {
	Key        string `pulumi:"key"`
	MemberType string `pulumi:"memberType"`
	Operator   string `pulumi:"operator"`
	Value      string `pulumi:"value"`
}

// PolicyGroupCriteriaConditionInput is an input type that accepts PolicyGroupCriteriaConditionArgs and PolicyGroupCriteriaConditionOutput values.
// You can construct a concrete instance of `PolicyGroupCriteriaConditionInput` via:
//
//          PolicyGroupCriteriaConditionArgs{...}
type PolicyGroupCriteriaConditionInput interface {
	pulumi.Input

	ToPolicyGroupCriteriaConditionOutput() PolicyGroupCriteriaConditionOutput
	ToPolicyGroupCriteriaConditionOutputWithContext(context.Context) PolicyGroupCriteriaConditionOutput
}

type PolicyGroupCriteriaConditionArgs struct {
	Key        pulumi.StringInput `pulumi:"key"`
	MemberType pulumi.StringInput `pulumi:"memberType"`
	Operator   pulumi.StringInput `pulumi:"operator"`
	Value      pulumi.StringInput `pulumi:"value"`
}

func (PolicyGroupCriteriaConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCriteriaCondition)(nil)).Elem()
}

func (i PolicyGroupCriteriaConditionArgs) ToPolicyGroupCriteriaConditionOutput() PolicyGroupCriteriaConditionOutput {
	return i.ToPolicyGroupCriteriaConditionOutputWithContext(context.Background())
}

func (i PolicyGroupCriteriaConditionArgs) ToPolicyGroupCriteriaConditionOutputWithContext(ctx context.Context) PolicyGroupCriteriaConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaConditionOutput)
}

// PolicyGroupCriteriaConditionArrayInput is an input type that accepts PolicyGroupCriteriaConditionArray and PolicyGroupCriteriaConditionArrayOutput values.
// You can construct a concrete instance of `PolicyGroupCriteriaConditionArrayInput` via:
//
//          PolicyGroupCriteriaConditionArray{ PolicyGroupCriteriaConditionArgs{...} }
type PolicyGroupCriteriaConditionArrayInput interface {
	pulumi.Input

	ToPolicyGroupCriteriaConditionArrayOutput() PolicyGroupCriteriaConditionArrayOutput
	ToPolicyGroupCriteriaConditionArrayOutputWithContext(context.Context) PolicyGroupCriteriaConditionArrayOutput
}

type PolicyGroupCriteriaConditionArray []PolicyGroupCriteriaConditionInput

func (PolicyGroupCriteriaConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupCriteriaCondition)(nil)).Elem()
}

func (i PolicyGroupCriteriaConditionArray) ToPolicyGroupCriteriaConditionArrayOutput() PolicyGroupCriteriaConditionArrayOutput {
	return i.ToPolicyGroupCriteriaConditionArrayOutputWithContext(context.Background())
}

func (i PolicyGroupCriteriaConditionArray) ToPolicyGroupCriteriaConditionArrayOutputWithContext(ctx context.Context) PolicyGroupCriteriaConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaConditionArrayOutput)
}

type PolicyGroupCriteriaConditionOutput struct{ *pulumi.OutputState }

func (PolicyGroupCriteriaConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCriteriaCondition)(nil)).Elem()
}

func (o PolicyGroupCriteriaConditionOutput) ToPolicyGroupCriteriaConditionOutput() PolicyGroupCriteriaConditionOutput {
	return o
}

func (o PolicyGroupCriteriaConditionOutput) ToPolicyGroupCriteriaConditionOutputWithContext(ctx context.Context) PolicyGroupCriteriaConditionOutput {
	return o
}

func (o PolicyGroupCriteriaConditionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupCriteriaCondition) string { return v.Key }).(pulumi.StringOutput)
}

func (o PolicyGroupCriteriaConditionOutput) MemberType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupCriteriaCondition) string { return v.MemberType }).(pulumi.StringOutput)
}

func (o PolicyGroupCriteriaConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupCriteriaCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o PolicyGroupCriteriaConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyGroupCriteriaCondition) string { return v.Value }).(pulumi.StringOutput)
}

type PolicyGroupCriteriaConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupCriteriaConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupCriteriaCondition)(nil)).Elem()
}

func (o PolicyGroupCriteriaConditionArrayOutput) ToPolicyGroupCriteriaConditionArrayOutput() PolicyGroupCriteriaConditionArrayOutput {
	return o
}

func (o PolicyGroupCriteriaConditionArrayOutput) ToPolicyGroupCriteriaConditionArrayOutputWithContext(ctx context.Context) PolicyGroupCriteriaConditionArrayOutput {
	return o
}

func (o PolicyGroupCriteriaConditionArrayOutput) Index(i pulumi.IntInput) PolicyGroupCriteriaConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupCriteriaCondition {
		return vs[0].([]PolicyGroupCriteriaCondition)[vs[1].(int)]
	}).(PolicyGroupCriteriaConditionOutput)
}

type PolicyGroupCriteriaIpaddressExpression struct {
	IpAddresses []string `pulumi:"ipAddresses"`
}

// PolicyGroupCriteriaIpaddressExpressionInput is an input type that accepts PolicyGroupCriteriaIpaddressExpressionArgs and PolicyGroupCriteriaIpaddressExpressionOutput values.
// You can construct a concrete instance of `PolicyGroupCriteriaIpaddressExpressionInput` via:
//
//          PolicyGroupCriteriaIpaddressExpressionArgs{...}
type PolicyGroupCriteriaIpaddressExpressionInput interface {
	pulumi.Input

	ToPolicyGroupCriteriaIpaddressExpressionOutput() PolicyGroupCriteriaIpaddressExpressionOutput
	ToPolicyGroupCriteriaIpaddressExpressionOutputWithContext(context.Context) PolicyGroupCriteriaIpaddressExpressionOutput
}

type PolicyGroupCriteriaIpaddressExpressionArgs struct {
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (PolicyGroupCriteriaIpaddressExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCriteriaIpaddressExpression)(nil)).Elem()
}

func (i PolicyGroupCriteriaIpaddressExpressionArgs) ToPolicyGroupCriteriaIpaddressExpressionOutput() PolicyGroupCriteriaIpaddressExpressionOutput {
	return i.ToPolicyGroupCriteriaIpaddressExpressionOutputWithContext(context.Background())
}

func (i PolicyGroupCriteriaIpaddressExpressionArgs) ToPolicyGroupCriteriaIpaddressExpressionOutputWithContext(ctx context.Context) PolicyGroupCriteriaIpaddressExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaIpaddressExpressionOutput)
}

func (i PolicyGroupCriteriaIpaddressExpressionArgs) ToPolicyGroupCriteriaIpaddressExpressionPtrOutput() PolicyGroupCriteriaIpaddressExpressionPtrOutput {
	return i.ToPolicyGroupCriteriaIpaddressExpressionPtrOutputWithContext(context.Background())
}

func (i PolicyGroupCriteriaIpaddressExpressionArgs) ToPolicyGroupCriteriaIpaddressExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaIpaddressExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaIpaddressExpressionOutput).ToPolicyGroupCriteriaIpaddressExpressionPtrOutputWithContext(ctx)
}

// PolicyGroupCriteriaIpaddressExpressionPtrInput is an input type that accepts PolicyGroupCriteriaIpaddressExpressionArgs, PolicyGroupCriteriaIpaddressExpressionPtr and PolicyGroupCriteriaIpaddressExpressionPtrOutput values.
// You can construct a concrete instance of `PolicyGroupCriteriaIpaddressExpressionPtrInput` via:
//
//          PolicyGroupCriteriaIpaddressExpressionArgs{...}
//
//  or:
//
//          nil
type PolicyGroupCriteriaIpaddressExpressionPtrInput interface {
	pulumi.Input

	ToPolicyGroupCriteriaIpaddressExpressionPtrOutput() PolicyGroupCriteriaIpaddressExpressionPtrOutput
	ToPolicyGroupCriteriaIpaddressExpressionPtrOutputWithContext(context.Context) PolicyGroupCriteriaIpaddressExpressionPtrOutput
}

type policyGroupCriteriaIpaddressExpressionPtrType PolicyGroupCriteriaIpaddressExpressionArgs

func PolicyGroupCriteriaIpaddressExpressionPtr(v *PolicyGroupCriteriaIpaddressExpressionArgs) PolicyGroupCriteriaIpaddressExpressionPtrInput {
	return (*policyGroupCriteriaIpaddressExpressionPtrType)(v)
}

func (*policyGroupCriteriaIpaddressExpressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGroupCriteriaIpaddressExpression)(nil)).Elem()
}

func (i *policyGroupCriteriaIpaddressExpressionPtrType) ToPolicyGroupCriteriaIpaddressExpressionPtrOutput() PolicyGroupCriteriaIpaddressExpressionPtrOutput {
	return i.ToPolicyGroupCriteriaIpaddressExpressionPtrOutputWithContext(context.Background())
}

func (i *policyGroupCriteriaIpaddressExpressionPtrType) ToPolicyGroupCriteriaIpaddressExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaIpaddressExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaIpaddressExpressionPtrOutput)
}

type PolicyGroupCriteriaIpaddressExpressionOutput struct{ *pulumi.OutputState }

func (PolicyGroupCriteriaIpaddressExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCriteriaIpaddressExpression)(nil)).Elem()
}

func (o PolicyGroupCriteriaIpaddressExpressionOutput) ToPolicyGroupCriteriaIpaddressExpressionOutput() PolicyGroupCriteriaIpaddressExpressionOutput {
	return o
}

func (o PolicyGroupCriteriaIpaddressExpressionOutput) ToPolicyGroupCriteriaIpaddressExpressionOutputWithContext(ctx context.Context) PolicyGroupCriteriaIpaddressExpressionOutput {
	return o
}

func (o PolicyGroupCriteriaIpaddressExpressionOutput) ToPolicyGroupCriteriaIpaddressExpressionPtrOutput() PolicyGroupCriteriaIpaddressExpressionPtrOutput {
	return o.ToPolicyGroupCriteriaIpaddressExpressionPtrOutputWithContext(context.Background())
}

func (o PolicyGroupCriteriaIpaddressExpressionOutput) ToPolicyGroupCriteriaIpaddressExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaIpaddressExpressionPtrOutput {
	return o.ApplyT(func(v PolicyGroupCriteriaIpaddressExpression) *PolicyGroupCriteriaIpaddressExpression {
		return &v
	}).(PolicyGroupCriteriaIpaddressExpressionPtrOutput)
}
func (o PolicyGroupCriteriaIpaddressExpressionOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupCriteriaIpaddressExpression) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type PolicyGroupCriteriaIpaddressExpressionPtrOutput struct{ *pulumi.OutputState }

func (PolicyGroupCriteriaIpaddressExpressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGroupCriteriaIpaddressExpression)(nil)).Elem()
}

func (o PolicyGroupCriteriaIpaddressExpressionPtrOutput) ToPolicyGroupCriteriaIpaddressExpressionPtrOutput() PolicyGroupCriteriaIpaddressExpressionPtrOutput {
	return o
}

func (o PolicyGroupCriteriaIpaddressExpressionPtrOutput) ToPolicyGroupCriteriaIpaddressExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaIpaddressExpressionPtrOutput {
	return o
}

func (o PolicyGroupCriteriaIpaddressExpressionPtrOutput) Elem() PolicyGroupCriteriaIpaddressExpressionOutput {
	return o.ApplyT(func(v *PolicyGroupCriteriaIpaddressExpression) PolicyGroupCriteriaIpaddressExpression { return *v }).(PolicyGroupCriteriaIpaddressExpressionOutput)
}

func (o PolicyGroupCriteriaIpaddressExpressionPtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyGroupCriteriaIpaddressExpression) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type PolicyGroupCriteriaMacaddressExpression struct {
	MacAddresses []string `pulumi:"macAddresses"`
}

// PolicyGroupCriteriaMacaddressExpressionInput is an input type that accepts PolicyGroupCriteriaMacaddressExpressionArgs and PolicyGroupCriteriaMacaddressExpressionOutput values.
// You can construct a concrete instance of `PolicyGroupCriteriaMacaddressExpressionInput` via:
//
//          PolicyGroupCriteriaMacaddressExpressionArgs{...}
type PolicyGroupCriteriaMacaddressExpressionInput interface {
	pulumi.Input

	ToPolicyGroupCriteriaMacaddressExpressionOutput() PolicyGroupCriteriaMacaddressExpressionOutput
	ToPolicyGroupCriteriaMacaddressExpressionOutputWithContext(context.Context) PolicyGroupCriteriaMacaddressExpressionOutput
}

type PolicyGroupCriteriaMacaddressExpressionArgs struct {
	MacAddresses pulumi.StringArrayInput `pulumi:"macAddresses"`
}

func (PolicyGroupCriteriaMacaddressExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCriteriaMacaddressExpression)(nil)).Elem()
}

func (i PolicyGroupCriteriaMacaddressExpressionArgs) ToPolicyGroupCriteriaMacaddressExpressionOutput() PolicyGroupCriteriaMacaddressExpressionOutput {
	return i.ToPolicyGroupCriteriaMacaddressExpressionOutputWithContext(context.Background())
}

func (i PolicyGroupCriteriaMacaddressExpressionArgs) ToPolicyGroupCriteriaMacaddressExpressionOutputWithContext(ctx context.Context) PolicyGroupCriteriaMacaddressExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaMacaddressExpressionOutput)
}

func (i PolicyGroupCriteriaMacaddressExpressionArgs) ToPolicyGroupCriteriaMacaddressExpressionPtrOutput() PolicyGroupCriteriaMacaddressExpressionPtrOutput {
	return i.ToPolicyGroupCriteriaMacaddressExpressionPtrOutputWithContext(context.Background())
}

func (i PolicyGroupCriteriaMacaddressExpressionArgs) ToPolicyGroupCriteriaMacaddressExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaMacaddressExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaMacaddressExpressionOutput).ToPolicyGroupCriteriaMacaddressExpressionPtrOutputWithContext(ctx)
}

// PolicyGroupCriteriaMacaddressExpressionPtrInput is an input type that accepts PolicyGroupCriteriaMacaddressExpressionArgs, PolicyGroupCriteriaMacaddressExpressionPtr and PolicyGroupCriteriaMacaddressExpressionPtrOutput values.
// You can construct a concrete instance of `PolicyGroupCriteriaMacaddressExpressionPtrInput` via:
//
//          PolicyGroupCriteriaMacaddressExpressionArgs{...}
//
//  or:
//
//          nil
type PolicyGroupCriteriaMacaddressExpressionPtrInput interface {
	pulumi.Input

	ToPolicyGroupCriteriaMacaddressExpressionPtrOutput() PolicyGroupCriteriaMacaddressExpressionPtrOutput
	ToPolicyGroupCriteriaMacaddressExpressionPtrOutputWithContext(context.Context) PolicyGroupCriteriaMacaddressExpressionPtrOutput
}

type policyGroupCriteriaMacaddressExpressionPtrType PolicyGroupCriteriaMacaddressExpressionArgs

func PolicyGroupCriteriaMacaddressExpressionPtr(v *PolicyGroupCriteriaMacaddressExpressionArgs) PolicyGroupCriteriaMacaddressExpressionPtrInput {
	return (*policyGroupCriteriaMacaddressExpressionPtrType)(v)
}

func (*policyGroupCriteriaMacaddressExpressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGroupCriteriaMacaddressExpression)(nil)).Elem()
}

func (i *policyGroupCriteriaMacaddressExpressionPtrType) ToPolicyGroupCriteriaMacaddressExpressionPtrOutput() PolicyGroupCriteriaMacaddressExpressionPtrOutput {
	return i.ToPolicyGroupCriteriaMacaddressExpressionPtrOutputWithContext(context.Background())
}

func (i *policyGroupCriteriaMacaddressExpressionPtrType) ToPolicyGroupCriteriaMacaddressExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaMacaddressExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaMacaddressExpressionPtrOutput)
}

type PolicyGroupCriteriaMacaddressExpressionOutput struct{ *pulumi.OutputState }

func (PolicyGroupCriteriaMacaddressExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCriteriaMacaddressExpression)(nil)).Elem()
}

func (o PolicyGroupCriteriaMacaddressExpressionOutput) ToPolicyGroupCriteriaMacaddressExpressionOutput() PolicyGroupCriteriaMacaddressExpressionOutput {
	return o
}

func (o PolicyGroupCriteriaMacaddressExpressionOutput) ToPolicyGroupCriteriaMacaddressExpressionOutputWithContext(ctx context.Context) PolicyGroupCriteriaMacaddressExpressionOutput {
	return o
}

func (o PolicyGroupCriteriaMacaddressExpressionOutput) ToPolicyGroupCriteriaMacaddressExpressionPtrOutput() PolicyGroupCriteriaMacaddressExpressionPtrOutput {
	return o.ToPolicyGroupCriteriaMacaddressExpressionPtrOutputWithContext(context.Background())
}

func (o PolicyGroupCriteriaMacaddressExpressionOutput) ToPolicyGroupCriteriaMacaddressExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaMacaddressExpressionPtrOutput {
	return o.ApplyT(func(v PolicyGroupCriteriaMacaddressExpression) *PolicyGroupCriteriaMacaddressExpression {
		return &v
	}).(PolicyGroupCriteriaMacaddressExpressionPtrOutput)
}
func (o PolicyGroupCriteriaMacaddressExpressionOutput) MacAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupCriteriaMacaddressExpression) []string { return v.MacAddresses }).(pulumi.StringArrayOutput)
}

type PolicyGroupCriteriaMacaddressExpressionPtrOutput struct{ *pulumi.OutputState }

func (PolicyGroupCriteriaMacaddressExpressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGroupCriteriaMacaddressExpression)(nil)).Elem()
}

func (o PolicyGroupCriteriaMacaddressExpressionPtrOutput) ToPolicyGroupCriteriaMacaddressExpressionPtrOutput() PolicyGroupCriteriaMacaddressExpressionPtrOutput {
	return o
}

func (o PolicyGroupCriteriaMacaddressExpressionPtrOutput) ToPolicyGroupCriteriaMacaddressExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaMacaddressExpressionPtrOutput {
	return o
}

func (o PolicyGroupCriteriaMacaddressExpressionPtrOutput) Elem() PolicyGroupCriteriaMacaddressExpressionOutput {
	return o.ApplyT(func(v *PolicyGroupCriteriaMacaddressExpression) PolicyGroupCriteriaMacaddressExpression { return *v }).(PolicyGroupCriteriaMacaddressExpressionOutput)
}

func (o PolicyGroupCriteriaMacaddressExpressionPtrOutput) MacAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyGroupCriteriaMacaddressExpression) []string {
		if v == nil {
			return nil
		}
		return v.MacAddresses
	}).(pulumi.StringArrayOutput)
}

type PolicyGroupCriteriaPathExpression struct {
	MemberPaths []string `pulumi:"memberPaths"`
}

// PolicyGroupCriteriaPathExpressionInput is an input type that accepts PolicyGroupCriteriaPathExpressionArgs and PolicyGroupCriteriaPathExpressionOutput values.
// You can construct a concrete instance of `PolicyGroupCriteriaPathExpressionInput` via:
//
//          PolicyGroupCriteriaPathExpressionArgs{...}
type PolicyGroupCriteriaPathExpressionInput interface {
	pulumi.Input

	ToPolicyGroupCriteriaPathExpressionOutput() PolicyGroupCriteriaPathExpressionOutput
	ToPolicyGroupCriteriaPathExpressionOutputWithContext(context.Context) PolicyGroupCriteriaPathExpressionOutput
}

type PolicyGroupCriteriaPathExpressionArgs struct {
	MemberPaths pulumi.StringArrayInput `pulumi:"memberPaths"`
}

func (PolicyGroupCriteriaPathExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCriteriaPathExpression)(nil)).Elem()
}

func (i PolicyGroupCriteriaPathExpressionArgs) ToPolicyGroupCriteriaPathExpressionOutput() PolicyGroupCriteriaPathExpressionOutput {
	return i.ToPolicyGroupCriteriaPathExpressionOutputWithContext(context.Background())
}

func (i PolicyGroupCriteriaPathExpressionArgs) ToPolicyGroupCriteriaPathExpressionOutputWithContext(ctx context.Context) PolicyGroupCriteriaPathExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaPathExpressionOutput)
}

func (i PolicyGroupCriteriaPathExpressionArgs) ToPolicyGroupCriteriaPathExpressionPtrOutput() PolicyGroupCriteriaPathExpressionPtrOutput {
	return i.ToPolicyGroupCriteriaPathExpressionPtrOutputWithContext(context.Background())
}

func (i PolicyGroupCriteriaPathExpressionArgs) ToPolicyGroupCriteriaPathExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaPathExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaPathExpressionOutput).ToPolicyGroupCriteriaPathExpressionPtrOutputWithContext(ctx)
}

// PolicyGroupCriteriaPathExpressionPtrInput is an input type that accepts PolicyGroupCriteriaPathExpressionArgs, PolicyGroupCriteriaPathExpressionPtr and PolicyGroupCriteriaPathExpressionPtrOutput values.
// You can construct a concrete instance of `PolicyGroupCriteriaPathExpressionPtrInput` via:
//
//          PolicyGroupCriteriaPathExpressionArgs{...}
//
//  or:
//
//          nil
type PolicyGroupCriteriaPathExpressionPtrInput interface {
	pulumi.Input

	ToPolicyGroupCriteriaPathExpressionPtrOutput() PolicyGroupCriteriaPathExpressionPtrOutput
	ToPolicyGroupCriteriaPathExpressionPtrOutputWithContext(context.Context) PolicyGroupCriteriaPathExpressionPtrOutput
}

type policyGroupCriteriaPathExpressionPtrType PolicyGroupCriteriaPathExpressionArgs

func PolicyGroupCriteriaPathExpressionPtr(v *PolicyGroupCriteriaPathExpressionArgs) PolicyGroupCriteriaPathExpressionPtrInput {
	return (*policyGroupCriteriaPathExpressionPtrType)(v)
}

func (*policyGroupCriteriaPathExpressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGroupCriteriaPathExpression)(nil)).Elem()
}

func (i *policyGroupCriteriaPathExpressionPtrType) ToPolicyGroupCriteriaPathExpressionPtrOutput() PolicyGroupCriteriaPathExpressionPtrOutput {
	return i.ToPolicyGroupCriteriaPathExpressionPtrOutputWithContext(context.Background())
}

func (i *policyGroupCriteriaPathExpressionPtrType) ToPolicyGroupCriteriaPathExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaPathExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupCriteriaPathExpressionPtrOutput)
}

type PolicyGroupCriteriaPathExpressionOutput struct{ *pulumi.OutputState }

func (PolicyGroupCriteriaPathExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCriteriaPathExpression)(nil)).Elem()
}

func (o PolicyGroupCriteriaPathExpressionOutput) ToPolicyGroupCriteriaPathExpressionOutput() PolicyGroupCriteriaPathExpressionOutput {
	return o
}

func (o PolicyGroupCriteriaPathExpressionOutput) ToPolicyGroupCriteriaPathExpressionOutputWithContext(ctx context.Context) PolicyGroupCriteriaPathExpressionOutput {
	return o
}

func (o PolicyGroupCriteriaPathExpressionOutput) ToPolicyGroupCriteriaPathExpressionPtrOutput() PolicyGroupCriteriaPathExpressionPtrOutput {
	return o.ToPolicyGroupCriteriaPathExpressionPtrOutputWithContext(context.Background())
}

func (o PolicyGroupCriteriaPathExpressionOutput) ToPolicyGroupCriteriaPathExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaPathExpressionPtrOutput {
	return o.ApplyT(func(v PolicyGroupCriteriaPathExpression) *PolicyGroupCriteriaPathExpression {
		return &v
	}).(PolicyGroupCriteriaPathExpressionPtrOutput)
}
func (o PolicyGroupCriteriaPathExpressionOutput) MemberPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupCriteriaPathExpression) []string { return v.MemberPaths }).(pulumi.StringArrayOutput)
}

type PolicyGroupCriteriaPathExpressionPtrOutput struct{ *pulumi.OutputState }

func (PolicyGroupCriteriaPathExpressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGroupCriteriaPathExpression)(nil)).Elem()
}

func (o PolicyGroupCriteriaPathExpressionPtrOutput) ToPolicyGroupCriteriaPathExpressionPtrOutput() PolicyGroupCriteriaPathExpressionPtrOutput {
	return o
}

func (o PolicyGroupCriteriaPathExpressionPtrOutput) ToPolicyGroupCriteriaPathExpressionPtrOutputWithContext(ctx context.Context) PolicyGroupCriteriaPathExpressionPtrOutput {
	return o
}

func (o PolicyGroupCriteriaPathExpressionPtrOutput) Elem() PolicyGroupCriteriaPathExpressionOutput {
	return o.ApplyT(func(v *PolicyGroupCriteriaPathExpression) PolicyGroupCriteriaPathExpression { return *v }).(PolicyGroupCriteriaPathExpressionOutput)
}

func (o PolicyGroupCriteriaPathExpressionPtrOutput) MemberPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyGroupCriteriaPathExpression) []string {
		if v == nil {
			return nil
		}
		return v.MemberPaths
	}).(pulumi.StringArrayOutput)
}

type PolicyGroupExtendedCriteria struct {
	IdentityGroups []PolicyGroupExtendedCriteriaIdentityGroup `pulumi:"identityGroups"`
}

// PolicyGroupExtendedCriteriaInput is an input type that accepts PolicyGroupExtendedCriteriaArgs and PolicyGroupExtendedCriteriaOutput values.
// You can construct a concrete instance of `PolicyGroupExtendedCriteriaInput` via:
//
//          PolicyGroupExtendedCriteriaArgs{...}
type PolicyGroupExtendedCriteriaInput interface {
	pulumi.Input

	ToPolicyGroupExtendedCriteriaOutput() PolicyGroupExtendedCriteriaOutput
	ToPolicyGroupExtendedCriteriaOutputWithContext(context.Context) PolicyGroupExtendedCriteriaOutput
}

type PolicyGroupExtendedCriteriaArgs struct {
	IdentityGroups PolicyGroupExtendedCriteriaIdentityGroupArrayInput `pulumi:"identityGroups"`
}

func (PolicyGroupExtendedCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupExtendedCriteria)(nil)).Elem()
}

func (i PolicyGroupExtendedCriteriaArgs) ToPolicyGroupExtendedCriteriaOutput() PolicyGroupExtendedCriteriaOutput {
	return i.ToPolicyGroupExtendedCriteriaOutputWithContext(context.Background())
}

func (i PolicyGroupExtendedCriteriaArgs) ToPolicyGroupExtendedCriteriaOutputWithContext(ctx context.Context) PolicyGroupExtendedCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupExtendedCriteriaOutput)
}

func (i PolicyGroupExtendedCriteriaArgs) ToPolicyGroupExtendedCriteriaPtrOutput() PolicyGroupExtendedCriteriaPtrOutput {
	return i.ToPolicyGroupExtendedCriteriaPtrOutputWithContext(context.Background())
}

func (i PolicyGroupExtendedCriteriaArgs) ToPolicyGroupExtendedCriteriaPtrOutputWithContext(ctx context.Context) PolicyGroupExtendedCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupExtendedCriteriaOutput).ToPolicyGroupExtendedCriteriaPtrOutputWithContext(ctx)
}

// PolicyGroupExtendedCriteriaPtrInput is an input type that accepts PolicyGroupExtendedCriteriaArgs, PolicyGroupExtendedCriteriaPtr and PolicyGroupExtendedCriteriaPtrOutput values.
// You can construct a concrete instance of `PolicyGroupExtendedCriteriaPtrInput` via:
//
//          PolicyGroupExtendedCriteriaArgs{...}
//
//  or:
//
//          nil
type PolicyGroupExtendedCriteriaPtrInput interface {
	pulumi.Input

	ToPolicyGroupExtendedCriteriaPtrOutput() PolicyGroupExtendedCriteriaPtrOutput
	ToPolicyGroupExtendedCriteriaPtrOutputWithContext(context.Context) PolicyGroupExtendedCriteriaPtrOutput
}

type policyGroupExtendedCriteriaPtrType PolicyGroupExtendedCriteriaArgs

func PolicyGroupExtendedCriteriaPtr(v *PolicyGroupExtendedCriteriaArgs) PolicyGroupExtendedCriteriaPtrInput {
	return (*policyGroupExtendedCriteriaPtrType)(v)
}

func (*policyGroupExtendedCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGroupExtendedCriteria)(nil)).Elem()
}

func (i *policyGroupExtendedCriteriaPtrType) ToPolicyGroupExtendedCriteriaPtrOutput() PolicyGroupExtendedCriteriaPtrOutput {
	return i.ToPolicyGroupExtendedCriteriaPtrOutputWithContext(context.Background())
}

func (i *policyGroupExtendedCriteriaPtrType) ToPolicyGroupExtendedCriteriaPtrOutputWithContext(ctx context.Context) PolicyGroupExtendedCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupExtendedCriteriaPtrOutput)
}

type PolicyGroupExtendedCriteriaOutput struct{ *pulumi.OutputState }

func (PolicyGroupExtendedCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupExtendedCriteria)(nil)).Elem()
}

func (o PolicyGroupExtendedCriteriaOutput) ToPolicyGroupExtendedCriteriaOutput() PolicyGroupExtendedCriteriaOutput {
	return o
}

func (o PolicyGroupExtendedCriteriaOutput) ToPolicyGroupExtendedCriteriaOutputWithContext(ctx context.Context) PolicyGroupExtendedCriteriaOutput {
	return o
}

func (o PolicyGroupExtendedCriteriaOutput) ToPolicyGroupExtendedCriteriaPtrOutput() PolicyGroupExtendedCriteriaPtrOutput {
	return o.ToPolicyGroupExtendedCriteriaPtrOutputWithContext(context.Background())
}

func (o PolicyGroupExtendedCriteriaOutput) ToPolicyGroupExtendedCriteriaPtrOutputWithContext(ctx context.Context) PolicyGroupExtendedCriteriaPtrOutput {
	return o.ApplyT(func(v PolicyGroupExtendedCriteria) *PolicyGroupExtendedCriteria {
		return &v
	}).(PolicyGroupExtendedCriteriaPtrOutput)
}
func (o PolicyGroupExtendedCriteriaOutput) IdentityGroups() PolicyGroupExtendedCriteriaIdentityGroupArrayOutput {
	return o.ApplyT(func(v PolicyGroupExtendedCriteria) []PolicyGroupExtendedCriteriaIdentityGroup {
		return v.IdentityGroups
	}).(PolicyGroupExtendedCriteriaIdentityGroupArrayOutput)
}

type PolicyGroupExtendedCriteriaPtrOutput struct{ *pulumi.OutputState }

func (PolicyGroupExtendedCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyGroupExtendedCriteria)(nil)).Elem()
}

func (o PolicyGroupExtendedCriteriaPtrOutput) ToPolicyGroupExtendedCriteriaPtrOutput() PolicyGroupExtendedCriteriaPtrOutput {
	return o
}

func (o PolicyGroupExtendedCriteriaPtrOutput) ToPolicyGroupExtendedCriteriaPtrOutputWithContext(ctx context.Context) PolicyGroupExtendedCriteriaPtrOutput {
	return o
}

func (o PolicyGroupExtendedCriteriaPtrOutput) Elem() PolicyGroupExtendedCriteriaOutput {
	return o.ApplyT(func(v *PolicyGroupExtendedCriteria) PolicyGroupExtendedCriteria { return *v }).(PolicyGroupExtendedCriteriaOutput)
}

func (o PolicyGroupExtendedCriteriaPtrOutput) IdentityGroups() PolicyGroupExtendedCriteriaIdentityGroupArrayOutput {
	return o.ApplyT(func(v *PolicyGroupExtendedCriteria) []PolicyGroupExtendedCriteriaIdentityGroup {
		if v == nil {
			return nil
		}
		return v.IdentityGroups
	}).(PolicyGroupExtendedCriteriaIdentityGroupArrayOutput)
}

type PolicyGroupExtendedCriteriaIdentityGroup struct {
	DistinguishedName           *string `pulumi:"distinguishedName"`
	DomainBaseDistinguishedName *string `pulumi:"domainBaseDistinguishedName"`
	Sid                         *string `pulumi:"sid"`
}

// PolicyGroupExtendedCriteriaIdentityGroupInput is an input type that accepts PolicyGroupExtendedCriteriaIdentityGroupArgs and PolicyGroupExtendedCriteriaIdentityGroupOutput values.
// You can construct a concrete instance of `PolicyGroupExtendedCriteriaIdentityGroupInput` via:
//
//          PolicyGroupExtendedCriteriaIdentityGroupArgs{...}
type PolicyGroupExtendedCriteriaIdentityGroupInput interface {
	pulumi.Input

	ToPolicyGroupExtendedCriteriaIdentityGroupOutput() PolicyGroupExtendedCriteriaIdentityGroupOutput
	ToPolicyGroupExtendedCriteriaIdentityGroupOutputWithContext(context.Context) PolicyGroupExtendedCriteriaIdentityGroupOutput
}

type PolicyGroupExtendedCriteriaIdentityGroupArgs struct {
	DistinguishedName           pulumi.StringPtrInput `pulumi:"distinguishedName"`
	DomainBaseDistinguishedName pulumi.StringPtrInput `pulumi:"domainBaseDistinguishedName"`
	Sid                         pulumi.StringPtrInput `pulumi:"sid"`
}

func (PolicyGroupExtendedCriteriaIdentityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupExtendedCriteriaIdentityGroup)(nil)).Elem()
}

func (i PolicyGroupExtendedCriteriaIdentityGroupArgs) ToPolicyGroupExtendedCriteriaIdentityGroupOutput() PolicyGroupExtendedCriteriaIdentityGroupOutput {
	return i.ToPolicyGroupExtendedCriteriaIdentityGroupOutputWithContext(context.Background())
}

func (i PolicyGroupExtendedCriteriaIdentityGroupArgs) ToPolicyGroupExtendedCriteriaIdentityGroupOutputWithContext(ctx context.Context) PolicyGroupExtendedCriteriaIdentityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupExtendedCriteriaIdentityGroupOutput)
}

// PolicyGroupExtendedCriteriaIdentityGroupArrayInput is an input type that accepts PolicyGroupExtendedCriteriaIdentityGroupArray and PolicyGroupExtendedCriteriaIdentityGroupArrayOutput values.
// You can construct a concrete instance of `PolicyGroupExtendedCriteriaIdentityGroupArrayInput` via:
//
//          PolicyGroupExtendedCriteriaIdentityGroupArray{ PolicyGroupExtendedCriteriaIdentityGroupArgs{...} }
type PolicyGroupExtendedCriteriaIdentityGroupArrayInput interface {
	pulumi.Input

	ToPolicyGroupExtendedCriteriaIdentityGroupArrayOutput() PolicyGroupExtendedCriteriaIdentityGroupArrayOutput
	ToPolicyGroupExtendedCriteriaIdentityGroupArrayOutputWithContext(context.Context) PolicyGroupExtendedCriteriaIdentityGroupArrayOutput
}

type PolicyGroupExtendedCriteriaIdentityGroupArray []PolicyGroupExtendedCriteriaIdentityGroupInput

func (PolicyGroupExtendedCriteriaIdentityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupExtendedCriteriaIdentityGroup)(nil)).Elem()
}

func (i PolicyGroupExtendedCriteriaIdentityGroupArray) ToPolicyGroupExtendedCriteriaIdentityGroupArrayOutput() PolicyGroupExtendedCriteriaIdentityGroupArrayOutput {
	return i.ToPolicyGroupExtendedCriteriaIdentityGroupArrayOutputWithContext(context.Background())
}

func (i PolicyGroupExtendedCriteriaIdentityGroupArray) ToPolicyGroupExtendedCriteriaIdentityGroupArrayOutputWithContext(ctx context.Context) PolicyGroupExtendedCriteriaIdentityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupExtendedCriteriaIdentityGroupArrayOutput)
}

type PolicyGroupExtendedCriteriaIdentityGroupOutput struct{ *pulumi.OutputState }

func (PolicyGroupExtendedCriteriaIdentityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupExtendedCriteriaIdentityGroup)(nil)).Elem()
}

func (o PolicyGroupExtendedCriteriaIdentityGroupOutput) ToPolicyGroupExtendedCriteriaIdentityGroupOutput() PolicyGroupExtendedCriteriaIdentityGroupOutput {
	return o
}

func (o PolicyGroupExtendedCriteriaIdentityGroupOutput) ToPolicyGroupExtendedCriteriaIdentityGroupOutputWithContext(ctx context.Context) PolicyGroupExtendedCriteriaIdentityGroupOutput {
	return o
}

func (o PolicyGroupExtendedCriteriaIdentityGroupOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupExtendedCriteriaIdentityGroup) *string { return v.DistinguishedName }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupExtendedCriteriaIdentityGroupOutput) DomainBaseDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupExtendedCriteriaIdentityGroup) *string { return v.DomainBaseDistinguishedName }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupExtendedCriteriaIdentityGroupOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupExtendedCriteriaIdentityGroup) *string { return v.Sid }).(pulumi.StringPtrOutput)
}

type PolicyGroupExtendedCriteriaIdentityGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupExtendedCriteriaIdentityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupExtendedCriteriaIdentityGroup)(nil)).Elem()
}

func (o PolicyGroupExtendedCriteriaIdentityGroupArrayOutput) ToPolicyGroupExtendedCriteriaIdentityGroupArrayOutput() PolicyGroupExtendedCriteriaIdentityGroupArrayOutput {
	return o
}

func (o PolicyGroupExtendedCriteriaIdentityGroupArrayOutput) ToPolicyGroupExtendedCriteriaIdentityGroupArrayOutputWithContext(ctx context.Context) PolicyGroupExtendedCriteriaIdentityGroupArrayOutput {
	return o
}

func (o PolicyGroupExtendedCriteriaIdentityGroupArrayOutput) Index(i pulumi.IntInput) PolicyGroupExtendedCriteriaIdentityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupExtendedCriteriaIdentityGroup {
		return vs[0].([]PolicyGroupExtendedCriteriaIdentityGroup)[vs[1].(int)]
	}).(PolicyGroupExtendedCriteriaIdentityGroupOutput)
}

type PolicyGroupTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyGroupTagInput is an input type that accepts PolicyGroupTagArgs and PolicyGroupTagOutput values.
// You can construct a concrete instance of `PolicyGroupTagInput` via:
//
//          PolicyGroupTagArgs{...}
type PolicyGroupTagInput interface {
	pulumi.Input

	ToPolicyGroupTagOutput() PolicyGroupTagOutput
	ToPolicyGroupTagOutputWithContext(context.Context) PolicyGroupTagOutput
}

type PolicyGroupTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupTag)(nil)).Elem()
}

func (i PolicyGroupTagArgs) ToPolicyGroupTagOutput() PolicyGroupTagOutput {
	return i.ToPolicyGroupTagOutputWithContext(context.Background())
}

func (i PolicyGroupTagArgs) ToPolicyGroupTagOutputWithContext(ctx context.Context) PolicyGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupTagOutput)
}

// PolicyGroupTagArrayInput is an input type that accepts PolicyGroupTagArray and PolicyGroupTagArrayOutput values.
// You can construct a concrete instance of `PolicyGroupTagArrayInput` via:
//
//          PolicyGroupTagArray{ PolicyGroupTagArgs{...} }
type PolicyGroupTagArrayInput interface {
	pulumi.Input

	ToPolicyGroupTagArrayOutput() PolicyGroupTagArrayOutput
	ToPolicyGroupTagArrayOutputWithContext(context.Context) PolicyGroupTagArrayOutput
}

type PolicyGroupTagArray []PolicyGroupTagInput

func (PolicyGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupTag)(nil)).Elem()
}

func (i PolicyGroupTagArray) ToPolicyGroupTagArrayOutput() PolicyGroupTagArrayOutput {
	return i.ToPolicyGroupTagArrayOutputWithContext(context.Background())
}

func (i PolicyGroupTagArray) ToPolicyGroupTagArrayOutputWithContext(ctx context.Context) PolicyGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupTagArrayOutput)
}

type PolicyGroupTagOutput struct{ *pulumi.OutputState }

func (PolicyGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupTag)(nil)).Elem()
}

func (o PolicyGroupTagOutput) ToPolicyGroupTagOutput() PolicyGroupTagOutput {
	return o
}

func (o PolicyGroupTagOutput) ToPolicyGroupTagOutputWithContext(ctx context.Context) PolicyGroupTagOutput {
	return o
}

func (o PolicyGroupTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyGroupTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupTag)(nil)).Elem()
}

func (o PolicyGroupTagArrayOutput) ToPolicyGroupTagArrayOutput() PolicyGroupTagArrayOutput {
	return o
}

func (o PolicyGroupTagArrayOutput) ToPolicyGroupTagArrayOutputWithContext(ctx context.Context) PolicyGroupTagArrayOutput {
	return o
}

func (o PolicyGroupTagArrayOutput) Index(i pulumi.IntInput) PolicyGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupTag {
		return vs[0].([]PolicyGroupTag)[vs[1].(int)]
	}).(PolicyGroupTagOutput)
}

type PolicyIPAddressAllocationTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyIPAddressAllocationTagInput is an input type that accepts PolicyIPAddressAllocationTagArgs and PolicyIPAddressAllocationTagOutput values.
// You can construct a concrete instance of `PolicyIPAddressAllocationTagInput` via:
//
//          PolicyIPAddressAllocationTagArgs{...}
type PolicyIPAddressAllocationTagInput interface {
	pulumi.Input

	ToPolicyIPAddressAllocationTagOutput() PolicyIPAddressAllocationTagOutput
	ToPolicyIPAddressAllocationTagOutputWithContext(context.Context) PolicyIPAddressAllocationTagOutput
}

type PolicyIPAddressAllocationTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyIPAddressAllocationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPAddressAllocationTag)(nil)).Elem()
}

func (i PolicyIPAddressAllocationTagArgs) ToPolicyIPAddressAllocationTagOutput() PolicyIPAddressAllocationTagOutput {
	return i.ToPolicyIPAddressAllocationTagOutputWithContext(context.Background())
}

func (i PolicyIPAddressAllocationTagArgs) ToPolicyIPAddressAllocationTagOutputWithContext(ctx context.Context) PolicyIPAddressAllocationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPAddressAllocationTagOutput)
}

// PolicyIPAddressAllocationTagArrayInput is an input type that accepts PolicyIPAddressAllocationTagArray and PolicyIPAddressAllocationTagArrayOutput values.
// You can construct a concrete instance of `PolicyIPAddressAllocationTagArrayInput` via:
//
//          PolicyIPAddressAllocationTagArray{ PolicyIPAddressAllocationTagArgs{...} }
type PolicyIPAddressAllocationTagArrayInput interface {
	pulumi.Input

	ToPolicyIPAddressAllocationTagArrayOutput() PolicyIPAddressAllocationTagArrayOutput
	ToPolicyIPAddressAllocationTagArrayOutputWithContext(context.Context) PolicyIPAddressAllocationTagArrayOutput
}

type PolicyIPAddressAllocationTagArray []PolicyIPAddressAllocationTagInput

func (PolicyIPAddressAllocationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPAddressAllocationTag)(nil)).Elem()
}

func (i PolicyIPAddressAllocationTagArray) ToPolicyIPAddressAllocationTagArrayOutput() PolicyIPAddressAllocationTagArrayOutput {
	return i.ToPolicyIPAddressAllocationTagArrayOutputWithContext(context.Background())
}

func (i PolicyIPAddressAllocationTagArray) ToPolicyIPAddressAllocationTagArrayOutputWithContext(ctx context.Context) PolicyIPAddressAllocationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPAddressAllocationTagArrayOutput)
}

type PolicyIPAddressAllocationTagOutput struct{ *pulumi.OutputState }

func (PolicyIPAddressAllocationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPAddressAllocationTag)(nil)).Elem()
}

func (o PolicyIPAddressAllocationTagOutput) ToPolicyIPAddressAllocationTagOutput() PolicyIPAddressAllocationTagOutput {
	return o
}

func (o PolicyIPAddressAllocationTagOutput) ToPolicyIPAddressAllocationTagOutputWithContext(ctx context.Context) PolicyIPAddressAllocationTagOutput {
	return o
}

func (o PolicyIPAddressAllocationTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyIPAddressAllocationTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyIPAddressAllocationTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyIPAddressAllocationTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyIPAddressAllocationTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyIPAddressAllocationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPAddressAllocationTag)(nil)).Elem()
}

func (o PolicyIPAddressAllocationTagArrayOutput) ToPolicyIPAddressAllocationTagArrayOutput() PolicyIPAddressAllocationTagArrayOutput {
	return o
}

func (o PolicyIPAddressAllocationTagArrayOutput) ToPolicyIPAddressAllocationTagArrayOutputWithContext(ctx context.Context) PolicyIPAddressAllocationTagArrayOutput {
	return o
}

func (o PolicyIPAddressAllocationTagArrayOutput) Index(i pulumi.IntInput) PolicyIPAddressAllocationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyIPAddressAllocationTag {
		return vs[0].([]PolicyIPAddressAllocationTag)[vs[1].(int)]
	}).(PolicyIPAddressAllocationTagOutput)
}

type PolicyIPBlockTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyIPBlockTagInput is an input type that accepts PolicyIPBlockTagArgs and PolicyIPBlockTagOutput values.
// You can construct a concrete instance of `PolicyIPBlockTagInput` via:
//
//          PolicyIPBlockTagArgs{...}
type PolicyIPBlockTagInput interface {
	pulumi.Input

	ToPolicyIPBlockTagOutput() PolicyIPBlockTagOutput
	ToPolicyIPBlockTagOutputWithContext(context.Context) PolicyIPBlockTagOutput
}

type PolicyIPBlockTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyIPBlockTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPBlockTag)(nil)).Elem()
}

func (i PolicyIPBlockTagArgs) ToPolicyIPBlockTagOutput() PolicyIPBlockTagOutput {
	return i.ToPolicyIPBlockTagOutputWithContext(context.Background())
}

func (i PolicyIPBlockTagArgs) ToPolicyIPBlockTagOutputWithContext(ctx context.Context) PolicyIPBlockTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPBlockTagOutput)
}

// PolicyIPBlockTagArrayInput is an input type that accepts PolicyIPBlockTagArray and PolicyIPBlockTagArrayOutput values.
// You can construct a concrete instance of `PolicyIPBlockTagArrayInput` via:
//
//          PolicyIPBlockTagArray{ PolicyIPBlockTagArgs{...} }
type PolicyIPBlockTagArrayInput interface {
	pulumi.Input

	ToPolicyIPBlockTagArrayOutput() PolicyIPBlockTagArrayOutput
	ToPolicyIPBlockTagArrayOutputWithContext(context.Context) PolicyIPBlockTagArrayOutput
}

type PolicyIPBlockTagArray []PolicyIPBlockTagInput

func (PolicyIPBlockTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPBlockTag)(nil)).Elem()
}

func (i PolicyIPBlockTagArray) ToPolicyIPBlockTagArrayOutput() PolicyIPBlockTagArrayOutput {
	return i.ToPolicyIPBlockTagArrayOutputWithContext(context.Background())
}

func (i PolicyIPBlockTagArray) ToPolicyIPBlockTagArrayOutputWithContext(ctx context.Context) PolicyIPBlockTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPBlockTagArrayOutput)
}

type PolicyIPBlockTagOutput struct{ *pulumi.OutputState }

func (PolicyIPBlockTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPBlockTag)(nil)).Elem()
}

func (o PolicyIPBlockTagOutput) ToPolicyIPBlockTagOutput() PolicyIPBlockTagOutput {
	return o
}

func (o PolicyIPBlockTagOutput) ToPolicyIPBlockTagOutputWithContext(ctx context.Context) PolicyIPBlockTagOutput {
	return o
}

func (o PolicyIPBlockTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyIPBlockTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyIPBlockTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyIPBlockTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyIPBlockTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyIPBlockTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPBlockTag)(nil)).Elem()
}

func (o PolicyIPBlockTagArrayOutput) ToPolicyIPBlockTagArrayOutput() PolicyIPBlockTagArrayOutput {
	return o
}

func (o PolicyIPBlockTagArrayOutput) ToPolicyIPBlockTagArrayOutputWithContext(ctx context.Context) PolicyIPBlockTagArrayOutput {
	return o
}

func (o PolicyIPBlockTagArrayOutput) Index(i pulumi.IntInput) PolicyIPBlockTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyIPBlockTag {
		return vs[0].([]PolicyIPBlockTag)[vs[1].(int)]
	}).(PolicyIPBlockTagOutput)
}

type PolicyIPPoolBlockSubnetTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyIPPoolBlockSubnetTagInput is an input type that accepts PolicyIPPoolBlockSubnetTagArgs and PolicyIPPoolBlockSubnetTagOutput values.
// You can construct a concrete instance of `PolicyIPPoolBlockSubnetTagInput` via:
//
//          PolicyIPPoolBlockSubnetTagArgs{...}
type PolicyIPPoolBlockSubnetTagInput interface {
	pulumi.Input

	ToPolicyIPPoolBlockSubnetTagOutput() PolicyIPPoolBlockSubnetTagOutput
	ToPolicyIPPoolBlockSubnetTagOutputWithContext(context.Context) PolicyIPPoolBlockSubnetTagOutput
}

type PolicyIPPoolBlockSubnetTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyIPPoolBlockSubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPPoolBlockSubnetTag)(nil)).Elem()
}

func (i PolicyIPPoolBlockSubnetTagArgs) ToPolicyIPPoolBlockSubnetTagOutput() PolicyIPPoolBlockSubnetTagOutput {
	return i.ToPolicyIPPoolBlockSubnetTagOutputWithContext(context.Background())
}

func (i PolicyIPPoolBlockSubnetTagArgs) ToPolicyIPPoolBlockSubnetTagOutputWithContext(ctx context.Context) PolicyIPPoolBlockSubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPPoolBlockSubnetTagOutput)
}

// PolicyIPPoolBlockSubnetTagArrayInput is an input type that accepts PolicyIPPoolBlockSubnetTagArray and PolicyIPPoolBlockSubnetTagArrayOutput values.
// You can construct a concrete instance of `PolicyIPPoolBlockSubnetTagArrayInput` via:
//
//          PolicyIPPoolBlockSubnetTagArray{ PolicyIPPoolBlockSubnetTagArgs{...} }
type PolicyIPPoolBlockSubnetTagArrayInput interface {
	pulumi.Input

	ToPolicyIPPoolBlockSubnetTagArrayOutput() PolicyIPPoolBlockSubnetTagArrayOutput
	ToPolicyIPPoolBlockSubnetTagArrayOutputWithContext(context.Context) PolicyIPPoolBlockSubnetTagArrayOutput
}

type PolicyIPPoolBlockSubnetTagArray []PolicyIPPoolBlockSubnetTagInput

func (PolicyIPPoolBlockSubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPPoolBlockSubnetTag)(nil)).Elem()
}

func (i PolicyIPPoolBlockSubnetTagArray) ToPolicyIPPoolBlockSubnetTagArrayOutput() PolicyIPPoolBlockSubnetTagArrayOutput {
	return i.ToPolicyIPPoolBlockSubnetTagArrayOutputWithContext(context.Background())
}

func (i PolicyIPPoolBlockSubnetTagArray) ToPolicyIPPoolBlockSubnetTagArrayOutputWithContext(ctx context.Context) PolicyIPPoolBlockSubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPPoolBlockSubnetTagArrayOutput)
}

type PolicyIPPoolBlockSubnetTagOutput struct{ *pulumi.OutputState }

func (PolicyIPPoolBlockSubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPPoolBlockSubnetTag)(nil)).Elem()
}

func (o PolicyIPPoolBlockSubnetTagOutput) ToPolicyIPPoolBlockSubnetTagOutput() PolicyIPPoolBlockSubnetTagOutput {
	return o
}

func (o PolicyIPPoolBlockSubnetTagOutput) ToPolicyIPPoolBlockSubnetTagOutputWithContext(ctx context.Context) PolicyIPPoolBlockSubnetTagOutput {
	return o
}

func (o PolicyIPPoolBlockSubnetTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyIPPoolBlockSubnetTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyIPPoolBlockSubnetTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyIPPoolBlockSubnetTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyIPPoolBlockSubnetTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyIPPoolBlockSubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPPoolBlockSubnetTag)(nil)).Elem()
}

func (o PolicyIPPoolBlockSubnetTagArrayOutput) ToPolicyIPPoolBlockSubnetTagArrayOutput() PolicyIPPoolBlockSubnetTagArrayOutput {
	return o
}

func (o PolicyIPPoolBlockSubnetTagArrayOutput) ToPolicyIPPoolBlockSubnetTagArrayOutputWithContext(ctx context.Context) PolicyIPPoolBlockSubnetTagArrayOutput {
	return o
}

func (o PolicyIPPoolBlockSubnetTagArrayOutput) Index(i pulumi.IntInput) PolicyIPPoolBlockSubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyIPPoolBlockSubnetTag {
		return vs[0].([]PolicyIPPoolBlockSubnetTag)[vs[1].(int)]
	}).(PolicyIPPoolBlockSubnetTagOutput)
}

type PolicyIPPoolStaticSubnetAllocationRange struct {
	End   string `pulumi:"end"`
	Start string `pulumi:"start"`
}

// PolicyIPPoolStaticSubnetAllocationRangeInput is an input type that accepts PolicyIPPoolStaticSubnetAllocationRangeArgs and PolicyIPPoolStaticSubnetAllocationRangeOutput values.
// You can construct a concrete instance of `PolicyIPPoolStaticSubnetAllocationRangeInput` via:
//
//          PolicyIPPoolStaticSubnetAllocationRangeArgs{...}
type PolicyIPPoolStaticSubnetAllocationRangeInput interface {
	pulumi.Input

	ToPolicyIPPoolStaticSubnetAllocationRangeOutput() PolicyIPPoolStaticSubnetAllocationRangeOutput
	ToPolicyIPPoolStaticSubnetAllocationRangeOutputWithContext(context.Context) PolicyIPPoolStaticSubnetAllocationRangeOutput
}

type PolicyIPPoolStaticSubnetAllocationRangeArgs struct {
	End   pulumi.StringInput `pulumi:"end"`
	Start pulumi.StringInput `pulumi:"start"`
}

func (PolicyIPPoolStaticSubnetAllocationRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPPoolStaticSubnetAllocationRange)(nil)).Elem()
}

func (i PolicyIPPoolStaticSubnetAllocationRangeArgs) ToPolicyIPPoolStaticSubnetAllocationRangeOutput() PolicyIPPoolStaticSubnetAllocationRangeOutput {
	return i.ToPolicyIPPoolStaticSubnetAllocationRangeOutputWithContext(context.Background())
}

func (i PolicyIPPoolStaticSubnetAllocationRangeArgs) ToPolicyIPPoolStaticSubnetAllocationRangeOutputWithContext(ctx context.Context) PolicyIPPoolStaticSubnetAllocationRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPPoolStaticSubnetAllocationRangeOutput)
}

// PolicyIPPoolStaticSubnetAllocationRangeArrayInput is an input type that accepts PolicyIPPoolStaticSubnetAllocationRangeArray and PolicyIPPoolStaticSubnetAllocationRangeArrayOutput values.
// You can construct a concrete instance of `PolicyIPPoolStaticSubnetAllocationRangeArrayInput` via:
//
//          PolicyIPPoolStaticSubnetAllocationRangeArray{ PolicyIPPoolStaticSubnetAllocationRangeArgs{...} }
type PolicyIPPoolStaticSubnetAllocationRangeArrayInput interface {
	pulumi.Input

	ToPolicyIPPoolStaticSubnetAllocationRangeArrayOutput() PolicyIPPoolStaticSubnetAllocationRangeArrayOutput
	ToPolicyIPPoolStaticSubnetAllocationRangeArrayOutputWithContext(context.Context) PolicyIPPoolStaticSubnetAllocationRangeArrayOutput
}

type PolicyIPPoolStaticSubnetAllocationRangeArray []PolicyIPPoolStaticSubnetAllocationRangeInput

func (PolicyIPPoolStaticSubnetAllocationRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPPoolStaticSubnetAllocationRange)(nil)).Elem()
}

func (i PolicyIPPoolStaticSubnetAllocationRangeArray) ToPolicyIPPoolStaticSubnetAllocationRangeArrayOutput() PolicyIPPoolStaticSubnetAllocationRangeArrayOutput {
	return i.ToPolicyIPPoolStaticSubnetAllocationRangeArrayOutputWithContext(context.Background())
}

func (i PolicyIPPoolStaticSubnetAllocationRangeArray) ToPolicyIPPoolStaticSubnetAllocationRangeArrayOutputWithContext(ctx context.Context) PolicyIPPoolStaticSubnetAllocationRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPPoolStaticSubnetAllocationRangeArrayOutput)
}

type PolicyIPPoolStaticSubnetAllocationRangeOutput struct{ *pulumi.OutputState }

func (PolicyIPPoolStaticSubnetAllocationRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPPoolStaticSubnetAllocationRange)(nil)).Elem()
}

func (o PolicyIPPoolStaticSubnetAllocationRangeOutput) ToPolicyIPPoolStaticSubnetAllocationRangeOutput() PolicyIPPoolStaticSubnetAllocationRangeOutput {
	return o
}

func (o PolicyIPPoolStaticSubnetAllocationRangeOutput) ToPolicyIPPoolStaticSubnetAllocationRangeOutputWithContext(ctx context.Context) PolicyIPPoolStaticSubnetAllocationRangeOutput {
	return o
}

func (o PolicyIPPoolStaticSubnetAllocationRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyIPPoolStaticSubnetAllocationRange) string { return v.End }).(pulumi.StringOutput)
}

func (o PolicyIPPoolStaticSubnetAllocationRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyIPPoolStaticSubnetAllocationRange) string { return v.Start }).(pulumi.StringOutput)
}

type PolicyIPPoolStaticSubnetAllocationRangeArrayOutput struct{ *pulumi.OutputState }

func (PolicyIPPoolStaticSubnetAllocationRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPPoolStaticSubnetAllocationRange)(nil)).Elem()
}

func (o PolicyIPPoolStaticSubnetAllocationRangeArrayOutput) ToPolicyIPPoolStaticSubnetAllocationRangeArrayOutput() PolicyIPPoolStaticSubnetAllocationRangeArrayOutput {
	return o
}

func (o PolicyIPPoolStaticSubnetAllocationRangeArrayOutput) ToPolicyIPPoolStaticSubnetAllocationRangeArrayOutputWithContext(ctx context.Context) PolicyIPPoolStaticSubnetAllocationRangeArrayOutput {
	return o
}

func (o PolicyIPPoolStaticSubnetAllocationRangeArrayOutput) Index(i pulumi.IntInput) PolicyIPPoolStaticSubnetAllocationRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyIPPoolStaticSubnetAllocationRange {
		return vs[0].([]PolicyIPPoolStaticSubnetAllocationRange)[vs[1].(int)]
	}).(PolicyIPPoolStaticSubnetAllocationRangeOutput)
}

type PolicyIPPoolStaticSubnetTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyIPPoolStaticSubnetTagInput is an input type that accepts PolicyIPPoolStaticSubnetTagArgs and PolicyIPPoolStaticSubnetTagOutput values.
// You can construct a concrete instance of `PolicyIPPoolStaticSubnetTagInput` via:
//
//          PolicyIPPoolStaticSubnetTagArgs{...}
type PolicyIPPoolStaticSubnetTagInput interface {
	pulumi.Input

	ToPolicyIPPoolStaticSubnetTagOutput() PolicyIPPoolStaticSubnetTagOutput
	ToPolicyIPPoolStaticSubnetTagOutputWithContext(context.Context) PolicyIPPoolStaticSubnetTagOutput
}

type PolicyIPPoolStaticSubnetTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyIPPoolStaticSubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPPoolStaticSubnetTag)(nil)).Elem()
}

func (i PolicyIPPoolStaticSubnetTagArgs) ToPolicyIPPoolStaticSubnetTagOutput() PolicyIPPoolStaticSubnetTagOutput {
	return i.ToPolicyIPPoolStaticSubnetTagOutputWithContext(context.Background())
}

func (i PolicyIPPoolStaticSubnetTagArgs) ToPolicyIPPoolStaticSubnetTagOutputWithContext(ctx context.Context) PolicyIPPoolStaticSubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPPoolStaticSubnetTagOutput)
}

// PolicyIPPoolStaticSubnetTagArrayInput is an input type that accepts PolicyIPPoolStaticSubnetTagArray and PolicyIPPoolStaticSubnetTagArrayOutput values.
// You can construct a concrete instance of `PolicyIPPoolStaticSubnetTagArrayInput` via:
//
//          PolicyIPPoolStaticSubnetTagArray{ PolicyIPPoolStaticSubnetTagArgs{...} }
type PolicyIPPoolStaticSubnetTagArrayInput interface {
	pulumi.Input

	ToPolicyIPPoolStaticSubnetTagArrayOutput() PolicyIPPoolStaticSubnetTagArrayOutput
	ToPolicyIPPoolStaticSubnetTagArrayOutputWithContext(context.Context) PolicyIPPoolStaticSubnetTagArrayOutput
}

type PolicyIPPoolStaticSubnetTagArray []PolicyIPPoolStaticSubnetTagInput

func (PolicyIPPoolStaticSubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPPoolStaticSubnetTag)(nil)).Elem()
}

func (i PolicyIPPoolStaticSubnetTagArray) ToPolicyIPPoolStaticSubnetTagArrayOutput() PolicyIPPoolStaticSubnetTagArrayOutput {
	return i.ToPolicyIPPoolStaticSubnetTagArrayOutputWithContext(context.Background())
}

func (i PolicyIPPoolStaticSubnetTagArray) ToPolicyIPPoolStaticSubnetTagArrayOutputWithContext(ctx context.Context) PolicyIPPoolStaticSubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPPoolStaticSubnetTagArrayOutput)
}

type PolicyIPPoolStaticSubnetTagOutput struct{ *pulumi.OutputState }

func (PolicyIPPoolStaticSubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPPoolStaticSubnetTag)(nil)).Elem()
}

func (o PolicyIPPoolStaticSubnetTagOutput) ToPolicyIPPoolStaticSubnetTagOutput() PolicyIPPoolStaticSubnetTagOutput {
	return o
}

func (o PolicyIPPoolStaticSubnetTagOutput) ToPolicyIPPoolStaticSubnetTagOutputWithContext(ctx context.Context) PolicyIPPoolStaticSubnetTagOutput {
	return o
}

func (o PolicyIPPoolStaticSubnetTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyIPPoolStaticSubnetTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyIPPoolStaticSubnetTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyIPPoolStaticSubnetTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyIPPoolStaticSubnetTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyIPPoolStaticSubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPPoolStaticSubnetTag)(nil)).Elem()
}

func (o PolicyIPPoolStaticSubnetTagArrayOutput) ToPolicyIPPoolStaticSubnetTagArrayOutput() PolicyIPPoolStaticSubnetTagArrayOutput {
	return o
}

func (o PolicyIPPoolStaticSubnetTagArrayOutput) ToPolicyIPPoolStaticSubnetTagArrayOutputWithContext(ctx context.Context) PolicyIPPoolStaticSubnetTagArrayOutput {
	return o
}

func (o PolicyIPPoolStaticSubnetTagArrayOutput) Index(i pulumi.IntInput) PolicyIPPoolStaticSubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyIPPoolStaticSubnetTag {
		return vs[0].([]PolicyIPPoolStaticSubnetTag)[vs[1].(int)]
	}).(PolicyIPPoolStaticSubnetTagOutput)
}

type PolicyIPPoolTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyIPPoolTagInput is an input type that accepts PolicyIPPoolTagArgs and PolicyIPPoolTagOutput values.
// You can construct a concrete instance of `PolicyIPPoolTagInput` via:
//
//          PolicyIPPoolTagArgs{...}
type PolicyIPPoolTagInput interface {
	pulumi.Input

	ToPolicyIPPoolTagOutput() PolicyIPPoolTagOutput
	ToPolicyIPPoolTagOutputWithContext(context.Context) PolicyIPPoolTagOutput
}

type PolicyIPPoolTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyIPPoolTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPPoolTag)(nil)).Elem()
}

func (i PolicyIPPoolTagArgs) ToPolicyIPPoolTagOutput() PolicyIPPoolTagOutput {
	return i.ToPolicyIPPoolTagOutputWithContext(context.Background())
}

func (i PolicyIPPoolTagArgs) ToPolicyIPPoolTagOutputWithContext(ctx context.Context) PolicyIPPoolTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPPoolTagOutput)
}

// PolicyIPPoolTagArrayInput is an input type that accepts PolicyIPPoolTagArray and PolicyIPPoolTagArrayOutput values.
// You can construct a concrete instance of `PolicyIPPoolTagArrayInput` via:
//
//          PolicyIPPoolTagArray{ PolicyIPPoolTagArgs{...} }
type PolicyIPPoolTagArrayInput interface {
	pulumi.Input

	ToPolicyIPPoolTagArrayOutput() PolicyIPPoolTagArrayOutput
	ToPolicyIPPoolTagArrayOutputWithContext(context.Context) PolicyIPPoolTagArrayOutput
}

type PolicyIPPoolTagArray []PolicyIPPoolTagInput

func (PolicyIPPoolTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPPoolTag)(nil)).Elem()
}

func (i PolicyIPPoolTagArray) ToPolicyIPPoolTagArrayOutput() PolicyIPPoolTagArrayOutput {
	return i.ToPolicyIPPoolTagArrayOutputWithContext(context.Background())
}

func (i PolicyIPPoolTagArray) ToPolicyIPPoolTagArrayOutputWithContext(ctx context.Context) PolicyIPPoolTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIPPoolTagArrayOutput)
}

type PolicyIPPoolTagOutput struct{ *pulumi.OutputState }

func (PolicyIPPoolTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIPPoolTag)(nil)).Elem()
}

func (o PolicyIPPoolTagOutput) ToPolicyIPPoolTagOutput() PolicyIPPoolTagOutput {
	return o
}

func (o PolicyIPPoolTagOutput) ToPolicyIPPoolTagOutputWithContext(ctx context.Context) PolicyIPPoolTagOutput {
	return o
}

func (o PolicyIPPoolTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyIPPoolTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyIPPoolTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyIPPoolTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyIPPoolTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyIPPoolTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyIPPoolTag)(nil)).Elem()
}

func (o PolicyIPPoolTagArrayOutput) ToPolicyIPPoolTagArrayOutput() PolicyIPPoolTagArrayOutput {
	return o
}

func (o PolicyIPPoolTagArrayOutput) ToPolicyIPPoolTagArrayOutputWithContext(ctx context.Context) PolicyIPPoolTagArrayOutput {
	return o
}

func (o PolicyIPPoolTagArrayOutput) Index(i pulumi.IntInput) PolicyIPPoolTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyIPPoolTag {
		return vs[0].([]PolicyIPPoolTag)[vs[1].(int)]
	}).(PolicyIPPoolTagOutput)
}

type PolicyLBPoolMember struct {
	AdminState               *string `pulumi:"adminState"`
	BackupMember             *bool   `pulumi:"backupMember"`
	DisplayName              *string `pulumi:"displayName"`
	IpAddress                string  `pulumi:"ipAddress"`
	MaxConcurrentConnections *int    `pulumi:"maxConcurrentConnections"`
	Port                     *string `pulumi:"port"`
	Weight                   *int    `pulumi:"weight"`
}

// PolicyLBPoolMemberInput is an input type that accepts PolicyLBPoolMemberArgs and PolicyLBPoolMemberOutput values.
// You can construct a concrete instance of `PolicyLBPoolMemberInput` via:
//
//          PolicyLBPoolMemberArgs{...}
type PolicyLBPoolMemberInput interface {
	pulumi.Input

	ToPolicyLBPoolMemberOutput() PolicyLBPoolMemberOutput
	ToPolicyLBPoolMemberOutputWithContext(context.Context) PolicyLBPoolMemberOutput
}

type PolicyLBPoolMemberArgs struct {
	AdminState               pulumi.StringPtrInput `pulumi:"adminState"`
	BackupMember             pulumi.BoolPtrInput   `pulumi:"backupMember"`
	DisplayName              pulumi.StringPtrInput `pulumi:"displayName"`
	IpAddress                pulumi.StringInput    `pulumi:"ipAddress"`
	MaxConcurrentConnections pulumi.IntPtrInput    `pulumi:"maxConcurrentConnections"`
	Port                     pulumi.StringPtrInput `pulumi:"port"`
	Weight                   pulumi.IntPtrInput    `pulumi:"weight"`
}

func (PolicyLBPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBPoolMember)(nil)).Elem()
}

func (i PolicyLBPoolMemberArgs) ToPolicyLBPoolMemberOutput() PolicyLBPoolMemberOutput {
	return i.ToPolicyLBPoolMemberOutputWithContext(context.Background())
}

func (i PolicyLBPoolMemberArgs) ToPolicyLBPoolMemberOutputWithContext(ctx context.Context) PolicyLBPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBPoolMemberOutput)
}

// PolicyLBPoolMemberArrayInput is an input type that accepts PolicyLBPoolMemberArray and PolicyLBPoolMemberArrayOutput values.
// You can construct a concrete instance of `PolicyLBPoolMemberArrayInput` via:
//
//          PolicyLBPoolMemberArray{ PolicyLBPoolMemberArgs{...} }
type PolicyLBPoolMemberArrayInput interface {
	pulumi.Input

	ToPolicyLBPoolMemberArrayOutput() PolicyLBPoolMemberArrayOutput
	ToPolicyLBPoolMemberArrayOutputWithContext(context.Context) PolicyLBPoolMemberArrayOutput
}

type PolicyLBPoolMemberArray []PolicyLBPoolMemberInput

func (PolicyLBPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyLBPoolMember)(nil)).Elem()
}

func (i PolicyLBPoolMemberArray) ToPolicyLBPoolMemberArrayOutput() PolicyLBPoolMemberArrayOutput {
	return i.ToPolicyLBPoolMemberArrayOutputWithContext(context.Background())
}

func (i PolicyLBPoolMemberArray) ToPolicyLBPoolMemberArrayOutputWithContext(ctx context.Context) PolicyLBPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBPoolMemberArrayOutput)
}

type PolicyLBPoolMemberOutput struct{ *pulumi.OutputState }

func (PolicyLBPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBPoolMember)(nil)).Elem()
}

func (o PolicyLBPoolMemberOutput) ToPolicyLBPoolMemberOutput() PolicyLBPoolMemberOutput {
	return o
}

func (o PolicyLBPoolMemberOutput) ToPolicyLBPoolMemberOutputWithContext(ctx context.Context) PolicyLBPoolMemberOutput {
	return o
}

func (o PolicyLBPoolMemberOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMember) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

func (o PolicyLBPoolMemberOutput) BackupMember() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMember) *bool { return v.BackupMember }).(pulumi.BoolPtrOutput)
}

func (o PolicyLBPoolMemberOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMember) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PolicyLBPoolMemberOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyLBPoolMember) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o PolicyLBPoolMemberOutput) MaxConcurrentConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMember) *int { return v.MaxConcurrentConnections }).(pulumi.IntPtrOutput)
}

func (o PolicyLBPoolMemberOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMember) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o PolicyLBPoolMemberOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMember) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type PolicyLBPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (PolicyLBPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyLBPoolMember)(nil)).Elem()
}

func (o PolicyLBPoolMemberArrayOutput) ToPolicyLBPoolMemberArrayOutput() PolicyLBPoolMemberArrayOutput {
	return o
}

func (o PolicyLBPoolMemberArrayOutput) ToPolicyLBPoolMemberArrayOutputWithContext(ctx context.Context) PolicyLBPoolMemberArrayOutput {
	return o
}

func (o PolicyLBPoolMemberArrayOutput) Index(i pulumi.IntInput) PolicyLBPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyLBPoolMember {
		return vs[0].([]PolicyLBPoolMember)[vs[1].(int)]
	}).(PolicyLBPoolMemberOutput)
}

type PolicyLBPoolMemberGroup struct {
	AllowIpv4     *bool   `pulumi:"allowIpv4"`
	AllowIpv6     *bool   `pulumi:"allowIpv6"`
	GroupPath     string  `pulumi:"groupPath"`
	MaxIpListSize *int    `pulumi:"maxIpListSize"`
	Port          *string `pulumi:"port"`
}

// PolicyLBPoolMemberGroupInput is an input type that accepts PolicyLBPoolMemberGroupArgs and PolicyLBPoolMemberGroupOutput values.
// You can construct a concrete instance of `PolicyLBPoolMemberGroupInput` via:
//
//          PolicyLBPoolMemberGroupArgs{...}
type PolicyLBPoolMemberGroupInput interface {
	pulumi.Input

	ToPolicyLBPoolMemberGroupOutput() PolicyLBPoolMemberGroupOutput
	ToPolicyLBPoolMemberGroupOutputWithContext(context.Context) PolicyLBPoolMemberGroupOutput
}

type PolicyLBPoolMemberGroupArgs struct {
	AllowIpv4     pulumi.BoolPtrInput   `pulumi:"allowIpv4"`
	AllowIpv6     pulumi.BoolPtrInput   `pulumi:"allowIpv6"`
	GroupPath     pulumi.StringInput    `pulumi:"groupPath"`
	MaxIpListSize pulumi.IntPtrInput    `pulumi:"maxIpListSize"`
	Port          pulumi.StringPtrInput `pulumi:"port"`
}

func (PolicyLBPoolMemberGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBPoolMemberGroup)(nil)).Elem()
}

func (i PolicyLBPoolMemberGroupArgs) ToPolicyLBPoolMemberGroupOutput() PolicyLBPoolMemberGroupOutput {
	return i.ToPolicyLBPoolMemberGroupOutputWithContext(context.Background())
}

func (i PolicyLBPoolMemberGroupArgs) ToPolicyLBPoolMemberGroupOutputWithContext(ctx context.Context) PolicyLBPoolMemberGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBPoolMemberGroupOutput)
}

func (i PolicyLBPoolMemberGroupArgs) ToPolicyLBPoolMemberGroupPtrOutput() PolicyLBPoolMemberGroupPtrOutput {
	return i.ToPolicyLBPoolMemberGroupPtrOutputWithContext(context.Background())
}

func (i PolicyLBPoolMemberGroupArgs) ToPolicyLBPoolMemberGroupPtrOutputWithContext(ctx context.Context) PolicyLBPoolMemberGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBPoolMemberGroupOutput).ToPolicyLBPoolMemberGroupPtrOutputWithContext(ctx)
}

// PolicyLBPoolMemberGroupPtrInput is an input type that accepts PolicyLBPoolMemberGroupArgs, PolicyLBPoolMemberGroupPtr and PolicyLBPoolMemberGroupPtrOutput values.
// You can construct a concrete instance of `PolicyLBPoolMemberGroupPtrInput` via:
//
//          PolicyLBPoolMemberGroupArgs{...}
//
//  or:
//
//          nil
type PolicyLBPoolMemberGroupPtrInput interface {
	pulumi.Input

	ToPolicyLBPoolMemberGroupPtrOutput() PolicyLBPoolMemberGroupPtrOutput
	ToPolicyLBPoolMemberGroupPtrOutputWithContext(context.Context) PolicyLBPoolMemberGroupPtrOutput
}

type policyLBPoolMemberGroupPtrType PolicyLBPoolMemberGroupArgs

func PolicyLBPoolMemberGroupPtr(v *PolicyLBPoolMemberGroupArgs) PolicyLBPoolMemberGroupPtrInput {
	return (*policyLBPoolMemberGroupPtrType)(v)
}

func (*policyLBPoolMemberGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyLBPoolMemberGroup)(nil)).Elem()
}

func (i *policyLBPoolMemberGroupPtrType) ToPolicyLBPoolMemberGroupPtrOutput() PolicyLBPoolMemberGroupPtrOutput {
	return i.ToPolicyLBPoolMemberGroupPtrOutputWithContext(context.Background())
}

func (i *policyLBPoolMemberGroupPtrType) ToPolicyLBPoolMemberGroupPtrOutputWithContext(ctx context.Context) PolicyLBPoolMemberGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBPoolMemberGroupPtrOutput)
}

type PolicyLBPoolMemberGroupOutput struct{ *pulumi.OutputState }

func (PolicyLBPoolMemberGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBPoolMemberGroup)(nil)).Elem()
}

func (o PolicyLBPoolMemberGroupOutput) ToPolicyLBPoolMemberGroupOutput() PolicyLBPoolMemberGroupOutput {
	return o
}

func (o PolicyLBPoolMemberGroupOutput) ToPolicyLBPoolMemberGroupOutputWithContext(ctx context.Context) PolicyLBPoolMemberGroupOutput {
	return o
}

func (o PolicyLBPoolMemberGroupOutput) ToPolicyLBPoolMemberGroupPtrOutput() PolicyLBPoolMemberGroupPtrOutput {
	return o.ToPolicyLBPoolMemberGroupPtrOutputWithContext(context.Background())
}

func (o PolicyLBPoolMemberGroupOutput) ToPolicyLBPoolMemberGroupPtrOutputWithContext(ctx context.Context) PolicyLBPoolMemberGroupPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMemberGroup) *PolicyLBPoolMemberGroup {
		return &v
	}).(PolicyLBPoolMemberGroupPtrOutput)
}
func (o PolicyLBPoolMemberGroupOutput) AllowIpv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMemberGroup) *bool { return v.AllowIpv4 }).(pulumi.BoolPtrOutput)
}

func (o PolicyLBPoolMemberGroupOutput) AllowIpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMemberGroup) *bool { return v.AllowIpv6 }).(pulumi.BoolPtrOutput)
}

func (o PolicyLBPoolMemberGroupOutput) GroupPath() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyLBPoolMemberGroup) string { return v.GroupPath }).(pulumi.StringOutput)
}

func (o PolicyLBPoolMemberGroupOutput) MaxIpListSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMemberGroup) *int { return v.MaxIpListSize }).(pulumi.IntPtrOutput)
}

func (o PolicyLBPoolMemberGroupOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolMemberGroup) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type PolicyLBPoolMemberGroupPtrOutput struct{ *pulumi.OutputState }

func (PolicyLBPoolMemberGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyLBPoolMemberGroup)(nil)).Elem()
}

func (o PolicyLBPoolMemberGroupPtrOutput) ToPolicyLBPoolMemberGroupPtrOutput() PolicyLBPoolMemberGroupPtrOutput {
	return o
}

func (o PolicyLBPoolMemberGroupPtrOutput) ToPolicyLBPoolMemberGroupPtrOutputWithContext(ctx context.Context) PolicyLBPoolMemberGroupPtrOutput {
	return o
}

func (o PolicyLBPoolMemberGroupPtrOutput) Elem() PolicyLBPoolMemberGroupOutput {
	return o.ApplyT(func(v *PolicyLBPoolMemberGroup) PolicyLBPoolMemberGroup { return *v }).(PolicyLBPoolMemberGroupOutput)
}

func (o PolicyLBPoolMemberGroupPtrOutput) AllowIpv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyLBPoolMemberGroup) *bool {
		if v == nil {
			return nil
		}
		return v.AllowIpv4
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyLBPoolMemberGroupPtrOutput) AllowIpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyLBPoolMemberGroup) *bool {
		if v == nil {
			return nil
		}
		return v.AllowIpv6
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyLBPoolMemberGroupPtrOutput) GroupPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBPoolMemberGroup) *string {
		if v == nil {
			return nil
		}
		return &v.GroupPath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyLBPoolMemberGroupPtrOutput) MaxIpListSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyLBPoolMemberGroup) *int {
		if v == nil {
			return nil
		}
		return v.MaxIpListSize
	}).(pulumi.IntPtrOutput)
}

func (o PolicyLBPoolMemberGroupPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBPoolMemberGroup) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

type PolicyLBPoolSnat struct {
	IpPoolAddresses []string `pulumi:"ipPoolAddresses"`
	Type            *string  `pulumi:"type"`
}

// PolicyLBPoolSnatInput is an input type that accepts PolicyLBPoolSnatArgs and PolicyLBPoolSnatOutput values.
// You can construct a concrete instance of `PolicyLBPoolSnatInput` via:
//
//          PolicyLBPoolSnatArgs{...}
type PolicyLBPoolSnatInput interface {
	pulumi.Input

	ToPolicyLBPoolSnatOutput() PolicyLBPoolSnatOutput
	ToPolicyLBPoolSnatOutputWithContext(context.Context) PolicyLBPoolSnatOutput
}

type PolicyLBPoolSnatArgs struct {
	IpPoolAddresses pulumi.StringArrayInput `pulumi:"ipPoolAddresses"`
	Type            pulumi.StringPtrInput   `pulumi:"type"`
}

func (PolicyLBPoolSnatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBPoolSnat)(nil)).Elem()
}

func (i PolicyLBPoolSnatArgs) ToPolicyLBPoolSnatOutput() PolicyLBPoolSnatOutput {
	return i.ToPolicyLBPoolSnatOutputWithContext(context.Background())
}

func (i PolicyLBPoolSnatArgs) ToPolicyLBPoolSnatOutputWithContext(ctx context.Context) PolicyLBPoolSnatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBPoolSnatOutput)
}

func (i PolicyLBPoolSnatArgs) ToPolicyLBPoolSnatPtrOutput() PolicyLBPoolSnatPtrOutput {
	return i.ToPolicyLBPoolSnatPtrOutputWithContext(context.Background())
}

func (i PolicyLBPoolSnatArgs) ToPolicyLBPoolSnatPtrOutputWithContext(ctx context.Context) PolicyLBPoolSnatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBPoolSnatOutput).ToPolicyLBPoolSnatPtrOutputWithContext(ctx)
}

// PolicyLBPoolSnatPtrInput is an input type that accepts PolicyLBPoolSnatArgs, PolicyLBPoolSnatPtr and PolicyLBPoolSnatPtrOutput values.
// You can construct a concrete instance of `PolicyLBPoolSnatPtrInput` via:
//
//          PolicyLBPoolSnatArgs{...}
//
//  or:
//
//          nil
type PolicyLBPoolSnatPtrInput interface {
	pulumi.Input

	ToPolicyLBPoolSnatPtrOutput() PolicyLBPoolSnatPtrOutput
	ToPolicyLBPoolSnatPtrOutputWithContext(context.Context) PolicyLBPoolSnatPtrOutput
}

type policyLBPoolSnatPtrType PolicyLBPoolSnatArgs

func PolicyLBPoolSnatPtr(v *PolicyLBPoolSnatArgs) PolicyLBPoolSnatPtrInput {
	return (*policyLBPoolSnatPtrType)(v)
}

func (*policyLBPoolSnatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyLBPoolSnat)(nil)).Elem()
}

func (i *policyLBPoolSnatPtrType) ToPolicyLBPoolSnatPtrOutput() PolicyLBPoolSnatPtrOutput {
	return i.ToPolicyLBPoolSnatPtrOutputWithContext(context.Background())
}

func (i *policyLBPoolSnatPtrType) ToPolicyLBPoolSnatPtrOutputWithContext(ctx context.Context) PolicyLBPoolSnatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBPoolSnatPtrOutput)
}

type PolicyLBPoolSnatOutput struct{ *pulumi.OutputState }

func (PolicyLBPoolSnatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBPoolSnat)(nil)).Elem()
}

func (o PolicyLBPoolSnatOutput) ToPolicyLBPoolSnatOutput() PolicyLBPoolSnatOutput {
	return o
}

func (o PolicyLBPoolSnatOutput) ToPolicyLBPoolSnatOutputWithContext(ctx context.Context) PolicyLBPoolSnatOutput {
	return o
}

func (o PolicyLBPoolSnatOutput) ToPolicyLBPoolSnatPtrOutput() PolicyLBPoolSnatPtrOutput {
	return o.ToPolicyLBPoolSnatPtrOutputWithContext(context.Background())
}

func (o PolicyLBPoolSnatOutput) ToPolicyLBPoolSnatPtrOutputWithContext(ctx context.Context) PolicyLBPoolSnatPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolSnat) *PolicyLBPoolSnat {
		return &v
	}).(PolicyLBPoolSnatPtrOutput)
}
func (o PolicyLBPoolSnatOutput) IpPoolAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyLBPoolSnat) []string { return v.IpPoolAddresses }).(pulumi.StringArrayOutput)
}

func (o PolicyLBPoolSnatOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolSnat) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PolicyLBPoolSnatPtrOutput struct{ *pulumi.OutputState }

func (PolicyLBPoolSnatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyLBPoolSnat)(nil)).Elem()
}

func (o PolicyLBPoolSnatPtrOutput) ToPolicyLBPoolSnatPtrOutput() PolicyLBPoolSnatPtrOutput {
	return o
}

func (o PolicyLBPoolSnatPtrOutput) ToPolicyLBPoolSnatPtrOutputWithContext(ctx context.Context) PolicyLBPoolSnatPtrOutput {
	return o
}

func (o PolicyLBPoolSnatPtrOutput) Elem() PolicyLBPoolSnatOutput {
	return o.ApplyT(func(v *PolicyLBPoolSnat) PolicyLBPoolSnat { return *v }).(PolicyLBPoolSnatOutput)
}

func (o PolicyLBPoolSnatPtrOutput) IpPoolAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyLBPoolSnat) []string {
		if v == nil {
			return nil
		}
		return v.IpPoolAddresses
	}).(pulumi.StringArrayOutput)
}

func (o PolicyLBPoolSnatPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBPoolSnat) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type PolicyLBPoolTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyLBPoolTagInput is an input type that accepts PolicyLBPoolTagArgs and PolicyLBPoolTagOutput values.
// You can construct a concrete instance of `PolicyLBPoolTagInput` via:
//
//          PolicyLBPoolTagArgs{...}
type PolicyLBPoolTagInput interface {
	pulumi.Input

	ToPolicyLBPoolTagOutput() PolicyLBPoolTagOutput
	ToPolicyLBPoolTagOutputWithContext(context.Context) PolicyLBPoolTagOutput
}

type PolicyLBPoolTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyLBPoolTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBPoolTag)(nil)).Elem()
}

func (i PolicyLBPoolTagArgs) ToPolicyLBPoolTagOutput() PolicyLBPoolTagOutput {
	return i.ToPolicyLBPoolTagOutputWithContext(context.Background())
}

func (i PolicyLBPoolTagArgs) ToPolicyLBPoolTagOutputWithContext(ctx context.Context) PolicyLBPoolTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBPoolTagOutput)
}

// PolicyLBPoolTagArrayInput is an input type that accepts PolicyLBPoolTagArray and PolicyLBPoolTagArrayOutput values.
// You can construct a concrete instance of `PolicyLBPoolTagArrayInput` via:
//
//          PolicyLBPoolTagArray{ PolicyLBPoolTagArgs{...} }
type PolicyLBPoolTagArrayInput interface {
	pulumi.Input

	ToPolicyLBPoolTagArrayOutput() PolicyLBPoolTagArrayOutput
	ToPolicyLBPoolTagArrayOutputWithContext(context.Context) PolicyLBPoolTagArrayOutput
}

type PolicyLBPoolTagArray []PolicyLBPoolTagInput

func (PolicyLBPoolTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyLBPoolTag)(nil)).Elem()
}

func (i PolicyLBPoolTagArray) ToPolicyLBPoolTagArrayOutput() PolicyLBPoolTagArrayOutput {
	return i.ToPolicyLBPoolTagArrayOutputWithContext(context.Background())
}

func (i PolicyLBPoolTagArray) ToPolicyLBPoolTagArrayOutputWithContext(ctx context.Context) PolicyLBPoolTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBPoolTagArrayOutput)
}

type PolicyLBPoolTagOutput struct{ *pulumi.OutputState }

func (PolicyLBPoolTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBPoolTag)(nil)).Elem()
}

func (o PolicyLBPoolTagOutput) ToPolicyLBPoolTagOutput() PolicyLBPoolTagOutput {
	return o
}

func (o PolicyLBPoolTagOutput) ToPolicyLBPoolTagOutputWithContext(ctx context.Context) PolicyLBPoolTagOutput {
	return o
}

func (o PolicyLBPoolTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyLBPoolTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBPoolTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyLBPoolTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyLBPoolTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyLBPoolTag)(nil)).Elem()
}

func (o PolicyLBPoolTagArrayOutput) ToPolicyLBPoolTagArrayOutput() PolicyLBPoolTagArrayOutput {
	return o
}

func (o PolicyLBPoolTagArrayOutput) ToPolicyLBPoolTagArrayOutputWithContext(ctx context.Context) PolicyLBPoolTagArrayOutput {
	return o
}

func (o PolicyLBPoolTagArrayOutput) Index(i pulumi.IntInput) PolicyLBPoolTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyLBPoolTag {
		return vs[0].([]PolicyLBPoolTag)[vs[1].(int)]
	}).(PolicyLBPoolTagOutput)
}

type PolicyLBServiceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyLBServiceTagInput is an input type that accepts PolicyLBServiceTagArgs and PolicyLBServiceTagOutput values.
// You can construct a concrete instance of `PolicyLBServiceTagInput` via:
//
//          PolicyLBServiceTagArgs{...}
type PolicyLBServiceTagInput interface {
	pulumi.Input

	ToPolicyLBServiceTagOutput() PolicyLBServiceTagOutput
	ToPolicyLBServiceTagOutputWithContext(context.Context) PolicyLBServiceTagOutput
}

type PolicyLBServiceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyLBServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBServiceTag)(nil)).Elem()
}

func (i PolicyLBServiceTagArgs) ToPolicyLBServiceTagOutput() PolicyLBServiceTagOutput {
	return i.ToPolicyLBServiceTagOutputWithContext(context.Background())
}

func (i PolicyLBServiceTagArgs) ToPolicyLBServiceTagOutputWithContext(ctx context.Context) PolicyLBServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBServiceTagOutput)
}

// PolicyLBServiceTagArrayInput is an input type that accepts PolicyLBServiceTagArray and PolicyLBServiceTagArrayOutput values.
// You can construct a concrete instance of `PolicyLBServiceTagArrayInput` via:
//
//          PolicyLBServiceTagArray{ PolicyLBServiceTagArgs{...} }
type PolicyLBServiceTagArrayInput interface {
	pulumi.Input

	ToPolicyLBServiceTagArrayOutput() PolicyLBServiceTagArrayOutput
	ToPolicyLBServiceTagArrayOutputWithContext(context.Context) PolicyLBServiceTagArrayOutput
}

type PolicyLBServiceTagArray []PolicyLBServiceTagInput

func (PolicyLBServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyLBServiceTag)(nil)).Elem()
}

func (i PolicyLBServiceTagArray) ToPolicyLBServiceTagArrayOutput() PolicyLBServiceTagArrayOutput {
	return i.ToPolicyLBServiceTagArrayOutputWithContext(context.Background())
}

func (i PolicyLBServiceTagArray) ToPolicyLBServiceTagArrayOutputWithContext(ctx context.Context) PolicyLBServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBServiceTagArrayOutput)
}

type PolicyLBServiceTagOutput struct{ *pulumi.OutputState }

func (PolicyLBServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBServiceTag)(nil)).Elem()
}

func (o PolicyLBServiceTagOutput) ToPolicyLBServiceTagOutput() PolicyLBServiceTagOutput {
	return o
}

func (o PolicyLBServiceTagOutput) ToPolicyLBServiceTagOutputWithContext(ctx context.Context) PolicyLBServiceTagOutput {
	return o
}

func (o PolicyLBServiceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBServiceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyLBServiceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBServiceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyLBServiceTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyLBServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyLBServiceTag)(nil)).Elem()
}

func (o PolicyLBServiceTagArrayOutput) ToPolicyLBServiceTagArrayOutput() PolicyLBServiceTagArrayOutput {
	return o
}

func (o PolicyLBServiceTagArrayOutput) ToPolicyLBServiceTagArrayOutputWithContext(ctx context.Context) PolicyLBServiceTagArrayOutput {
	return o
}

func (o PolicyLBServiceTagArrayOutput) Index(i pulumi.IntInput) PolicyLBServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyLBServiceTag {
		return vs[0].([]PolicyLBServiceTag)[vs[1].(int)]
	}).(PolicyLBServiceTagOutput)
}

type PolicyLBVirtualServerAccessListControl struct {
	Action    string `pulumi:"action"`
	Enabled   *bool  `pulumi:"enabled"`
	GroupPath string `pulumi:"groupPath"`
}

// PolicyLBVirtualServerAccessListControlInput is an input type that accepts PolicyLBVirtualServerAccessListControlArgs and PolicyLBVirtualServerAccessListControlOutput values.
// You can construct a concrete instance of `PolicyLBVirtualServerAccessListControlInput` via:
//
//          PolicyLBVirtualServerAccessListControlArgs{...}
type PolicyLBVirtualServerAccessListControlInput interface {
	pulumi.Input

	ToPolicyLBVirtualServerAccessListControlOutput() PolicyLBVirtualServerAccessListControlOutput
	ToPolicyLBVirtualServerAccessListControlOutputWithContext(context.Context) PolicyLBVirtualServerAccessListControlOutput
}

type PolicyLBVirtualServerAccessListControlArgs struct {
	Action    pulumi.StringInput  `pulumi:"action"`
	Enabled   pulumi.BoolPtrInput `pulumi:"enabled"`
	GroupPath pulumi.StringInput  `pulumi:"groupPath"`
}

func (PolicyLBVirtualServerAccessListControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBVirtualServerAccessListControl)(nil)).Elem()
}

func (i PolicyLBVirtualServerAccessListControlArgs) ToPolicyLBVirtualServerAccessListControlOutput() PolicyLBVirtualServerAccessListControlOutput {
	return i.ToPolicyLBVirtualServerAccessListControlOutputWithContext(context.Background())
}

func (i PolicyLBVirtualServerAccessListControlArgs) ToPolicyLBVirtualServerAccessListControlOutputWithContext(ctx context.Context) PolicyLBVirtualServerAccessListControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerAccessListControlOutput)
}

func (i PolicyLBVirtualServerAccessListControlArgs) ToPolicyLBVirtualServerAccessListControlPtrOutput() PolicyLBVirtualServerAccessListControlPtrOutput {
	return i.ToPolicyLBVirtualServerAccessListControlPtrOutputWithContext(context.Background())
}

func (i PolicyLBVirtualServerAccessListControlArgs) ToPolicyLBVirtualServerAccessListControlPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerAccessListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerAccessListControlOutput).ToPolicyLBVirtualServerAccessListControlPtrOutputWithContext(ctx)
}

// PolicyLBVirtualServerAccessListControlPtrInput is an input type that accepts PolicyLBVirtualServerAccessListControlArgs, PolicyLBVirtualServerAccessListControlPtr and PolicyLBVirtualServerAccessListControlPtrOutput values.
// You can construct a concrete instance of `PolicyLBVirtualServerAccessListControlPtrInput` via:
//
//          PolicyLBVirtualServerAccessListControlArgs{...}
//
//  or:
//
//          nil
type PolicyLBVirtualServerAccessListControlPtrInput interface {
	pulumi.Input

	ToPolicyLBVirtualServerAccessListControlPtrOutput() PolicyLBVirtualServerAccessListControlPtrOutput
	ToPolicyLBVirtualServerAccessListControlPtrOutputWithContext(context.Context) PolicyLBVirtualServerAccessListControlPtrOutput
}

type policyLBVirtualServerAccessListControlPtrType PolicyLBVirtualServerAccessListControlArgs

func PolicyLBVirtualServerAccessListControlPtr(v *PolicyLBVirtualServerAccessListControlArgs) PolicyLBVirtualServerAccessListControlPtrInput {
	return (*policyLBVirtualServerAccessListControlPtrType)(v)
}

func (*policyLBVirtualServerAccessListControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyLBVirtualServerAccessListControl)(nil)).Elem()
}

func (i *policyLBVirtualServerAccessListControlPtrType) ToPolicyLBVirtualServerAccessListControlPtrOutput() PolicyLBVirtualServerAccessListControlPtrOutput {
	return i.ToPolicyLBVirtualServerAccessListControlPtrOutputWithContext(context.Background())
}

func (i *policyLBVirtualServerAccessListControlPtrType) ToPolicyLBVirtualServerAccessListControlPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerAccessListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerAccessListControlPtrOutput)
}

type PolicyLBVirtualServerAccessListControlOutput struct{ *pulumi.OutputState }

func (PolicyLBVirtualServerAccessListControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBVirtualServerAccessListControl)(nil)).Elem()
}

func (o PolicyLBVirtualServerAccessListControlOutput) ToPolicyLBVirtualServerAccessListControlOutput() PolicyLBVirtualServerAccessListControlOutput {
	return o
}

func (o PolicyLBVirtualServerAccessListControlOutput) ToPolicyLBVirtualServerAccessListControlOutputWithContext(ctx context.Context) PolicyLBVirtualServerAccessListControlOutput {
	return o
}

func (o PolicyLBVirtualServerAccessListControlOutput) ToPolicyLBVirtualServerAccessListControlPtrOutput() PolicyLBVirtualServerAccessListControlPtrOutput {
	return o.ToPolicyLBVirtualServerAccessListControlPtrOutputWithContext(context.Background())
}

func (o PolicyLBVirtualServerAccessListControlOutput) ToPolicyLBVirtualServerAccessListControlPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerAccessListControlPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerAccessListControl) *PolicyLBVirtualServerAccessListControl {
		return &v
	}).(PolicyLBVirtualServerAccessListControlPtrOutput)
}
func (o PolicyLBVirtualServerAccessListControlOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerAccessListControl) string { return v.Action }).(pulumi.StringOutput)
}

func (o PolicyLBVirtualServerAccessListControlOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerAccessListControl) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyLBVirtualServerAccessListControlOutput) GroupPath() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerAccessListControl) string { return v.GroupPath }).(pulumi.StringOutput)
}

type PolicyLBVirtualServerAccessListControlPtrOutput struct{ *pulumi.OutputState }

func (PolicyLBVirtualServerAccessListControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyLBVirtualServerAccessListControl)(nil)).Elem()
}

func (o PolicyLBVirtualServerAccessListControlPtrOutput) ToPolicyLBVirtualServerAccessListControlPtrOutput() PolicyLBVirtualServerAccessListControlPtrOutput {
	return o
}

func (o PolicyLBVirtualServerAccessListControlPtrOutput) ToPolicyLBVirtualServerAccessListControlPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerAccessListControlPtrOutput {
	return o
}

func (o PolicyLBVirtualServerAccessListControlPtrOutput) Elem() PolicyLBVirtualServerAccessListControlOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerAccessListControl) PolicyLBVirtualServerAccessListControl { return *v }).(PolicyLBVirtualServerAccessListControlOutput)
}

func (o PolicyLBVirtualServerAccessListControlPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerAccessListControl) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o PolicyLBVirtualServerAccessListControlPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerAccessListControl) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyLBVirtualServerAccessListControlPtrOutput) GroupPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerAccessListControl) *string {
		if v == nil {
			return nil
		}
		return &v.GroupPath
	}).(pulumi.StringPtrOutput)
}

type PolicyLBVirtualServerClientSsl struct {
	CaPaths                []string `pulumi:"caPaths"`
	CertificateChainDepth  *int     `pulumi:"certificateChainDepth"`
	ClientAuth             *string  `pulumi:"clientAuth"`
	CrlPaths               []string `pulumi:"crlPaths"`
	DefaultCertificatePath string   `pulumi:"defaultCertificatePath"`
	SniPaths               []string `pulumi:"sniPaths"`
	SslProfilePath         *string  `pulumi:"sslProfilePath"`
}

// PolicyLBVirtualServerClientSslInput is an input type that accepts PolicyLBVirtualServerClientSslArgs and PolicyLBVirtualServerClientSslOutput values.
// You can construct a concrete instance of `PolicyLBVirtualServerClientSslInput` via:
//
//          PolicyLBVirtualServerClientSslArgs{...}
type PolicyLBVirtualServerClientSslInput interface {
	pulumi.Input

	ToPolicyLBVirtualServerClientSslOutput() PolicyLBVirtualServerClientSslOutput
	ToPolicyLBVirtualServerClientSslOutputWithContext(context.Context) PolicyLBVirtualServerClientSslOutput
}

type PolicyLBVirtualServerClientSslArgs struct {
	CaPaths                pulumi.StringArrayInput `pulumi:"caPaths"`
	CertificateChainDepth  pulumi.IntPtrInput      `pulumi:"certificateChainDepth"`
	ClientAuth             pulumi.StringPtrInput   `pulumi:"clientAuth"`
	CrlPaths               pulumi.StringArrayInput `pulumi:"crlPaths"`
	DefaultCertificatePath pulumi.StringInput      `pulumi:"defaultCertificatePath"`
	SniPaths               pulumi.StringArrayInput `pulumi:"sniPaths"`
	SslProfilePath         pulumi.StringPtrInput   `pulumi:"sslProfilePath"`
}

func (PolicyLBVirtualServerClientSslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBVirtualServerClientSsl)(nil)).Elem()
}

func (i PolicyLBVirtualServerClientSslArgs) ToPolicyLBVirtualServerClientSslOutput() PolicyLBVirtualServerClientSslOutput {
	return i.ToPolicyLBVirtualServerClientSslOutputWithContext(context.Background())
}

func (i PolicyLBVirtualServerClientSslArgs) ToPolicyLBVirtualServerClientSslOutputWithContext(ctx context.Context) PolicyLBVirtualServerClientSslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerClientSslOutput)
}

func (i PolicyLBVirtualServerClientSslArgs) ToPolicyLBVirtualServerClientSslPtrOutput() PolicyLBVirtualServerClientSslPtrOutput {
	return i.ToPolicyLBVirtualServerClientSslPtrOutputWithContext(context.Background())
}

func (i PolicyLBVirtualServerClientSslArgs) ToPolicyLBVirtualServerClientSslPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerClientSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerClientSslOutput).ToPolicyLBVirtualServerClientSslPtrOutputWithContext(ctx)
}

// PolicyLBVirtualServerClientSslPtrInput is an input type that accepts PolicyLBVirtualServerClientSslArgs, PolicyLBVirtualServerClientSslPtr and PolicyLBVirtualServerClientSslPtrOutput values.
// You can construct a concrete instance of `PolicyLBVirtualServerClientSslPtrInput` via:
//
//          PolicyLBVirtualServerClientSslArgs{...}
//
//  or:
//
//          nil
type PolicyLBVirtualServerClientSslPtrInput interface {
	pulumi.Input

	ToPolicyLBVirtualServerClientSslPtrOutput() PolicyLBVirtualServerClientSslPtrOutput
	ToPolicyLBVirtualServerClientSslPtrOutputWithContext(context.Context) PolicyLBVirtualServerClientSslPtrOutput
}

type policyLBVirtualServerClientSslPtrType PolicyLBVirtualServerClientSslArgs

func PolicyLBVirtualServerClientSslPtr(v *PolicyLBVirtualServerClientSslArgs) PolicyLBVirtualServerClientSslPtrInput {
	return (*policyLBVirtualServerClientSslPtrType)(v)
}

func (*policyLBVirtualServerClientSslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyLBVirtualServerClientSsl)(nil)).Elem()
}

func (i *policyLBVirtualServerClientSslPtrType) ToPolicyLBVirtualServerClientSslPtrOutput() PolicyLBVirtualServerClientSslPtrOutput {
	return i.ToPolicyLBVirtualServerClientSslPtrOutputWithContext(context.Background())
}

func (i *policyLBVirtualServerClientSslPtrType) ToPolicyLBVirtualServerClientSslPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerClientSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerClientSslPtrOutput)
}

type PolicyLBVirtualServerClientSslOutput struct{ *pulumi.OutputState }

func (PolicyLBVirtualServerClientSslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBVirtualServerClientSsl)(nil)).Elem()
}

func (o PolicyLBVirtualServerClientSslOutput) ToPolicyLBVirtualServerClientSslOutput() PolicyLBVirtualServerClientSslOutput {
	return o
}

func (o PolicyLBVirtualServerClientSslOutput) ToPolicyLBVirtualServerClientSslOutputWithContext(ctx context.Context) PolicyLBVirtualServerClientSslOutput {
	return o
}

func (o PolicyLBVirtualServerClientSslOutput) ToPolicyLBVirtualServerClientSslPtrOutput() PolicyLBVirtualServerClientSslPtrOutput {
	return o.ToPolicyLBVirtualServerClientSslPtrOutputWithContext(context.Background())
}

func (o PolicyLBVirtualServerClientSslOutput) ToPolicyLBVirtualServerClientSslPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerClientSslPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerClientSsl) *PolicyLBVirtualServerClientSsl {
		return &v
	}).(PolicyLBVirtualServerClientSslPtrOutput)
}
func (o PolicyLBVirtualServerClientSslOutput) CaPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerClientSsl) []string { return v.CaPaths }).(pulumi.StringArrayOutput)
}

func (o PolicyLBVirtualServerClientSslOutput) CertificateChainDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerClientSsl) *int { return v.CertificateChainDepth }).(pulumi.IntPtrOutput)
}

func (o PolicyLBVirtualServerClientSslOutput) ClientAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerClientSsl) *string { return v.ClientAuth }).(pulumi.StringPtrOutput)
}

func (o PolicyLBVirtualServerClientSslOutput) CrlPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerClientSsl) []string { return v.CrlPaths }).(pulumi.StringArrayOutput)
}

func (o PolicyLBVirtualServerClientSslOutput) DefaultCertificatePath() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerClientSsl) string { return v.DefaultCertificatePath }).(pulumi.StringOutput)
}

func (o PolicyLBVirtualServerClientSslOutput) SniPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerClientSsl) []string { return v.SniPaths }).(pulumi.StringArrayOutput)
}

func (o PolicyLBVirtualServerClientSslOutput) SslProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerClientSsl) *string { return v.SslProfilePath }).(pulumi.StringPtrOutput)
}

type PolicyLBVirtualServerClientSslPtrOutput struct{ *pulumi.OutputState }

func (PolicyLBVirtualServerClientSslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyLBVirtualServerClientSsl)(nil)).Elem()
}

func (o PolicyLBVirtualServerClientSslPtrOutput) ToPolicyLBVirtualServerClientSslPtrOutput() PolicyLBVirtualServerClientSslPtrOutput {
	return o
}

func (o PolicyLBVirtualServerClientSslPtrOutput) ToPolicyLBVirtualServerClientSslPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerClientSslPtrOutput {
	return o
}

func (o PolicyLBVirtualServerClientSslPtrOutput) Elem() PolicyLBVirtualServerClientSslOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerClientSsl) PolicyLBVirtualServerClientSsl { return *v }).(PolicyLBVirtualServerClientSslOutput)
}

func (o PolicyLBVirtualServerClientSslPtrOutput) CaPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerClientSsl) []string {
		if v == nil {
			return nil
		}
		return v.CaPaths
	}).(pulumi.StringArrayOutput)
}

func (o PolicyLBVirtualServerClientSslPtrOutput) CertificateChainDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerClientSsl) *int {
		if v == nil {
			return nil
		}
		return v.CertificateChainDepth
	}).(pulumi.IntPtrOutput)
}

func (o PolicyLBVirtualServerClientSslPtrOutput) ClientAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerClientSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientAuth
	}).(pulumi.StringPtrOutput)
}

func (o PolicyLBVirtualServerClientSslPtrOutput) CrlPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerClientSsl) []string {
		if v == nil {
			return nil
		}
		return v.CrlPaths
	}).(pulumi.StringArrayOutput)
}

func (o PolicyLBVirtualServerClientSslPtrOutput) DefaultCertificatePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerClientSsl) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultCertificatePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyLBVirtualServerClientSslPtrOutput) SniPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerClientSsl) []string {
		if v == nil {
			return nil
		}
		return v.SniPaths
	}).(pulumi.StringArrayOutput)
}

func (o PolicyLBVirtualServerClientSslPtrOutput) SslProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerClientSsl) *string {
		if v == nil {
			return nil
		}
		return v.SslProfilePath
	}).(pulumi.StringPtrOutput)
}

type PolicyLBVirtualServerServerSsl struct {
	CaPaths               []string `pulumi:"caPaths"`
	CertificateChainDepth *int     `pulumi:"certificateChainDepth"`
	ClientCertificatePath *string  `pulumi:"clientCertificatePath"`
	CrlPaths              []string `pulumi:"crlPaths"`
	ServerAuth            *string  `pulumi:"serverAuth"`
	SslProfilePath        *string  `pulumi:"sslProfilePath"`
}

// PolicyLBVirtualServerServerSslInput is an input type that accepts PolicyLBVirtualServerServerSslArgs and PolicyLBVirtualServerServerSslOutput values.
// You can construct a concrete instance of `PolicyLBVirtualServerServerSslInput` via:
//
//          PolicyLBVirtualServerServerSslArgs{...}
type PolicyLBVirtualServerServerSslInput interface {
	pulumi.Input

	ToPolicyLBVirtualServerServerSslOutput() PolicyLBVirtualServerServerSslOutput
	ToPolicyLBVirtualServerServerSslOutputWithContext(context.Context) PolicyLBVirtualServerServerSslOutput
}

type PolicyLBVirtualServerServerSslArgs struct {
	CaPaths               pulumi.StringArrayInput `pulumi:"caPaths"`
	CertificateChainDepth pulumi.IntPtrInput      `pulumi:"certificateChainDepth"`
	ClientCertificatePath pulumi.StringPtrInput   `pulumi:"clientCertificatePath"`
	CrlPaths              pulumi.StringArrayInput `pulumi:"crlPaths"`
	ServerAuth            pulumi.StringPtrInput   `pulumi:"serverAuth"`
	SslProfilePath        pulumi.StringPtrInput   `pulumi:"sslProfilePath"`
}

func (PolicyLBVirtualServerServerSslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBVirtualServerServerSsl)(nil)).Elem()
}

func (i PolicyLBVirtualServerServerSslArgs) ToPolicyLBVirtualServerServerSslOutput() PolicyLBVirtualServerServerSslOutput {
	return i.ToPolicyLBVirtualServerServerSslOutputWithContext(context.Background())
}

func (i PolicyLBVirtualServerServerSslArgs) ToPolicyLBVirtualServerServerSslOutputWithContext(ctx context.Context) PolicyLBVirtualServerServerSslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerServerSslOutput)
}

func (i PolicyLBVirtualServerServerSslArgs) ToPolicyLBVirtualServerServerSslPtrOutput() PolicyLBVirtualServerServerSslPtrOutput {
	return i.ToPolicyLBVirtualServerServerSslPtrOutputWithContext(context.Background())
}

func (i PolicyLBVirtualServerServerSslArgs) ToPolicyLBVirtualServerServerSslPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerServerSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerServerSslOutput).ToPolicyLBVirtualServerServerSslPtrOutputWithContext(ctx)
}

// PolicyLBVirtualServerServerSslPtrInput is an input type that accepts PolicyLBVirtualServerServerSslArgs, PolicyLBVirtualServerServerSslPtr and PolicyLBVirtualServerServerSslPtrOutput values.
// You can construct a concrete instance of `PolicyLBVirtualServerServerSslPtrInput` via:
//
//          PolicyLBVirtualServerServerSslArgs{...}
//
//  or:
//
//          nil
type PolicyLBVirtualServerServerSslPtrInput interface {
	pulumi.Input

	ToPolicyLBVirtualServerServerSslPtrOutput() PolicyLBVirtualServerServerSslPtrOutput
	ToPolicyLBVirtualServerServerSslPtrOutputWithContext(context.Context) PolicyLBVirtualServerServerSslPtrOutput
}

type policyLBVirtualServerServerSslPtrType PolicyLBVirtualServerServerSslArgs

func PolicyLBVirtualServerServerSslPtr(v *PolicyLBVirtualServerServerSslArgs) PolicyLBVirtualServerServerSslPtrInput {
	return (*policyLBVirtualServerServerSslPtrType)(v)
}

func (*policyLBVirtualServerServerSslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyLBVirtualServerServerSsl)(nil)).Elem()
}

func (i *policyLBVirtualServerServerSslPtrType) ToPolicyLBVirtualServerServerSslPtrOutput() PolicyLBVirtualServerServerSslPtrOutput {
	return i.ToPolicyLBVirtualServerServerSslPtrOutputWithContext(context.Background())
}

func (i *policyLBVirtualServerServerSslPtrType) ToPolicyLBVirtualServerServerSslPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerServerSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerServerSslPtrOutput)
}

type PolicyLBVirtualServerServerSslOutput struct{ *pulumi.OutputState }

func (PolicyLBVirtualServerServerSslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBVirtualServerServerSsl)(nil)).Elem()
}

func (o PolicyLBVirtualServerServerSslOutput) ToPolicyLBVirtualServerServerSslOutput() PolicyLBVirtualServerServerSslOutput {
	return o
}

func (o PolicyLBVirtualServerServerSslOutput) ToPolicyLBVirtualServerServerSslOutputWithContext(ctx context.Context) PolicyLBVirtualServerServerSslOutput {
	return o
}

func (o PolicyLBVirtualServerServerSslOutput) ToPolicyLBVirtualServerServerSslPtrOutput() PolicyLBVirtualServerServerSslPtrOutput {
	return o.ToPolicyLBVirtualServerServerSslPtrOutputWithContext(context.Background())
}

func (o PolicyLBVirtualServerServerSslOutput) ToPolicyLBVirtualServerServerSslPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerServerSslPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerServerSsl) *PolicyLBVirtualServerServerSsl {
		return &v
	}).(PolicyLBVirtualServerServerSslPtrOutput)
}
func (o PolicyLBVirtualServerServerSslOutput) CaPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerServerSsl) []string { return v.CaPaths }).(pulumi.StringArrayOutput)
}

func (o PolicyLBVirtualServerServerSslOutput) CertificateChainDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerServerSsl) *int { return v.CertificateChainDepth }).(pulumi.IntPtrOutput)
}

func (o PolicyLBVirtualServerServerSslOutput) ClientCertificatePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerServerSsl) *string { return v.ClientCertificatePath }).(pulumi.StringPtrOutput)
}

func (o PolicyLBVirtualServerServerSslOutput) CrlPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerServerSsl) []string { return v.CrlPaths }).(pulumi.StringArrayOutput)
}

func (o PolicyLBVirtualServerServerSslOutput) ServerAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerServerSsl) *string { return v.ServerAuth }).(pulumi.StringPtrOutput)
}

func (o PolicyLBVirtualServerServerSslOutput) SslProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerServerSsl) *string { return v.SslProfilePath }).(pulumi.StringPtrOutput)
}

type PolicyLBVirtualServerServerSslPtrOutput struct{ *pulumi.OutputState }

func (PolicyLBVirtualServerServerSslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyLBVirtualServerServerSsl)(nil)).Elem()
}

func (o PolicyLBVirtualServerServerSslPtrOutput) ToPolicyLBVirtualServerServerSslPtrOutput() PolicyLBVirtualServerServerSslPtrOutput {
	return o
}

func (o PolicyLBVirtualServerServerSslPtrOutput) ToPolicyLBVirtualServerServerSslPtrOutputWithContext(ctx context.Context) PolicyLBVirtualServerServerSslPtrOutput {
	return o
}

func (o PolicyLBVirtualServerServerSslPtrOutput) Elem() PolicyLBVirtualServerServerSslOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerServerSsl) PolicyLBVirtualServerServerSsl { return *v }).(PolicyLBVirtualServerServerSslOutput)
}

func (o PolicyLBVirtualServerServerSslPtrOutput) CaPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerServerSsl) []string {
		if v == nil {
			return nil
		}
		return v.CaPaths
	}).(pulumi.StringArrayOutput)
}

func (o PolicyLBVirtualServerServerSslPtrOutput) CertificateChainDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerServerSsl) *int {
		if v == nil {
			return nil
		}
		return v.CertificateChainDepth
	}).(pulumi.IntPtrOutput)
}

func (o PolicyLBVirtualServerServerSslPtrOutput) ClientCertificatePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerServerSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificatePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyLBVirtualServerServerSslPtrOutput) CrlPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerServerSsl) []string {
		if v == nil {
			return nil
		}
		return v.CrlPaths
	}).(pulumi.StringArrayOutput)
}

func (o PolicyLBVirtualServerServerSslPtrOutput) ServerAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerServerSsl) *string {
		if v == nil {
			return nil
		}
		return v.ServerAuth
	}).(pulumi.StringPtrOutput)
}

func (o PolicyLBVirtualServerServerSslPtrOutput) SslProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyLBVirtualServerServerSsl) *string {
		if v == nil {
			return nil
		}
		return v.SslProfilePath
	}).(pulumi.StringPtrOutput)
}

type PolicyLBVirtualServerTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyLBVirtualServerTagInput is an input type that accepts PolicyLBVirtualServerTagArgs and PolicyLBVirtualServerTagOutput values.
// You can construct a concrete instance of `PolicyLBVirtualServerTagInput` via:
//
//          PolicyLBVirtualServerTagArgs{...}
type PolicyLBVirtualServerTagInput interface {
	pulumi.Input

	ToPolicyLBVirtualServerTagOutput() PolicyLBVirtualServerTagOutput
	ToPolicyLBVirtualServerTagOutputWithContext(context.Context) PolicyLBVirtualServerTagOutput
}

type PolicyLBVirtualServerTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyLBVirtualServerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBVirtualServerTag)(nil)).Elem()
}

func (i PolicyLBVirtualServerTagArgs) ToPolicyLBVirtualServerTagOutput() PolicyLBVirtualServerTagOutput {
	return i.ToPolicyLBVirtualServerTagOutputWithContext(context.Background())
}

func (i PolicyLBVirtualServerTagArgs) ToPolicyLBVirtualServerTagOutputWithContext(ctx context.Context) PolicyLBVirtualServerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerTagOutput)
}

// PolicyLBVirtualServerTagArrayInput is an input type that accepts PolicyLBVirtualServerTagArray and PolicyLBVirtualServerTagArrayOutput values.
// You can construct a concrete instance of `PolicyLBVirtualServerTagArrayInput` via:
//
//          PolicyLBVirtualServerTagArray{ PolicyLBVirtualServerTagArgs{...} }
type PolicyLBVirtualServerTagArrayInput interface {
	pulumi.Input

	ToPolicyLBVirtualServerTagArrayOutput() PolicyLBVirtualServerTagArrayOutput
	ToPolicyLBVirtualServerTagArrayOutputWithContext(context.Context) PolicyLBVirtualServerTagArrayOutput
}

type PolicyLBVirtualServerTagArray []PolicyLBVirtualServerTagInput

func (PolicyLBVirtualServerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyLBVirtualServerTag)(nil)).Elem()
}

func (i PolicyLBVirtualServerTagArray) ToPolicyLBVirtualServerTagArrayOutput() PolicyLBVirtualServerTagArrayOutput {
	return i.ToPolicyLBVirtualServerTagArrayOutputWithContext(context.Background())
}

func (i PolicyLBVirtualServerTagArray) ToPolicyLBVirtualServerTagArrayOutputWithContext(ctx context.Context) PolicyLBVirtualServerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyLBVirtualServerTagArrayOutput)
}

type PolicyLBVirtualServerTagOutput struct{ *pulumi.OutputState }

func (PolicyLBVirtualServerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyLBVirtualServerTag)(nil)).Elem()
}

func (o PolicyLBVirtualServerTagOutput) ToPolicyLBVirtualServerTagOutput() PolicyLBVirtualServerTagOutput {
	return o
}

func (o PolicyLBVirtualServerTagOutput) ToPolicyLBVirtualServerTagOutputWithContext(ctx context.Context) PolicyLBVirtualServerTagOutput {
	return o
}

func (o PolicyLBVirtualServerTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyLBVirtualServerTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyLBVirtualServerTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyLBVirtualServerTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyLBVirtualServerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyLBVirtualServerTag)(nil)).Elem()
}

func (o PolicyLBVirtualServerTagArrayOutput) ToPolicyLBVirtualServerTagArrayOutput() PolicyLBVirtualServerTagArrayOutput {
	return o
}

func (o PolicyLBVirtualServerTagArrayOutput) ToPolicyLBVirtualServerTagArrayOutputWithContext(ctx context.Context) PolicyLBVirtualServerTagArrayOutput {
	return o
}

func (o PolicyLBVirtualServerTagArrayOutput) Index(i pulumi.IntInput) PolicyLBVirtualServerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyLBVirtualServerTag {
		return vs[0].([]PolicyLBVirtualServerTag)[vs[1].(int)]
	}).(PolicyLBVirtualServerTagOutput)
}

type PolicyNatRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyNatRuleTagInput is an input type that accepts PolicyNatRuleTagArgs and PolicyNatRuleTagOutput values.
// You can construct a concrete instance of `PolicyNatRuleTagInput` via:
//
//          PolicyNatRuleTagArgs{...}
type PolicyNatRuleTagInput interface {
	pulumi.Input

	ToPolicyNatRuleTagOutput() PolicyNatRuleTagOutput
	ToPolicyNatRuleTagOutputWithContext(context.Context) PolicyNatRuleTagOutput
}

type PolicyNatRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyNatRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNatRuleTag)(nil)).Elem()
}

func (i PolicyNatRuleTagArgs) ToPolicyNatRuleTagOutput() PolicyNatRuleTagOutput {
	return i.ToPolicyNatRuleTagOutputWithContext(context.Background())
}

func (i PolicyNatRuleTagArgs) ToPolicyNatRuleTagOutputWithContext(ctx context.Context) PolicyNatRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNatRuleTagOutput)
}

// PolicyNatRuleTagArrayInput is an input type that accepts PolicyNatRuleTagArray and PolicyNatRuleTagArrayOutput values.
// You can construct a concrete instance of `PolicyNatRuleTagArrayInput` via:
//
//          PolicyNatRuleTagArray{ PolicyNatRuleTagArgs{...} }
type PolicyNatRuleTagArrayInput interface {
	pulumi.Input

	ToPolicyNatRuleTagArrayOutput() PolicyNatRuleTagArrayOutput
	ToPolicyNatRuleTagArrayOutputWithContext(context.Context) PolicyNatRuleTagArrayOutput
}

type PolicyNatRuleTagArray []PolicyNatRuleTagInput

func (PolicyNatRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNatRuleTag)(nil)).Elem()
}

func (i PolicyNatRuleTagArray) ToPolicyNatRuleTagArrayOutput() PolicyNatRuleTagArrayOutput {
	return i.ToPolicyNatRuleTagArrayOutputWithContext(context.Background())
}

func (i PolicyNatRuleTagArray) ToPolicyNatRuleTagArrayOutputWithContext(ctx context.Context) PolicyNatRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNatRuleTagArrayOutput)
}

type PolicyNatRuleTagOutput struct{ *pulumi.OutputState }

func (PolicyNatRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNatRuleTag)(nil)).Elem()
}

func (o PolicyNatRuleTagOutput) ToPolicyNatRuleTagOutput() PolicyNatRuleTagOutput {
	return o
}

func (o PolicyNatRuleTagOutput) ToPolicyNatRuleTagOutputWithContext(ctx context.Context) PolicyNatRuleTagOutput {
	return o
}

func (o PolicyNatRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNatRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyNatRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNatRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyNatRuleTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyNatRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNatRuleTag)(nil)).Elem()
}

func (o PolicyNatRuleTagArrayOutput) ToPolicyNatRuleTagArrayOutput() PolicyNatRuleTagArrayOutput {
	return o
}

func (o PolicyNatRuleTagArrayOutput) ToPolicyNatRuleTagArrayOutputWithContext(ctx context.Context) PolicyNatRuleTagArrayOutput {
	return o
}

func (o PolicyNatRuleTagArrayOutput) Index(i pulumi.IntInput) PolicyNatRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyNatRuleTag {
		return vs[0].([]PolicyNatRuleTag)[vs[1].(int)]
	}).(PolicyNatRuleTagOutput)
}

type PolicyPredefinedGatewayPolicyDefaultRule struct {
	Action         *string                                       `pulumi:"action"`
	Description    *string                                       `pulumi:"description"`
	LogLabel       *string                                       `pulumi:"logLabel"`
	Logged         *bool                                         `pulumi:"logged"`
	NsxId          *string                                       `pulumi:"nsxId"`
	Path           *string                                       `pulumi:"path"`
	Revision       *int                                          `pulumi:"revision"`
	Scope          string                                        `pulumi:"scope"`
	SequenceNumber *int                                          `pulumi:"sequenceNumber"`
	Tags           []PolicyPredefinedGatewayPolicyDefaultRuleTag `pulumi:"tags"`
}

// PolicyPredefinedGatewayPolicyDefaultRuleInput is an input type that accepts PolicyPredefinedGatewayPolicyDefaultRuleArgs and PolicyPredefinedGatewayPolicyDefaultRuleOutput values.
// You can construct a concrete instance of `PolicyPredefinedGatewayPolicyDefaultRuleInput` via:
//
//          PolicyPredefinedGatewayPolicyDefaultRuleArgs{...}
type PolicyPredefinedGatewayPolicyDefaultRuleInput interface {
	pulumi.Input

	ToPolicyPredefinedGatewayPolicyDefaultRuleOutput() PolicyPredefinedGatewayPolicyDefaultRuleOutput
	ToPolicyPredefinedGatewayPolicyDefaultRuleOutputWithContext(context.Context) PolicyPredefinedGatewayPolicyDefaultRuleOutput
}

type PolicyPredefinedGatewayPolicyDefaultRuleArgs struct {
	Action         pulumi.StringPtrInput                                 `pulumi:"action"`
	Description    pulumi.StringPtrInput                                 `pulumi:"description"`
	LogLabel       pulumi.StringPtrInput                                 `pulumi:"logLabel"`
	Logged         pulumi.BoolPtrInput                                   `pulumi:"logged"`
	NsxId          pulumi.StringPtrInput                                 `pulumi:"nsxId"`
	Path           pulumi.StringPtrInput                                 `pulumi:"path"`
	Revision       pulumi.IntPtrInput                                    `pulumi:"revision"`
	Scope          pulumi.StringInput                                    `pulumi:"scope"`
	SequenceNumber pulumi.IntPtrInput                                    `pulumi:"sequenceNumber"`
	Tags           PolicyPredefinedGatewayPolicyDefaultRuleTagArrayInput `pulumi:"tags"`
}

func (PolicyPredefinedGatewayPolicyDefaultRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedGatewayPolicyDefaultRule)(nil)).Elem()
}

func (i PolicyPredefinedGatewayPolicyDefaultRuleArgs) ToPolicyPredefinedGatewayPolicyDefaultRuleOutput() PolicyPredefinedGatewayPolicyDefaultRuleOutput {
	return i.ToPolicyPredefinedGatewayPolicyDefaultRuleOutputWithContext(context.Background())
}

func (i PolicyPredefinedGatewayPolicyDefaultRuleArgs) ToPolicyPredefinedGatewayPolicyDefaultRuleOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyDefaultRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedGatewayPolicyDefaultRuleOutput)
}

// PolicyPredefinedGatewayPolicyDefaultRuleArrayInput is an input type that accepts PolicyPredefinedGatewayPolicyDefaultRuleArray and PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput values.
// You can construct a concrete instance of `PolicyPredefinedGatewayPolicyDefaultRuleArrayInput` via:
//
//          PolicyPredefinedGatewayPolicyDefaultRuleArray{ PolicyPredefinedGatewayPolicyDefaultRuleArgs{...} }
type PolicyPredefinedGatewayPolicyDefaultRuleArrayInput interface {
	pulumi.Input

	ToPolicyPredefinedGatewayPolicyDefaultRuleArrayOutput() PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput
	ToPolicyPredefinedGatewayPolicyDefaultRuleArrayOutputWithContext(context.Context) PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput
}

type PolicyPredefinedGatewayPolicyDefaultRuleArray []PolicyPredefinedGatewayPolicyDefaultRuleInput

func (PolicyPredefinedGatewayPolicyDefaultRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedGatewayPolicyDefaultRule)(nil)).Elem()
}

func (i PolicyPredefinedGatewayPolicyDefaultRuleArray) ToPolicyPredefinedGatewayPolicyDefaultRuleArrayOutput() PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput {
	return i.ToPolicyPredefinedGatewayPolicyDefaultRuleArrayOutputWithContext(context.Background())
}

func (i PolicyPredefinedGatewayPolicyDefaultRuleArray) ToPolicyPredefinedGatewayPolicyDefaultRuleArrayOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput)
}

type PolicyPredefinedGatewayPolicyDefaultRuleOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedGatewayPolicyDefaultRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedGatewayPolicyDefaultRule)(nil)).Elem()
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) ToPolicyPredefinedGatewayPolicyDefaultRuleOutput() PolicyPredefinedGatewayPolicyDefaultRuleOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) ToPolicyPredefinedGatewayPolicyDefaultRuleOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyDefaultRuleOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) LogLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRule) *string { return v.LogLabel }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) Logged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRule) *bool { return v.Logged }).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) NsxId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRule) *string { return v.NsxId }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRule) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRule) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRule) string { return v.Scope }).(pulumi.StringOutput)
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) SequenceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRule) *int { return v.SequenceNumber }).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleOutput) Tags() PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRule) []PolicyPredefinedGatewayPolicyDefaultRuleTag {
		return v.Tags
	}).(PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput)
}

type PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedGatewayPolicyDefaultRule)(nil)).Elem()
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput) ToPolicyPredefinedGatewayPolicyDefaultRuleArrayOutput() PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput) ToPolicyPredefinedGatewayPolicyDefaultRuleArrayOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput) Index(i pulumi.IntInput) PolicyPredefinedGatewayPolicyDefaultRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPredefinedGatewayPolicyDefaultRule {
		return vs[0].([]PolicyPredefinedGatewayPolicyDefaultRule)[vs[1].(int)]
	}).(PolicyPredefinedGatewayPolicyDefaultRuleOutput)
}

type PolicyPredefinedGatewayPolicyDefaultRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyPredefinedGatewayPolicyDefaultRuleTagInput is an input type that accepts PolicyPredefinedGatewayPolicyDefaultRuleTagArgs and PolicyPredefinedGatewayPolicyDefaultRuleTagOutput values.
// You can construct a concrete instance of `PolicyPredefinedGatewayPolicyDefaultRuleTagInput` via:
//
//          PolicyPredefinedGatewayPolicyDefaultRuleTagArgs{...}
type PolicyPredefinedGatewayPolicyDefaultRuleTagInput interface {
	pulumi.Input

	ToPolicyPredefinedGatewayPolicyDefaultRuleTagOutput() PolicyPredefinedGatewayPolicyDefaultRuleTagOutput
	ToPolicyPredefinedGatewayPolicyDefaultRuleTagOutputWithContext(context.Context) PolicyPredefinedGatewayPolicyDefaultRuleTagOutput
}

type PolicyPredefinedGatewayPolicyDefaultRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyPredefinedGatewayPolicyDefaultRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedGatewayPolicyDefaultRuleTag)(nil)).Elem()
}

func (i PolicyPredefinedGatewayPolicyDefaultRuleTagArgs) ToPolicyPredefinedGatewayPolicyDefaultRuleTagOutput() PolicyPredefinedGatewayPolicyDefaultRuleTagOutput {
	return i.ToPolicyPredefinedGatewayPolicyDefaultRuleTagOutputWithContext(context.Background())
}

func (i PolicyPredefinedGatewayPolicyDefaultRuleTagArgs) ToPolicyPredefinedGatewayPolicyDefaultRuleTagOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyDefaultRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedGatewayPolicyDefaultRuleTagOutput)
}

// PolicyPredefinedGatewayPolicyDefaultRuleTagArrayInput is an input type that accepts PolicyPredefinedGatewayPolicyDefaultRuleTagArray and PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput values.
// You can construct a concrete instance of `PolicyPredefinedGatewayPolicyDefaultRuleTagArrayInput` via:
//
//          PolicyPredefinedGatewayPolicyDefaultRuleTagArray{ PolicyPredefinedGatewayPolicyDefaultRuleTagArgs{...} }
type PolicyPredefinedGatewayPolicyDefaultRuleTagArrayInput interface {
	pulumi.Input

	ToPolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput() PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput
	ToPolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutputWithContext(context.Context) PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput
}

type PolicyPredefinedGatewayPolicyDefaultRuleTagArray []PolicyPredefinedGatewayPolicyDefaultRuleTagInput

func (PolicyPredefinedGatewayPolicyDefaultRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedGatewayPolicyDefaultRuleTag)(nil)).Elem()
}

func (i PolicyPredefinedGatewayPolicyDefaultRuleTagArray) ToPolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput() PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput {
	return i.ToPolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutputWithContext(context.Background())
}

func (i PolicyPredefinedGatewayPolicyDefaultRuleTagArray) ToPolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput)
}

type PolicyPredefinedGatewayPolicyDefaultRuleTagOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedGatewayPolicyDefaultRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedGatewayPolicyDefaultRuleTag)(nil)).Elem()
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleTagOutput) ToPolicyPredefinedGatewayPolicyDefaultRuleTagOutput() PolicyPredefinedGatewayPolicyDefaultRuleTagOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleTagOutput) ToPolicyPredefinedGatewayPolicyDefaultRuleTagOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyDefaultRuleTagOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyDefaultRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedGatewayPolicyDefaultRuleTag)(nil)).Elem()
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput) ToPolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput() PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput) ToPolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput) Index(i pulumi.IntInput) PolicyPredefinedGatewayPolicyDefaultRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPredefinedGatewayPolicyDefaultRuleTag {
		return vs[0].([]PolicyPredefinedGatewayPolicyDefaultRuleTag)[vs[1].(int)]
	}).(PolicyPredefinedGatewayPolicyDefaultRuleTagOutput)
}

type PolicyPredefinedGatewayPolicyRule struct {
	Action               *string                                `pulumi:"action"`
	Description          *string                                `pulumi:"description"`
	DestinationGroups    []string                               `pulumi:"destinationGroups"`
	DestinationsExcluded *bool                                  `pulumi:"destinationsExcluded"`
	Direction            *string                                `pulumi:"direction"`
	Disabled             *bool                                  `pulumi:"disabled"`
	DisplayName          string                                 `pulumi:"displayName"`
	IpVersion            *string                                `pulumi:"ipVersion"`
	LogLabel             *string                                `pulumi:"logLabel"`
	Logged               *bool                                  `pulumi:"logged"`
	Notes                *string                                `pulumi:"notes"`
	NsxId                *string                                `pulumi:"nsxId"`
	Profiles             []string                               `pulumi:"profiles"`
	Revision             *int                                   `pulumi:"revision"`
	RuleId               *int                                   `pulumi:"ruleId"`
	Scopes               []string                               `pulumi:"scopes"`
	SequenceNumber       *int                                   `pulumi:"sequenceNumber"`
	Services             []string                               `pulumi:"services"`
	SourceGroups         []string                               `pulumi:"sourceGroups"`
	SourcesExcluded      *bool                                  `pulumi:"sourcesExcluded"`
	Tags                 []PolicyPredefinedGatewayPolicyRuleTag `pulumi:"tags"`
}

// PolicyPredefinedGatewayPolicyRuleInput is an input type that accepts PolicyPredefinedGatewayPolicyRuleArgs and PolicyPredefinedGatewayPolicyRuleOutput values.
// You can construct a concrete instance of `PolicyPredefinedGatewayPolicyRuleInput` via:
//
//          PolicyPredefinedGatewayPolicyRuleArgs{...}
type PolicyPredefinedGatewayPolicyRuleInput interface {
	pulumi.Input

	ToPolicyPredefinedGatewayPolicyRuleOutput() PolicyPredefinedGatewayPolicyRuleOutput
	ToPolicyPredefinedGatewayPolicyRuleOutputWithContext(context.Context) PolicyPredefinedGatewayPolicyRuleOutput
}

type PolicyPredefinedGatewayPolicyRuleArgs struct {
	Action               pulumi.StringPtrInput                          `pulumi:"action"`
	Description          pulumi.StringPtrInput                          `pulumi:"description"`
	DestinationGroups    pulumi.StringArrayInput                        `pulumi:"destinationGroups"`
	DestinationsExcluded pulumi.BoolPtrInput                            `pulumi:"destinationsExcluded"`
	Direction            pulumi.StringPtrInput                          `pulumi:"direction"`
	Disabled             pulumi.BoolPtrInput                            `pulumi:"disabled"`
	DisplayName          pulumi.StringInput                             `pulumi:"displayName"`
	IpVersion            pulumi.StringPtrInput                          `pulumi:"ipVersion"`
	LogLabel             pulumi.StringPtrInput                          `pulumi:"logLabel"`
	Logged               pulumi.BoolPtrInput                            `pulumi:"logged"`
	Notes                pulumi.StringPtrInput                          `pulumi:"notes"`
	NsxId                pulumi.StringPtrInput                          `pulumi:"nsxId"`
	Profiles             pulumi.StringArrayInput                        `pulumi:"profiles"`
	Revision             pulumi.IntPtrInput                             `pulumi:"revision"`
	RuleId               pulumi.IntPtrInput                             `pulumi:"ruleId"`
	Scopes               pulumi.StringArrayInput                        `pulumi:"scopes"`
	SequenceNumber       pulumi.IntPtrInput                             `pulumi:"sequenceNumber"`
	Services             pulumi.StringArrayInput                        `pulumi:"services"`
	SourceGroups         pulumi.StringArrayInput                        `pulumi:"sourceGroups"`
	SourcesExcluded      pulumi.BoolPtrInput                            `pulumi:"sourcesExcluded"`
	Tags                 PolicyPredefinedGatewayPolicyRuleTagArrayInput `pulumi:"tags"`
}

func (PolicyPredefinedGatewayPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedGatewayPolicyRule)(nil)).Elem()
}

func (i PolicyPredefinedGatewayPolicyRuleArgs) ToPolicyPredefinedGatewayPolicyRuleOutput() PolicyPredefinedGatewayPolicyRuleOutput {
	return i.ToPolicyPredefinedGatewayPolicyRuleOutputWithContext(context.Background())
}

func (i PolicyPredefinedGatewayPolicyRuleArgs) ToPolicyPredefinedGatewayPolicyRuleOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedGatewayPolicyRuleOutput)
}

// PolicyPredefinedGatewayPolicyRuleArrayInput is an input type that accepts PolicyPredefinedGatewayPolicyRuleArray and PolicyPredefinedGatewayPolicyRuleArrayOutput values.
// You can construct a concrete instance of `PolicyPredefinedGatewayPolicyRuleArrayInput` via:
//
//          PolicyPredefinedGatewayPolicyRuleArray{ PolicyPredefinedGatewayPolicyRuleArgs{...} }
type PolicyPredefinedGatewayPolicyRuleArrayInput interface {
	pulumi.Input

	ToPolicyPredefinedGatewayPolicyRuleArrayOutput() PolicyPredefinedGatewayPolicyRuleArrayOutput
	ToPolicyPredefinedGatewayPolicyRuleArrayOutputWithContext(context.Context) PolicyPredefinedGatewayPolicyRuleArrayOutput
}

type PolicyPredefinedGatewayPolicyRuleArray []PolicyPredefinedGatewayPolicyRuleInput

func (PolicyPredefinedGatewayPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedGatewayPolicyRule)(nil)).Elem()
}

func (i PolicyPredefinedGatewayPolicyRuleArray) ToPolicyPredefinedGatewayPolicyRuleArrayOutput() PolicyPredefinedGatewayPolicyRuleArrayOutput {
	return i.ToPolicyPredefinedGatewayPolicyRuleArrayOutputWithContext(context.Background())
}

func (i PolicyPredefinedGatewayPolicyRuleArray) ToPolicyPredefinedGatewayPolicyRuleArrayOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedGatewayPolicyRuleArrayOutput)
}

type PolicyPredefinedGatewayPolicyRuleOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedGatewayPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedGatewayPolicyRule)(nil)).Elem()
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) ToPolicyPredefinedGatewayPolicyRuleOutput() PolicyPredefinedGatewayPolicyRuleOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) ToPolicyPredefinedGatewayPolicyRuleOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyRuleOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) DestinationGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) []string { return v.DestinationGroups }).(pulumi.StringArrayOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) DestinationsExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *bool { return v.DestinationsExcluded }).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) IpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *string { return v.IpVersion }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) LogLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *string { return v.LogLabel }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Logged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *bool { return v.Logged }).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) NsxId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *string { return v.NsxId }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Profiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) []string { return v.Profiles }).(pulumi.StringArrayOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) RuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *int { return v.RuleId }).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) SequenceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *int { return v.SequenceNumber }).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) []string { return v.Services }).(pulumi.StringArrayOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) SourceGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) []string { return v.SourceGroups }).(pulumi.StringArrayOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) SourcesExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) *bool { return v.SourcesExcluded }).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleOutput) Tags() PolicyPredefinedGatewayPolicyRuleTagArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRule) []PolicyPredefinedGatewayPolicyRuleTag { return v.Tags }).(PolicyPredefinedGatewayPolicyRuleTagArrayOutput)
}

type PolicyPredefinedGatewayPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedGatewayPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedGatewayPolicyRule)(nil)).Elem()
}

func (o PolicyPredefinedGatewayPolicyRuleArrayOutput) ToPolicyPredefinedGatewayPolicyRuleArrayOutput() PolicyPredefinedGatewayPolicyRuleArrayOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyRuleArrayOutput) ToPolicyPredefinedGatewayPolicyRuleArrayOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyRuleArrayOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyRuleArrayOutput) Index(i pulumi.IntInput) PolicyPredefinedGatewayPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPredefinedGatewayPolicyRule {
		return vs[0].([]PolicyPredefinedGatewayPolicyRule)[vs[1].(int)]
	}).(PolicyPredefinedGatewayPolicyRuleOutput)
}

type PolicyPredefinedGatewayPolicyRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyPredefinedGatewayPolicyRuleTagInput is an input type that accepts PolicyPredefinedGatewayPolicyRuleTagArgs and PolicyPredefinedGatewayPolicyRuleTagOutput values.
// You can construct a concrete instance of `PolicyPredefinedGatewayPolicyRuleTagInput` via:
//
//          PolicyPredefinedGatewayPolicyRuleTagArgs{...}
type PolicyPredefinedGatewayPolicyRuleTagInput interface {
	pulumi.Input

	ToPolicyPredefinedGatewayPolicyRuleTagOutput() PolicyPredefinedGatewayPolicyRuleTagOutput
	ToPolicyPredefinedGatewayPolicyRuleTagOutputWithContext(context.Context) PolicyPredefinedGatewayPolicyRuleTagOutput
}

type PolicyPredefinedGatewayPolicyRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyPredefinedGatewayPolicyRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedGatewayPolicyRuleTag)(nil)).Elem()
}

func (i PolicyPredefinedGatewayPolicyRuleTagArgs) ToPolicyPredefinedGatewayPolicyRuleTagOutput() PolicyPredefinedGatewayPolicyRuleTagOutput {
	return i.ToPolicyPredefinedGatewayPolicyRuleTagOutputWithContext(context.Background())
}

func (i PolicyPredefinedGatewayPolicyRuleTagArgs) ToPolicyPredefinedGatewayPolicyRuleTagOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedGatewayPolicyRuleTagOutput)
}

// PolicyPredefinedGatewayPolicyRuleTagArrayInput is an input type that accepts PolicyPredefinedGatewayPolicyRuleTagArray and PolicyPredefinedGatewayPolicyRuleTagArrayOutput values.
// You can construct a concrete instance of `PolicyPredefinedGatewayPolicyRuleTagArrayInput` via:
//
//          PolicyPredefinedGatewayPolicyRuleTagArray{ PolicyPredefinedGatewayPolicyRuleTagArgs{...} }
type PolicyPredefinedGatewayPolicyRuleTagArrayInput interface {
	pulumi.Input

	ToPolicyPredefinedGatewayPolicyRuleTagArrayOutput() PolicyPredefinedGatewayPolicyRuleTagArrayOutput
	ToPolicyPredefinedGatewayPolicyRuleTagArrayOutputWithContext(context.Context) PolicyPredefinedGatewayPolicyRuleTagArrayOutput
}

type PolicyPredefinedGatewayPolicyRuleTagArray []PolicyPredefinedGatewayPolicyRuleTagInput

func (PolicyPredefinedGatewayPolicyRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedGatewayPolicyRuleTag)(nil)).Elem()
}

func (i PolicyPredefinedGatewayPolicyRuleTagArray) ToPolicyPredefinedGatewayPolicyRuleTagArrayOutput() PolicyPredefinedGatewayPolicyRuleTagArrayOutput {
	return i.ToPolicyPredefinedGatewayPolicyRuleTagArrayOutputWithContext(context.Background())
}

func (i PolicyPredefinedGatewayPolicyRuleTagArray) ToPolicyPredefinedGatewayPolicyRuleTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedGatewayPolicyRuleTagArrayOutput)
}

type PolicyPredefinedGatewayPolicyRuleTagOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedGatewayPolicyRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedGatewayPolicyRuleTag)(nil)).Elem()
}

func (o PolicyPredefinedGatewayPolicyRuleTagOutput) ToPolicyPredefinedGatewayPolicyRuleTagOutput() PolicyPredefinedGatewayPolicyRuleTagOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyRuleTagOutput) ToPolicyPredefinedGatewayPolicyRuleTagOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyRuleTagOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyPredefinedGatewayPolicyRuleTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedGatewayPolicyRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedGatewayPolicyRuleTag)(nil)).Elem()
}

func (o PolicyPredefinedGatewayPolicyRuleTagArrayOutput) ToPolicyPredefinedGatewayPolicyRuleTagArrayOutput() PolicyPredefinedGatewayPolicyRuleTagArrayOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyRuleTagArrayOutput) ToPolicyPredefinedGatewayPolicyRuleTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyRuleTagArrayOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyRuleTagArrayOutput) Index(i pulumi.IntInput) PolicyPredefinedGatewayPolicyRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPredefinedGatewayPolicyRuleTag {
		return vs[0].([]PolicyPredefinedGatewayPolicyRuleTag)[vs[1].(int)]
	}).(PolicyPredefinedGatewayPolicyRuleTagOutput)
}

type PolicyPredefinedGatewayPolicyTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyPredefinedGatewayPolicyTagInput is an input type that accepts PolicyPredefinedGatewayPolicyTagArgs and PolicyPredefinedGatewayPolicyTagOutput values.
// You can construct a concrete instance of `PolicyPredefinedGatewayPolicyTagInput` via:
//
//          PolicyPredefinedGatewayPolicyTagArgs{...}
type PolicyPredefinedGatewayPolicyTagInput interface {
	pulumi.Input

	ToPolicyPredefinedGatewayPolicyTagOutput() PolicyPredefinedGatewayPolicyTagOutput
	ToPolicyPredefinedGatewayPolicyTagOutputWithContext(context.Context) PolicyPredefinedGatewayPolicyTagOutput
}

type PolicyPredefinedGatewayPolicyTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyPredefinedGatewayPolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedGatewayPolicyTag)(nil)).Elem()
}

func (i PolicyPredefinedGatewayPolicyTagArgs) ToPolicyPredefinedGatewayPolicyTagOutput() PolicyPredefinedGatewayPolicyTagOutput {
	return i.ToPolicyPredefinedGatewayPolicyTagOutputWithContext(context.Background())
}

func (i PolicyPredefinedGatewayPolicyTagArgs) ToPolicyPredefinedGatewayPolicyTagOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedGatewayPolicyTagOutput)
}

// PolicyPredefinedGatewayPolicyTagArrayInput is an input type that accepts PolicyPredefinedGatewayPolicyTagArray and PolicyPredefinedGatewayPolicyTagArrayOutput values.
// You can construct a concrete instance of `PolicyPredefinedGatewayPolicyTagArrayInput` via:
//
//          PolicyPredefinedGatewayPolicyTagArray{ PolicyPredefinedGatewayPolicyTagArgs{...} }
type PolicyPredefinedGatewayPolicyTagArrayInput interface {
	pulumi.Input

	ToPolicyPredefinedGatewayPolicyTagArrayOutput() PolicyPredefinedGatewayPolicyTagArrayOutput
	ToPolicyPredefinedGatewayPolicyTagArrayOutputWithContext(context.Context) PolicyPredefinedGatewayPolicyTagArrayOutput
}

type PolicyPredefinedGatewayPolicyTagArray []PolicyPredefinedGatewayPolicyTagInput

func (PolicyPredefinedGatewayPolicyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedGatewayPolicyTag)(nil)).Elem()
}

func (i PolicyPredefinedGatewayPolicyTagArray) ToPolicyPredefinedGatewayPolicyTagArrayOutput() PolicyPredefinedGatewayPolicyTagArrayOutput {
	return i.ToPolicyPredefinedGatewayPolicyTagArrayOutputWithContext(context.Background())
}

func (i PolicyPredefinedGatewayPolicyTagArray) ToPolicyPredefinedGatewayPolicyTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedGatewayPolicyTagArrayOutput)
}

type PolicyPredefinedGatewayPolicyTagOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedGatewayPolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedGatewayPolicyTag)(nil)).Elem()
}

func (o PolicyPredefinedGatewayPolicyTagOutput) ToPolicyPredefinedGatewayPolicyTagOutput() PolicyPredefinedGatewayPolicyTagOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyTagOutput) ToPolicyPredefinedGatewayPolicyTagOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyTagOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedGatewayPolicyTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedGatewayPolicyTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyPredefinedGatewayPolicyTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedGatewayPolicyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedGatewayPolicyTag)(nil)).Elem()
}

func (o PolicyPredefinedGatewayPolicyTagArrayOutput) ToPolicyPredefinedGatewayPolicyTagArrayOutput() PolicyPredefinedGatewayPolicyTagArrayOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyTagArrayOutput) ToPolicyPredefinedGatewayPolicyTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedGatewayPolicyTagArrayOutput {
	return o
}

func (o PolicyPredefinedGatewayPolicyTagArrayOutput) Index(i pulumi.IntInput) PolicyPredefinedGatewayPolicyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPredefinedGatewayPolicyTag {
		return vs[0].([]PolicyPredefinedGatewayPolicyTag)[vs[1].(int)]
	}).(PolicyPredefinedGatewayPolicyTagOutput)
}

type PolicyPredefinedSecurityPolicyDefaultRule struct {
	Action         *string                                        `pulumi:"action"`
	Description    *string                                        `pulumi:"description"`
	LogLabel       *string                                        `pulumi:"logLabel"`
	Logged         *bool                                          `pulumi:"logged"`
	NsxId          *string                                        `pulumi:"nsxId"`
	Path           *string                                        `pulumi:"path"`
	Revision       *int                                           `pulumi:"revision"`
	Scope          *string                                        `pulumi:"scope"`
	SequenceNumber *int                                           `pulumi:"sequenceNumber"`
	Tags           []PolicyPredefinedSecurityPolicyDefaultRuleTag `pulumi:"tags"`
}

// PolicyPredefinedSecurityPolicyDefaultRuleInput is an input type that accepts PolicyPredefinedSecurityPolicyDefaultRuleArgs and PolicyPredefinedSecurityPolicyDefaultRuleOutput values.
// You can construct a concrete instance of `PolicyPredefinedSecurityPolicyDefaultRuleInput` via:
//
//          PolicyPredefinedSecurityPolicyDefaultRuleArgs{...}
type PolicyPredefinedSecurityPolicyDefaultRuleInput interface {
	pulumi.Input

	ToPolicyPredefinedSecurityPolicyDefaultRuleOutput() PolicyPredefinedSecurityPolicyDefaultRuleOutput
	ToPolicyPredefinedSecurityPolicyDefaultRuleOutputWithContext(context.Context) PolicyPredefinedSecurityPolicyDefaultRuleOutput
}

type PolicyPredefinedSecurityPolicyDefaultRuleArgs struct {
	Action         pulumi.StringPtrInput                                  `pulumi:"action"`
	Description    pulumi.StringPtrInput                                  `pulumi:"description"`
	LogLabel       pulumi.StringPtrInput                                  `pulumi:"logLabel"`
	Logged         pulumi.BoolPtrInput                                    `pulumi:"logged"`
	NsxId          pulumi.StringPtrInput                                  `pulumi:"nsxId"`
	Path           pulumi.StringPtrInput                                  `pulumi:"path"`
	Revision       pulumi.IntPtrInput                                     `pulumi:"revision"`
	Scope          pulumi.StringPtrInput                                  `pulumi:"scope"`
	SequenceNumber pulumi.IntPtrInput                                     `pulumi:"sequenceNumber"`
	Tags           PolicyPredefinedSecurityPolicyDefaultRuleTagArrayInput `pulumi:"tags"`
}

func (PolicyPredefinedSecurityPolicyDefaultRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedSecurityPolicyDefaultRule)(nil)).Elem()
}

func (i PolicyPredefinedSecurityPolicyDefaultRuleArgs) ToPolicyPredefinedSecurityPolicyDefaultRuleOutput() PolicyPredefinedSecurityPolicyDefaultRuleOutput {
	return i.ToPolicyPredefinedSecurityPolicyDefaultRuleOutputWithContext(context.Background())
}

func (i PolicyPredefinedSecurityPolicyDefaultRuleArgs) ToPolicyPredefinedSecurityPolicyDefaultRuleOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyDefaultRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyDefaultRuleOutput)
}

func (i PolicyPredefinedSecurityPolicyDefaultRuleArgs) ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutput() PolicyPredefinedSecurityPolicyDefaultRulePtrOutput {
	return i.ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutputWithContext(context.Background())
}

func (i PolicyPredefinedSecurityPolicyDefaultRuleArgs) ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyDefaultRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyDefaultRuleOutput).ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutputWithContext(ctx)
}

// PolicyPredefinedSecurityPolicyDefaultRulePtrInput is an input type that accepts PolicyPredefinedSecurityPolicyDefaultRuleArgs, PolicyPredefinedSecurityPolicyDefaultRulePtr and PolicyPredefinedSecurityPolicyDefaultRulePtrOutput values.
// You can construct a concrete instance of `PolicyPredefinedSecurityPolicyDefaultRulePtrInput` via:
//
//          PolicyPredefinedSecurityPolicyDefaultRuleArgs{...}
//
//  or:
//
//          nil
type PolicyPredefinedSecurityPolicyDefaultRulePtrInput interface {
	pulumi.Input

	ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutput() PolicyPredefinedSecurityPolicyDefaultRulePtrOutput
	ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutputWithContext(context.Context) PolicyPredefinedSecurityPolicyDefaultRulePtrOutput
}

type policyPredefinedSecurityPolicyDefaultRulePtrType PolicyPredefinedSecurityPolicyDefaultRuleArgs

func PolicyPredefinedSecurityPolicyDefaultRulePtr(v *PolicyPredefinedSecurityPolicyDefaultRuleArgs) PolicyPredefinedSecurityPolicyDefaultRulePtrInput {
	return (*policyPredefinedSecurityPolicyDefaultRulePtrType)(v)
}

func (*policyPredefinedSecurityPolicyDefaultRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyPredefinedSecurityPolicyDefaultRule)(nil)).Elem()
}

func (i *policyPredefinedSecurityPolicyDefaultRulePtrType) ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutput() PolicyPredefinedSecurityPolicyDefaultRulePtrOutput {
	return i.ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutputWithContext(context.Background())
}

func (i *policyPredefinedSecurityPolicyDefaultRulePtrType) ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyDefaultRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyDefaultRulePtrOutput)
}

type PolicyPredefinedSecurityPolicyDefaultRuleOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedSecurityPolicyDefaultRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedSecurityPolicyDefaultRule)(nil)).Elem()
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) ToPolicyPredefinedSecurityPolicyDefaultRuleOutput() PolicyPredefinedSecurityPolicyDefaultRuleOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) ToPolicyPredefinedSecurityPolicyDefaultRuleOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyDefaultRuleOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutput() PolicyPredefinedSecurityPolicyDefaultRulePtrOutput {
	return o.ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutputWithContext(context.Background())
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyDefaultRulePtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) *PolicyPredefinedSecurityPolicyDefaultRule {
		return &v
	}).(PolicyPredefinedSecurityPolicyDefaultRulePtrOutput)
}
func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) LogLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) *string { return v.LogLabel }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) Logged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) *bool { return v.Logged }).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) NsxId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) *string { return v.NsxId }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) SequenceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) *int { return v.SequenceNumber }).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleOutput) Tags() PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRule) []PolicyPredefinedSecurityPolicyDefaultRuleTag {
		return v.Tags
	}).(PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput)
}

type PolicyPredefinedSecurityPolicyDefaultRulePtrOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyPredefinedSecurityPolicyDefaultRule)(nil)).Elem()
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutput() PolicyPredefinedSecurityPolicyDefaultRulePtrOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) ToPolicyPredefinedSecurityPolicyDefaultRulePtrOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyDefaultRulePtrOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) Elem() PolicyPredefinedSecurityPolicyDefaultRuleOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) PolicyPredefinedSecurityPolicyDefaultRule {
		return *v
	}).(PolicyPredefinedSecurityPolicyDefaultRuleOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) LogLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) *string {
		if v == nil {
			return nil
		}
		return v.LogLabel
	}).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) Logged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) *bool {
		if v == nil {
			return nil
		}
		return v.Logged
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) NsxId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) *string {
		if v == nil {
			return nil
		}
		return v.NsxId
	}).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) SequenceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) *int {
		if v == nil {
			return nil
		}
		return v.SequenceNumber
	}).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRulePtrOutput) Tags() PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput {
	return o.ApplyT(func(v *PolicyPredefinedSecurityPolicyDefaultRule) []PolicyPredefinedSecurityPolicyDefaultRuleTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput)
}

type PolicyPredefinedSecurityPolicyDefaultRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyPredefinedSecurityPolicyDefaultRuleTagInput is an input type that accepts PolicyPredefinedSecurityPolicyDefaultRuleTagArgs and PolicyPredefinedSecurityPolicyDefaultRuleTagOutput values.
// You can construct a concrete instance of `PolicyPredefinedSecurityPolicyDefaultRuleTagInput` via:
//
//          PolicyPredefinedSecurityPolicyDefaultRuleTagArgs{...}
type PolicyPredefinedSecurityPolicyDefaultRuleTagInput interface {
	pulumi.Input

	ToPolicyPredefinedSecurityPolicyDefaultRuleTagOutput() PolicyPredefinedSecurityPolicyDefaultRuleTagOutput
	ToPolicyPredefinedSecurityPolicyDefaultRuleTagOutputWithContext(context.Context) PolicyPredefinedSecurityPolicyDefaultRuleTagOutput
}

type PolicyPredefinedSecurityPolicyDefaultRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyPredefinedSecurityPolicyDefaultRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedSecurityPolicyDefaultRuleTag)(nil)).Elem()
}

func (i PolicyPredefinedSecurityPolicyDefaultRuleTagArgs) ToPolicyPredefinedSecurityPolicyDefaultRuleTagOutput() PolicyPredefinedSecurityPolicyDefaultRuleTagOutput {
	return i.ToPolicyPredefinedSecurityPolicyDefaultRuleTagOutputWithContext(context.Background())
}

func (i PolicyPredefinedSecurityPolicyDefaultRuleTagArgs) ToPolicyPredefinedSecurityPolicyDefaultRuleTagOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyDefaultRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyDefaultRuleTagOutput)
}

// PolicyPredefinedSecurityPolicyDefaultRuleTagArrayInput is an input type that accepts PolicyPredefinedSecurityPolicyDefaultRuleTagArray and PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput values.
// You can construct a concrete instance of `PolicyPredefinedSecurityPolicyDefaultRuleTagArrayInput` via:
//
//          PolicyPredefinedSecurityPolicyDefaultRuleTagArray{ PolicyPredefinedSecurityPolicyDefaultRuleTagArgs{...} }
type PolicyPredefinedSecurityPolicyDefaultRuleTagArrayInput interface {
	pulumi.Input

	ToPolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput() PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput
	ToPolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutputWithContext(context.Context) PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput
}

type PolicyPredefinedSecurityPolicyDefaultRuleTagArray []PolicyPredefinedSecurityPolicyDefaultRuleTagInput

func (PolicyPredefinedSecurityPolicyDefaultRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedSecurityPolicyDefaultRuleTag)(nil)).Elem()
}

func (i PolicyPredefinedSecurityPolicyDefaultRuleTagArray) ToPolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput() PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput {
	return i.ToPolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutputWithContext(context.Background())
}

func (i PolicyPredefinedSecurityPolicyDefaultRuleTagArray) ToPolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput)
}

type PolicyPredefinedSecurityPolicyDefaultRuleTagOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedSecurityPolicyDefaultRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedSecurityPolicyDefaultRuleTag)(nil)).Elem()
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleTagOutput) ToPolicyPredefinedSecurityPolicyDefaultRuleTagOutput() PolicyPredefinedSecurityPolicyDefaultRuleTagOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleTagOutput) ToPolicyPredefinedSecurityPolicyDefaultRuleTagOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyDefaultRuleTagOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyDefaultRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedSecurityPolicyDefaultRuleTag)(nil)).Elem()
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput) ToPolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput() PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput) ToPolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput) Index(i pulumi.IntInput) PolicyPredefinedSecurityPolicyDefaultRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPredefinedSecurityPolicyDefaultRuleTag {
		return vs[0].([]PolicyPredefinedSecurityPolicyDefaultRuleTag)[vs[1].(int)]
	}).(PolicyPredefinedSecurityPolicyDefaultRuleTagOutput)
}

type PolicyPredefinedSecurityPolicyRule struct {
	Action               *string                                 `pulumi:"action"`
	Description          *string                                 `pulumi:"description"`
	DestinationGroups    []string                                `pulumi:"destinationGroups"`
	DestinationsExcluded *bool                                   `pulumi:"destinationsExcluded"`
	Direction            *string                                 `pulumi:"direction"`
	Disabled             *bool                                   `pulumi:"disabled"`
	DisplayName          string                                  `pulumi:"displayName"`
	IpVersion            *string                                 `pulumi:"ipVersion"`
	LogLabel             *string                                 `pulumi:"logLabel"`
	Logged               *bool                                   `pulumi:"logged"`
	Notes                *string                                 `pulumi:"notes"`
	NsxId                *string                                 `pulumi:"nsxId"`
	Profiles             []string                                `pulumi:"profiles"`
	Revision             *int                                    `pulumi:"revision"`
	RuleId               *int                                    `pulumi:"ruleId"`
	Scopes               []string                                `pulumi:"scopes"`
	SequenceNumber       *int                                    `pulumi:"sequenceNumber"`
	Services             []string                                `pulumi:"services"`
	SourceGroups         []string                                `pulumi:"sourceGroups"`
	SourcesExcluded      *bool                                   `pulumi:"sourcesExcluded"`
	Tags                 []PolicyPredefinedSecurityPolicyRuleTag `pulumi:"tags"`
}

// PolicyPredefinedSecurityPolicyRuleInput is an input type that accepts PolicyPredefinedSecurityPolicyRuleArgs and PolicyPredefinedSecurityPolicyRuleOutput values.
// You can construct a concrete instance of `PolicyPredefinedSecurityPolicyRuleInput` via:
//
//          PolicyPredefinedSecurityPolicyRuleArgs{...}
type PolicyPredefinedSecurityPolicyRuleInput interface {
	pulumi.Input

	ToPolicyPredefinedSecurityPolicyRuleOutput() PolicyPredefinedSecurityPolicyRuleOutput
	ToPolicyPredefinedSecurityPolicyRuleOutputWithContext(context.Context) PolicyPredefinedSecurityPolicyRuleOutput
}

type PolicyPredefinedSecurityPolicyRuleArgs struct {
	Action               pulumi.StringPtrInput                           `pulumi:"action"`
	Description          pulumi.StringPtrInput                           `pulumi:"description"`
	DestinationGroups    pulumi.StringArrayInput                         `pulumi:"destinationGroups"`
	DestinationsExcluded pulumi.BoolPtrInput                             `pulumi:"destinationsExcluded"`
	Direction            pulumi.StringPtrInput                           `pulumi:"direction"`
	Disabled             pulumi.BoolPtrInput                             `pulumi:"disabled"`
	DisplayName          pulumi.StringInput                              `pulumi:"displayName"`
	IpVersion            pulumi.StringPtrInput                           `pulumi:"ipVersion"`
	LogLabel             pulumi.StringPtrInput                           `pulumi:"logLabel"`
	Logged               pulumi.BoolPtrInput                             `pulumi:"logged"`
	Notes                pulumi.StringPtrInput                           `pulumi:"notes"`
	NsxId                pulumi.StringPtrInput                           `pulumi:"nsxId"`
	Profiles             pulumi.StringArrayInput                         `pulumi:"profiles"`
	Revision             pulumi.IntPtrInput                              `pulumi:"revision"`
	RuleId               pulumi.IntPtrInput                              `pulumi:"ruleId"`
	Scopes               pulumi.StringArrayInput                         `pulumi:"scopes"`
	SequenceNumber       pulumi.IntPtrInput                              `pulumi:"sequenceNumber"`
	Services             pulumi.StringArrayInput                         `pulumi:"services"`
	SourceGroups         pulumi.StringArrayInput                         `pulumi:"sourceGroups"`
	SourcesExcluded      pulumi.BoolPtrInput                             `pulumi:"sourcesExcluded"`
	Tags                 PolicyPredefinedSecurityPolicyRuleTagArrayInput `pulumi:"tags"`
}

func (PolicyPredefinedSecurityPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedSecurityPolicyRule)(nil)).Elem()
}

func (i PolicyPredefinedSecurityPolicyRuleArgs) ToPolicyPredefinedSecurityPolicyRuleOutput() PolicyPredefinedSecurityPolicyRuleOutput {
	return i.ToPolicyPredefinedSecurityPolicyRuleOutputWithContext(context.Background())
}

func (i PolicyPredefinedSecurityPolicyRuleArgs) ToPolicyPredefinedSecurityPolicyRuleOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyRuleOutput)
}

// PolicyPredefinedSecurityPolicyRuleArrayInput is an input type that accepts PolicyPredefinedSecurityPolicyRuleArray and PolicyPredefinedSecurityPolicyRuleArrayOutput values.
// You can construct a concrete instance of `PolicyPredefinedSecurityPolicyRuleArrayInput` via:
//
//          PolicyPredefinedSecurityPolicyRuleArray{ PolicyPredefinedSecurityPolicyRuleArgs{...} }
type PolicyPredefinedSecurityPolicyRuleArrayInput interface {
	pulumi.Input

	ToPolicyPredefinedSecurityPolicyRuleArrayOutput() PolicyPredefinedSecurityPolicyRuleArrayOutput
	ToPolicyPredefinedSecurityPolicyRuleArrayOutputWithContext(context.Context) PolicyPredefinedSecurityPolicyRuleArrayOutput
}

type PolicyPredefinedSecurityPolicyRuleArray []PolicyPredefinedSecurityPolicyRuleInput

func (PolicyPredefinedSecurityPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedSecurityPolicyRule)(nil)).Elem()
}

func (i PolicyPredefinedSecurityPolicyRuleArray) ToPolicyPredefinedSecurityPolicyRuleArrayOutput() PolicyPredefinedSecurityPolicyRuleArrayOutput {
	return i.ToPolicyPredefinedSecurityPolicyRuleArrayOutputWithContext(context.Background())
}

func (i PolicyPredefinedSecurityPolicyRuleArray) ToPolicyPredefinedSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyRuleArrayOutput)
}

type PolicyPredefinedSecurityPolicyRuleOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedSecurityPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedSecurityPolicyRule)(nil)).Elem()
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) ToPolicyPredefinedSecurityPolicyRuleOutput() PolicyPredefinedSecurityPolicyRuleOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) ToPolicyPredefinedSecurityPolicyRuleOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyRuleOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) DestinationGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) []string { return v.DestinationGroups }).(pulumi.StringArrayOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) DestinationsExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *bool { return v.DestinationsExcluded }).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) IpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *string { return v.IpVersion }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) LogLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *string { return v.LogLabel }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Logged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *bool { return v.Logged }).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) NsxId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *string { return v.NsxId }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Profiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) []string { return v.Profiles }).(pulumi.StringArrayOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) RuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *int { return v.RuleId }).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) SequenceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *int { return v.SequenceNumber }).(pulumi.IntPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) []string { return v.Services }).(pulumi.StringArrayOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) SourceGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) []string { return v.SourceGroups }).(pulumi.StringArrayOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) SourcesExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) *bool { return v.SourcesExcluded }).(pulumi.BoolPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleOutput) Tags() PolicyPredefinedSecurityPolicyRuleTagArrayOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRule) []PolicyPredefinedSecurityPolicyRuleTag { return v.Tags }).(PolicyPredefinedSecurityPolicyRuleTagArrayOutput)
}

type PolicyPredefinedSecurityPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedSecurityPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedSecurityPolicyRule)(nil)).Elem()
}

func (o PolicyPredefinedSecurityPolicyRuleArrayOutput) ToPolicyPredefinedSecurityPolicyRuleArrayOutput() PolicyPredefinedSecurityPolicyRuleArrayOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyRuleArrayOutput) ToPolicyPredefinedSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyRuleArrayOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyRuleArrayOutput) Index(i pulumi.IntInput) PolicyPredefinedSecurityPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPredefinedSecurityPolicyRule {
		return vs[0].([]PolicyPredefinedSecurityPolicyRule)[vs[1].(int)]
	}).(PolicyPredefinedSecurityPolicyRuleOutput)
}

type PolicyPredefinedSecurityPolicyRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyPredefinedSecurityPolicyRuleTagInput is an input type that accepts PolicyPredefinedSecurityPolicyRuleTagArgs and PolicyPredefinedSecurityPolicyRuleTagOutput values.
// You can construct a concrete instance of `PolicyPredefinedSecurityPolicyRuleTagInput` via:
//
//          PolicyPredefinedSecurityPolicyRuleTagArgs{...}
type PolicyPredefinedSecurityPolicyRuleTagInput interface {
	pulumi.Input

	ToPolicyPredefinedSecurityPolicyRuleTagOutput() PolicyPredefinedSecurityPolicyRuleTagOutput
	ToPolicyPredefinedSecurityPolicyRuleTagOutputWithContext(context.Context) PolicyPredefinedSecurityPolicyRuleTagOutput
}

type PolicyPredefinedSecurityPolicyRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyPredefinedSecurityPolicyRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedSecurityPolicyRuleTag)(nil)).Elem()
}

func (i PolicyPredefinedSecurityPolicyRuleTagArgs) ToPolicyPredefinedSecurityPolicyRuleTagOutput() PolicyPredefinedSecurityPolicyRuleTagOutput {
	return i.ToPolicyPredefinedSecurityPolicyRuleTagOutputWithContext(context.Background())
}

func (i PolicyPredefinedSecurityPolicyRuleTagArgs) ToPolicyPredefinedSecurityPolicyRuleTagOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyRuleTagOutput)
}

// PolicyPredefinedSecurityPolicyRuleTagArrayInput is an input type that accepts PolicyPredefinedSecurityPolicyRuleTagArray and PolicyPredefinedSecurityPolicyRuleTagArrayOutput values.
// You can construct a concrete instance of `PolicyPredefinedSecurityPolicyRuleTagArrayInput` via:
//
//          PolicyPredefinedSecurityPolicyRuleTagArray{ PolicyPredefinedSecurityPolicyRuleTagArgs{...} }
type PolicyPredefinedSecurityPolicyRuleTagArrayInput interface {
	pulumi.Input

	ToPolicyPredefinedSecurityPolicyRuleTagArrayOutput() PolicyPredefinedSecurityPolicyRuleTagArrayOutput
	ToPolicyPredefinedSecurityPolicyRuleTagArrayOutputWithContext(context.Context) PolicyPredefinedSecurityPolicyRuleTagArrayOutput
}

type PolicyPredefinedSecurityPolicyRuleTagArray []PolicyPredefinedSecurityPolicyRuleTagInput

func (PolicyPredefinedSecurityPolicyRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedSecurityPolicyRuleTag)(nil)).Elem()
}

func (i PolicyPredefinedSecurityPolicyRuleTagArray) ToPolicyPredefinedSecurityPolicyRuleTagArrayOutput() PolicyPredefinedSecurityPolicyRuleTagArrayOutput {
	return i.ToPolicyPredefinedSecurityPolicyRuleTagArrayOutputWithContext(context.Background())
}

func (i PolicyPredefinedSecurityPolicyRuleTagArray) ToPolicyPredefinedSecurityPolicyRuleTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyRuleTagArrayOutput)
}

type PolicyPredefinedSecurityPolicyRuleTagOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedSecurityPolicyRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedSecurityPolicyRuleTag)(nil)).Elem()
}

func (o PolicyPredefinedSecurityPolicyRuleTagOutput) ToPolicyPredefinedSecurityPolicyRuleTagOutput() PolicyPredefinedSecurityPolicyRuleTagOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyRuleTagOutput) ToPolicyPredefinedSecurityPolicyRuleTagOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyRuleTagOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyPredefinedSecurityPolicyRuleTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedSecurityPolicyRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedSecurityPolicyRuleTag)(nil)).Elem()
}

func (o PolicyPredefinedSecurityPolicyRuleTagArrayOutput) ToPolicyPredefinedSecurityPolicyRuleTagArrayOutput() PolicyPredefinedSecurityPolicyRuleTagArrayOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyRuleTagArrayOutput) ToPolicyPredefinedSecurityPolicyRuleTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyRuleTagArrayOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyRuleTagArrayOutput) Index(i pulumi.IntInput) PolicyPredefinedSecurityPolicyRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPredefinedSecurityPolicyRuleTag {
		return vs[0].([]PolicyPredefinedSecurityPolicyRuleTag)[vs[1].(int)]
	}).(PolicyPredefinedSecurityPolicyRuleTagOutput)
}

type PolicyPredefinedSecurityPolicyTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyPredefinedSecurityPolicyTagInput is an input type that accepts PolicyPredefinedSecurityPolicyTagArgs and PolicyPredefinedSecurityPolicyTagOutput values.
// You can construct a concrete instance of `PolicyPredefinedSecurityPolicyTagInput` via:
//
//          PolicyPredefinedSecurityPolicyTagArgs{...}
type PolicyPredefinedSecurityPolicyTagInput interface {
	pulumi.Input

	ToPolicyPredefinedSecurityPolicyTagOutput() PolicyPredefinedSecurityPolicyTagOutput
	ToPolicyPredefinedSecurityPolicyTagOutputWithContext(context.Context) PolicyPredefinedSecurityPolicyTagOutput
}

type PolicyPredefinedSecurityPolicyTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyPredefinedSecurityPolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedSecurityPolicyTag)(nil)).Elem()
}

func (i PolicyPredefinedSecurityPolicyTagArgs) ToPolicyPredefinedSecurityPolicyTagOutput() PolicyPredefinedSecurityPolicyTagOutput {
	return i.ToPolicyPredefinedSecurityPolicyTagOutputWithContext(context.Background())
}

func (i PolicyPredefinedSecurityPolicyTagArgs) ToPolicyPredefinedSecurityPolicyTagOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyTagOutput)
}

// PolicyPredefinedSecurityPolicyTagArrayInput is an input type that accepts PolicyPredefinedSecurityPolicyTagArray and PolicyPredefinedSecurityPolicyTagArrayOutput values.
// You can construct a concrete instance of `PolicyPredefinedSecurityPolicyTagArrayInput` via:
//
//          PolicyPredefinedSecurityPolicyTagArray{ PolicyPredefinedSecurityPolicyTagArgs{...} }
type PolicyPredefinedSecurityPolicyTagArrayInput interface {
	pulumi.Input

	ToPolicyPredefinedSecurityPolicyTagArrayOutput() PolicyPredefinedSecurityPolicyTagArrayOutput
	ToPolicyPredefinedSecurityPolicyTagArrayOutputWithContext(context.Context) PolicyPredefinedSecurityPolicyTagArrayOutput
}

type PolicyPredefinedSecurityPolicyTagArray []PolicyPredefinedSecurityPolicyTagInput

func (PolicyPredefinedSecurityPolicyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedSecurityPolicyTag)(nil)).Elem()
}

func (i PolicyPredefinedSecurityPolicyTagArray) ToPolicyPredefinedSecurityPolicyTagArrayOutput() PolicyPredefinedSecurityPolicyTagArrayOutput {
	return i.ToPolicyPredefinedSecurityPolicyTagArrayOutputWithContext(context.Background())
}

func (i PolicyPredefinedSecurityPolicyTagArray) ToPolicyPredefinedSecurityPolicyTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPredefinedSecurityPolicyTagArrayOutput)
}

type PolicyPredefinedSecurityPolicyTagOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedSecurityPolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPredefinedSecurityPolicyTag)(nil)).Elem()
}

func (o PolicyPredefinedSecurityPolicyTagOutput) ToPolicyPredefinedSecurityPolicyTagOutput() PolicyPredefinedSecurityPolicyTagOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyTagOutput) ToPolicyPredefinedSecurityPolicyTagOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyTagOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyPredefinedSecurityPolicyTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPredefinedSecurityPolicyTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyPredefinedSecurityPolicyTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyPredefinedSecurityPolicyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPredefinedSecurityPolicyTag)(nil)).Elem()
}

func (o PolicyPredefinedSecurityPolicyTagArrayOutput) ToPolicyPredefinedSecurityPolicyTagArrayOutput() PolicyPredefinedSecurityPolicyTagArrayOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyTagArrayOutput) ToPolicyPredefinedSecurityPolicyTagArrayOutputWithContext(ctx context.Context) PolicyPredefinedSecurityPolicyTagArrayOutput {
	return o
}

func (o PolicyPredefinedSecurityPolicyTagArrayOutput) Index(i pulumi.IntInput) PolicyPredefinedSecurityPolicyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPredefinedSecurityPolicyTag {
		return vs[0].([]PolicyPredefinedSecurityPolicyTag)[vs[1].(int)]
	}).(PolicyPredefinedSecurityPolicyTagOutput)
}

type PolicySecurityPolicyRule struct {
	Action               *string                       `pulumi:"action"`
	Description          *string                       `pulumi:"description"`
	DestinationGroups    []string                      `pulumi:"destinationGroups"`
	DestinationsExcluded *bool                         `pulumi:"destinationsExcluded"`
	Direction            *string                       `pulumi:"direction"`
	Disabled             *bool                         `pulumi:"disabled"`
	DisplayName          string                        `pulumi:"displayName"`
	IpVersion            *string                       `pulumi:"ipVersion"`
	LogLabel             *string                       `pulumi:"logLabel"`
	Logged               *bool                         `pulumi:"logged"`
	Notes                *string                       `pulumi:"notes"`
	NsxId                *string                       `pulumi:"nsxId"`
	Profiles             []string                      `pulumi:"profiles"`
	Revision             *int                          `pulumi:"revision"`
	RuleId               *int                          `pulumi:"ruleId"`
	Scopes               []string                      `pulumi:"scopes"`
	SequenceNumber       *int                          `pulumi:"sequenceNumber"`
	Services             []string                      `pulumi:"services"`
	SourceGroups         []string                      `pulumi:"sourceGroups"`
	SourcesExcluded      *bool                         `pulumi:"sourcesExcluded"`
	Tags                 []PolicySecurityPolicyRuleTag `pulumi:"tags"`
}

// PolicySecurityPolicyRuleInput is an input type that accepts PolicySecurityPolicyRuleArgs and PolicySecurityPolicyRuleOutput values.
// You can construct a concrete instance of `PolicySecurityPolicyRuleInput` via:
//
//          PolicySecurityPolicyRuleArgs{...}
type PolicySecurityPolicyRuleInput interface {
	pulumi.Input

	ToPolicySecurityPolicyRuleOutput() PolicySecurityPolicyRuleOutput
	ToPolicySecurityPolicyRuleOutputWithContext(context.Context) PolicySecurityPolicyRuleOutput
}

type PolicySecurityPolicyRuleArgs struct {
	Action               pulumi.StringPtrInput                 `pulumi:"action"`
	Description          pulumi.StringPtrInput                 `pulumi:"description"`
	DestinationGroups    pulumi.StringArrayInput               `pulumi:"destinationGroups"`
	DestinationsExcluded pulumi.BoolPtrInput                   `pulumi:"destinationsExcluded"`
	Direction            pulumi.StringPtrInput                 `pulumi:"direction"`
	Disabled             pulumi.BoolPtrInput                   `pulumi:"disabled"`
	DisplayName          pulumi.StringInput                    `pulumi:"displayName"`
	IpVersion            pulumi.StringPtrInput                 `pulumi:"ipVersion"`
	LogLabel             pulumi.StringPtrInput                 `pulumi:"logLabel"`
	Logged               pulumi.BoolPtrInput                   `pulumi:"logged"`
	Notes                pulumi.StringPtrInput                 `pulumi:"notes"`
	NsxId                pulumi.StringPtrInput                 `pulumi:"nsxId"`
	Profiles             pulumi.StringArrayInput               `pulumi:"profiles"`
	Revision             pulumi.IntPtrInput                    `pulumi:"revision"`
	RuleId               pulumi.IntPtrInput                    `pulumi:"ruleId"`
	Scopes               pulumi.StringArrayInput               `pulumi:"scopes"`
	SequenceNumber       pulumi.IntPtrInput                    `pulumi:"sequenceNumber"`
	Services             pulumi.StringArrayInput               `pulumi:"services"`
	SourceGroups         pulumi.StringArrayInput               `pulumi:"sourceGroups"`
	SourcesExcluded      pulumi.BoolPtrInput                   `pulumi:"sourcesExcluded"`
	Tags                 PolicySecurityPolicyRuleTagArrayInput `pulumi:"tags"`
}

func (PolicySecurityPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityPolicyRule)(nil)).Elem()
}

func (i PolicySecurityPolicyRuleArgs) ToPolicySecurityPolicyRuleOutput() PolicySecurityPolicyRuleOutput {
	return i.ToPolicySecurityPolicyRuleOutputWithContext(context.Background())
}

func (i PolicySecurityPolicyRuleArgs) ToPolicySecurityPolicyRuleOutputWithContext(ctx context.Context) PolicySecurityPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityPolicyRuleOutput)
}

// PolicySecurityPolicyRuleArrayInput is an input type that accepts PolicySecurityPolicyRuleArray and PolicySecurityPolicyRuleArrayOutput values.
// You can construct a concrete instance of `PolicySecurityPolicyRuleArrayInput` via:
//
//          PolicySecurityPolicyRuleArray{ PolicySecurityPolicyRuleArgs{...} }
type PolicySecurityPolicyRuleArrayInput interface {
	pulumi.Input

	ToPolicySecurityPolicyRuleArrayOutput() PolicySecurityPolicyRuleArrayOutput
	ToPolicySecurityPolicyRuleArrayOutputWithContext(context.Context) PolicySecurityPolicyRuleArrayOutput
}

type PolicySecurityPolicyRuleArray []PolicySecurityPolicyRuleInput

func (PolicySecurityPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySecurityPolicyRule)(nil)).Elem()
}

func (i PolicySecurityPolicyRuleArray) ToPolicySecurityPolicyRuleArrayOutput() PolicySecurityPolicyRuleArrayOutput {
	return i.ToPolicySecurityPolicyRuleArrayOutputWithContext(context.Background())
}

func (i PolicySecurityPolicyRuleArray) ToPolicySecurityPolicyRuleArrayOutputWithContext(ctx context.Context) PolicySecurityPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityPolicyRuleArrayOutput)
}

type PolicySecurityPolicyRuleOutput struct{ *pulumi.OutputState }

func (PolicySecurityPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityPolicyRule)(nil)).Elem()
}

func (o PolicySecurityPolicyRuleOutput) ToPolicySecurityPolicyRuleOutput() PolicySecurityPolicyRuleOutput {
	return o
}

func (o PolicySecurityPolicyRuleOutput) ToPolicySecurityPolicyRuleOutputWithContext(ctx context.Context) PolicySecurityPolicyRuleOutput {
	return o
}

func (o PolicySecurityPolicyRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) DestinationGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) []string { return v.DestinationGroups }).(pulumi.StringArrayOutput)
}

func (o PolicySecurityPolicyRuleOutput) DestinationsExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *bool { return v.DestinationsExcluded }).(pulumi.BoolPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o PolicySecurityPolicyRuleOutput) IpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *string { return v.IpVersion }).(pulumi.StringPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) LogLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *string { return v.LogLabel }).(pulumi.StringPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) Logged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *bool { return v.Logged }).(pulumi.BoolPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) NsxId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *string { return v.NsxId }).(pulumi.StringPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) Profiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) []string { return v.Profiles }).(pulumi.StringArrayOutput)
}

func (o PolicySecurityPolicyRuleOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) RuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *int { return v.RuleId }).(pulumi.IntPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o PolicySecurityPolicyRuleOutput) SequenceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *int { return v.SequenceNumber }).(pulumi.IntPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) []string { return v.Services }).(pulumi.StringArrayOutput)
}

func (o PolicySecurityPolicyRuleOutput) SourceGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) []string { return v.SourceGroups }).(pulumi.StringArrayOutput)
}

func (o PolicySecurityPolicyRuleOutput) SourcesExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) *bool { return v.SourcesExcluded }).(pulumi.BoolPtrOutput)
}

func (o PolicySecurityPolicyRuleOutput) Tags() PolicySecurityPolicyRuleTagArrayOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRule) []PolicySecurityPolicyRuleTag { return v.Tags }).(PolicySecurityPolicyRuleTagArrayOutput)
}

type PolicySecurityPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicySecurityPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySecurityPolicyRule)(nil)).Elem()
}

func (o PolicySecurityPolicyRuleArrayOutput) ToPolicySecurityPolicyRuleArrayOutput() PolicySecurityPolicyRuleArrayOutput {
	return o
}

func (o PolicySecurityPolicyRuleArrayOutput) ToPolicySecurityPolicyRuleArrayOutputWithContext(ctx context.Context) PolicySecurityPolicyRuleArrayOutput {
	return o
}

func (o PolicySecurityPolicyRuleArrayOutput) Index(i pulumi.IntInput) PolicySecurityPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySecurityPolicyRule {
		return vs[0].([]PolicySecurityPolicyRule)[vs[1].(int)]
	}).(PolicySecurityPolicyRuleOutput)
}

type PolicySecurityPolicyRuleTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicySecurityPolicyRuleTagInput is an input type that accepts PolicySecurityPolicyRuleTagArgs and PolicySecurityPolicyRuleTagOutput values.
// You can construct a concrete instance of `PolicySecurityPolicyRuleTagInput` via:
//
//          PolicySecurityPolicyRuleTagArgs{...}
type PolicySecurityPolicyRuleTagInput interface {
	pulumi.Input

	ToPolicySecurityPolicyRuleTagOutput() PolicySecurityPolicyRuleTagOutput
	ToPolicySecurityPolicyRuleTagOutputWithContext(context.Context) PolicySecurityPolicyRuleTagOutput
}

type PolicySecurityPolicyRuleTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicySecurityPolicyRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityPolicyRuleTag)(nil)).Elem()
}

func (i PolicySecurityPolicyRuleTagArgs) ToPolicySecurityPolicyRuleTagOutput() PolicySecurityPolicyRuleTagOutput {
	return i.ToPolicySecurityPolicyRuleTagOutputWithContext(context.Background())
}

func (i PolicySecurityPolicyRuleTagArgs) ToPolicySecurityPolicyRuleTagOutputWithContext(ctx context.Context) PolicySecurityPolicyRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityPolicyRuleTagOutput)
}

// PolicySecurityPolicyRuleTagArrayInput is an input type that accepts PolicySecurityPolicyRuleTagArray and PolicySecurityPolicyRuleTagArrayOutput values.
// You can construct a concrete instance of `PolicySecurityPolicyRuleTagArrayInput` via:
//
//          PolicySecurityPolicyRuleTagArray{ PolicySecurityPolicyRuleTagArgs{...} }
type PolicySecurityPolicyRuleTagArrayInput interface {
	pulumi.Input

	ToPolicySecurityPolicyRuleTagArrayOutput() PolicySecurityPolicyRuleTagArrayOutput
	ToPolicySecurityPolicyRuleTagArrayOutputWithContext(context.Context) PolicySecurityPolicyRuleTagArrayOutput
}

type PolicySecurityPolicyRuleTagArray []PolicySecurityPolicyRuleTagInput

func (PolicySecurityPolicyRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySecurityPolicyRuleTag)(nil)).Elem()
}

func (i PolicySecurityPolicyRuleTagArray) ToPolicySecurityPolicyRuleTagArrayOutput() PolicySecurityPolicyRuleTagArrayOutput {
	return i.ToPolicySecurityPolicyRuleTagArrayOutputWithContext(context.Background())
}

func (i PolicySecurityPolicyRuleTagArray) ToPolicySecurityPolicyRuleTagArrayOutputWithContext(ctx context.Context) PolicySecurityPolicyRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityPolicyRuleTagArrayOutput)
}

type PolicySecurityPolicyRuleTagOutput struct{ *pulumi.OutputState }

func (PolicySecurityPolicyRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityPolicyRuleTag)(nil)).Elem()
}

func (o PolicySecurityPolicyRuleTagOutput) ToPolicySecurityPolicyRuleTagOutput() PolicySecurityPolicyRuleTagOutput {
	return o
}

func (o PolicySecurityPolicyRuleTagOutput) ToPolicySecurityPolicyRuleTagOutputWithContext(ctx context.Context) PolicySecurityPolicyRuleTagOutput {
	return o
}

func (o PolicySecurityPolicyRuleTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRuleTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicySecurityPolicyRuleTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyRuleTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicySecurityPolicyRuleTagArrayOutput struct{ *pulumi.OutputState }

func (PolicySecurityPolicyRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySecurityPolicyRuleTag)(nil)).Elem()
}

func (o PolicySecurityPolicyRuleTagArrayOutput) ToPolicySecurityPolicyRuleTagArrayOutput() PolicySecurityPolicyRuleTagArrayOutput {
	return o
}

func (o PolicySecurityPolicyRuleTagArrayOutput) ToPolicySecurityPolicyRuleTagArrayOutputWithContext(ctx context.Context) PolicySecurityPolicyRuleTagArrayOutput {
	return o
}

func (o PolicySecurityPolicyRuleTagArrayOutput) Index(i pulumi.IntInput) PolicySecurityPolicyRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySecurityPolicyRuleTag {
		return vs[0].([]PolicySecurityPolicyRuleTag)[vs[1].(int)]
	}).(PolicySecurityPolicyRuleTagOutput)
}

type PolicySecurityPolicyTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicySecurityPolicyTagInput is an input type that accepts PolicySecurityPolicyTagArgs and PolicySecurityPolicyTagOutput values.
// You can construct a concrete instance of `PolicySecurityPolicyTagInput` via:
//
//          PolicySecurityPolicyTagArgs{...}
type PolicySecurityPolicyTagInput interface {
	pulumi.Input

	ToPolicySecurityPolicyTagOutput() PolicySecurityPolicyTagOutput
	ToPolicySecurityPolicyTagOutputWithContext(context.Context) PolicySecurityPolicyTagOutput
}

type PolicySecurityPolicyTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicySecurityPolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityPolicyTag)(nil)).Elem()
}

func (i PolicySecurityPolicyTagArgs) ToPolicySecurityPolicyTagOutput() PolicySecurityPolicyTagOutput {
	return i.ToPolicySecurityPolicyTagOutputWithContext(context.Background())
}

func (i PolicySecurityPolicyTagArgs) ToPolicySecurityPolicyTagOutputWithContext(ctx context.Context) PolicySecurityPolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityPolicyTagOutput)
}

// PolicySecurityPolicyTagArrayInput is an input type that accepts PolicySecurityPolicyTagArray and PolicySecurityPolicyTagArrayOutput values.
// You can construct a concrete instance of `PolicySecurityPolicyTagArrayInput` via:
//
//          PolicySecurityPolicyTagArray{ PolicySecurityPolicyTagArgs{...} }
type PolicySecurityPolicyTagArrayInput interface {
	pulumi.Input

	ToPolicySecurityPolicyTagArrayOutput() PolicySecurityPolicyTagArrayOutput
	ToPolicySecurityPolicyTagArrayOutputWithContext(context.Context) PolicySecurityPolicyTagArrayOutput
}

type PolicySecurityPolicyTagArray []PolicySecurityPolicyTagInput

func (PolicySecurityPolicyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySecurityPolicyTag)(nil)).Elem()
}

func (i PolicySecurityPolicyTagArray) ToPolicySecurityPolicyTagArrayOutput() PolicySecurityPolicyTagArrayOutput {
	return i.ToPolicySecurityPolicyTagArrayOutputWithContext(context.Background())
}

func (i PolicySecurityPolicyTagArray) ToPolicySecurityPolicyTagArrayOutputWithContext(ctx context.Context) PolicySecurityPolicyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityPolicyTagArrayOutput)
}

type PolicySecurityPolicyTagOutput struct{ *pulumi.OutputState }

func (PolicySecurityPolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityPolicyTag)(nil)).Elem()
}

func (o PolicySecurityPolicyTagOutput) ToPolicySecurityPolicyTagOutput() PolicySecurityPolicyTagOutput {
	return o
}

func (o PolicySecurityPolicyTagOutput) ToPolicySecurityPolicyTagOutputWithContext(ctx context.Context) PolicySecurityPolicyTagOutput {
	return o
}

func (o PolicySecurityPolicyTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicySecurityPolicyTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityPolicyTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicySecurityPolicyTagArrayOutput struct{ *pulumi.OutputState }

func (PolicySecurityPolicyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySecurityPolicyTag)(nil)).Elem()
}

func (o PolicySecurityPolicyTagArrayOutput) ToPolicySecurityPolicyTagArrayOutput() PolicySecurityPolicyTagArrayOutput {
	return o
}

func (o PolicySecurityPolicyTagArrayOutput) ToPolicySecurityPolicyTagArrayOutputWithContext(ctx context.Context) PolicySecurityPolicyTagArrayOutput {
	return o
}

func (o PolicySecurityPolicyTagArrayOutput) Index(i pulumi.IntInput) PolicySecurityPolicyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySecurityPolicyTag {
		return vs[0].([]PolicySecurityPolicyTag)[vs[1].(int)]
	}).(PolicySecurityPolicyTagOutput)
}

type PolicySegmentAdvancedConfig struct {
	AddressPoolPath     *string `pulumi:"addressPoolPath"`
	Connectivity        *string `pulumi:"connectivity"`
	Hybrid              *bool   `pulumi:"hybrid"`
	LocalEgress         *bool   `pulumi:"localEgress"`
	UplinkTeamingPolicy *string `pulumi:"uplinkTeamingPolicy"`
}

// PolicySegmentAdvancedConfigInput is an input type that accepts PolicySegmentAdvancedConfigArgs and PolicySegmentAdvancedConfigOutput values.
// You can construct a concrete instance of `PolicySegmentAdvancedConfigInput` via:
//
//          PolicySegmentAdvancedConfigArgs{...}
type PolicySegmentAdvancedConfigInput interface {
	pulumi.Input

	ToPolicySegmentAdvancedConfigOutput() PolicySegmentAdvancedConfigOutput
	ToPolicySegmentAdvancedConfigOutputWithContext(context.Context) PolicySegmentAdvancedConfigOutput
}

type PolicySegmentAdvancedConfigArgs struct {
	AddressPoolPath     pulumi.StringPtrInput `pulumi:"addressPoolPath"`
	Connectivity        pulumi.StringPtrInput `pulumi:"connectivity"`
	Hybrid              pulumi.BoolPtrInput   `pulumi:"hybrid"`
	LocalEgress         pulumi.BoolPtrInput   `pulumi:"localEgress"`
	UplinkTeamingPolicy pulumi.StringPtrInput `pulumi:"uplinkTeamingPolicy"`
}

func (PolicySegmentAdvancedConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentAdvancedConfig)(nil)).Elem()
}

func (i PolicySegmentAdvancedConfigArgs) ToPolicySegmentAdvancedConfigOutput() PolicySegmentAdvancedConfigOutput {
	return i.ToPolicySegmentAdvancedConfigOutputWithContext(context.Background())
}

func (i PolicySegmentAdvancedConfigArgs) ToPolicySegmentAdvancedConfigOutputWithContext(ctx context.Context) PolicySegmentAdvancedConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentAdvancedConfigOutput)
}

func (i PolicySegmentAdvancedConfigArgs) ToPolicySegmentAdvancedConfigPtrOutput() PolicySegmentAdvancedConfigPtrOutput {
	return i.ToPolicySegmentAdvancedConfigPtrOutputWithContext(context.Background())
}

func (i PolicySegmentAdvancedConfigArgs) ToPolicySegmentAdvancedConfigPtrOutputWithContext(ctx context.Context) PolicySegmentAdvancedConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentAdvancedConfigOutput).ToPolicySegmentAdvancedConfigPtrOutputWithContext(ctx)
}

// PolicySegmentAdvancedConfigPtrInput is an input type that accepts PolicySegmentAdvancedConfigArgs, PolicySegmentAdvancedConfigPtr and PolicySegmentAdvancedConfigPtrOutput values.
// You can construct a concrete instance of `PolicySegmentAdvancedConfigPtrInput` via:
//
//          PolicySegmentAdvancedConfigArgs{...}
//
//  or:
//
//          nil
type PolicySegmentAdvancedConfigPtrInput interface {
	pulumi.Input

	ToPolicySegmentAdvancedConfigPtrOutput() PolicySegmentAdvancedConfigPtrOutput
	ToPolicySegmentAdvancedConfigPtrOutputWithContext(context.Context) PolicySegmentAdvancedConfigPtrOutput
}

type policySegmentAdvancedConfigPtrType PolicySegmentAdvancedConfigArgs

func PolicySegmentAdvancedConfigPtr(v *PolicySegmentAdvancedConfigArgs) PolicySegmentAdvancedConfigPtrInput {
	return (*policySegmentAdvancedConfigPtrType)(v)
}

func (*policySegmentAdvancedConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentAdvancedConfig)(nil)).Elem()
}

func (i *policySegmentAdvancedConfigPtrType) ToPolicySegmentAdvancedConfigPtrOutput() PolicySegmentAdvancedConfigPtrOutput {
	return i.ToPolicySegmentAdvancedConfigPtrOutputWithContext(context.Background())
}

func (i *policySegmentAdvancedConfigPtrType) ToPolicySegmentAdvancedConfigPtrOutputWithContext(ctx context.Context) PolicySegmentAdvancedConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentAdvancedConfigPtrOutput)
}

type PolicySegmentAdvancedConfigOutput struct{ *pulumi.OutputState }

func (PolicySegmentAdvancedConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentAdvancedConfig)(nil)).Elem()
}

func (o PolicySegmentAdvancedConfigOutput) ToPolicySegmentAdvancedConfigOutput() PolicySegmentAdvancedConfigOutput {
	return o
}

func (o PolicySegmentAdvancedConfigOutput) ToPolicySegmentAdvancedConfigOutputWithContext(ctx context.Context) PolicySegmentAdvancedConfigOutput {
	return o
}

func (o PolicySegmentAdvancedConfigOutput) ToPolicySegmentAdvancedConfigPtrOutput() PolicySegmentAdvancedConfigPtrOutput {
	return o.ToPolicySegmentAdvancedConfigPtrOutputWithContext(context.Background())
}

func (o PolicySegmentAdvancedConfigOutput) ToPolicySegmentAdvancedConfigPtrOutputWithContext(ctx context.Context) PolicySegmentAdvancedConfigPtrOutput {
	return o.ApplyT(func(v PolicySegmentAdvancedConfig) *PolicySegmentAdvancedConfig {
		return &v
	}).(PolicySegmentAdvancedConfigPtrOutput)
}
func (o PolicySegmentAdvancedConfigOutput) AddressPoolPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentAdvancedConfig) *string { return v.AddressPoolPath }).(pulumi.StringPtrOutput)
}

func (o PolicySegmentAdvancedConfigOutput) Connectivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentAdvancedConfig) *string { return v.Connectivity }).(pulumi.StringPtrOutput)
}

func (o PolicySegmentAdvancedConfigOutput) Hybrid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySegmentAdvancedConfig) *bool { return v.Hybrid }).(pulumi.BoolPtrOutput)
}

func (o PolicySegmentAdvancedConfigOutput) LocalEgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySegmentAdvancedConfig) *bool { return v.LocalEgress }).(pulumi.BoolPtrOutput)
}

func (o PolicySegmentAdvancedConfigOutput) UplinkTeamingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentAdvancedConfig) *string { return v.UplinkTeamingPolicy }).(pulumi.StringPtrOutput)
}

type PolicySegmentAdvancedConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicySegmentAdvancedConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentAdvancedConfig)(nil)).Elem()
}

func (o PolicySegmentAdvancedConfigPtrOutput) ToPolicySegmentAdvancedConfigPtrOutput() PolicySegmentAdvancedConfigPtrOutput {
	return o
}

func (o PolicySegmentAdvancedConfigPtrOutput) ToPolicySegmentAdvancedConfigPtrOutputWithContext(ctx context.Context) PolicySegmentAdvancedConfigPtrOutput {
	return o
}

func (o PolicySegmentAdvancedConfigPtrOutput) Elem() PolicySegmentAdvancedConfigOutput {
	return o.ApplyT(func(v *PolicySegmentAdvancedConfig) PolicySegmentAdvancedConfig { return *v }).(PolicySegmentAdvancedConfigOutput)
}

func (o PolicySegmentAdvancedConfigPtrOutput) AddressPoolPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentAdvancedConfig) *string {
		if v == nil {
			return nil
		}
		return v.AddressPoolPath
	}).(pulumi.StringPtrOutput)
}

func (o PolicySegmentAdvancedConfigPtrOutput) Connectivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentAdvancedConfig) *string {
		if v == nil {
			return nil
		}
		return v.Connectivity
	}).(pulumi.StringPtrOutput)
}

func (o PolicySegmentAdvancedConfigPtrOutput) Hybrid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicySegmentAdvancedConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Hybrid
	}).(pulumi.BoolPtrOutput)
}

func (o PolicySegmentAdvancedConfigPtrOutput) LocalEgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicySegmentAdvancedConfig) *bool {
		if v == nil {
			return nil
		}
		return v.LocalEgress
	}).(pulumi.BoolPtrOutput)
}

func (o PolicySegmentAdvancedConfigPtrOutput) UplinkTeamingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentAdvancedConfig) *string {
		if v == nil {
			return nil
		}
		return v.UplinkTeamingPolicy
	}).(pulumi.StringPtrOutput)
}

type PolicySegmentDiscoveryProfile struct {
	BindingMapPath          *string `pulumi:"bindingMapPath"`
	IpDiscoveryProfilePath  *string `pulumi:"ipDiscoveryProfilePath"`
	MacDiscoveryProfilePath *string `pulumi:"macDiscoveryProfilePath"`
	Revision                *int    `pulumi:"revision"`
}

// PolicySegmentDiscoveryProfileInput is an input type that accepts PolicySegmentDiscoveryProfileArgs and PolicySegmentDiscoveryProfileOutput values.
// You can construct a concrete instance of `PolicySegmentDiscoveryProfileInput` via:
//
//          PolicySegmentDiscoveryProfileArgs{...}
type PolicySegmentDiscoveryProfileInput interface {
	pulumi.Input

	ToPolicySegmentDiscoveryProfileOutput() PolicySegmentDiscoveryProfileOutput
	ToPolicySegmentDiscoveryProfileOutputWithContext(context.Context) PolicySegmentDiscoveryProfileOutput
}

type PolicySegmentDiscoveryProfileArgs struct {
	BindingMapPath          pulumi.StringPtrInput `pulumi:"bindingMapPath"`
	IpDiscoveryProfilePath  pulumi.StringPtrInput `pulumi:"ipDiscoveryProfilePath"`
	MacDiscoveryProfilePath pulumi.StringPtrInput `pulumi:"macDiscoveryProfilePath"`
	Revision                pulumi.IntPtrInput    `pulumi:"revision"`
}

func (PolicySegmentDiscoveryProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentDiscoveryProfile)(nil)).Elem()
}

func (i PolicySegmentDiscoveryProfileArgs) ToPolicySegmentDiscoveryProfileOutput() PolicySegmentDiscoveryProfileOutput {
	return i.ToPolicySegmentDiscoveryProfileOutputWithContext(context.Background())
}

func (i PolicySegmentDiscoveryProfileArgs) ToPolicySegmentDiscoveryProfileOutputWithContext(ctx context.Context) PolicySegmentDiscoveryProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentDiscoveryProfileOutput)
}

func (i PolicySegmentDiscoveryProfileArgs) ToPolicySegmentDiscoveryProfilePtrOutput() PolicySegmentDiscoveryProfilePtrOutput {
	return i.ToPolicySegmentDiscoveryProfilePtrOutputWithContext(context.Background())
}

func (i PolicySegmentDiscoveryProfileArgs) ToPolicySegmentDiscoveryProfilePtrOutputWithContext(ctx context.Context) PolicySegmentDiscoveryProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentDiscoveryProfileOutput).ToPolicySegmentDiscoveryProfilePtrOutputWithContext(ctx)
}

// PolicySegmentDiscoveryProfilePtrInput is an input type that accepts PolicySegmentDiscoveryProfileArgs, PolicySegmentDiscoveryProfilePtr and PolicySegmentDiscoveryProfilePtrOutput values.
// You can construct a concrete instance of `PolicySegmentDiscoveryProfilePtrInput` via:
//
//          PolicySegmentDiscoveryProfileArgs{...}
//
//  or:
//
//          nil
type PolicySegmentDiscoveryProfilePtrInput interface {
	pulumi.Input

	ToPolicySegmentDiscoveryProfilePtrOutput() PolicySegmentDiscoveryProfilePtrOutput
	ToPolicySegmentDiscoveryProfilePtrOutputWithContext(context.Context) PolicySegmentDiscoveryProfilePtrOutput
}

type policySegmentDiscoveryProfilePtrType PolicySegmentDiscoveryProfileArgs

func PolicySegmentDiscoveryProfilePtr(v *PolicySegmentDiscoveryProfileArgs) PolicySegmentDiscoveryProfilePtrInput {
	return (*policySegmentDiscoveryProfilePtrType)(v)
}

func (*policySegmentDiscoveryProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentDiscoveryProfile)(nil)).Elem()
}

func (i *policySegmentDiscoveryProfilePtrType) ToPolicySegmentDiscoveryProfilePtrOutput() PolicySegmentDiscoveryProfilePtrOutput {
	return i.ToPolicySegmentDiscoveryProfilePtrOutputWithContext(context.Background())
}

func (i *policySegmentDiscoveryProfilePtrType) ToPolicySegmentDiscoveryProfilePtrOutputWithContext(ctx context.Context) PolicySegmentDiscoveryProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentDiscoveryProfilePtrOutput)
}

type PolicySegmentDiscoveryProfileOutput struct{ *pulumi.OutputState }

func (PolicySegmentDiscoveryProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentDiscoveryProfile)(nil)).Elem()
}

func (o PolicySegmentDiscoveryProfileOutput) ToPolicySegmentDiscoveryProfileOutput() PolicySegmentDiscoveryProfileOutput {
	return o
}

func (o PolicySegmentDiscoveryProfileOutput) ToPolicySegmentDiscoveryProfileOutputWithContext(ctx context.Context) PolicySegmentDiscoveryProfileOutput {
	return o
}

func (o PolicySegmentDiscoveryProfileOutput) ToPolicySegmentDiscoveryProfilePtrOutput() PolicySegmentDiscoveryProfilePtrOutput {
	return o.ToPolicySegmentDiscoveryProfilePtrOutputWithContext(context.Background())
}

func (o PolicySegmentDiscoveryProfileOutput) ToPolicySegmentDiscoveryProfilePtrOutputWithContext(ctx context.Context) PolicySegmentDiscoveryProfilePtrOutput {
	return o.ApplyT(func(v PolicySegmentDiscoveryProfile) *PolicySegmentDiscoveryProfile {
		return &v
	}).(PolicySegmentDiscoveryProfilePtrOutput)
}
func (o PolicySegmentDiscoveryProfileOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentDiscoveryProfile) *string { return v.BindingMapPath }).(pulumi.StringPtrOutput)
}

func (o PolicySegmentDiscoveryProfileOutput) IpDiscoveryProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentDiscoveryProfile) *string { return v.IpDiscoveryProfilePath }).(pulumi.StringPtrOutput)
}

func (o PolicySegmentDiscoveryProfileOutput) MacDiscoveryProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentDiscoveryProfile) *string { return v.MacDiscoveryProfilePath }).(pulumi.StringPtrOutput)
}

func (o PolicySegmentDiscoveryProfileOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySegmentDiscoveryProfile) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

type PolicySegmentDiscoveryProfilePtrOutput struct{ *pulumi.OutputState }

func (PolicySegmentDiscoveryProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentDiscoveryProfile)(nil)).Elem()
}

func (o PolicySegmentDiscoveryProfilePtrOutput) ToPolicySegmentDiscoveryProfilePtrOutput() PolicySegmentDiscoveryProfilePtrOutput {
	return o
}

func (o PolicySegmentDiscoveryProfilePtrOutput) ToPolicySegmentDiscoveryProfilePtrOutputWithContext(ctx context.Context) PolicySegmentDiscoveryProfilePtrOutput {
	return o
}

func (o PolicySegmentDiscoveryProfilePtrOutput) Elem() PolicySegmentDiscoveryProfileOutput {
	return o.ApplyT(func(v *PolicySegmentDiscoveryProfile) PolicySegmentDiscoveryProfile { return *v }).(PolicySegmentDiscoveryProfileOutput)
}

func (o PolicySegmentDiscoveryProfilePtrOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentDiscoveryProfile) *string {
		if v == nil {
			return nil
		}
		return v.BindingMapPath
	}).(pulumi.StringPtrOutput)
}

func (o PolicySegmentDiscoveryProfilePtrOutput) IpDiscoveryProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentDiscoveryProfile) *string {
		if v == nil {
			return nil
		}
		return v.IpDiscoveryProfilePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicySegmentDiscoveryProfilePtrOutput) MacDiscoveryProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentDiscoveryProfile) *string {
		if v == nil {
			return nil
		}
		return v.MacDiscoveryProfilePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicySegmentDiscoveryProfilePtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySegmentDiscoveryProfile) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

type PolicySegmentL2Extension struct {
	L2vpnPaths []string `pulumi:"l2vpnPaths"`
	TunnelId   *int     `pulumi:"tunnelId"`
}

// PolicySegmentL2ExtensionInput is an input type that accepts PolicySegmentL2ExtensionArgs and PolicySegmentL2ExtensionOutput values.
// You can construct a concrete instance of `PolicySegmentL2ExtensionInput` via:
//
//          PolicySegmentL2ExtensionArgs{...}
type PolicySegmentL2ExtensionInput interface {
	pulumi.Input

	ToPolicySegmentL2ExtensionOutput() PolicySegmentL2ExtensionOutput
	ToPolicySegmentL2ExtensionOutputWithContext(context.Context) PolicySegmentL2ExtensionOutput
}

type PolicySegmentL2ExtensionArgs struct {
	L2vpnPaths pulumi.StringArrayInput `pulumi:"l2vpnPaths"`
	TunnelId   pulumi.IntPtrInput      `pulumi:"tunnelId"`
}

func (PolicySegmentL2ExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentL2Extension)(nil)).Elem()
}

func (i PolicySegmentL2ExtensionArgs) ToPolicySegmentL2ExtensionOutput() PolicySegmentL2ExtensionOutput {
	return i.ToPolicySegmentL2ExtensionOutputWithContext(context.Background())
}

func (i PolicySegmentL2ExtensionArgs) ToPolicySegmentL2ExtensionOutputWithContext(ctx context.Context) PolicySegmentL2ExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentL2ExtensionOutput)
}

func (i PolicySegmentL2ExtensionArgs) ToPolicySegmentL2ExtensionPtrOutput() PolicySegmentL2ExtensionPtrOutput {
	return i.ToPolicySegmentL2ExtensionPtrOutputWithContext(context.Background())
}

func (i PolicySegmentL2ExtensionArgs) ToPolicySegmentL2ExtensionPtrOutputWithContext(ctx context.Context) PolicySegmentL2ExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentL2ExtensionOutput).ToPolicySegmentL2ExtensionPtrOutputWithContext(ctx)
}

// PolicySegmentL2ExtensionPtrInput is an input type that accepts PolicySegmentL2ExtensionArgs, PolicySegmentL2ExtensionPtr and PolicySegmentL2ExtensionPtrOutput values.
// You can construct a concrete instance of `PolicySegmentL2ExtensionPtrInput` via:
//
//          PolicySegmentL2ExtensionArgs{...}
//
//  or:
//
//          nil
type PolicySegmentL2ExtensionPtrInput interface {
	pulumi.Input

	ToPolicySegmentL2ExtensionPtrOutput() PolicySegmentL2ExtensionPtrOutput
	ToPolicySegmentL2ExtensionPtrOutputWithContext(context.Context) PolicySegmentL2ExtensionPtrOutput
}

type policySegmentL2ExtensionPtrType PolicySegmentL2ExtensionArgs

func PolicySegmentL2ExtensionPtr(v *PolicySegmentL2ExtensionArgs) PolicySegmentL2ExtensionPtrInput {
	return (*policySegmentL2ExtensionPtrType)(v)
}

func (*policySegmentL2ExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentL2Extension)(nil)).Elem()
}

func (i *policySegmentL2ExtensionPtrType) ToPolicySegmentL2ExtensionPtrOutput() PolicySegmentL2ExtensionPtrOutput {
	return i.ToPolicySegmentL2ExtensionPtrOutputWithContext(context.Background())
}

func (i *policySegmentL2ExtensionPtrType) ToPolicySegmentL2ExtensionPtrOutputWithContext(ctx context.Context) PolicySegmentL2ExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentL2ExtensionPtrOutput)
}

type PolicySegmentL2ExtensionOutput struct{ *pulumi.OutputState }

func (PolicySegmentL2ExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentL2Extension)(nil)).Elem()
}

func (o PolicySegmentL2ExtensionOutput) ToPolicySegmentL2ExtensionOutput() PolicySegmentL2ExtensionOutput {
	return o
}

func (o PolicySegmentL2ExtensionOutput) ToPolicySegmentL2ExtensionOutputWithContext(ctx context.Context) PolicySegmentL2ExtensionOutput {
	return o
}

func (o PolicySegmentL2ExtensionOutput) ToPolicySegmentL2ExtensionPtrOutput() PolicySegmentL2ExtensionPtrOutput {
	return o.ToPolicySegmentL2ExtensionPtrOutputWithContext(context.Background())
}

func (o PolicySegmentL2ExtensionOutput) ToPolicySegmentL2ExtensionPtrOutputWithContext(ctx context.Context) PolicySegmentL2ExtensionPtrOutput {
	return o.ApplyT(func(v PolicySegmentL2Extension) *PolicySegmentL2Extension {
		return &v
	}).(PolicySegmentL2ExtensionPtrOutput)
}
func (o PolicySegmentL2ExtensionOutput) L2vpnPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySegmentL2Extension) []string { return v.L2vpnPaths }).(pulumi.StringArrayOutput)
}

func (o PolicySegmentL2ExtensionOutput) TunnelId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySegmentL2Extension) *int { return v.TunnelId }).(pulumi.IntPtrOutput)
}

type PolicySegmentL2ExtensionPtrOutput struct{ *pulumi.OutputState }

func (PolicySegmentL2ExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentL2Extension)(nil)).Elem()
}

func (o PolicySegmentL2ExtensionPtrOutput) ToPolicySegmentL2ExtensionPtrOutput() PolicySegmentL2ExtensionPtrOutput {
	return o
}

func (o PolicySegmentL2ExtensionPtrOutput) ToPolicySegmentL2ExtensionPtrOutputWithContext(ctx context.Context) PolicySegmentL2ExtensionPtrOutput {
	return o
}

func (o PolicySegmentL2ExtensionPtrOutput) Elem() PolicySegmentL2ExtensionOutput {
	return o.ApplyT(func(v *PolicySegmentL2Extension) PolicySegmentL2Extension { return *v }).(PolicySegmentL2ExtensionOutput)
}

func (o PolicySegmentL2ExtensionPtrOutput) L2vpnPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicySegmentL2Extension) []string {
		if v == nil {
			return nil
		}
		return v.L2vpnPaths
	}).(pulumi.StringArrayOutput)
}

func (o PolicySegmentL2ExtensionPtrOutput) TunnelId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySegmentL2Extension) *int {
		if v == nil {
			return nil
		}
		return v.TunnelId
	}).(pulumi.IntPtrOutput)
}

type PolicySegmentQosProfile struct {
	BindingMapPath *string `pulumi:"bindingMapPath"`
	QosProfilePath string  `pulumi:"qosProfilePath"`
	Revision       *int    `pulumi:"revision"`
}

// PolicySegmentQosProfileInput is an input type that accepts PolicySegmentQosProfileArgs and PolicySegmentQosProfileOutput values.
// You can construct a concrete instance of `PolicySegmentQosProfileInput` via:
//
//          PolicySegmentQosProfileArgs{...}
type PolicySegmentQosProfileInput interface {
	pulumi.Input

	ToPolicySegmentQosProfileOutput() PolicySegmentQosProfileOutput
	ToPolicySegmentQosProfileOutputWithContext(context.Context) PolicySegmentQosProfileOutput
}

type PolicySegmentQosProfileArgs struct {
	BindingMapPath pulumi.StringPtrInput `pulumi:"bindingMapPath"`
	QosProfilePath pulumi.StringInput    `pulumi:"qosProfilePath"`
	Revision       pulumi.IntPtrInput    `pulumi:"revision"`
}

func (PolicySegmentQosProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentQosProfile)(nil)).Elem()
}

func (i PolicySegmentQosProfileArgs) ToPolicySegmentQosProfileOutput() PolicySegmentQosProfileOutput {
	return i.ToPolicySegmentQosProfileOutputWithContext(context.Background())
}

func (i PolicySegmentQosProfileArgs) ToPolicySegmentQosProfileOutputWithContext(ctx context.Context) PolicySegmentQosProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentQosProfileOutput)
}

func (i PolicySegmentQosProfileArgs) ToPolicySegmentQosProfilePtrOutput() PolicySegmentQosProfilePtrOutput {
	return i.ToPolicySegmentQosProfilePtrOutputWithContext(context.Background())
}

func (i PolicySegmentQosProfileArgs) ToPolicySegmentQosProfilePtrOutputWithContext(ctx context.Context) PolicySegmentQosProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentQosProfileOutput).ToPolicySegmentQosProfilePtrOutputWithContext(ctx)
}

// PolicySegmentQosProfilePtrInput is an input type that accepts PolicySegmentQosProfileArgs, PolicySegmentQosProfilePtr and PolicySegmentQosProfilePtrOutput values.
// You can construct a concrete instance of `PolicySegmentQosProfilePtrInput` via:
//
//          PolicySegmentQosProfileArgs{...}
//
//  or:
//
//          nil
type PolicySegmentQosProfilePtrInput interface {
	pulumi.Input

	ToPolicySegmentQosProfilePtrOutput() PolicySegmentQosProfilePtrOutput
	ToPolicySegmentQosProfilePtrOutputWithContext(context.Context) PolicySegmentQosProfilePtrOutput
}

type policySegmentQosProfilePtrType PolicySegmentQosProfileArgs

func PolicySegmentQosProfilePtr(v *PolicySegmentQosProfileArgs) PolicySegmentQosProfilePtrInput {
	return (*policySegmentQosProfilePtrType)(v)
}

func (*policySegmentQosProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentQosProfile)(nil)).Elem()
}

func (i *policySegmentQosProfilePtrType) ToPolicySegmentQosProfilePtrOutput() PolicySegmentQosProfilePtrOutput {
	return i.ToPolicySegmentQosProfilePtrOutputWithContext(context.Background())
}

func (i *policySegmentQosProfilePtrType) ToPolicySegmentQosProfilePtrOutputWithContext(ctx context.Context) PolicySegmentQosProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentQosProfilePtrOutput)
}

type PolicySegmentQosProfileOutput struct{ *pulumi.OutputState }

func (PolicySegmentQosProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentQosProfile)(nil)).Elem()
}

func (o PolicySegmentQosProfileOutput) ToPolicySegmentQosProfileOutput() PolicySegmentQosProfileOutput {
	return o
}

func (o PolicySegmentQosProfileOutput) ToPolicySegmentQosProfileOutputWithContext(ctx context.Context) PolicySegmentQosProfileOutput {
	return o
}

func (o PolicySegmentQosProfileOutput) ToPolicySegmentQosProfilePtrOutput() PolicySegmentQosProfilePtrOutput {
	return o.ToPolicySegmentQosProfilePtrOutputWithContext(context.Background())
}

func (o PolicySegmentQosProfileOutput) ToPolicySegmentQosProfilePtrOutputWithContext(ctx context.Context) PolicySegmentQosProfilePtrOutput {
	return o.ApplyT(func(v PolicySegmentQosProfile) *PolicySegmentQosProfile {
		return &v
	}).(PolicySegmentQosProfilePtrOutput)
}
func (o PolicySegmentQosProfileOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentQosProfile) *string { return v.BindingMapPath }).(pulumi.StringPtrOutput)
}

func (o PolicySegmentQosProfileOutput) QosProfilePath() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySegmentQosProfile) string { return v.QosProfilePath }).(pulumi.StringOutput)
}

func (o PolicySegmentQosProfileOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySegmentQosProfile) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

type PolicySegmentQosProfilePtrOutput struct{ *pulumi.OutputState }

func (PolicySegmentQosProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentQosProfile)(nil)).Elem()
}

func (o PolicySegmentQosProfilePtrOutput) ToPolicySegmentQosProfilePtrOutput() PolicySegmentQosProfilePtrOutput {
	return o
}

func (o PolicySegmentQosProfilePtrOutput) ToPolicySegmentQosProfilePtrOutputWithContext(ctx context.Context) PolicySegmentQosProfilePtrOutput {
	return o
}

func (o PolicySegmentQosProfilePtrOutput) Elem() PolicySegmentQosProfileOutput {
	return o.ApplyT(func(v *PolicySegmentQosProfile) PolicySegmentQosProfile { return *v }).(PolicySegmentQosProfileOutput)
}

func (o PolicySegmentQosProfilePtrOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentQosProfile) *string {
		if v == nil {
			return nil
		}
		return v.BindingMapPath
	}).(pulumi.StringPtrOutput)
}

func (o PolicySegmentQosProfilePtrOutput) QosProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentQosProfile) *string {
		if v == nil {
			return nil
		}
		return &v.QosProfilePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicySegmentQosProfilePtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySegmentQosProfile) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

type PolicySegmentSecurityProfile struct {
	BindingMapPath        *string `pulumi:"bindingMapPath"`
	Revision              *int    `pulumi:"revision"`
	SecurityProfilePath   *string `pulumi:"securityProfilePath"`
	SpoofguardProfilePath *string `pulumi:"spoofguardProfilePath"`
}

// PolicySegmentSecurityProfileInput is an input type that accepts PolicySegmentSecurityProfileArgs and PolicySegmentSecurityProfileOutput values.
// You can construct a concrete instance of `PolicySegmentSecurityProfileInput` via:
//
//          PolicySegmentSecurityProfileArgs{...}
type PolicySegmentSecurityProfileInput interface {
	pulumi.Input

	ToPolicySegmentSecurityProfileOutput() PolicySegmentSecurityProfileOutput
	ToPolicySegmentSecurityProfileOutputWithContext(context.Context) PolicySegmentSecurityProfileOutput
}

type PolicySegmentSecurityProfileArgs struct {
	BindingMapPath        pulumi.StringPtrInput `pulumi:"bindingMapPath"`
	Revision              pulumi.IntPtrInput    `pulumi:"revision"`
	SecurityProfilePath   pulumi.StringPtrInput `pulumi:"securityProfilePath"`
	SpoofguardProfilePath pulumi.StringPtrInput `pulumi:"spoofguardProfilePath"`
}

func (PolicySegmentSecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSecurityProfile)(nil)).Elem()
}

func (i PolicySegmentSecurityProfileArgs) ToPolicySegmentSecurityProfileOutput() PolicySegmentSecurityProfileOutput {
	return i.ToPolicySegmentSecurityProfileOutputWithContext(context.Background())
}

func (i PolicySegmentSecurityProfileArgs) ToPolicySegmentSecurityProfileOutputWithContext(ctx context.Context) PolicySegmentSecurityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSecurityProfileOutput)
}

func (i PolicySegmentSecurityProfileArgs) ToPolicySegmentSecurityProfilePtrOutput() PolicySegmentSecurityProfilePtrOutput {
	return i.ToPolicySegmentSecurityProfilePtrOutputWithContext(context.Background())
}

func (i PolicySegmentSecurityProfileArgs) ToPolicySegmentSecurityProfilePtrOutputWithContext(ctx context.Context) PolicySegmentSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSecurityProfileOutput).ToPolicySegmentSecurityProfilePtrOutputWithContext(ctx)
}

// PolicySegmentSecurityProfilePtrInput is an input type that accepts PolicySegmentSecurityProfileArgs, PolicySegmentSecurityProfilePtr and PolicySegmentSecurityProfilePtrOutput values.
// You can construct a concrete instance of `PolicySegmentSecurityProfilePtrInput` via:
//
//          PolicySegmentSecurityProfileArgs{...}
//
//  or:
//
//          nil
type PolicySegmentSecurityProfilePtrInput interface {
	pulumi.Input

	ToPolicySegmentSecurityProfilePtrOutput() PolicySegmentSecurityProfilePtrOutput
	ToPolicySegmentSecurityProfilePtrOutputWithContext(context.Context) PolicySegmentSecurityProfilePtrOutput
}

type policySegmentSecurityProfilePtrType PolicySegmentSecurityProfileArgs

func PolicySegmentSecurityProfilePtr(v *PolicySegmentSecurityProfileArgs) PolicySegmentSecurityProfilePtrInput {
	return (*policySegmentSecurityProfilePtrType)(v)
}

func (*policySegmentSecurityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentSecurityProfile)(nil)).Elem()
}

func (i *policySegmentSecurityProfilePtrType) ToPolicySegmentSecurityProfilePtrOutput() PolicySegmentSecurityProfilePtrOutput {
	return i.ToPolicySegmentSecurityProfilePtrOutputWithContext(context.Background())
}

func (i *policySegmentSecurityProfilePtrType) ToPolicySegmentSecurityProfilePtrOutputWithContext(ctx context.Context) PolicySegmentSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSecurityProfilePtrOutput)
}

type PolicySegmentSecurityProfileOutput struct{ *pulumi.OutputState }

func (PolicySegmentSecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSecurityProfile)(nil)).Elem()
}

func (o PolicySegmentSecurityProfileOutput) ToPolicySegmentSecurityProfileOutput() PolicySegmentSecurityProfileOutput {
	return o
}

func (o PolicySegmentSecurityProfileOutput) ToPolicySegmentSecurityProfileOutputWithContext(ctx context.Context) PolicySegmentSecurityProfileOutput {
	return o
}

func (o PolicySegmentSecurityProfileOutput) ToPolicySegmentSecurityProfilePtrOutput() PolicySegmentSecurityProfilePtrOutput {
	return o.ToPolicySegmentSecurityProfilePtrOutputWithContext(context.Background())
}

func (o PolicySegmentSecurityProfileOutput) ToPolicySegmentSecurityProfilePtrOutputWithContext(ctx context.Context) PolicySegmentSecurityProfilePtrOutput {
	return o.ApplyT(func(v PolicySegmentSecurityProfile) *PolicySegmentSecurityProfile {
		return &v
	}).(PolicySegmentSecurityProfilePtrOutput)
}
func (o PolicySegmentSecurityProfileOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentSecurityProfile) *string { return v.BindingMapPath }).(pulumi.StringPtrOutput)
}

func (o PolicySegmentSecurityProfileOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySegmentSecurityProfile) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o PolicySegmentSecurityProfileOutput) SecurityProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentSecurityProfile) *string { return v.SecurityProfilePath }).(pulumi.StringPtrOutput)
}

func (o PolicySegmentSecurityProfileOutput) SpoofguardProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentSecurityProfile) *string { return v.SpoofguardProfilePath }).(pulumi.StringPtrOutput)
}

type PolicySegmentSecurityProfilePtrOutput struct{ *pulumi.OutputState }

func (PolicySegmentSecurityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentSecurityProfile)(nil)).Elem()
}

func (o PolicySegmentSecurityProfilePtrOutput) ToPolicySegmentSecurityProfilePtrOutput() PolicySegmentSecurityProfilePtrOutput {
	return o
}

func (o PolicySegmentSecurityProfilePtrOutput) ToPolicySegmentSecurityProfilePtrOutputWithContext(ctx context.Context) PolicySegmentSecurityProfilePtrOutput {
	return o
}

func (o PolicySegmentSecurityProfilePtrOutput) Elem() PolicySegmentSecurityProfileOutput {
	return o.ApplyT(func(v *PolicySegmentSecurityProfile) PolicySegmentSecurityProfile { return *v }).(PolicySegmentSecurityProfileOutput)
}

func (o PolicySegmentSecurityProfilePtrOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentSecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.BindingMapPath
	}).(pulumi.StringPtrOutput)
}

func (o PolicySegmentSecurityProfilePtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySegmentSecurityProfile) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

func (o PolicySegmentSecurityProfilePtrOutput) SecurityProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentSecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.SecurityProfilePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicySegmentSecurityProfilePtrOutput) SpoofguardProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentSecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.SpoofguardProfilePath
	}).(pulumi.StringPtrOutput)
}

type PolicySegmentSubnet struct {
	Cidr         string                           `pulumi:"cidr"`
	DhcpRanges   []string                         `pulumi:"dhcpRanges"`
	DhcpV4Config *PolicySegmentSubnetDhcpV4Config `pulumi:"dhcpV4Config"`
	DhcpV6Config *PolicySegmentSubnetDhcpV6Config `pulumi:"dhcpV6Config"`
	Network      *string                          `pulumi:"network"`
}

// PolicySegmentSubnetInput is an input type that accepts PolicySegmentSubnetArgs and PolicySegmentSubnetOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetInput` via:
//
//          PolicySegmentSubnetArgs{...}
type PolicySegmentSubnetInput interface {
	pulumi.Input

	ToPolicySegmentSubnetOutput() PolicySegmentSubnetOutput
	ToPolicySegmentSubnetOutputWithContext(context.Context) PolicySegmentSubnetOutput
}

type PolicySegmentSubnetArgs struct {
	Cidr         pulumi.StringInput                      `pulumi:"cidr"`
	DhcpRanges   pulumi.StringArrayInput                 `pulumi:"dhcpRanges"`
	DhcpV4Config PolicySegmentSubnetDhcpV4ConfigPtrInput `pulumi:"dhcpV4Config"`
	DhcpV6Config PolicySegmentSubnetDhcpV6ConfigPtrInput `pulumi:"dhcpV6Config"`
	Network      pulumi.StringPtrInput                   `pulumi:"network"`
}

func (PolicySegmentSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnet)(nil)).Elem()
}

func (i PolicySegmentSubnetArgs) ToPolicySegmentSubnetOutput() PolicySegmentSubnetOutput {
	return i.ToPolicySegmentSubnetOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetArgs) ToPolicySegmentSubnetOutputWithContext(ctx context.Context) PolicySegmentSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetOutput)
}

// PolicySegmentSubnetArrayInput is an input type that accepts PolicySegmentSubnetArray and PolicySegmentSubnetArrayOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetArrayInput` via:
//
//          PolicySegmentSubnetArray{ PolicySegmentSubnetArgs{...} }
type PolicySegmentSubnetArrayInput interface {
	pulumi.Input

	ToPolicySegmentSubnetArrayOutput() PolicySegmentSubnetArrayOutput
	ToPolicySegmentSubnetArrayOutputWithContext(context.Context) PolicySegmentSubnetArrayOutput
}

type PolicySegmentSubnetArray []PolicySegmentSubnetInput

func (PolicySegmentSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySegmentSubnet)(nil)).Elem()
}

func (i PolicySegmentSubnetArray) ToPolicySegmentSubnetArrayOutput() PolicySegmentSubnetArrayOutput {
	return i.ToPolicySegmentSubnetArrayOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetArray) ToPolicySegmentSubnetArrayOutputWithContext(ctx context.Context) PolicySegmentSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetArrayOutput)
}

type PolicySegmentSubnetOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnet)(nil)).Elem()
}

func (o PolicySegmentSubnetOutput) ToPolicySegmentSubnetOutput() PolicySegmentSubnetOutput {
	return o
}

func (o PolicySegmentSubnetOutput) ToPolicySegmentSubnetOutputWithContext(ctx context.Context) PolicySegmentSubnetOutput {
	return o
}

func (o PolicySegmentSubnetOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySegmentSubnet) string { return v.Cidr }).(pulumi.StringOutput)
}

func (o PolicySegmentSubnetOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySegmentSubnet) []string { return v.DhcpRanges }).(pulumi.StringArrayOutput)
}

func (o PolicySegmentSubnetOutput) DhcpV4Config() PolicySegmentSubnetDhcpV4ConfigPtrOutput {
	return o.ApplyT(func(v PolicySegmentSubnet) *PolicySegmentSubnetDhcpV4Config { return v.DhcpV4Config }).(PolicySegmentSubnetDhcpV4ConfigPtrOutput)
}

func (o PolicySegmentSubnetOutput) DhcpV6Config() PolicySegmentSubnetDhcpV6ConfigPtrOutput {
	return o.ApplyT(func(v PolicySegmentSubnet) *PolicySegmentSubnetDhcpV6Config { return v.DhcpV6Config }).(PolicySegmentSubnetDhcpV6ConfigPtrOutput)
}

func (o PolicySegmentSubnetOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentSubnet) *string { return v.Network }).(pulumi.StringPtrOutput)
}

type PolicySegmentSubnetArrayOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySegmentSubnet)(nil)).Elem()
}

func (o PolicySegmentSubnetArrayOutput) ToPolicySegmentSubnetArrayOutput() PolicySegmentSubnetArrayOutput {
	return o
}

func (o PolicySegmentSubnetArrayOutput) ToPolicySegmentSubnetArrayOutputWithContext(ctx context.Context) PolicySegmentSubnetArrayOutput {
	return o
}

func (o PolicySegmentSubnetArrayOutput) Index(i pulumi.IntInput) PolicySegmentSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySegmentSubnet {
		return vs[0].([]PolicySegmentSubnet)[vs[1].(int)]
	}).(PolicySegmentSubnetOutput)
}

type PolicySegmentSubnetDhcpV4Config struct {
	DhcpGenericOptions []PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption `pulumi:"dhcpGenericOptions"`
	DhcpOption121s     []PolicySegmentSubnetDhcpV4ConfigDhcpOption121     `pulumi:"dhcpOption121s"`
	DnsServers         []string                                           `pulumi:"dnsServers"`
	LeaseTime          *int                                               `pulumi:"leaseTime"`
	ServerAddress      *string                                            `pulumi:"serverAddress"`
}

// PolicySegmentSubnetDhcpV4ConfigInput is an input type that accepts PolicySegmentSubnetDhcpV4ConfigArgs and PolicySegmentSubnetDhcpV4ConfigOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetDhcpV4ConfigInput` via:
//
//          PolicySegmentSubnetDhcpV4ConfigArgs{...}
type PolicySegmentSubnetDhcpV4ConfigInput interface {
	pulumi.Input

	ToPolicySegmentSubnetDhcpV4ConfigOutput() PolicySegmentSubnetDhcpV4ConfigOutput
	ToPolicySegmentSubnetDhcpV4ConfigOutputWithContext(context.Context) PolicySegmentSubnetDhcpV4ConfigOutput
}

type PolicySegmentSubnetDhcpV4ConfigArgs struct {
	DhcpGenericOptions PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayInput `pulumi:"dhcpGenericOptions"`
	DhcpOption121s     PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayInput     `pulumi:"dhcpOption121s"`
	DnsServers         pulumi.StringArrayInput                                    `pulumi:"dnsServers"`
	LeaseTime          pulumi.IntPtrInput                                         `pulumi:"leaseTime"`
	ServerAddress      pulumi.StringPtrInput                                      `pulumi:"serverAddress"`
}

func (PolicySegmentSubnetDhcpV4ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnetDhcpV4Config)(nil)).Elem()
}

func (i PolicySegmentSubnetDhcpV4ConfigArgs) ToPolicySegmentSubnetDhcpV4ConfigOutput() PolicySegmentSubnetDhcpV4ConfigOutput {
	return i.ToPolicySegmentSubnetDhcpV4ConfigOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetDhcpV4ConfigArgs) ToPolicySegmentSubnetDhcpV4ConfigOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV4ConfigOutput)
}

func (i PolicySegmentSubnetDhcpV4ConfigArgs) ToPolicySegmentSubnetDhcpV4ConfigPtrOutput() PolicySegmentSubnetDhcpV4ConfigPtrOutput {
	return i.ToPolicySegmentSubnetDhcpV4ConfigPtrOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetDhcpV4ConfigArgs) ToPolicySegmentSubnetDhcpV4ConfigPtrOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV4ConfigOutput).ToPolicySegmentSubnetDhcpV4ConfigPtrOutputWithContext(ctx)
}

// PolicySegmentSubnetDhcpV4ConfigPtrInput is an input type that accepts PolicySegmentSubnetDhcpV4ConfigArgs, PolicySegmentSubnetDhcpV4ConfigPtr and PolicySegmentSubnetDhcpV4ConfigPtrOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetDhcpV4ConfigPtrInput` via:
//
//          PolicySegmentSubnetDhcpV4ConfigArgs{...}
//
//  or:
//
//          nil
type PolicySegmentSubnetDhcpV4ConfigPtrInput interface {
	pulumi.Input

	ToPolicySegmentSubnetDhcpV4ConfigPtrOutput() PolicySegmentSubnetDhcpV4ConfigPtrOutput
	ToPolicySegmentSubnetDhcpV4ConfigPtrOutputWithContext(context.Context) PolicySegmentSubnetDhcpV4ConfigPtrOutput
}

type policySegmentSubnetDhcpV4ConfigPtrType PolicySegmentSubnetDhcpV4ConfigArgs

func PolicySegmentSubnetDhcpV4ConfigPtr(v *PolicySegmentSubnetDhcpV4ConfigArgs) PolicySegmentSubnetDhcpV4ConfigPtrInput {
	return (*policySegmentSubnetDhcpV4ConfigPtrType)(v)
}

func (*policySegmentSubnetDhcpV4ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentSubnetDhcpV4Config)(nil)).Elem()
}

func (i *policySegmentSubnetDhcpV4ConfigPtrType) ToPolicySegmentSubnetDhcpV4ConfigPtrOutput() PolicySegmentSubnetDhcpV4ConfigPtrOutput {
	return i.ToPolicySegmentSubnetDhcpV4ConfigPtrOutputWithContext(context.Background())
}

func (i *policySegmentSubnetDhcpV4ConfigPtrType) ToPolicySegmentSubnetDhcpV4ConfigPtrOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV4ConfigPtrOutput)
}

type PolicySegmentSubnetDhcpV4ConfigOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetDhcpV4ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnetDhcpV4Config)(nil)).Elem()
}

func (o PolicySegmentSubnetDhcpV4ConfigOutput) ToPolicySegmentSubnetDhcpV4ConfigOutput() PolicySegmentSubnetDhcpV4ConfigOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigOutput) ToPolicySegmentSubnetDhcpV4ConfigOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigOutput) ToPolicySegmentSubnetDhcpV4ConfigPtrOutput() PolicySegmentSubnetDhcpV4ConfigPtrOutput {
	return o.ToPolicySegmentSubnetDhcpV4ConfigPtrOutputWithContext(context.Background())
}

func (o PolicySegmentSubnetDhcpV4ConfigOutput) ToPolicySegmentSubnetDhcpV4ConfigPtrOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigPtrOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV4Config) *PolicySegmentSubnetDhcpV4Config {
		return &v
	}).(PolicySegmentSubnetDhcpV4ConfigPtrOutput)
}
func (o PolicySegmentSubnetDhcpV4ConfigOutput) DhcpGenericOptions() PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV4Config) []PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption {
		return v.DhcpGenericOptions
	}).(PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigOutput) DhcpOption121s() PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV4Config) []PolicySegmentSubnetDhcpV4ConfigDhcpOption121 {
		return v.DhcpOption121s
	}).(PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV4Config) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV4Config) *int { return v.LeaseTime }).(pulumi.IntPtrOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV4Config) *string { return v.ServerAddress }).(pulumi.StringPtrOutput)
}

type PolicySegmentSubnetDhcpV4ConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetDhcpV4ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentSubnetDhcpV4Config)(nil)).Elem()
}

func (o PolicySegmentSubnetDhcpV4ConfigPtrOutput) ToPolicySegmentSubnetDhcpV4ConfigPtrOutput() PolicySegmentSubnetDhcpV4ConfigPtrOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigPtrOutput) ToPolicySegmentSubnetDhcpV4ConfigPtrOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigPtrOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigPtrOutput) Elem() PolicySegmentSubnetDhcpV4ConfigOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV4Config) PolicySegmentSubnetDhcpV4Config { return *v }).(PolicySegmentSubnetDhcpV4ConfigOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigPtrOutput) DhcpGenericOptions() PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV4Config) []PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption {
		if v == nil {
			return nil
		}
		return v.DhcpGenericOptions
	}).(PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigPtrOutput) DhcpOption121s() PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV4Config) []PolicySegmentSubnetDhcpV4ConfigDhcpOption121 {
		if v == nil {
			return nil
		}
		return v.DhcpOption121s
	}).(PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV4Config) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigPtrOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV4Config) *int {
		if v == nil {
			return nil
		}
		return v.LeaseTime
	}).(pulumi.IntPtrOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigPtrOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV4Config) *string {
		if v == nil {
			return nil
		}
		return v.ServerAddress
	}).(pulumi.StringPtrOutput)
}

type PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption struct {
	Code   int      `pulumi:"code"`
	Values []string `pulumi:"values"`
}

// PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionInput is an input type that accepts PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs and PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionInput` via:
//
//          PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs{...}
type PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionInput interface {
	pulumi.Input

	ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput() PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput
	ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutputWithContext(context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput
}

type PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs struct {
	Code   pulumi.IntInput         `pulumi:"code"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption)(nil)).Elem()
}

func (i PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs) ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput() PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput {
	return i.ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs) ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput)
}

// PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayInput is an input type that accepts PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArray and PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayInput` via:
//
//          PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArray{ PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs{...} }
type PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayInput interface {
	pulumi.Input

	ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput() PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput
	ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutputWithContext(context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput
}

type PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArray []PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionInput

func (PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption)(nil)).Elem()
}

func (i PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArray) ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput() PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return i.ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArray) ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput)
}

type PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption)(nil)).Elem()
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput) ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput() PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput) ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption) int { return v.Code }).(pulumi.IntOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption)(nil)).Elem()
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput) ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput() PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput) ToPolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput) Index(i pulumi.IntInput) PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption {
		return vs[0].([]PolicySegmentSubnetDhcpV4ConfigDhcpGenericOption)[vs[1].(int)]
	}).(PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput)
}

type PolicySegmentSubnetDhcpV4ConfigDhcpOption121 struct {
	Network string `pulumi:"network"`
	NextHop string `pulumi:"nextHop"`
}

// PolicySegmentSubnetDhcpV4ConfigDhcpOption121Input is an input type that accepts PolicySegmentSubnetDhcpV4ConfigDhcpOption121Args and PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output values.
// You can construct a concrete instance of `PolicySegmentSubnetDhcpV4ConfigDhcpOption121Input` via:
//
//          PolicySegmentSubnetDhcpV4ConfigDhcpOption121Args{...}
type PolicySegmentSubnetDhcpV4ConfigDhcpOption121Input interface {
	pulumi.Input

	ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121Output() PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output
	ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121OutputWithContext(context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output
}

type PolicySegmentSubnetDhcpV4ConfigDhcpOption121Args struct {
	Network pulumi.StringInput `pulumi:"network"`
	NextHop pulumi.StringInput `pulumi:"nextHop"`
}

func (PolicySegmentSubnetDhcpV4ConfigDhcpOption121Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnetDhcpV4ConfigDhcpOption121)(nil)).Elem()
}

func (i PolicySegmentSubnetDhcpV4ConfigDhcpOption121Args) ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121Output() PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output {
	return i.ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121OutputWithContext(context.Background())
}

func (i PolicySegmentSubnetDhcpV4ConfigDhcpOption121Args) ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121OutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output)
}

// PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayInput is an input type that accepts PolicySegmentSubnetDhcpV4ConfigDhcpOption121Array and PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayInput` via:
//
//          PolicySegmentSubnetDhcpV4ConfigDhcpOption121Array{ PolicySegmentSubnetDhcpV4ConfigDhcpOption121Args{...} }
type PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayInput interface {
	pulumi.Input

	ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput() PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput
	ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutputWithContext(context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput
}

type PolicySegmentSubnetDhcpV4ConfigDhcpOption121Array []PolicySegmentSubnetDhcpV4ConfigDhcpOption121Input

func (PolicySegmentSubnetDhcpV4ConfigDhcpOption121Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySegmentSubnetDhcpV4ConfigDhcpOption121)(nil)).Elem()
}

func (i PolicySegmentSubnetDhcpV4ConfigDhcpOption121Array) ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput() PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return i.ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetDhcpV4ConfigDhcpOption121Array) ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput)
}

type PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output struct{ *pulumi.OutputState }

func (PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnetDhcpV4ConfigDhcpOption121)(nil)).Elem()
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output) ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121Output() PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output) ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121OutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output) Network() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV4ConfigDhcpOption121) string { return v.Network }).(pulumi.StringOutput)
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV4ConfigDhcpOption121) string { return v.NextHop }).(pulumi.StringOutput)
}

type PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySegmentSubnetDhcpV4ConfigDhcpOption121)(nil)).Elem()
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput) ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput() PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput) ToPolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput) Index(i pulumi.IntInput) PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySegmentSubnetDhcpV4ConfigDhcpOption121 {
		return vs[0].([]PolicySegmentSubnetDhcpV4ConfigDhcpOption121)[vs[1].(int)]
	}).(PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output)
}

type PolicySegmentSubnetDhcpV6Config struct {
	DnsServers     []string                                       `pulumi:"dnsServers"`
	DomainNames    []string                                       `pulumi:"domainNames"`
	ExcludedRanges []PolicySegmentSubnetDhcpV6ConfigExcludedRange `pulumi:"excludedRanges"`
	LeaseTime      *int                                           `pulumi:"leaseTime"`
	PreferredTime  *int                                           `pulumi:"preferredTime"`
	ServerAddress  *string                                        `pulumi:"serverAddress"`
	SntpServers    []string                                       `pulumi:"sntpServers"`
}

// PolicySegmentSubnetDhcpV6ConfigInput is an input type that accepts PolicySegmentSubnetDhcpV6ConfigArgs and PolicySegmentSubnetDhcpV6ConfigOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetDhcpV6ConfigInput` via:
//
//          PolicySegmentSubnetDhcpV6ConfigArgs{...}
type PolicySegmentSubnetDhcpV6ConfigInput interface {
	pulumi.Input

	ToPolicySegmentSubnetDhcpV6ConfigOutput() PolicySegmentSubnetDhcpV6ConfigOutput
	ToPolicySegmentSubnetDhcpV6ConfigOutputWithContext(context.Context) PolicySegmentSubnetDhcpV6ConfigOutput
}

type PolicySegmentSubnetDhcpV6ConfigArgs struct {
	DnsServers     pulumi.StringArrayInput                                `pulumi:"dnsServers"`
	DomainNames    pulumi.StringArrayInput                                `pulumi:"domainNames"`
	ExcludedRanges PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayInput `pulumi:"excludedRanges"`
	LeaseTime      pulumi.IntPtrInput                                     `pulumi:"leaseTime"`
	PreferredTime  pulumi.IntPtrInput                                     `pulumi:"preferredTime"`
	ServerAddress  pulumi.StringPtrInput                                  `pulumi:"serverAddress"`
	SntpServers    pulumi.StringArrayInput                                `pulumi:"sntpServers"`
}

func (PolicySegmentSubnetDhcpV6ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnetDhcpV6Config)(nil)).Elem()
}

func (i PolicySegmentSubnetDhcpV6ConfigArgs) ToPolicySegmentSubnetDhcpV6ConfigOutput() PolicySegmentSubnetDhcpV6ConfigOutput {
	return i.ToPolicySegmentSubnetDhcpV6ConfigOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetDhcpV6ConfigArgs) ToPolicySegmentSubnetDhcpV6ConfigOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV6ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV6ConfigOutput)
}

func (i PolicySegmentSubnetDhcpV6ConfigArgs) ToPolicySegmentSubnetDhcpV6ConfigPtrOutput() PolicySegmentSubnetDhcpV6ConfigPtrOutput {
	return i.ToPolicySegmentSubnetDhcpV6ConfigPtrOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetDhcpV6ConfigArgs) ToPolicySegmentSubnetDhcpV6ConfigPtrOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV6ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV6ConfigOutput).ToPolicySegmentSubnetDhcpV6ConfigPtrOutputWithContext(ctx)
}

// PolicySegmentSubnetDhcpV6ConfigPtrInput is an input type that accepts PolicySegmentSubnetDhcpV6ConfigArgs, PolicySegmentSubnetDhcpV6ConfigPtr and PolicySegmentSubnetDhcpV6ConfigPtrOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetDhcpV6ConfigPtrInput` via:
//
//          PolicySegmentSubnetDhcpV6ConfigArgs{...}
//
//  or:
//
//          nil
type PolicySegmentSubnetDhcpV6ConfigPtrInput interface {
	pulumi.Input

	ToPolicySegmentSubnetDhcpV6ConfigPtrOutput() PolicySegmentSubnetDhcpV6ConfigPtrOutput
	ToPolicySegmentSubnetDhcpV6ConfigPtrOutputWithContext(context.Context) PolicySegmentSubnetDhcpV6ConfigPtrOutput
}

type policySegmentSubnetDhcpV6ConfigPtrType PolicySegmentSubnetDhcpV6ConfigArgs

func PolicySegmentSubnetDhcpV6ConfigPtr(v *PolicySegmentSubnetDhcpV6ConfigArgs) PolicySegmentSubnetDhcpV6ConfigPtrInput {
	return (*policySegmentSubnetDhcpV6ConfigPtrType)(v)
}

func (*policySegmentSubnetDhcpV6ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentSubnetDhcpV6Config)(nil)).Elem()
}

func (i *policySegmentSubnetDhcpV6ConfigPtrType) ToPolicySegmentSubnetDhcpV6ConfigPtrOutput() PolicySegmentSubnetDhcpV6ConfigPtrOutput {
	return i.ToPolicySegmentSubnetDhcpV6ConfigPtrOutputWithContext(context.Background())
}

func (i *policySegmentSubnetDhcpV6ConfigPtrType) ToPolicySegmentSubnetDhcpV6ConfigPtrOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV6ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV6ConfigPtrOutput)
}

type PolicySegmentSubnetDhcpV6ConfigOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetDhcpV6ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnetDhcpV6Config)(nil)).Elem()
}

func (o PolicySegmentSubnetDhcpV6ConfigOutput) ToPolicySegmentSubnetDhcpV6ConfigOutput() PolicySegmentSubnetDhcpV6ConfigOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV6ConfigOutput) ToPolicySegmentSubnetDhcpV6ConfigOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV6ConfigOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV6ConfigOutput) ToPolicySegmentSubnetDhcpV6ConfigPtrOutput() PolicySegmentSubnetDhcpV6ConfigPtrOutput {
	return o.ToPolicySegmentSubnetDhcpV6ConfigPtrOutputWithContext(context.Background())
}

func (o PolicySegmentSubnetDhcpV6ConfigOutput) ToPolicySegmentSubnetDhcpV6ConfigPtrOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV6ConfigPtrOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV6Config) *PolicySegmentSubnetDhcpV6Config {
		return &v
	}).(PolicySegmentSubnetDhcpV6ConfigPtrOutput)
}
func (o PolicySegmentSubnetDhcpV6ConfigOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV6Config) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV6Config) []string { return v.DomainNames }).(pulumi.StringArrayOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigOutput) ExcludedRanges() PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV6Config) []PolicySegmentSubnetDhcpV6ConfigExcludedRange {
		return v.ExcludedRanges
	}).(PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV6Config) *int { return v.LeaseTime }).(pulumi.IntPtrOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigOutput) PreferredTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV6Config) *int { return v.PreferredTime }).(pulumi.IntPtrOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV6Config) *string { return v.ServerAddress }).(pulumi.StringPtrOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigOutput) SntpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV6Config) []string { return v.SntpServers }).(pulumi.StringArrayOutput)
}

type PolicySegmentSubnetDhcpV6ConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetDhcpV6ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySegmentSubnetDhcpV6Config)(nil)).Elem()
}

func (o PolicySegmentSubnetDhcpV6ConfigPtrOutput) ToPolicySegmentSubnetDhcpV6ConfigPtrOutput() PolicySegmentSubnetDhcpV6ConfigPtrOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV6ConfigPtrOutput) ToPolicySegmentSubnetDhcpV6ConfigPtrOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV6ConfigPtrOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV6ConfigPtrOutput) Elem() PolicySegmentSubnetDhcpV6ConfigOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV6Config) PolicySegmentSubnetDhcpV6Config { return *v }).(PolicySegmentSubnetDhcpV6ConfigOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV6Config) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigPtrOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV6Config) []string {
		if v == nil {
			return nil
		}
		return v.DomainNames
	}).(pulumi.StringArrayOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigPtrOutput) ExcludedRanges() PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV6Config) []PolicySegmentSubnetDhcpV6ConfigExcludedRange {
		if v == nil {
			return nil
		}
		return v.ExcludedRanges
	}).(PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigPtrOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV6Config) *int {
		if v == nil {
			return nil
		}
		return v.LeaseTime
	}).(pulumi.IntPtrOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigPtrOutput) PreferredTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV6Config) *int {
		if v == nil {
			return nil
		}
		return v.PreferredTime
	}).(pulumi.IntPtrOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigPtrOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV6Config) *string {
		if v == nil {
			return nil
		}
		return v.ServerAddress
	}).(pulumi.StringPtrOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigPtrOutput) SntpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicySegmentSubnetDhcpV6Config) []string {
		if v == nil {
			return nil
		}
		return v.SntpServers
	}).(pulumi.StringArrayOutput)
}

type PolicySegmentSubnetDhcpV6ConfigExcludedRange struct {
	End   string `pulumi:"end"`
	Start string `pulumi:"start"`
}

// PolicySegmentSubnetDhcpV6ConfigExcludedRangeInput is an input type that accepts PolicySegmentSubnetDhcpV6ConfigExcludedRangeArgs and PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetDhcpV6ConfigExcludedRangeInput` via:
//
//          PolicySegmentSubnetDhcpV6ConfigExcludedRangeArgs{...}
type PolicySegmentSubnetDhcpV6ConfigExcludedRangeInput interface {
	pulumi.Input

	ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput() PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput
	ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeOutputWithContext(context.Context) PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput
}

type PolicySegmentSubnetDhcpV6ConfigExcludedRangeArgs struct {
	End   pulumi.StringInput `pulumi:"end"`
	Start pulumi.StringInput `pulumi:"start"`
}

func (PolicySegmentSubnetDhcpV6ConfigExcludedRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnetDhcpV6ConfigExcludedRange)(nil)).Elem()
}

func (i PolicySegmentSubnetDhcpV6ConfigExcludedRangeArgs) ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput() PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput {
	return i.ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetDhcpV6ConfigExcludedRangeArgs) ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput)
}

// PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayInput is an input type that accepts PolicySegmentSubnetDhcpV6ConfigExcludedRangeArray and PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput values.
// You can construct a concrete instance of `PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayInput` via:
//
//          PolicySegmentSubnetDhcpV6ConfigExcludedRangeArray{ PolicySegmentSubnetDhcpV6ConfigExcludedRangeArgs{...} }
type PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayInput interface {
	pulumi.Input

	ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput() PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput
	ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutputWithContext(context.Context) PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput
}

type PolicySegmentSubnetDhcpV6ConfigExcludedRangeArray []PolicySegmentSubnetDhcpV6ConfigExcludedRangeInput

func (PolicySegmentSubnetDhcpV6ConfigExcludedRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySegmentSubnetDhcpV6ConfigExcludedRange)(nil)).Elem()
}

func (i PolicySegmentSubnetDhcpV6ConfigExcludedRangeArray) ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput() PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return i.ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutputWithContext(context.Background())
}

func (i PolicySegmentSubnetDhcpV6ConfigExcludedRangeArray) ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput)
}

type PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentSubnetDhcpV6ConfigExcludedRange)(nil)).Elem()
}

func (o PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput) ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput() PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput) ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV6ConfigExcludedRange) string { return v.End }).(pulumi.StringOutput)
}

func (o PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySegmentSubnetDhcpV6ConfigExcludedRange) string { return v.Start }).(pulumi.StringOutput)
}

type PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput struct{ *pulumi.OutputState }

func (PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySegmentSubnetDhcpV6ConfigExcludedRange)(nil)).Elem()
}

func (o PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput) ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput() PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput) ToPolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutputWithContext(ctx context.Context) PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return o
}

func (o PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput) Index(i pulumi.IntInput) PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySegmentSubnetDhcpV6ConfigExcludedRange {
		return vs[0].([]PolicySegmentSubnetDhcpV6ConfigExcludedRange)[vs[1].(int)]
	}).(PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput)
}

type PolicySegmentTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicySegmentTagInput is an input type that accepts PolicySegmentTagArgs and PolicySegmentTagOutput values.
// You can construct a concrete instance of `PolicySegmentTagInput` via:
//
//          PolicySegmentTagArgs{...}
type PolicySegmentTagInput interface {
	pulumi.Input

	ToPolicySegmentTagOutput() PolicySegmentTagOutput
	ToPolicySegmentTagOutputWithContext(context.Context) PolicySegmentTagOutput
}

type PolicySegmentTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicySegmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentTag)(nil)).Elem()
}

func (i PolicySegmentTagArgs) ToPolicySegmentTagOutput() PolicySegmentTagOutput {
	return i.ToPolicySegmentTagOutputWithContext(context.Background())
}

func (i PolicySegmentTagArgs) ToPolicySegmentTagOutputWithContext(ctx context.Context) PolicySegmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentTagOutput)
}

// PolicySegmentTagArrayInput is an input type that accepts PolicySegmentTagArray and PolicySegmentTagArrayOutput values.
// You can construct a concrete instance of `PolicySegmentTagArrayInput` via:
//
//          PolicySegmentTagArray{ PolicySegmentTagArgs{...} }
type PolicySegmentTagArrayInput interface {
	pulumi.Input

	ToPolicySegmentTagArrayOutput() PolicySegmentTagArrayOutput
	ToPolicySegmentTagArrayOutputWithContext(context.Context) PolicySegmentTagArrayOutput
}

type PolicySegmentTagArray []PolicySegmentTagInput

func (PolicySegmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySegmentTag)(nil)).Elem()
}

func (i PolicySegmentTagArray) ToPolicySegmentTagArrayOutput() PolicySegmentTagArrayOutput {
	return i.ToPolicySegmentTagArrayOutputWithContext(context.Background())
}

func (i PolicySegmentTagArray) ToPolicySegmentTagArrayOutputWithContext(ctx context.Context) PolicySegmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySegmentTagArrayOutput)
}

type PolicySegmentTagOutput struct{ *pulumi.OutputState }

func (PolicySegmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySegmentTag)(nil)).Elem()
}

func (o PolicySegmentTagOutput) ToPolicySegmentTagOutput() PolicySegmentTagOutput {
	return o
}

func (o PolicySegmentTagOutput) ToPolicySegmentTagOutputWithContext(ctx context.Context) PolicySegmentTagOutput {
	return o
}

func (o PolicySegmentTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicySegmentTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySegmentTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicySegmentTagArrayOutput struct{ *pulumi.OutputState }

func (PolicySegmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySegmentTag)(nil)).Elem()
}

func (o PolicySegmentTagArrayOutput) ToPolicySegmentTagArrayOutput() PolicySegmentTagArrayOutput {
	return o
}

func (o PolicySegmentTagArrayOutput) ToPolicySegmentTagArrayOutputWithContext(ctx context.Context) PolicySegmentTagArrayOutput {
	return o
}

func (o PolicySegmentTagArrayOutput) Index(i pulumi.IntInput) PolicySegmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySegmentTag {
		return vs[0].([]PolicySegmentTag)[vs[1].(int)]
	}).(PolicySegmentTagOutput)
}

type PolicyServiceAlgorithmEntry struct {
	Algorithm       string   `pulumi:"algorithm"`
	Description     *string  `pulumi:"description"`
	DestinationPort string   `pulumi:"destinationPort"`
	DisplayName     *string  `pulumi:"displayName"`
	SourcePorts     []string `pulumi:"sourcePorts"`
}

// PolicyServiceAlgorithmEntryInput is an input type that accepts PolicyServiceAlgorithmEntryArgs and PolicyServiceAlgorithmEntryOutput values.
// You can construct a concrete instance of `PolicyServiceAlgorithmEntryInput` via:
//
//          PolicyServiceAlgorithmEntryArgs{...}
type PolicyServiceAlgorithmEntryInput interface {
	pulumi.Input

	ToPolicyServiceAlgorithmEntryOutput() PolicyServiceAlgorithmEntryOutput
	ToPolicyServiceAlgorithmEntryOutputWithContext(context.Context) PolicyServiceAlgorithmEntryOutput
}

type PolicyServiceAlgorithmEntryArgs struct {
	Algorithm       pulumi.StringInput      `pulumi:"algorithm"`
	Description     pulumi.StringPtrInput   `pulumi:"description"`
	DestinationPort pulumi.StringInput      `pulumi:"destinationPort"`
	DisplayName     pulumi.StringPtrInput   `pulumi:"displayName"`
	SourcePorts     pulumi.StringArrayInput `pulumi:"sourcePorts"`
}

func (PolicyServiceAlgorithmEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceAlgorithmEntry)(nil)).Elem()
}

func (i PolicyServiceAlgorithmEntryArgs) ToPolicyServiceAlgorithmEntryOutput() PolicyServiceAlgorithmEntryOutput {
	return i.ToPolicyServiceAlgorithmEntryOutputWithContext(context.Background())
}

func (i PolicyServiceAlgorithmEntryArgs) ToPolicyServiceAlgorithmEntryOutputWithContext(ctx context.Context) PolicyServiceAlgorithmEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceAlgorithmEntryOutput)
}

// PolicyServiceAlgorithmEntryArrayInput is an input type that accepts PolicyServiceAlgorithmEntryArray and PolicyServiceAlgorithmEntryArrayOutput values.
// You can construct a concrete instance of `PolicyServiceAlgorithmEntryArrayInput` via:
//
//          PolicyServiceAlgorithmEntryArray{ PolicyServiceAlgorithmEntryArgs{...} }
type PolicyServiceAlgorithmEntryArrayInput interface {
	pulumi.Input

	ToPolicyServiceAlgorithmEntryArrayOutput() PolicyServiceAlgorithmEntryArrayOutput
	ToPolicyServiceAlgorithmEntryArrayOutputWithContext(context.Context) PolicyServiceAlgorithmEntryArrayOutput
}

type PolicyServiceAlgorithmEntryArray []PolicyServiceAlgorithmEntryInput

func (PolicyServiceAlgorithmEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceAlgorithmEntry)(nil)).Elem()
}

func (i PolicyServiceAlgorithmEntryArray) ToPolicyServiceAlgorithmEntryArrayOutput() PolicyServiceAlgorithmEntryArrayOutput {
	return i.ToPolicyServiceAlgorithmEntryArrayOutputWithContext(context.Background())
}

func (i PolicyServiceAlgorithmEntryArray) ToPolicyServiceAlgorithmEntryArrayOutputWithContext(ctx context.Context) PolicyServiceAlgorithmEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceAlgorithmEntryArrayOutput)
}

type PolicyServiceAlgorithmEntryOutput struct{ *pulumi.OutputState }

func (PolicyServiceAlgorithmEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceAlgorithmEntry)(nil)).Elem()
}

func (o PolicyServiceAlgorithmEntryOutput) ToPolicyServiceAlgorithmEntryOutput() PolicyServiceAlgorithmEntryOutput {
	return o
}

func (o PolicyServiceAlgorithmEntryOutput) ToPolicyServiceAlgorithmEntryOutputWithContext(ctx context.Context) PolicyServiceAlgorithmEntryOutput {
	return o
}

func (o PolicyServiceAlgorithmEntryOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyServiceAlgorithmEntry) string { return v.Algorithm }).(pulumi.StringOutput)
}

func (o PolicyServiceAlgorithmEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceAlgorithmEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceAlgorithmEntryOutput) DestinationPort() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyServiceAlgorithmEntry) string { return v.DestinationPort }).(pulumi.StringOutput)
}

func (o PolicyServiceAlgorithmEntryOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceAlgorithmEntry) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceAlgorithmEntryOutput) SourcePorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyServiceAlgorithmEntry) []string { return v.SourcePorts }).(pulumi.StringArrayOutput)
}

type PolicyServiceAlgorithmEntryArrayOutput struct{ *pulumi.OutputState }

func (PolicyServiceAlgorithmEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceAlgorithmEntry)(nil)).Elem()
}

func (o PolicyServiceAlgorithmEntryArrayOutput) ToPolicyServiceAlgorithmEntryArrayOutput() PolicyServiceAlgorithmEntryArrayOutput {
	return o
}

func (o PolicyServiceAlgorithmEntryArrayOutput) ToPolicyServiceAlgorithmEntryArrayOutputWithContext(ctx context.Context) PolicyServiceAlgorithmEntryArrayOutput {
	return o
}

func (o PolicyServiceAlgorithmEntryArrayOutput) Index(i pulumi.IntInput) PolicyServiceAlgorithmEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyServiceAlgorithmEntry {
		return vs[0].([]PolicyServiceAlgorithmEntry)[vs[1].(int)]
	}).(PolicyServiceAlgorithmEntryOutput)
}

type PolicyServiceEtherTypeEntry struct {
	Description *string `pulumi:"description"`
	DisplayName *string `pulumi:"displayName"`
	EtherType   int     `pulumi:"etherType"`
}

// PolicyServiceEtherTypeEntryInput is an input type that accepts PolicyServiceEtherTypeEntryArgs and PolicyServiceEtherTypeEntryOutput values.
// You can construct a concrete instance of `PolicyServiceEtherTypeEntryInput` via:
//
//          PolicyServiceEtherTypeEntryArgs{...}
type PolicyServiceEtherTypeEntryInput interface {
	pulumi.Input

	ToPolicyServiceEtherTypeEntryOutput() PolicyServiceEtherTypeEntryOutput
	ToPolicyServiceEtherTypeEntryOutputWithContext(context.Context) PolicyServiceEtherTypeEntryOutput
}

type PolicyServiceEtherTypeEntryArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	EtherType   pulumi.IntInput       `pulumi:"etherType"`
}

func (PolicyServiceEtherTypeEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceEtherTypeEntry)(nil)).Elem()
}

func (i PolicyServiceEtherTypeEntryArgs) ToPolicyServiceEtherTypeEntryOutput() PolicyServiceEtherTypeEntryOutput {
	return i.ToPolicyServiceEtherTypeEntryOutputWithContext(context.Background())
}

func (i PolicyServiceEtherTypeEntryArgs) ToPolicyServiceEtherTypeEntryOutputWithContext(ctx context.Context) PolicyServiceEtherTypeEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceEtherTypeEntryOutput)
}

// PolicyServiceEtherTypeEntryArrayInput is an input type that accepts PolicyServiceEtherTypeEntryArray and PolicyServiceEtherTypeEntryArrayOutput values.
// You can construct a concrete instance of `PolicyServiceEtherTypeEntryArrayInput` via:
//
//          PolicyServiceEtherTypeEntryArray{ PolicyServiceEtherTypeEntryArgs{...} }
type PolicyServiceEtherTypeEntryArrayInput interface {
	pulumi.Input

	ToPolicyServiceEtherTypeEntryArrayOutput() PolicyServiceEtherTypeEntryArrayOutput
	ToPolicyServiceEtherTypeEntryArrayOutputWithContext(context.Context) PolicyServiceEtherTypeEntryArrayOutput
}

type PolicyServiceEtherTypeEntryArray []PolicyServiceEtherTypeEntryInput

func (PolicyServiceEtherTypeEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceEtherTypeEntry)(nil)).Elem()
}

func (i PolicyServiceEtherTypeEntryArray) ToPolicyServiceEtherTypeEntryArrayOutput() PolicyServiceEtherTypeEntryArrayOutput {
	return i.ToPolicyServiceEtherTypeEntryArrayOutputWithContext(context.Background())
}

func (i PolicyServiceEtherTypeEntryArray) ToPolicyServiceEtherTypeEntryArrayOutputWithContext(ctx context.Context) PolicyServiceEtherTypeEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceEtherTypeEntryArrayOutput)
}

type PolicyServiceEtherTypeEntryOutput struct{ *pulumi.OutputState }

func (PolicyServiceEtherTypeEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceEtherTypeEntry)(nil)).Elem()
}

func (o PolicyServiceEtherTypeEntryOutput) ToPolicyServiceEtherTypeEntryOutput() PolicyServiceEtherTypeEntryOutput {
	return o
}

func (o PolicyServiceEtherTypeEntryOutput) ToPolicyServiceEtherTypeEntryOutputWithContext(ctx context.Context) PolicyServiceEtherTypeEntryOutput {
	return o
}

func (o PolicyServiceEtherTypeEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceEtherTypeEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceEtherTypeEntryOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceEtherTypeEntry) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceEtherTypeEntryOutput) EtherType() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyServiceEtherTypeEntry) int { return v.EtherType }).(pulumi.IntOutput)
}

type PolicyServiceEtherTypeEntryArrayOutput struct{ *pulumi.OutputState }

func (PolicyServiceEtherTypeEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceEtherTypeEntry)(nil)).Elem()
}

func (o PolicyServiceEtherTypeEntryArrayOutput) ToPolicyServiceEtherTypeEntryArrayOutput() PolicyServiceEtherTypeEntryArrayOutput {
	return o
}

func (o PolicyServiceEtherTypeEntryArrayOutput) ToPolicyServiceEtherTypeEntryArrayOutputWithContext(ctx context.Context) PolicyServiceEtherTypeEntryArrayOutput {
	return o
}

func (o PolicyServiceEtherTypeEntryArrayOutput) Index(i pulumi.IntInput) PolicyServiceEtherTypeEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyServiceEtherTypeEntry {
		return vs[0].([]PolicyServiceEtherTypeEntry)[vs[1].(int)]
	}).(PolicyServiceEtherTypeEntryOutput)
}

type PolicyServiceIcmpEntry struct {
	Description *string `pulumi:"description"`
	DisplayName *string `pulumi:"displayName"`
	IcmpCode    *string `pulumi:"icmpCode"`
	IcmpType    *string `pulumi:"icmpType"`
	Protocol    string  `pulumi:"protocol"`
}

// PolicyServiceIcmpEntryInput is an input type that accepts PolicyServiceIcmpEntryArgs and PolicyServiceIcmpEntryOutput values.
// You can construct a concrete instance of `PolicyServiceIcmpEntryInput` via:
//
//          PolicyServiceIcmpEntryArgs{...}
type PolicyServiceIcmpEntryInput interface {
	pulumi.Input

	ToPolicyServiceIcmpEntryOutput() PolicyServiceIcmpEntryOutput
	ToPolicyServiceIcmpEntryOutputWithContext(context.Context) PolicyServiceIcmpEntryOutput
}

type PolicyServiceIcmpEntryArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	IcmpCode    pulumi.StringPtrInput `pulumi:"icmpCode"`
	IcmpType    pulumi.StringPtrInput `pulumi:"icmpType"`
	Protocol    pulumi.StringInput    `pulumi:"protocol"`
}

func (PolicyServiceIcmpEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceIcmpEntry)(nil)).Elem()
}

func (i PolicyServiceIcmpEntryArgs) ToPolicyServiceIcmpEntryOutput() PolicyServiceIcmpEntryOutput {
	return i.ToPolicyServiceIcmpEntryOutputWithContext(context.Background())
}

func (i PolicyServiceIcmpEntryArgs) ToPolicyServiceIcmpEntryOutputWithContext(ctx context.Context) PolicyServiceIcmpEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceIcmpEntryOutput)
}

// PolicyServiceIcmpEntryArrayInput is an input type that accepts PolicyServiceIcmpEntryArray and PolicyServiceIcmpEntryArrayOutput values.
// You can construct a concrete instance of `PolicyServiceIcmpEntryArrayInput` via:
//
//          PolicyServiceIcmpEntryArray{ PolicyServiceIcmpEntryArgs{...} }
type PolicyServiceIcmpEntryArrayInput interface {
	pulumi.Input

	ToPolicyServiceIcmpEntryArrayOutput() PolicyServiceIcmpEntryArrayOutput
	ToPolicyServiceIcmpEntryArrayOutputWithContext(context.Context) PolicyServiceIcmpEntryArrayOutput
}

type PolicyServiceIcmpEntryArray []PolicyServiceIcmpEntryInput

func (PolicyServiceIcmpEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceIcmpEntry)(nil)).Elem()
}

func (i PolicyServiceIcmpEntryArray) ToPolicyServiceIcmpEntryArrayOutput() PolicyServiceIcmpEntryArrayOutput {
	return i.ToPolicyServiceIcmpEntryArrayOutputWithContext(context.Background())
}

func (i PolicyServiceIcmpEntryArray) ToPolicyServiceIcmpEntryArrayOutputWithContext(ctx context.Context) PolicyServiceIcmpEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceIcmpEntryArrayOutput)
}

type PolicyServiceIcmpEntryOutput struct{ *pulumi.OutputState }

func (PolicyServiceIcmpEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceIcmpEntry)(nil)).Elem()
}

func (o PolicyServiceIcmpEntryOutput) ToPolicyServiceIcmpEntryOutput() PolicyServiceIcmpEntryOutput {
	return o
}

func (o PolicyServiceIcmpEntryOutput) ToPolicyServiceIcmpEntryOutputWithContext(ctx context.Context) PolicyServiceIcmpEntryOutput {
	return o
}

func (o PolicyServiceIcmpEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceIcmpEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceIcmpEntryOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceIcmpEntry) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceIcmpEntryOutput) IcmpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceIcmpEntry) *string { return v.IcmpCode }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceIcmpEntryOutput) IcmpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceIcmpEntry) *string { return v.IcmpType }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceIcmpEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyServiceIcmpEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

type PolicyServiceIcmpEntryArrayOutput struct{ *pulumi.OutputState }

func (PolicyServiceIcmpEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceIcmpEntry)(nil)).Elem()
}

func (o PolicyServiceIcmpEntryArrayOutput) ToPolicyServiceIcmpEntryArrayOutput() PolicyServiceIcmpEntryArrayOutput {
	return o
}

func (o PolicyServiceIcmpEntryArrayOutput) ToPolicyServiceIcmpEntryArrayOutputWithContext(ctx context.Context) PolicyServiceIcmpEntryArrayOutput {
	return o
}

func (o PolicyServiceIcmpEntryArrayOutput) Index(i pulumi.IntInput) PolicyServiceIcmpEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyServiceIcmpEntry {
		return vs[0].([]PolicyServiceIcmpEntry)[vs[1].(int)]
	}).(PolicyServiceIcmpEntryOutput)
}

type PolicyServiceIgmpEntry struct {
	Description *string `pulumi:"description"`
	DisplayName *string `pulumi:"displayName"`
}

// PolicyServiceIgmpEntryInput is an input type that accepts PolicyServiceIgmpEntryArgs and PolicyServiceIgmpEntryOutput values.
// You can construct a concrete instance of `PolicyServiceIgmpEntryInput` via:
//
//          PolicyServiceIgmpEntryArgs{...}
type PolicyServiceIgmpEntryInput interface {
	pulumi.Input

	ToPolicyServiceIgmpEntryOutput() PolicyServiceIgmpEntryOutput
	ToPolicyServiceIgmpEntryOutputWithContext(context.Context) PolicyServiceIgmpEntryOutput
}

type PolicyServiceIgmpEntryArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (PolicyServiceIgmpEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceIgmpEntry)(nil)).Elem()
}

func (i PolicyServiceIgmpEntryArgs) ToPolicyServiceIgmpEntryOutput() PolicyServiceIgmpEntryOutput {
	return i.ToPolicyServiceIgmpEntryOutputWithContext(context.Background())
}

func (i PolicyServiceIgmpEntryArgs) ToPolicyServiceIgmpEntryOutputWithContext(ctx context.Context) PolicyServiceIgmpEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceIgmpEntryOutput)
}

// PolicyServiceIgmpEntryArrayInput is an input type that accepts PolicyServiceIgmpEntryArray and PolicyServiceIgmpEntryArrayOutput values.
// You can construct a concrete instance of `PolicyServiceIgmpEntryArrayInput` via:
//
//          PolicyServiceIgmpEntryArray{ PolicyServiceIgmpEntryArgs{...} }
type PolicyServiceIgmpEntryArrayInput interface {
	pulumi.Input

	ToPolicyServiceIgmpEntryArrayOutput() PolicyServiceIgmpEntryArrayOutput
	ToPolicyServiceIgmpEntryArrayOutputWithContext(context.Context) PolicyServiceIgmpEntryArrayOutput
}

type PolicyServiceIgmpEntryArray []PolicyServiceIgmpEntryInput

func (PolicyServiceIgmpEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceIgmpEntry)(nil)).Elem()
}

func (i PolicyServiceIgmpEntryArray) ToPolicyServiceIgmpEntryArrayOutput() PolicyServiceIgmpEntryArrayOutput {
	return i.ToPolicyServiceIgmpEntryArrayOutputWithContext(context.Background())
}

func (i PolicyServiceIgmpEntryArray) ToPolicyServiceIgmpEntryArrayOutputWithContext(ctx context.Context) PolicyServiceIgmpEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceIgmpEntryArrayOutput)
}

type PolicyServiceIgmpEntryOutput struct{ *pulumi.OutputState }

func (PolicyServiceIgmpEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceIgmpEntry)(nil)).Elem()
}

func (o PolicyServiceIgmpEntryOutput) ToPolicyServiceIgmpEntryOutput() PolicyServiceIgmpEntryOutput {
	return o
}

func (o PolicyServiceIgmpEntryOutput) ToPolicyServiceIgmpEntryOutputWithContext(ctx context.Context) PolicyServiceIgmpEntryOutput {
	return o
}

func (o PolicyServiceIgmpEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceIgmpEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceIgmpEntryOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceIgmpEntry) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type PolicyServiceIgmpEntryArrayOutput struct{ *pulumi.OutputState }

func (PolicyServiceIgmpEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceIgmpEntry)(nil)).Elem()
}

func (o PolicyServiceIgmpEntryArrayOutput) ToPolicyServiceIgmpEntryArrayOutput() PolicyServiceIgmpEntryArrayOutput {
	return o
}

func (o PolicyServiceIgmpEntryArrayOutput) ToPolicyServiceIgmpEntryArrayOutputWithContext(ctx context.Context) PolicyServiceIgmpEntryArrayOutput {
	return o
}

func (o PolicyServiceIgmpEntryArrayOutput) Index(i pulumi.IntInput) PolicyServiceIgmpEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyServiceIgmpEntry {
		return vs[0].([]PolicyServiceIgmpEntry)[vs[1].(int)]
	}).(PolicyServiceIgmpEntryOutput)
}

type PolicyServiceIpProtocolEntry struct {
	Description *string `pulumi:"description"`
	DisplayName *string `pulumi:"displayName"`
	Protocol    int     `pulumi:"protocol"`
}

// PolicyServiceIpProtocolEntryInput is an input type that accepts PolicyServiceIpProtocolEntryArgs and PolicyServiceIpProtocolEntryOutput values.
// You can construct a concrete instance of `PolicyServiceIpProtocolEntryInput` via:
//
//          PolicyServiceIpProtocolEntryArgs{...}
type PolicyServiceIpProtocolEntryInput interface {
	pulumi.Input

	ToPolicyServiceIpProtocolEntryOutput() PolicyServiceIpProtocolEntryOutput
	ToPolicyServiceIpProtocolEntryOutputWithContext(context.Context) PolicyServiceIpProtocolEntryOutput
}

type PolicyServiceIpProtocolEntryArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	Protocol    pulumi.IntInput       `pulumi:"protocol"`
}

func (PolicyServiceIpProtocolEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceIpProtocolEntry)(nil)).Elem()
}

func (i PolicyServiceIpProtocolEntryArgs) ToPolicyServiceIpProtocolEntryOutput() PolicyServiceIpProtocolEntryOutput {
	return i.ToPolicyServiceIpProtocolEntryOutputWithContext(context.Background())
}

func (i PolicyServiceIpProtocolEntryArgs) ToPolicyServiceIpProtocolEntryOutputWithContext(ctx context.Context) PolicyServiceIpProtocolEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceIpProtocolEntryOutput)
}

// PolicyServiceIpProtocolEntryArrayInput is an input type that accepts PolicyServiceIpProtocolEntryArray and PolicyServiceIpProtocolEntryArrayOutput values.
// You can construct a concrete instance of `PolicyServiceIpProtocolEntryArrayInput` via:
//
//          PolicyServiceIpProtocolEntryArray{ PolicyServiceIpProtocolEntryArgs{...} }
type PolicyServiceIpProtocolEntryArrayInput interface {
	pulumi.Input

	ToPolicyServiceIpProtocolEntryArrayOutput() PolicyServiceIpProtocolEntryArrayOutput
	ToPolicyServiceIpProtocolEntryArrayOutputWithContext(context.Context) PolicyServiceIpProtocolEntryArrayOutput
}

type PolicyServiceIpProtocolEntryArray []PolicyServiceIpProtocolEntryInput

func (PolicyServiceIpProtocolEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceIpProtocolEntry)(nil)).Elem()
}

func (i PolicyServiceIpProtocolEntryArray) ToPolicyServiceIpProtocolEntryArrayOutput() PolicyServiceIpProtocolEntryArrayOutput {
	return i.ToPolicyServiceIpProtocolEntryArrayOutputWithContext(context.Background())
}

func (i PolicyServiceIpProtocolEntryArray) ToPolicyServiceIpProtocolEntryArrayOutputWithContext(ctx context.Context) PolicyServiceIpProtocolEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceIpProtocolEntryArrayOutput)
}

type PolicyServiceIpProtocolEntryOutput struct{ *pulumi.OutputState }

func (PolicyServiceIpProtocolEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceIpProtocolEntry)(nil)).Elem()
}

func (o PolicyServiceIpProtocolEntryOutput) ToPolicyServiceIpProtocolEntryOutput() PolicyServiceIpProtocolEntryOutput {
	return o
}

func (o PolicyServiceIpProtocolEntryOutput) ToPolicyServiceIpProtocolEntryOutputWithContext(ctx context.Context) PolicyServiceIpProtocolEntryOutput {
	return o
}

func (o PolicyServiceIpProtocolEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceIpProtocolEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceIpProtocolEntryOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceIpProtocolEntry) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceIpProtocolEntryOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyServiceIpProtocolEntry) int { return v.Protocol }).(pulumi.IntOutput)
}

type PolicyServiceIpProtocolEntryArrayOutput struct{ *pulumi.OutputState }

func (PolicyServiceIpProtocolEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceIpProtocolEntry)(nil)).Elem()
}

func (o PolicyServiceIpProtocolEntryArrayOutput) ToPolicyServiceIpProtocolEntryArrayOutput() PolicyServiceIpProtocolEntryArrayOutput {
	return o
}

func (o PolicyServiceIpProtocolEntryArrayOutput) ToPolicyServiceIpProtocolEntryArrayOutputWithContext(ctx context.Context) PolicyServiceIpProtocolEntryArrayOutput {
	return o
}

func (o PolicyServiceIpProtocolEntryArrayOutput) Index(i pulumi.IntInput) PolicyServiceIpProtocolEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyServiceIpProtocolEntry {
		return vs[0].([]PolicyServiceIpProtocolEntry)[vs[1].(int)]
	}).(PolicyServiceIpProtocolEntryOutput)
}

type PolicyServiceL4PortSetEntry struct {
	Description      *string  `pulumi:"description"`
	DestinationPorts []string `pulumi:"destinationPorts"`
	DisplayName      *string  `pulumi:"displayName"`
	Protocol         string   `pulumi:"protocol"`
	SourcePorts      []string `pulumi:"sourcePorts"`
}

// PolicyServiceL4PortSetEntryInput is an input type that accepts PolicyServiceL4PortSetEntryArgs and PolicyServiceL4PortSetEntryOutput values.
// You can construct a concrete instance of `PolicyServiceL4PortSetEntryInput` via:
//
//          PolicyServiceL4PortSetEntryArgs{...}
type PolicyServiceL4PortSetEntryInput interface {
	pulumi.Input

	ToPolicyServiceL4PortSetEntryOutput() PolicyServiceL4PortSetEntryOutput
	ToPolicyServiceL4PortSetEntryOutputWithContext(context.Context) PolicyServiceL4PortSetEntryOutput
}

type PolicyServiceL4PortSetEntryArgs struct {
	Description      pulumi.StringPtrInput   `pulumi:"description"`
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	DisplayName      pulumi.StringPtrInput   `pulumi:"displayName"`
	Protocol         pulumi.StringInput      `pulumi:"protocol"`
	SourcePorts      pulumi.StringArrayInput `pulumi:"sourcePorts"`
}

func (PolicyServiceL4PortSetEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceL4PortSetEntry)(nil)).Elem()
}

func (i PolicyServiceL4PortSetEntryArgs) ToPolicyServiceL4PortSetEntryOutput() PolicyServiceL4PortSetEntryOutput {
	return i.ToPolicyServiceL4PortSetEntryOutputWithContext(context.Background())
}

func (i PolicyServiceL4PortSetEntryArgs) ToPolicyServiceL4PortSetEntryOutputWithContext(ctx context.Context) PolicyServiceL4PortSetEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceL4PortSetEntryOutput)
}

// PolicyServiceL4PortSetEntryArrayInput is an input type that accepts PolicyServiceL4PortSetEntryArray and PolicyServiceL4PortSetEntryArrayOutput values.
// You can construct a concrete instance of `PolicyServiceL4PortSetEntryArrayInput` via:
//
//          PolicyServiceL4PortSetEntryArray{ PolicyServiceL4PortSetEntryArgs{...} }
type PolicyServiceL4PortSetEntryArrayInput interface {
	pulumi.Input

	ToPolicyServiceL4PortSetEntryArrayOutput() PolicyServiceL4PortSetEntryArrayOutput
	ToPolicyServiceL4PortSetEntryArrayOutputWithContext(context.Context) PolicyServiceL4PortSetEntryArrayOutput
}

type PolicyServiceL4PortSetEntryArray []PolicyServiceL4PortSetEntryInput

func (PolicyServiceL4PortSetEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceL4PortSetEntry)(nil)).Elem()
}

func (i PolicyServiceL4PortSetEntryArray) ToPolicyServiceL4PortSetEntryArrayOutput() PolicyServiceL4PortSetEntryArrayOutput {
	return i.ToPolicyServiceL4PortSetEntryArrayOutputWithContext(context.Background())
}

func (i PolicyServiceL4PortSetEntryArray) ToPolicyServiceL4PortSetEntryArrayOutputWithContext(ctx context.Context) PolicyServiceL4PortSetEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceL4PortSetEntryArrayOutput)
}

type PolicyServiceL4PortSetEntryOutput struct{ *pulumi.OutputState }

func (PolicyServiceL4PortSetEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceL4PortSetEntry)(nil)).Elem()
}

func (o PolicyServiceL4PortSetEntryOutput) ToPolicyServiceL4PortSetEntryOutput() PolicyServiceL4PortSetEntryOutput {
	return o
}

func (o PolicyServiceL4PortSetEntryOutput) ToPolicyServiceL4PortSetEntryOutputWithContext(ctx context.Context) PolicyServiceL4PortSetEntryOutput {
	return o
}

func (o PolicyServiceL4PortSetEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceL4PortSetEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceL4PortSetEntryOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyServiceL4PortSetEntry) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

func (o PolicyServiceL4PortSetEntryOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceL4PortSetEntry) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceL4PortSetEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyServiceL4PortSetEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o PolicyServiceL4PortSetEntryOutput) SourcePorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyServiceL4PortSetEntry) []string { return v.SourcePorts }).(pulumi.StringArrayOutput)
}

type PolicyServiceL4PortSetEntryArrayOutput struct{ *pulumi.OutputState }

func (PolicyServiceL4PortSetEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceL4PortSetEntry)(nil)).Elem()
}

func (o PolicyServiceL4PortSetEntryArrayOutput) ToPolicyServiceL4PortSetEntryArrayOutput() PolicyServiceL4PortSetEntryArrayOutput {
	return o
}

func (o PolicyServiceL4PortSetEntryArrayOutput) ToPolicyServiceL4PortSetEntryArrayOutputWithContext(ctx context.Context) PolicyServiceL4PortSetEntryArrayOutput {
	return o
}

func (o PolicyServiceL4PortSetEntryArrayOutput) Index(i pulumi.IntInput) PolicyServiceL4PortSetEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyServiceL4PortSetEntry {
		return vs[0].([]PolicyServiceL4PortSetEntry)[vs[1].(int)]
	}).(PolicyServiceL4PortSetEntryOutput)
}

type PolicyServiceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyServiceTagInput is an input type that accepts PolicyServiceTagArgs and PolicyServiceTagOutput values.
// You can construct a concrete instance of `PolicyServiceTagInput` via:
//
//          PolicyServiceTagArgs{...}
type PolicyServiceTagInput interface {
	pulumi.Input

	ToPolicyServiceTagOutput() PolicyServiceTagOutput
	ToPolicyServiceTagOutputWithContext(context.Context) PolicyServiceTagOutput
}

type PolicyServiceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceTag)(nil)).Elem()
}

func (i PolicyServiceTagArgs) ToPolicyServiceTagOutput() PolicyServiceTagOutput {
	return i.ToPolicyServiceTagOutputWithContext(context.Background())
}

func (i PolicyServiceTagArgs) ToPolicyServiceTagOutputWithContext(ctx context.Context) PolicyServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceTagOutput)
}

// PolicyServiceTagArrayInput is an input type that accepts PolicyServiceTagArray and PolicyServiceTagArrayOutput values.
// You can construct a concrete instance of `PolicyServiceTagArrayInput` via:
//
//          PolicyServiceTagArray{ PolicyServiceTagArgs{...} }
type PolicyServiceTagArrayInput interface {
	pulumi.Input

	ToPolicyServiceTagArrayOutput() PolicyServiceTagArrayOutput
	ToPolicyServiceTagArrayOutputWithContext(context.Context) PolicyServiceTagArrayOutput
}

type PolicyServiceTagArray []PolicyServiceTagInput

func (PolicyServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceTag)(nil)).Elem()
}

func (i PolicyServiceTagArray) ToPolicyServiceTagArrayOutput() PolicyServiceTagArrayOutput {
	return i.ToPolicyServiceTagArrayOutputWithContext(context.Background())
}

func (i PolicyServiceTagArray) ToPolicyServiceTagArrayOutputWithContext(ctx context.Context) PolicyServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceTagArrayOutput)
}

type PolicyServiceTagOutput struct{ *pulumi.OutputState }

func (PolicyServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyServiceTag)(nil)).Elem()
}

func (o PolicyServiceTagOutput) ToPolicyServiceTagOutput() PolicyServiceTagOutput {
	return o
}

func (o PolicyServiceTagOutput) ToPolicyServiceTagOutputWithContext(ctx context.Context) PolicyServiceTagOutput {
	return o
}

func (o PolicyServiceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyServiceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyServiceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyServiceTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyServiceTag)(nil)).Elem()
}

func (o PolicyServiceTagArrayOutput) ToPolicyServiceTagArrayOutput() PolicyServiceTagArrayOutput {
	return o
}

func (o PolicyServiceTagArrayOutput) ToPolicyServiceTagArrayOutputWithContext(ctx context.Context) PolicyServiceTagArrayOutput {
	return o
}

func (o PolicyServiceTagArrayOutput) Index(i pulumi.IntInput) PolicyServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyServiceTag {
		return vs[0].([]PolicyServiceTag)[vs[1].(int)]
	}).(PolicyServiceTagOutput)
}

type PolicyStaticRouteNextHop struct {
	AdminDistance *int    `pulumi:"adminDistance"`
	Interface     *string `pulumi:"interface"`
	IpAddress     string  `pulumi:"ipAddress"`
}

// PolicyStaticRouteNextHopInput is an input type that accepts PolicyStaticRouteNextHopArgs and PolicyStaticRouteNextHopOutput values.
// You can construct a concrete instance of `PolicyStaticRouteNextHopInput` via:
//
//          PolicyStaticRouteNextHopArgs{...}
type PolicyStaticRouteNextHopInput interface {
	pulumi.Input

	ToPolicyStaticRouteNextHopOutput() PolicyStaticRouteNextHopOutput
	ToPolicyStaticRouteNextHopOutputWithContext(context.Context) PolicyStaticRouteNextHopOutput
}

type PolicyStaticRouteNextHopArgs struct {
	AdminDistance pulumi.IntPtrInput    `pulumi:"adminDistance"`
	Interface     pulumi.StringPtrInput `pulumi:"interface"`
	IpAddress     pulumi.StringInput    `pulumi:"ipAddress"`
}

func (PolicyStaticRouteNextHopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStaticRouteNextHop)(nil)).Elem()
}

func (i PolicyStaticRouteNextHopArgs) ToPolicyStaticRouteNextHopOutput() PolicyStaticRouteNextHopOutput {
	return i.ToPolicyStaticRouteNextHopOutputWithContext(context.Background())
}

func (i PolicyStaticRouteNextHopArgs) ToPolicyStaticRouteNextHopOutputWithContext(ctx context.Context) PolicyStaticRouteNextHopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStaticRouteNextHopOutput)
}

// PolicyStaticRouteNextHopArrayInput is an input type that accepts PolicyStaticRouteNextHopArray and PolicyStaticRouteNextHopArrayOutput values.
// You can construct a concrete instance of `PolicyStaticRouteNextHopArrayInput` via:
//
//          PolicyStaticRouteNextHopArray{ PolicyStaticRouteNextHopArgs{...} }
type PolicyStaticRouteNextHopArrayInput interface {
	pulumi.Input

	ToPolicyStaticRouteNextHopArrayOutput() PolicyStaticRouteNextHopArrayOutput
	ToPolicyStaticRouteNextHopArrayOutputWithContext(context.Context) PolicyStaticRouteNextHopArrayOutput
}

type PolicyStaticRouteNextHopArray []PolicyStaticRouteNextHopInput

func (PolicyStaticRouteNextHopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyStaticRouteNextHop)(nil)).Elem()
}

func (i PolicyStaticRouteNextHopArray) ToPolicyStaticRouteNextHopArrayOutput() PolicyStaticRouteNextHopArrayOutput {
	return i.ToPolicyStaticRouteNextHopArrayOutputWithContext(context.Background())
}

func (i PolicyStaticRouteNextHopArray) ToPolicyStaticRouteNextHopArrayOutputWithContext(ctx context.Context) PolicyStaticRouteNextHopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStaticRouteNextHopArrayOutput)
}

type PolicyStaticRouteNextHopOutput struct{ *pulumi.OutputState }

func (PolicyStaticRouteNextHopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStaticRouteNextHop)(nil)).Elem()
}

func (o PolicyStaticRouteNextHopOutput) ToPolicyStaticRouteNextHopOutput() PolicyStaticRouteNextHopOutput {
	return o
}

func (o PolicyStaticRouteNextHopOutput) ToPolicyStaticRouteNextHopOutputWithContext(ctx context.Context) PolicyStaticRouteNextHopOutput {
	return o
}

func (o PolicyStaticRouteNextHopOutput) AdminDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyStaticRouteNextHop) *int { return v.AdminDistance }).(pulumi.IntPtrOutput)
}

func (o PolicyStaticRouteNextHopOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStaticRouteNextHop) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

func (o PolicyStaticRouteNextHopOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyStaticRouteNextHop) string { return v.IpAddress }).(pulumi.StringOutput)
}

type PolicyStaticRouteNextHopArrayOutput struct{ *pulumi.OutputState }

func (PolicyStaticRouteNextHopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyStaticRouteNextHop)(nil)).Elem()
}

func (o PolicyStaticRouteNextHopArrayOutput) ToPolicyStaticRouteNextHopArrayOutput() PolicyStaticRouteNextHopArrayOutput {
	return o
}

func (o PolicyStaticRouteNextHopArrayOutput) ToPolicyStaticRouteNextHopArrayOutputWithContext(ctx context.Context) PolicyStaticRouteNextHopArrayOutput {
	return o
}

func (o PolicyStaticRouteNextHopArrayOutput) Index(i pulumi.IntInput) PolicyStaticRouteNextHopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyStaticRouteNextHop {
		return vs[0].([]PolicyStaticRouteNextHop)[vs[1].(int)]
	}).(PolicyStaticRouteNextHopOutput)
}

type PolicyStaticRouteTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyStaticRouteTagInput is an input type that accepts PolicyStaticRouteTagArgs and PolicyStaticRouteTagOutput values.
// You can construct a concrete instance of `PolicyStaticRouteTagInput` via:
//
//          PolicyStaticRouteTagArgs{...}
type PolicyStaticRouteTagInput interface {
	pulumi.Input

	ToPolicyStaticRouteTagOutput() PolicyStaticRouteTagOutput
	ToPolicyStaticRouteTagOutputWithContext(context.Context) PolicyStaticRouteTagOutput
}

type PolicyStaticRouteTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyStaticRouteTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStaticRouteTag)(nil)).Elem()
}

func (i PolicyStaticRouteTagArgs) ToPolicyStaticRouteTagOutput() PolicyStaticRouteTagOutput {
	return i.ToPolicyStaticRouteTagOutputWithContext(context.Background())
}

func (i PolicyStaticRouteTagArgs) ToPolicyStaticRouteTagOutputWithContext(ctx context.Context) PolicyStaticRouteTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStaticRouteTagOutput)
}

// PolicyStaticRouteTagArrayInput is an input type that accepts PolicyStaticRouteTagArray and PolicyStaticRouteTagArrayOutput values.
// You can construct a concrete instance of `PolicyStaticRouteTagArrayInput` via:
//
//          PolicyStaticRouteTagArray{ PolicyStaticRouteTagArgs{...} }
type PolicyStaticRouteTagArrayInput interface {
	pulumi.Input

	ToPolicyStaticRouteTagArrayOutput() PolicyStaticRouteTagArrayOutput
	ToPolicyStaticRouteTagArrayOutputWithContext(context.Context) PolicyStaticRouteTagArrayOutput
}

type PolicyStaticRouteTagArray []PolicyStaticRouteTagInput

func (PolicyStaticRouteTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyStaticRouteTag)(nil)).Elem()
}

func (i PolicyStaticRouteTagArray) ToPolicyStaticRouteTagArrayOutput() PolicyStaticRouteTagArrayOutput {
	return i.ToPolicyStaticRouteTagArrayOutputWithContext(context.Background())
}

func (i PolicyStaticRouteTagArray) ToPolicyStaticRouteTagArrayOutputWithContext(ctx context.Context) PolicyStaticRouteTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStaticRouteTagArrayOutput)
}

type PolicyStaticRouteTagOutput struct{ *pulumi.OutputState }

func (PolicyStaticRouteTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStaticRouteTag)(nil)).Elem()
}

func (o PolicyStaticRouteTagOutput) ToPolicyStaticRouteTagOutput() PolicyStaticRouteTagOutput {
	return o
}

func (o PolicyStaticRouteTagOutput) ToPolicyStaticRouteTagOutputWithContext(ctx context.Context) PolicyStaticRouteTagOutput {
	return o
}

func (o PolicyStaticRouteTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStaticRouteTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyStaticRouteTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStaticRouteTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyStaticRouteTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyStaticRouteTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyStaticRouteTag)(nil)).Elem()
}

func (o PolicyStaticRouteTagArrayOutput) ToPolicyStaticRouteTagArrayOutput() PolicyStaticRouteTagArrayOutput {
	return o
}

func (o PolicyStaticRouteTagArrayOutput) ToPolicyStaticRouteTagArrayOutputWithContext(ctx context.Context) PolicyStaticRouteTagArrayOutput {
	return o
}

func (o PolicyStaticRouteTagArrayOutput) Index(i pulumi.IntInput) PolicyStaticRouteTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyStaticRouteTag {
		return vs[0].([]PolicyStaticRouteTag)[vs[1].(int)]
	}).(PolicyStaticRouteTagOutput)
}

type PolicyTier0GatewayBgpConfig struct {
	Ecmp                           *bool                                         `pulumi:"ecmp"`
	Enabled                        *bool                                         `pulumi:"enabled"`
	GracefulRestartMode            *string                                       `pulumi:"gracefulRestartMode"`
	GracefulRestartStaleRouteTimer *int                                          `pulumi:"gracefulRestartStaleRouteTimer"`
	GracefulRestartTimer           *int                                          `pulumi:"gracefulRestartTimer"`
	InterSrIbgp                    *bool                                         `pulumi:"interSrIbgp"`
	LocalAsNum                     *string                                       `pulumi:"localAsNum"`
	MultipathRelax                 *bool                                         `pulumi:"multipathRelax"`
	Path                           *string                                       `pulumi:"path"`
	Revision                       *int                                          `pulumi:"revision"`
	RouteAggregations              []PolicyTier0GatewayBgpConfigRouteAggregation `pulumi:"routeAggregations"`
	Tags                           []PolicyTier0GatewayBgpConfigTag              `pulumi:"tags"`
}

// PolicyTier0GatewayBgpConfigInput is an input type that accepts PolicyTier0GatewayBgpConfigArgs and PolicyTier0GatewayBgpConfigOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayBgpConfigInput` via:
//
//          PolicyTier0GatewayBgpConfigArgs{...}
type PolicyTier0GatewayBgpConfigInput interface {
	pulumi.Input

	ToPolicyTier0GatewayBgpConfigOutput() PolicyTier0GatewayBgpConfigOutput
	ToPolicyTier0GatewayBgpConfigOutputWithContext(context.Context) PolicyTier0GatewayBgpConfigOutput
}

type PolicyTier0GatewayBgpConfigArgs struct {
	Ecmp                           pulumi.BoolPtrInput                                   `pulumi:"ecmp"`
	Enabled                        pulumi.BoolPtrInput                                   `pulumi:"enabled"`
	GracefulRestartMode            pulumi.StringPtrInput                                 `pulumi:"gracefulRestartMode"`
	GracefulRestartStaleRouteTimer pulumi.IntPtrInput                                    `pulumi:"gracefulRestartStaleRouteTimer"`
	GracefulRestartTimer           pulumi.IntPtrInput                                    `pulumi:"gracefulRestartTimer"`
	InterSrIbgp                    pulumi.BoolPtrInput                                   `pulumi:"interSrIbgp"`
	LocalAsNum                     pulumi.StringPtrInput                                 `pulumi:"localAsNum"`
	MultipathRelax                 pulumi.BoolPtrInput                                   `pulumi:"multipathRelax"`
	Path                           pulumi.StringPtrInput                                 `pulumi:"path"`
	Revision                       pulumi.IntPtrInput                                    `pulumi:"revision"`
	RouteAggregations              PolicyTier0GatewayBgpConfigRouteAggregationArrayInput `pulumi:"routeAggregations"`
	Tags                           PolicyTier0GatewayBgpConfigTagArrayInput              `pulumi:"tags"`
}

func (PolicyTier0GatewayBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayBgpConfig)(nil)).Elem()
}

func (i PolicyTier0GatewayBgpConfigArgs) ToPolicyTier0GatewayBgpConfigOutput() PolicyTier0GatewayBgpConfigOutput {
	return i.ToPolicyTier0GatewayBgpConfigOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayBgpConfigArgs) ToPolicyTier0GatewayBgpConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayBgpConfigOutput)
}

func (i PolicyTier0GatewayBgpConfigArgs) ToPolicyTier0GatewayBgpConfigPtrOutput() PolicyTier0GatewayBgpConfigPtrOutput {
	return i.ToPolicyTier0GatewayBgpConfigPtrOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayBgpConfigArgs) ToPolicyTier0GatewayBgpConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayBgpConfigOutput).ToPolicyTier0GatewayBgpConfigPtrOutputWithContext(ctx)
}

// PolicyTier0GatewayBgpConfigPtrInput is an input type that accepts PolicyTier0GatewayBgpConfigArgs, PolicyTier0GatewayBgpConfigPtr and PolicyTier0GatewayBgpConfigPtrOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayBgpConfigPtrInput` via:
//
//          PolicyTier0GatewayBgpConfigArgs{...}
//
//  or:
//
//          nil
type PolicyTier0GatewayBgpConfigPtrInput interface {
	pulumi.Input

	ToPolicyTier0GatewayBgpConfigPtrOutput() PolicyTier0GatewayBgpConfigPtrOutput
	ToPolicyTier0GatewayBgpConfigPtrOutputWithContext(context.Context) PolicyTier0GatewayBgpConfigPtrOutput
}

type policyTier0GatewayBgpConfigPtrType PolicyTier0GatewayBgpConfigArgs

func PolicyTier0GatewayBgpConfigPtr(v *PolicyTier0GatewayBgpConfigArgs) PolicyTier0GatewayBgpConfigPtrInput {
	return (*policyTier0GatewayBgpConfigPtrType)(v)
}

func (*policyTier0GatewayBgpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayBgpConfig)(nil)).Elem()
}

func (i *policyTier0GatewayBgpConfigPtrType) ToPolicyTier0GatewayBgpConfigPtrOutput() PolicyTier0GatewayBgpConfigPtrOutput {
	return i.ToPolicyTier0GatewayBgpConfigPtrOutputWithContext(context.Background())
}

func (i *policyTier0GatewayBgpConfigPtrType) ToPolicyTier0GatewayBgpConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayBgpConfigPtrOutput)
}

type PolicyTier0GatewayBgpConfigOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayBgpConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayBgpConfigOutput) ToPolicyTier0GatewayBgpConfigOutput() PolicyTier0GatewayBgpConfigOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigOutput) ToPolicyTier0GatewayBgpConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigOutput) ToPolicyTier0GatewayBgpConfigPtrOutput() PolicyTier0GatewayBgpConfigPtrOutput {
	return o.ToPolicyTier0GatewayBgpConfigPtrOutputWithContext(context.Background())
}

func (o PolicyTier0GatewayBgpConfigOutput) ToPolicyTier0GatewayBgpConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *PolicyTier0GatewayBgpConfig {
		return &v
	}).(PolicyTier0GatewayBgpConfigPtrOutput)
}
func (o PolicyTier0GatewayBgpConfigOutput) Ecmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *bool { return v.Ecmp }).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) GracefulRestartMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *string { return v.GracefulRestartMode }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) GracefulRestartStaleRouteTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *int { return v.GracefulRestartStaleRouteTimer }).(pulumi.IntPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) GracefulRestartTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *int { return v.GracefulRestartTimer }).(pulumi.IntPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) InterSrIbgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *bool { return v.InterSrIbgp }).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) LocalAsNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *string { return v.LocalAsNum }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) MultipathRelax() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *bool { return v.MultipathRelax }).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) RouteAggregations() PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) []PolicyTier0GatewayBgpConfigRouteAggregation {
		return v.RouteAggregations
	}).(PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput)
}

func (o PolicyTier0GatewayBgpConfigOutput) Tags() PolicyTier0GatewayBgpConfigTagArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfig) []PolicyTier0GatewayBgpConfigTag { return v.Tags }).(PolicyTier0GatewayBgpConfigTagArrayOutput)
}

type PolicyTier0GatewayBgpConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayBgpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayBgpConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) ToPolicyTier0GatewayBgpConfigPtrOutput() PolicyTier0GatewayBgpConfigPtrOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) ToPolicyTier0GatewayBgpConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigPtrOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) Elem() PolicyTier0GatewayBgpConfigOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) PolicyTier0GatewayBgpConfig { return *v }).(PolicyTier0GatewayBgpConfigOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) Ecmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Ecmp
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) GracefulRestartMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.GracefulRestartMode
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) GracefulRestartStaleRouteTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) *int {
		if v == nil {
			return nil
		}
		return v.GracefulRestartStaleRouteTimer
	}).(pulumi.IntPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) GracefulRestartTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) *int {
		if v == nil {
			return nil
		}
		return v.GracefulRestartTimer
	}).(pulumi.IntPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) InterSrIbgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.InterSrIbgp
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) LocalAsNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalAsNum
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) MultipathRelax() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.MultipathRelax
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) RouteAggregations() PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) []PolicyTier0GatewayBgpConfigRouteAggregation {
		if v == nil {
			return nil
		}
		return v.RouteAggregations
	}).(PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput)
}

func (o PolicyTier0GatewayBgpConfigPtrOutput) Tags() PolicyTier0GatewayBgpConfigTagArrayOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayBgpConfig) []PolicyTier0GatewayBgpConfigTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(PolicyTier0GatewayBgpConfigTagArrayOutput)
}

type PolicyTier0GatewayBgpConfigRouteAggregation struct {
	Prefix      *string `pulumi:"prefix"`
	SummaryOnly *bool   `pulumi:"summaryOnly"`
}

// PolicyTier0GatewayBgpConfigRouteAggregationInput is an input type that accepts PolicyTier0GatewayBgpConfigRouteAggregationArgs and PolicyTier0GatewayBgpConfigRouteAggregationOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayBgpConfigRouteAggregationInput` via:
//
//          PolicyTier0GatewayBgpConfigRouteAggregationArgs{...}
type PolicyTier0GatewayBgpConfigRouteAggregationInput interface {
	pulumi.Input

	ToPolicyTier0GatewayBgpConfigRouteAggregationOutput() PolicyTier0GatewayBgpConfigRouteAggregationOutput
	ToPolicyTier0GatewayBgpConfigRouteAggregationOutputWithContext(context.Context) PolicyTier0GatewayBgpConfigRouteAggregationOutput
}

type PolicyTier0GatewayBgpConfigRouteAggregationArgs struct {
	Prefix      pulumi.StringPtrInput `pulumi:"prefix"`
	SummaryOnly pulumi.BoolPtrInput   `pulumi:"summaryOnly"`
}

func (PolicyTier0GatewayBgpConfigRouteAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayBgpConfigRouteAggregation)(nil)).Elem()
}

func (i PolicyTier0GatewayBgpConfigRouteAggregationArgs) ToPolicyTier0GatewayBgpConfigRouteAggregationOutput() PolicyTier0GatewayBgpConfigRouteAggregationOutput {
	return i.ToPolicyTier0GatewayBgpConfigRouteAggregationOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayBgpConfigRouteAggregationArgs) ToPolicyTier0GatewayBgpConfigRouteAggregationOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigRouteAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayBgpConfigRouteAggregationOutput)
}

// PolicyTier0GatewayBgpConfigRouteAggregationArrayInput is an input type that accepts PolicyTier0GatewayBgpConfigRouteAggregationArray and PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayBgpConfigRouteAggregationArrayInput` via:
//
//          PolicyTier0GatewayBgpConfigRouteAggregationArray{ PolicyTier0GatewayBgpConfigRouteAggregationArgs{...} }
type PolicyTier0GatewayBgpConfigRouteAggregationArrayInput interface {
	pulumi.Input

	ToPolicyTier0GatewayBgpConfigRouteAggregationArrayOutput() PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput
	ToPolicyTier0GatewayBgpConfigRouteAggregationArrayOutputWithContext(context.Context) PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput
}

type PolicyTier0GatewayBgpConfigRouteAggregationArray []PolicyTier0GatewayBgpConfigRouteAggregationInput

func (PolicyTier0GatewayBgpConfigRouteAggregationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayBgpConfigRouteAggregation)(nil)).Elem()
}

func (i PolicyTier0GatewayBgpConfigRouteAggregationArray) ToPolicyTier0GatewayBgpConfigRouteAggregationArrayOutput() PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput {
	return i.ToPolicyTier0GatewayBgpConfigRouteAggregationArrayOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayBgpConfigRouteAggregationArray) ToPolicyTier0GatewayBgpConfigRouteAggregationArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput)
}

type PolicyTier0GatewayBgpConfigRouteAggregationOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayBgpConfigRouteAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayBgpConfigRouteAggregation)(nil)).Elem()
}

func (o PolicyTier0GatewayBgpConfigRouteAggregationOutput) ToPolicyTier0GatewayBgpConfigRouteAggregationOutput() PolicyTier0GatewayBgpConfigRouteAggregationOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigRouteAggregationOutput) ToPolicyTier0GatewayBgpConfigRouteAggregationOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigRouteAggregationOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigRouteAggregationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfigRouteAggregation) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigRouteAggregationOutput) SummaryOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfigRouteAggregation) *bool { return v.SummaryOnly }).(pulumi.BoolPtrOutput)
}

type PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayBgpConfigRouteAggregation)(nil)).Elem()
}

func (o PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput) ToPolicyTier0GatewayBgpConfigRouteAggregationArrayOutput() PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput) ToPolicyTier0GatewayBgpConfigRouteAggregationArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput) Index(i pulumi.IntInput) PolicyTier0GatewayBgpConfigRouteAggregationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier0GatewayBgpConfigRouteAggregation {
		return vs[0].([]PolicyTier0GatewayBgpConfigRouteAggregation)[vs[1].(int)]
	}).(PolicyTier0GatewayBgpConfigRouteAggregationOutput)
}

type PolicyTier0GatewayBgpConfigTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyTier0GatewayBgpConfigTagInput is an input type that accepts PolicyTier0GatewayBgpConfigTagArgs and PolicyTier0GatewayBgpConfigTagOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayBgpConfigTagInput` via:
//
//          PolicyTier0GatewayBgpConfigTagArgs{...}
type PolicyTier0GatewayBgpConfigTagInput interface {
	pulumi.Input

	ToPolicyTier0GatewayBgpConfigTagOutput() PolicyTier0GatewayBgpConfigTagOutput
	ToPolicyTier0GatewayBgpConfigTagOutputWithContext(context.Context) PolicyTier0GatewayBgpConfigTagOutput
}

type PolicyTier0GatewayBgpConfigTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyTier0GatewayBgpConfigTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayBgpConfigTag)(nil)).Elem()
}

func (i PolicyTier0GatewayBgpConfigTagArgs) ToPolicyTier0GatewayBgpConfigTagOutput() PolicyTier0GatewayBgpConfigTagOutput {
	return i.ToPolicyTier0GatewayBgpConfigTagOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayBgpConfigTagArgs) ToPolicyTier0GatewayBgpConfigTagOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayBgpConfigTagOutput)
}

// PolicyTier0GatewayBgpConfigTagArrayInput is an input type that accepts PolicyTier0GatewayBgpConfigTagArray and PolicyTier0GatewayBgpConfigTagArrayOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayBgpConfigTagArrayInput` via:
//
//          PolicyTier0GatewayBgpConfigTagArray{ PolicyTier0GatewayBgpConfigTagArgs{...} }
type PolicyTier0GatewayBgpConfigTagArrayInput interface {
	pulumi.Input

	ToPolicyTier0GatewayBgpConfigTagArrayOutput() PolicyTier0GatewayBgpConfigTagArrayOutput
	ToPolicyTier0GatewayBgpConfigTagArrayOutputWithContext(context.Context) PolicyTier0GatewayBgpConfigTagArrayOutput
}

type PolicyTier0GatewayBgpConfigTagArray []PolicyTier0GatewayBgpConfigTagInput

func (PolicyTier0GatewayBgpConfigTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayBgpConfigTag)(nil)).Elem()
}

func (i PolicyTier0GatewayBgpConfigTagArray) ToPolicyTier0GatewayBgpConfigTagArrayOutput() PolicyTier0GatewayBgpConfigTagArrayOutput {
	return i.ToPolicyTier0GatewayBgpConfigTagArrayOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayBgpConfigTagArray) ToPolicyTier0GatewayBgpConfigTagArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayBgpConfigTagArrayOutput)
}

type PolicyTier0GatewayBgpConfigTagOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayBgpConfigTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayBgpConfigTag)(nil)).Elem()
}

func (o PolicyTier0GatewayBgpConfigTagOutput) ToPolicyTier0GatewayBgpConfigTagOutput() PolicyTier0GatewayBgpConfigTagOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigTagOutput) ToPolicyTier0GatewayBgpConfigTagOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigTagOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfigTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayBgpConfigTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayBgpConfigTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyTier0GatewayBgpConfigTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayBgpConfigTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayBgpConfigTag)(nil)).Elem()
}

func (o PolicyTier0GatewayBgpConfigTagArrayOutput) ToPolicyTier0GatewayBgpConfigTagArrayOutput() PolicyTier0GatewayBgpConfigTagArrayOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigTagArrayOutput) ToPolicyTier0GatewayBgpConfigTagArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayBgpConfigTagArrayOutput {
	return o
}

func (o PolicyTier0GatewayBgpConfigTagArrayOutput) Index(i pulumi.IntInput) PolicyTier0GatewayBgpConfigTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier0GatewayBgpConfigTag {
		return vs[0].([]PolicyTier0GatewayBgpConfigTag)[vs[1].(int)]
	}).(PolicyTier0GatewayBgpConfigTagOutput)
}

type PolicyTier0GatewayHAVIPConfigConfig struct {
	Enabled                *bool    `pulumi:"enabled"`
	ExternalInterfacePaths []string `pulumi:"externalInterfacePaths"`
	VipSubnets             []string `pulumi:"vipSubnets"`
}

// PolicyTier0GatewayHAVIPConfigConfigInput is an input type that accepts PolicyTier0GatewayHAVIPConfigConfigArgs and PolicyTier0GatewayHAVIPConfigConfigOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayHAVIPConfigConfigInput` via:
//
//          PolicyTier0GatewayHAVIPConfigConfigArgs{...}
type PolicyTier0GatewayHAVIPConfigConfigInput interface {
	pulumi.Input

	ToPolicyTier0GatewayHAVIPConfigConfigOutput() PolicyTier0GatewayHAVIPConfigConfigOutput
	ToPolicyTier0GatewayHAVIPConfigConfigOutputWithContext(context.Context) PolicyTier0GatewayHAVIPConfigConfigOutput
}

type PolicyTier0GatewayHAVIPConfigConfigArgs struct {
	Enabled                pulumi.BoolPtrInput     `pulumi:"enabled"`
	ExternalInterfacePaths pulumi.StringArrayInput `pulumi:"externalInterfacePaths"`
	VipSubnets             pulumi.StringArrayInput `pulumi:"vipSubnets"`
}

func (PolicyTier0GatewayHAVIPConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayHAVIPConfigConfig)(nil)).Elem()
}

func (i PolicyTier0GatewayHAVIPConfigConfigArgs) ToPolicyTier0GatewayHAVIPConfigConfigOutput() PolicyTier0GatewayHAVIPConfigConfigOutput {
	return i.ToPolicyTier0GatewayHAVIPConfigConfigOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayHAVIPConfigConfigArgs) ToPolicyTier0GatewayHAVIPConfigConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayHAVIPConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayHAVIPConfigConfigOutput)
}

// PolicyTier0GatewayHAVIPConfigConfigArrayInput is an input type that accepts PolicyTier0GatewayHAVIPConfigConfigArray and PolicyTier0GatewayHAVIPConfigConfigArrayOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayHAVIPConfigConfigArrayInput` via:
//
//          PolicyTier0GatewayHAVIPConfigConfigArray{ PolicyTier0GatewayHAVIPConfigConfigArgs{...} }
type PolicyTier0GatewayHAVIPConfigConfigArrayInput interface {
	pulumi.Input

	ToPolicyTier0GatewayHAVIPConfigConfigArrayOutput() PolicyTier0GatewayHAVIPConfigConfigArrayOutput
	ToPolicyTier0GatewayHAVIPConfigConfigArrayOutputWithContext(context.Context) PolicyTier0GatewayHAVIPConfigConfigArrayOutput
}

type PolicyTier0GatewayHAVIPConfigConfigArray []PolicyTier0GatewayHAVIPConfigConfigInput

func (PolicyTier0GatewayHAVIPConfigConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayHAVIPConfigConfig)(nil)).Elem()
}

func (i PolicyTier0GatewayHAVIPConfigConfigArray) ToPolicyTier0GatewayHAVIPConfigConfigArrayOutput() PolicyTier0GatewayHAVIPConfigConfigArrayOutput {
	return i.ToPolicyTier0GatewayHAVIPConfigConfigArrayOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayHAVIPConfigConfigArray) ToPolicyTier0GatewayHAVIPConfigConfigArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayHAVIPConfigConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayHAVIPConfigConfigArrayOutput)
}

type PolicyTier0GatewayHAVIPConfigConfigOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayHAVIPConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayHAVIPConfigConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayHAVIPConfigConfigOutput) ToPolicyTier0GatewayHAVIPConfigConfigOutput() PolicyTier0GatewayHAVIPConfigConfigOutput {
	return o
}

func (o PolicyTier0GatewayHAVIPConfigConfigOutput) ToPolicyTier0GatewayHAVIPConfigConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayHAVIPConfigConfigOutput {
	return o
}

func (o PolicyTier0GatewayHAVIPConfigConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayHAVIPConfigConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayHAVIPConfigConfigOutput) ExternalInterfacePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayHAVIPConfigConfig) []string { return v.ExternalInterfacePaths }).(pulumi.StringArrayOutput)
}

func (o PolicyTier0GatewayHAVIPConfigConfigOutput) VipSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayHAVIPConfigConfig) []string { return v.VipSubnets }).(pulumi.StringArrayOutput)
}

type PolicyTier0GatewayHAVIPConfigConfigArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayHAVIPConfigConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayHAVIPConfigConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayHAVIPConfigConfigArrayOutput) ToPolicyTier0GatewayHAVIPConfigConfigArrayOutput() PolicyTier0GatewayHAVIPConfigConfigArrayOutput {
	return o
}

func (o PolicyTier0GatewayHAVIPConfigConfigArrayOutput) ToPolicyTier0GatewayHAVIPConfigConfigArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayHAVIPConfigConfigArrayOutput {
	return o
}

func (o PolicyTier0GatewayHAVIPConfigConfigArrayOutput) Index(i pulumi.IntInput) PolicyTier0GatewayHAVIPConfigConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier0GatewayHAVIPConfigConfig {
		return vs[0].([]PolicyTier0GatewayHAVIPConfigConfig)[vs[1].(int)]
	}).(PolicyTier0GatewayHAVIPConfigConfigOutput)
}

type PolicyTier0GatewayInterfaceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyTier0GatewayInterfaceTagInput is an input type that accepts PolicyTier0GatewayInterfaceTagArgs and PolicyTier0GatewayInterfaceTagOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayInterfaceTagInput` via:
//
//          PolicyTier0GatewayInterfaceTagArgs{...}
type PolicyTier0GatewayInterfaceTagInput interface {
	pulumi.Input

	ToPolicyTier0GatewayInterfaceTagOutput() PolicyTier0GatewayInterfaceTagOutput
	ToPolicyTier0GatewayInterfaceTagOutputWithContext(context.Context) PolicyTier0GatewayInterfaceTagOutput
}

type PolicyTier0GatewayInterfaceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyTier0GatewayInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayInterfaceTag)(nil)).Elem()
}

func (i PolicyTier0GatewayInterfaceTagArgs) ToPolicyTier0GatewayInterfaceTagOutput() PolicyTier0GatewayInterfaceTagOutput {
	return i.ToPolicyTier0GatewayInterfaceTagOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayInterfaceTagArgs) ToPolicyTier0GatewayInterfaceTagOutputWithContext(ctx context.Context) PolicyTier0GatewayInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayInterfaceTagOutput)
}

// PolicyTier0GatewayInterfaceTagArrayInput is an input type that accepts PolicyTier0GatewayInterfaceTagArray and PolicyTier0GatewayInterfaceTagArrayOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayInterfaceTagArrayInput` via:
//
//          PolicyTier0GatewayInterfaceTagArray{ PolicyTier0GatewayInterfaceTagArgs{...} }
type PolicyTier0GatewayInterfaceTagArrayInput interface {
	pulumi.Input

	ToPolicyTier0GatewayInterfaceTagArrayOutput() PolicyTier0GatewayInterfaceTagArrayOutput
	ToPolicyTier0GatewayInterfaceTagArrayOutputWithContext(context.Context) PolicyTier0GatewayInterfaceTagArrayOutput
}

type PolicyTier0GatewayInterfaceTagArray []PolicyTier0GatewayInterfaceTagInput

func (PolicyTier0GatewayInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayInterfaceTag)(nil)).Elem()
}

func (i PolicyTier0GatewayInterfaceTagArray) ToPolicyTier0GatewayInterfaceTagArrayOutput() PolicyTier0GatewayInterfaceTagArrayOutput {
	return i.ToPolicyTier0GatewayInterfaceTagArrayOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayInterfaceTagArray) ToPolicyTier0GatewayInterfaceTagArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayInterfaceTagArrayOutput)
}

type PolicyTier0GatewayInterfaceTagOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayInterfaceTag)(nil)).Elem()
}

func (o PolicyTier0GatewayInterfaceTagOutput) ToPolicyTier0GatewayInterfaceTagOutput() PolicyTier0GatewayInterfaceTagOutput {
	return o
}

func (o PolicyTier0GatewayInterfaceTagOutput) ToPolicyTier0GatewayInterfaceTagOutputWithContext(ctx context.Context) PolicyTier0GatewayInterfaceTagOutput {
	return o
}

func (o PolicyTier0GatewayInterfaceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayInterfaceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayInterfaceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayInterfaceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyTier0GatewayInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayInterfaceTag)(nil)).Elem()
}

func (o PolicyTier0GatewayInterfaceTagArrayOutput) ToPolicyTier0GatewayInterfaceTagArrayOutput() PolicyTier0GatewayInterfaceTagArrayOutput {
	return o
}

func (o PolicyTier0GatewayInterfaceTagArrayOutput) ToPolicyTier0GatewayInterfaceTagArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayInterfaceTagArrayOutput {
	return o
}

func (o PolicyTier0GatewayInterfaceTagArrayOutput) Index(i pulumi.IntInput) PolicyTier0GatewayInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier0GatewayInterfaceTag {
		return vs[0].([]PolicyTier0GatewayInterfaceTag)[vs[1].(int)]
	}).(PolicyTier0GatewayInterfaceTagOutput)
}

type PolicyTier0GatewayIntersiteConfig struct {
	FallbackSitePaths []string `pulumi:"fallbackSitePaths"`
	PrimarySitePath   *string  `pulumi:"primarySitePath"`
	TransitSubnet     *string  `pulumi:"transitSubnet"`
}

// PolicyTier0GatewayIntersiteConfigInput is an input type that accepts PolicyTier0GatewayIntersiteConfigArgs and PolicyTier0GatewayIntersiteConfigOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayIntersiteConfigInput` via:
//
//          PolicyTier0GatewayIntersiteConfigArgs{...}
type PolicyTier0GatewayIntersiteConfigInput interface {
	pulumi.Input

	ToPolicyTier0GatewayIntersiteConfigOutput() PolicyTier0GatewayIntersiteConfigOutput
	ToPolicyTier0GatewayIntersiteConfigOutputWithContext(context.Context) PolicyTier0GatewayIntersiteConfigOutput
}

type PolicyTier0GatewayIntersiteConfigArgs struct {
	FallbackSitePaths pulumi.StringArrayInput `pulumi:"fallbackSitePaths"`
	PrimarySitePath   pulumi.StringPtrInput   `pulumi:"primarySitePath"`
	TransitSubnet     pulumi.StringPtrInput   `pulumi:"transitSubnet"`
}

func (PolicyTier0GatewayIntersiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayIntersiteConfig)(nil)).Elem()
}

func (i PolicyTier0GatewayIntersiteConfigArgs) ToPolicyTier0GatewayIntersiteConfigOutput() PolicyTier0GatewayIntersiteConfigOutput {
	return i.ToPolicyTier0GatewayIntersiteConfigOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayIntersiteConfigArgs) ToPolicyTier0GatewayIntersiteConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayIntersiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayIntersiteConfigOutput)
}

func (i PolicyTier0GatewayIntersiteConfigArgs) ToPolicyTier0GatewayIntersiteConfigPtrOutput() PolicyTier0GatewayIntersiteConfigPtrOutput {
	return i.ToPolicyTier0GatewayIntersiteConfigPtrOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayIntersiteConfigArgs) ToPolicyTier0GatewayIntersiteConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayIntersiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayIntersiteConfigOutput).ToPolicyTier0GatewayIntersiteConfigPtrOutputWithContext(ctx)
}

// PolicyTier0GatewayIntersiteConfigPtrInput is an input type that accepts PolicyTier0GatewayIntersiteConfigArgs, PolicyTier0GatewayIntersiteConfigPtr and PolicyTier0GatewayIntersiteConfigPtrOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayIntersiteConfigPtrInput` via:
//
//          PolicyTier0GatewayIntersiteConfigArgs{...}
//
//  or:
//
//          nil
type PolicyTier0GatewayIntersiteConfigPtrInput interface {
	pulumi.Input

	ToPolicyTier0GatewayIntersiteConfigPtrOutput() PolicyTier0GatewayIntersiteConfigPtrOutput
	ToPolicyTier0GatewayIntersiteConfigPtrOutputWithContext(context.Context) PolicyTier0GatewayIntersiteConfigPtrOutput
}

type policyTier0GatewayIntersiteConfigPtrType PolicyTier0GatewayIntersiteConfigArgs

func PolicyTier0GatewayIntersiteConfigPtr(v *PolicyTier0GatewayIntersiteConfigArgs) PolicyTier0GatewayIntersiteConfigPtrInput {
	return (*policyTier0GatewayIntersiteConfigPtrType)(v)
}

func (*policyTier0GatewayIntersiteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayIntersiteConfig)(nil)).Elem()
}

func (i *policyTier0GatewayIntersiteConfigPtrType) ToPolicyTier0GatewayIntersiteConfigPtrOutput() PolicyTier0GatewayIntersiteConfigPtrOutput {
	return i.ToPolicyTier0GatewayIntersiteConfigPtrOutputWithContext(context.Background())
}

func (i *policyTier0GatewayIntersiteConfigPtrType) ToPolicyTier0GatewayIntersiteConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayIntersiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayIntersiteConfigPtrOutput)
}

type PolicyTier0GatewayIntersiteConfigOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayIntersiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayIntersiteConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayIntersiteConfigOutput) ToPolicyTier0GatewayIntersiteConfigOutput() PolicyTier0GatewayIntersiteConfigOutput {
	return o
}

func (o PolicyTier0GatewayIntersiteConfigOutput) ToPolicyTier0GatewayIntersiteConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayIntersiteConfigOutput {
	return o
}

func (o PolicyTier0GatewayIntersiteConfigOutput) ToPolicyTier0GatewayIntersiteConfigPtrOutput() PolicyTier0GatewayIntersiteConfigPtrOutput {
	return o.ToPolicyTier0GatewayIntersiteConfigPtrOutputWithContext(context.Background())
}

func (o PolicyTier0GatewayIntersiteConfigOutput) ToPolicyTier0GatewayIntersiteConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayIntersiteConfigPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayIntersiteConfig) *PolicyTier0GatewayIntersiteConfig {
		return &v
	}).(PolicyTier0GatewayIntersiteConfigPtrOutput)
}
func (o PolicyTier0GatewayIntersiteConfigOutput) FallbackSitePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayIntersiteConfig) []string { return v.FallbackSitePaths }).(pulumi.StringArrayOutput)
}

func (o PolicyTier0GatewayIntersiteConfigOutput) PrimarySitePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayIntersiteConfig) *string { return v.PrimarySitePath }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayIntersiteConfigOutput) TransitSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayIntersiteConfig) *string { return v.TransitSubnet }).(pulumi.StringPtrOutput)
}

type PolicyTier0GatewayIntersiteConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayIntersiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayIntersiteConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayIntersiteConfigPtrOutput) ToPolicyTier0GatewayIntersiteConfigPtrOutput() PolicyTier0GatewayIntersiteConfigPtrOutput {
	return o
}

func (o PolicyTier0GatewayIntersiteConfigPtrOutput) ToPolicyTier0GatewayIntersiteConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayIntersiteConfigPtrOutput {
	return o
}

func (o PolicyTier0GatewayIntersiteConfigPtrOutput) Elem() PolicyTier0GatewayIntersiteConfigOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayIntersiteConfig) PolicyTier0GatewayIntersiteConfig { return *v }).(PolicyTier0GatewayIntersiteConfigOutput)
}

func (o PolicyTier0GatewayIntersiteConfigPtrOutput) FallbackSitePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayIntersiteConfig) []string {
		if v == nil {
			return nil
		}
		return v.FallbackSitePaths
	}).(pulumi.StringArrayOutput)
}

func (o PolicyTier0GatewayIntersiteConfigPtrOutput) PrimarySitePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayIntersiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrimarySitePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayIntersiteConfigPtrOutput) TransitSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayIntersiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.TransitSubnet
	}).(pulumi.StringPtrOutput)
}

type PolicyTier0GatewayLocaleService struct {
	EdgeClusterPath      string                                               `pulumi:"edgeClusterPath"`
	Path                 *string                                              `pulumi:"path"`
	PreferredEdgePaths   []string                                             `pulumi:"preferredEdgePaths"`
	RedistributionConfig *PolicyTier0GatewayLocaleServiceRedistributionConfig `pulumi:"redistributionConfig"`
	Revision             *int                                                 `pulumi:"revision"`
}

// PolicyTier0GatewayLocaleServiceInput is an input type that accepts PolicyTier0GatewayLocaleServiceArgs and PolicyTier0GatewayLocaleServiceOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayLocaleServiceInput` via:
//
//          PolicyTier0GatewayLocaleServiceArgs{...}
type PolicyTier0GatewayLocaleServiceInput interface {
	pulumi.Input

	ToPolicyTier0GatewayLocaleServiceOutput() PolicyTier0GatewayLocaleServiceOutput
	ToPolicyTier0GatewayLocaleServiceOutputWithContext(context.Context) PolicyTier0GatewayLocaleServiceOutput
}

type PolicyTier0GatewayLocaleServiceArgs struct {
	EdgeClusterPath      pulumi.StringInput                                          `pulumi:"edgeClusterPath"`
	Path                 pulumi.StringPtrInput                                       `pulumi:"path"`
	PreferredEdgePaths   pulumi.StringArrayInput                                     `pulumi:"preferredEdgePaths"`
	RedistributionConfig PolicyTier0GatewayLocaleServiceRedistributionConfigPtrInput `pulumi:"redistributionConfig"`
	Revision             pulumi.IntPtrInput                                          `pulumi:"revision"`
}

func (PolicyTier0GatewayLocaleServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayLocaleService)(nil)).Elem()
}

func (i PolicyTier0GatewayLocaleServiceArgs) ToPolicyTier0GatewayLocaleServiceOutput() PolicyTier0GatewayLocaleServiceOutput {
	return i.ToPolicyTier0GatewayLocaleServiceOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayLocaleServiceArgs) ToPolicyTier0GatewayLocaleServiceOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayLocaleServiceOutput)
}

// PolicyTier0GatewayLocaleServiceArrayInput is an input type that accepts PolicyTier0GatewayLocaleServiceArray and PolicyTier0GatewayLocaleServiceArrayOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayLocaleServiceArrayInput` via:
//
//          PolicyTier0GatewayLocaleServiceArray{ PolicyTier0GatewayLocaleServiceArgs{...} }
type PolicyTier0GatewayLocaleServiceArrayInput interface {
	pulumi.Input

	ToPolicyTier0GatewayLocaleServiceArrayOutput() PolicyTier0GatewayLocaleServiceArrayOutput
	ToPolicyTier0GatewayLocaleServiceArrayOutputWithContext(context.Context) PolicyTier0GatewayLocaleServiceArrayOutput
}

type PolicyTier0GatewayLocaleServiceArray []PolicyTier0GatewayLocaleServiceInput

func (PolicyTier0GatewayLocaleServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayLocaleService)(nil)).Elem()
}

func (i PolicyTier0GatewayLocaleServiceArray) ToPolicyTier0GatewayLocaleServiceArrayOutput() PolicyTier0GatewayLocaleServiceArrayOutput {
	return i.ToPolicyTier0GatewayLocaleServiceArrayOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayLocaleServiceArray) ToPolicyTier0GatewayLocaleServiceArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayLocaleServiceArrayOutput)
}

type PolicyTier0GatewayLocaleServiceOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayLocaleServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayLocaleService)(nil)).Elem()
}

func (o PolicyTier0GatewayLocaleServiceOutput) ToPolicyTier0GatewayLocaleServiceOutput() PolicyTier0GatewayLocaleServiceOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceOutput) ToPolicyTier0GatewayLocaleServiceOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceOutput) EdgeClusterPath() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleService) string { return v.EdgeClusterPath }).(pulumi.StringOutput)
}

func (o PolicyTier0GatewayLocaleServiceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleService) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayLocaleServiceOutput) PreferredEdgePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleService) []string { return v.PreferredEdgePaths }).(pulumi.StringArrayOutput)
}

func (o PolicyTier0GatewayLocaleServiceOutput) RedistributionConfig() PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleService) *PolicyTier0GatewayLocaleServiceRedistributionConfig {
		return v.RedistributionConfig
	}).(PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput)
}

func (o PolicyTier0GatewayLocaleServiceOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleService) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

type PolicyTier0GatewayLocaleServiceArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayLocaleServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayLocaleService)(nil)).Elem()
}

func (o PolicyTier0GatewayLocaleServiceArrayOutput) ToPolicyTier0GatewayLocaleServiceArrayOutput() PolicyTier0GatewayLocaleServiceArrayOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceArrayOutput) ToPolicyTier0GatewayLocaleServiceArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceArrayOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceArrayOutput) Index(i pulumi.IntInput) PolicyTier0GatewayLocaleServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier0GatewayLocaleService {
		return vs[0].([]PolicyTier0GatewayLocaleService)[vs[1].(int)]
	}).(PolicyTier0GatewayLocaleServiceOutput)
}

type PolicyTier0GatewayLocaleServiceRedistributionConfig struct {
	Enabled *bool                                                     `pulumi:"enabled"`
	Rules   []PolicyTier0GatewayLocaleServiceRedistributionConfigRule `pulumi:"rules"`
}

// PolicyTier0GatewayLocaleServiceRedistributionConfigInput is an input type that accepts PolicyTier0GatewayLocaleServiceRedistributionConfigArgs and PolicyTier0GatewayLocaleServiceRedistributionConfigOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayLocaleServiceRedistributionConfigInput` via:
//
//          PolicyTier0GatewayLocaleServiceRedistributionConfigArgs{...}
type PolicyTier0GatewayLocaleServiceRedistributionConfigInput interface {
	pulumi.Input

	ToPolicyTier0GatewayLocaleServiceRedistributionConfigOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigOutput
	ToPolicyTier0GatewayLocaleServiceRedistributionConfigOutputWithContext(context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigOutput
}

type PolicyTier0GatewayLocaleServiceRedistributionConfigArgs struct {
	Enabled pulumi.BoolPtrInput                                               `pulumi:"enabled"`
	Rules   PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayInput `pulumi:"rules"`
}

func (PolicyTier0GatewayLocaleServiceRedistributionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayLocaleServiceRedistributionConfig)(nil)).Elem()
}

func (i PolicyTier0GatewayLocaleServiceRedistributionConfigArgs) ToPolicyTier0GatewayLocaleServiceRedistributionConfigOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigOutput {
	return i.ToPolicyTier0GatewayLocaleServiceRedistributionConfigOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayLocaleServiceRedistributionConfigArgs) ToPolicyTier0GatewayLocaleServiceRedistributionConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayLocaleServiceRedistributionConfigOutput)
}

func (i PolicyTier0GatewayLocaleServiceRedistributionConfigArgs) ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput {
	return i.ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayLocaleServiceRedistributionConfigArgs) ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayLocaleServiceRedistributionConfigOutput).ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutputWithContext(ctx)
}

// PolicyTier0GatewayLocaleServiceRedistributionConfigPtrInput is an input type that accepts PolicyTier0GatewayLocaleServiceRedistributionConfigArgs, PolicyTier0GatewayLocaleServiceRedistributionConfigPtr and PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayLocaleServiceRedistributionConfigPtrInput` via:
//
//          PolicyTier0GatewayLocaleServiceRedistributionConfigArgs{...}
//
//  or:
//
//          nil
type PolicyTier0GatewayLocaleServiceRedistributionConfigPtrInput interface {
	pulumi.Input

	ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput
	ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutputWithContext(context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput
}

type policyTier0GatewayLocaleServiceRedistributionConfigPtrType PolicyTier0GatewayLocaleServiceRedistributionConfigArgs

func PolicyTier0GatewayLocaleServiceRedistributionConfigPtr(v *PolicyTier0GatewayLocaleServiceRedistributionConfigArgs) PolicyTier0GatewayLocaleServiceRedistributionConfigPtrInput {
	return (*policyTier0GatewayLocaleServiceRedistributionConfigPtrType)(v)
}

func (*policyTier0GatewayLocaleServiceRedistributionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayLocaleServiceRedistributionConfig)(nil)).Elem()
}

func (i *policyTier0GatewayLocaleServiceRedistributionConfigPtrType) ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput {
	return i.ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutputWithContext(context.Background())
}

func (i *policyTier0GatewayLocaleServiceRedistributionConfigPtrType) ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput)
}

type PolicyTier0GatewayLocaleServiceRedistributionConfigOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayLocaleServiceRedistributionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayLocaleServiceRedistributionConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigOutput) ToPolicyTier0GatewayLocaleServiceRedistributionConfigOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigOutput) ToPolicyTier0GatewayLocaleServiceRedistributionConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigOutput) ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput {
	return o.ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutputWithContext(context.Background())
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigOutput) ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleServiceRedistributionConfig) *PolicyTier0GatewayLocaleServiceRedistributionConfig {
		return &v
	}).(PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput)
}
func (o PolicyTier0GatewayLocaleServiceRedistributionConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleServiceRedistributionConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigOutput) Rules() PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleServiceRedistributionConfig) []PolicyTier0GatewayLocaleServiceRedistributionConfigRule {
		return v.Rules
	}).(PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput)
}

type PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayLocaleServiceRedistributionConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput) ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput) ToPolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput) Elem() PolicyTier0GatewayLocaleServiceRedistributionConfigOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayLocaleServiceRedistributionConfig) PolicyTier0GatewayLocaleServiceRedistributionConfig {
		return *v
	}).(PolicyTier0GatewayLocaleServiceRedistributionConfigOutput)
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayLocaleServiceRedistributionConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput) Rules() PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayLocaleServiceRedistributionConfig) []PolicyTier0GatewayLocaleServiceRedistributionConfigRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput)
}

type PolicyTier0GatewayLocaleServiceRedistributionConfigRule struct {
	Name         *string  `pulumi:"name"`
	RouteMapPath *string  `pulumi:"routeMapPath"`
	Types        []string `pulumi:"types"`
}

// PolicyTier0GatewayLocaleServiceRedistributionConfigRuleInput is an input type that accepts PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArgs and PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayLocaleServiceRedistributionConfigRuleInput` via:
//
//          PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArgs{...}
type PolicyTier0GatewayLocaleServiceRedistributionConfigRuleInput interface {
	pulumi.Input

	ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput
	ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutputWithContext(context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput
}

type PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArgs struct {
	Name         pulumi.StringPtrInput   `pulumi:"name"`
	RouteMapPath pulumi.StringPtrInput   `pulumi:"routeMapPath"`
	Types        pulumi.StringArrayInput `pulumi:"types"`
}

func (PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayLocaleServiceRedistributionConfigRule)(nil)).Elem()
}

func (i PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArgs) ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput {
	return i.ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArgs) ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput)
}

// PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayInput is an input type that accepts PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArray and PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayInput` via:
//
//          PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArray{ PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArgs{...} }
type PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayInput interface {
	pulumi.Input

	ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput
	ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutputWithContext(context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput
}

type PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArray []PolicyTier0GatewayLocaleServiceRedistributionConfigRuleInput

func (PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayLocaleServiceRedistributionConfigRule)(nil)).Elem()
}

func (i PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArray) ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput {
	return i.ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArray) ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput)
}

type PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayLocaleServiceRedistributionConfigRule)(nil)).Elem()
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput) ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput) ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleServiceRedistributionConfigRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput) RouteMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleServiceRedistributionConfigRule) *string { return v.RouteMapPath }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayLocaleServiceRedistributionConfigRule) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayLocaleServiceRedistributionConfigRule)(nil)).Elem()
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput) ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput() PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput) ToPolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput {
	return o
}

func (o PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput) Index(i pulumi.IntInput) PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier0GatewayLocaleServiceRedistributionConfigRule {
		return vs[0].([]PolicyTier0GatewayLocaleServiceRedistributionConfigRule)[vs[1].(int)]
	}).(PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput)
}

type PolicyTier0GatewayRedistributionConfig struct {
	Enabled *bool                                        `pulumi:"enabled"`
	Rules   []PolicyTier0GatewayRedistributionConfigRule `pulumi:"rules"`
}

// PolicyTier0GatewayRedistributionConfigInput is an input type that accepts PolicyTier0GatewayRedistributionConfigArgs and PolicyTier0GatewayRedistributionConfigOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayRedistributionConfigInput` via:
//
//          PolicyTier0GatewayRedistributionConfigArgs{...}
type PolicyTier0GatewayRedistributionConfigInput interface {
	pulumi.Input

	ToPolicyTier0GatewayRedistributionConfigOutput() PolicyTier0GatewayRedistributionConfigOutput
	ToPolicyTier0GatewayRedistributionConfigOutputWithContext(context.Context) PolicyTier0GatewayRedistributionConfigOutput
}

type PolicyTier0GatewayRedistributionConfigArgs struct {
	Enabled pulumi.BoolPtrInput                                  `pulumi:"enabled"`
	Rules   PolicyTier0GatewayRedistributionConfigRuleArrayInput `pulumi:"rules"`
}

func (PolicyTier0GatewayRedistributionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayRedistributionConfig)(nil)).Elem()
}

func (i PolicyTier0GatewayRedistributionConfigArgs) ToPolicyTier0GatewayRedistributionConfigOutput() PolicyTier0GatewayRedistributionConfigOutput {
	return i.ToPolicyTier0GatewayRedistributionConfigOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayRedistributionConfigArgs) ToPolicyTier0GatewayRedistributionConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayRedistributionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayRedistributionConfigOutput)
}

func (i PolicyTier0GatewayRedistributionConfigArgs) ToPolicyTier0GatewayRedistributionConfigPtrOutput() PolicyTier0GatewayRedistributionConfigPtrOutput {
	return i.ToPolicyTier0GatewayRedistributionConfigPtrOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayRedistributionConfigArgs) ToPolicyTier0GatewayRedistributionConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayRedistributionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayRedistributionConfigOutput).ToPolicyTier0GatewayRedistributionConfigPtrOutputWithContext(ctx)
}

// PolicyTier0GatewayRedistributionConfigPtrInput is an input type that accepts PolicyTier0GatewayRedistributionConfigArgs, PolicyTier0GatewayRedistributionConfigPtr and PolicyTier0GatewayRedistributionConfigPtrOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayRedistributionConfigPtrInput` via:
//
//          PolicyTier0GatewayRedistributionConfigArgs{...}
//
//  or:
//
//          nil
type PolicyTier0GatewayRedistributionConfigPtrInput interface {
	pulumi.Input

	ToPolicyTier0GatewayRedistributionConfigPtrOutput() PolicyTier0GatewayRedistributionConfigPtrOutput
	ToPolicyTier0GatewayRedistributionConfigPtrOutputWithContext(context.Context) PolicyTier0GatewayRedistributionConfigPtrOutput
}

type policyTier0GatewayRedistributionConfigPtrType PolicyTier0GatewayRedistributionConfigArgs

func PolicyTier0GatewayRedistributionConfigPtr(v *PolicyTier0GatewayRedistributionConfigArgs) PolicyTier0GatewayRedistributionConfigPtrInput {
	return (*policyTier0GatewayRedistributionConfigPtrType)(v)
}

func (*policyTier0GatewayRedistributionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayRedistributionConfig)(nil)).Elem()
}

func (i *policyTier0GatewayRedistributionConfigPtrType) ToPolicyTier0GatewayRedistributionConfigPtrOutput() PolicyTier0GatewayRedistributionConfigPtrOutput {
	return i.ToPolicyTier0GatewayRedistributionConfigPtrOutputWithContext(context.Background())
}

func (i *policyTier0GatewayRedistributionConfigPtrType) ToPolicyTier0GatewayRedistributionConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayRedistributionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayRedistributionConfigPtrOutput)
}

type PolicyTier0GatewayRedistributionConfigOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayRedistributionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayRedistributionConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayRedistributionConfigOutput) ToPolicyTier0GatewayRedistributionConfigOutput() PolicyTier0GatewayRedistributionConfigOutput {
	return o
}

func (o PolicyTier0GatewayRedistributionConfigOutput) ToPolicyTier0GatewayRedistributionConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayRedistributionConfigOutput {
	return o
}

func (o PolicyTier0GatewayRedistributionConfigOutput) ToPolicyTier0GatewayRedistributionConfigPtrOutput() PolicyTier0GatewayRedistributionConfigPtrOutput {
	return o.ToPolicyTier0GatewayRedistributionConfigPtrOutputWithContext(context.Background())
}

func (o PolicyTier0GatewayRedistributionConfigOutput) ToPolicyTier0GatewayRedistributionConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayRedistributionConfigPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayRedistributionConfig) *PolicyTier0GatewayRedistributionConfig {
		return &v
	}).(PolicyTier0GatewayRedistributionConfigPtrOutput)
}
func (o PolicyTier0GatewayRedistributionConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayRedistributionConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayRedistributionConfigOutput) Rules() PolicyTier0GatewayRedistributionConfigRuleArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayRedistributionConfig) []PolicyTier0GatewayRedistributionConfigRule {
		return v.Rules
	}).(PolicyTier0GatewayRedistributionConfigRuleArrayOutput)
}

type PolicyTier0GatewayRedistributionConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayRedistributionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayRedistributionConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayRedistributionConfigPtrOutput) ToPolicyTier0GatewayRedistributionConfigPtrOutput() PolicyTier0GatewayRedistributionConfigPtrOutput {
	return o
}

func (o PolicyTier0GatewayRedistributionConfigPtrOutput) ToPolicyTier0GatewayRedistributionConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayRedistributionConfigPtrOutput {
	return o
}

func (o PolicyTier0GatewayRedistributionConfigPtrOutput) Elem() PolicyTier0GatewayRedistributionConfigOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayRedistributionConfig) PolicyTier0GatewayRedistributionConfig { return *v }).(PolicyTier0GatewayRedistributionConfigOutput)
}

func (o PolicyTier0GatewayRedistributionConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayRedistributionConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayRedistributionConfigPtrOutput) Rules() PolicyTier0GatewayRedistributionConfigRuleArrayOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayRedistributionConfig) []PolicyTier0GatewayRedistributionConfigRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(PolicyTier0GatewayRedistributionConfigRuleArrayOutput)
}

type PolicyTier0GatewayRedistributionConfigRule struct {
	Name         *string  `pulumi:"name"`
	RouteMapPath *string  `pulumi:"routeMapPath"`
	Types        []string `pulumi:"types"`
}

// PolicyTier0GatewayRedistributionConfigRuleInput is an input type that accepts PolicyTier0GatewayRedistributionConfigRuleArgs and PolicyTier0GatewayRedistributionConfigRuleOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayRedistributionConfigRuleInput` via:
//
//          PolicyTier0GatewayRedistributionConfigRuleArgs{...}
type PolicyTier0GatewayRedistributionConfigRuleInput interface {
	pulumi.Input

	ToPolicyTier0GatewayRedistributionConfigRuleOutput() PolicyTier0GatewayRedistributionConfigRuleOutput
	ToPolicyTier0GatewayRedistributionConfigRuleOutputWithContext(context.Context) PolicyTier0GatewayRedistributionConfigRuleOutput
}

type PolicyTier0GatewayRedistributionConfigRuleArgs struct {
	Name         pulumi.StringPtrInput   `pulumi:"name"`
	RouteMapPath pulumi.StringPtrInput   `pulumi:"routeMapPath"`
	Types        pulumi.StringArrayInput `pulumi:"types"`
}

func (PolicyTier0GatewayRedistributionConfigRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayRedistributionConfigRule)(nil)).Elem()
}

func (i PolicyTier0GatewayRedistributionConfigRuleArgs) ToPolicyTier0GatewayRedistributionConfigRuleOutput() PolicyTier0GatewayRedistributionConfigRuleOutput {
	return i.ToPolicyTier0GatewayRedistributionConfigRuleOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayRedistributionConfigRuleArgs) ToPolicyTier0GatewayRedistributionConfigRuleOutputWithContext(ctx context.Context) PolicyTier0GatewayRedistributionConfigRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayRedistributionConfigRuleOutput)
}

// PolicyTier0GatewayRedistributionConfigRuleArrayInput is an input type that accepts PolicyTier0GatewayRedistributionConfigRuleArray and PolicyTier0GatewayRedistributionConfigRuleArrayOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayRedistributionConfigRuleArrayInput` via:
//
//          PolicyTier0GatewayRedistributionConfigRuleArray{ PolicyTier0GatewayRedistributionConfigRuleArgs{...} }
type PolicyTier0GatewayRedistributionConfigRuleArrayInput interface {
	pulumi.Input

	ToPolicyTier0GatewayRedistributionConfigRuleArrayOutput() PolicyTier0GatewayRedistributionConfigRuleArrayOutput
	ToPolicyTier0GatewayRedistributionConfigRuleArrayOutputWithContext(context.Context) PolicyTier0GatewayRedistributionConfigRuleArrayOutput
}

type PolicyTier0GatewayRedistributionConfigRuleArray []PolicyTier0GatewayRedistributionConfigRuleInput

func (PolicyTier0GatewayRedistributionConfigRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayRedistributionConfigRule)(nil)).Elem()
}

func (i PolicyTier0GatewayRedistributionConfigRuleArray) ToPolicyTier0GatewayRedistributionConfigRuleArrayOutput() PolicyTier0GatewayRedistributionConfigRuleArrayOutput {
	return i.ToPolicyTier0GatewayRedistributionConfigRuleArrayOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayRedistributionConfigRuleArray) ToPolicyTier0GatewayRedistributionConfigRuleArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayRedistributionConfigRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayRedistributionConfigRuleArrayOutput)
}

type PolicyTier0GatewayRedistributionConfigRuleOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayRedistributionConfigRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayRedistributionConfigRule)(nil)).Elem()
}

func (o PolicyTier0GatewayRedistributionConfigRuleOutput) ToPolicyTier0GatewayRedistributionConfigRuleOutput() PolicyTier0GatewayRedistributionConfigRuleOutput {
	return o
}

func (o PolicyTier0GatewayRedistributionConfigRuleOutput) ToPolicyTier0GatewayRedistributionConfigRuleOutputWithContext(ctx context.Context) PolicyTier0GatewayRedistributionConfigRuleOutput {
	return o
}

func (o PolicyTier0GatewayRedistributionConfigRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayRedistributionConfigRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayRedistributionConfigRuleOutput) RouteMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayRedistributionConfigRule) *string { return v.RouteMapPath }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayRedistributionConfigRuleOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayRedistributionConfigRule) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type PolicyTier0GatewayRedistributionConfigRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayRedistributionConfigRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayRedistributionConfigRule)(nil)).Elem()
}

func (o PolicyTier0GatewayRedistributionConfigRuleArrayOutput) ToPolicyTier0GatewayRedistributionConfigRuleArrayOutput() PolicyTier0GatewayRedistributionConfigRuleArrayOutput {
	return o
}

func (o PolicyTier0GatewayRedistributionConfigRuleArrayOutput) ToPolicyTier0GatewayRedistributionConfigRuleArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayRedistributionConfigRuleArrayOutput {
	return o
}

func (o PolicyTier0GatewayRedistributionConfigRuleArrayOutput) Index(i pulumi.IntInput) PolicyTier0GatewayRedistributionConfigRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier0GatewayRedistributionConfigRule {
		return vs[0].([]PolicyTier0GatewayRedistributionConfigRule)[vs[1].(int)]
	}).(PolicyTier0GatewayRedistributionConfigRuleOutput)
}

type PolicyTier0GatewayTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyTier0GatewayTagInput is an input type that accepts PolicyTier0GatewayTagArgs and PolicyTier0GatewayTagOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayTagInput` via:
//
//          PolicyTier0GatewayTagArgs{...}
type PolicyTier0GatewayTagInput interface {
	pulumi.Input

	ToPolicyTier0GatewayTagOutput() PolicyTier0GatewayTagOutput
	ToPolicyTier0GatewayTagOutputWithContext(context.Context) PolicyTier0GatewayTagOutput
}

type PolicyTier0GatewayTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyTier0GatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayTag)(nil)).Elem()
}

func (i PolicyTier0GatewayTagArgs) ToPolicyTier0GatewayTagOutput() PolicyTier0GatewayTagOutput {
	return i.ToPolicyTier0GatewayTagOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayTagArgs) ToPolicyTier0GatewayTagOutputWithContext(ctx context.Context) PolicyTier0GatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayTagOutput)
}

// PolicyTier0GatewayTagArrayInput is an input type that accepts PolicyTier0GatewayTagArray and PolicyTier0GatewayTagArrayOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayTagArrayInput` via:
//
//          PolicyTier0GatewayTagArray{ PolicyTier0GatewayTagArgs{...} }
type PolicyTier0GatewayTagArrayInput interface {
	pulumi.Input

	ToPolicyTier0GatewayTagArrayOutput() PolicyTier0GatewayTagArrayOutput
	ToPolicyTier0GatewayTagArrayOutputWithContext(context.Context) PolicyTier0GatewayTagArrayOutput
}

type PolicyTier0GatewayTagArray []PolicyTier0GatewayTagInput

func (PolicyTier0GatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayTag)(nil)).Elem()
}

func (i PolicyTier0GatewayTagArray) ToPolicyTier0GatewayTagArrayOutput() PolicyTier0GatewayTagArrayOutput {
	return i.ToPolicyTier0GatewayTagArrayOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayTagArray) ToPolicyTier0GatewayTagArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayTagArrayOutput)
}

type PolicyTier0GatewayTagOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayTag)(nil)).Elem()
}

func (o PolicyTier0GatewayTagOutput) ToPolicyTier0GatewayTagOutput() PolicyTier0GatewayTagOutput {
	return o
}

func (o PolicyTier0GatewayTagOutput) ToPolicyTier0GatewayTagOutputWithContext(ctx context.Context) PolicyTier0GatewayTagOutput {
	return o
}

func (o PolicyTier0GatewayTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyTier0GatewayTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayTag)(nil)).Elem()
}

func (o PolicyTier0GatewayTagArrayOutput) ToPolicyTier0GatewayTagArrayOutput() PolicyTier0GatewayTagArrayOutput {
	return o
}

func (o PolicyTier0GatewayTagArrayOutput) ToPolicyTier0GatewayTagArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayTagArrayOutput {
	return o
}

func (o PolicyTier0GatewayTagArrayOutput) Index(i pulumi.IntInput) PolicyTier0GatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier0GatewayTag {
		return vs[0].([]PolicyTier0GatewayTag)[vs[1].(int)]
	}).(PolicyTier0GatewayTagOutput)
}

type PolicyTier0GatewayVrfConfig struct {
	EvpnTransitVni     *int                                    `pulumi:"evpnTransitVni"`
	GatewayPath        string                                  `pulumi:"gatewayPath"`
	Path               *string                                 `pulumi:"path"`
	RouteDistinguisher *string                                 `pulumi:"routeDistinguisher"`
	RouteTarget        *PolicyTier0GatewayVrfConfigRouteTarget `pulumi:"routeTarget"`
	Tags               []PolicyTier0GatewayVrfConfigTag        `pulumi:"tags"`
}

// PolicyTier0GatewayVrfConfigInput is an input type that accepts PolicyTier0GatewayVrfConfigArgs and PolicyTier0GatewayVrfConfigOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayVrfConfigInput` via:
//
//          PolicyTier0GatewayVrfConfigArgs{...}
type PolicyTier0GatewayVrfConfigInput interface {
	pulumi.Input

	ToPolicyTier0GatewayVrfConfigOutput() PolicyTier0GatewayVrfConfigOutput
	ToPolicyTier0GatewayVrfConfigOutputWithContext(context.Context) PolicyTier0GatewayVrfConfigOutput
}

type PolicyTier0GatewayVrfConfigArgs struct {
	EvpnTransitVni     pulumi.IntPtrInput                             `pulumi:"evpnTransitVni"`
	GatewayPath        pulumi.StringInput                             `pulumi:"gatewayPath"`
	Path               pulumi.StringPtrInput                          `pulumi:"path"`
	RouteDistinguisher pulumi.StringPtrInput                          `pulumi:"routeDistinguisher"`
	RouteTarget        PolicyTier0GatewayVrfConfigRouteTargetPtrInput `pulumi:"routeTarget"`
	Tags               PolicyTier0GatewayVrfConfigTagArrayInput       `pulumi:"tags"`
}

func (PolicyTier0GatewayVrfConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayVrfConfig)(nil)).Elem()
}

func (i PolicyTier0GatewayVrfConfigArgs) ToPolicyTier0GatewayVrfConfigOutput() PolicyTier0GatewayVrfConfigOutput {
	return i.ToPolicyTier0GatewayVrfConfigOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayVrfConfigArgs) ToPolicyTier0GatewayVrfConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayVrfConfigOutput)
}

func (i PolicyTier0GatewayVrfConfigArgs) ToPolicyTier0GatewayVrfConfigPtrOutput() PolicyTier0GatewayVrfConfigPtrOutput {
	return i.ToPolicyTier0GatewayVrfConfigPtrOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayVrfConfigArgs) ToPolicyTier0GatewayVrfConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayVrfConfigOutput).ToPolicyTier0GatewayVrfConfigPtrOutputWithContext(ctx)
}

// PolicyTier0GatewayVrfConfigPtrInput is an input type that accepts PolicyTier0GatewayVrfConfigArgs, PolicyTier0GatewayVrfConfigPtr and PolicyTier0GatewayVrfConfigPtrOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayVrfConfigPtrInput` via:
//
//          PolicyTier0GatewayVrfConfigArgs{...}
//
//  or:
//
//          nil
type PolicyTier0GatewayVrfConfigPtrInput interface {
	pulumi.Input

	ToPolicyTier0GatewayVrfConfigPtrOutput() PolicyTier0GatewayVrfConfigPtrOutput
	ToPolicyTier0GatewayVrfConfigPtrOutputWithContext(context.Context) PolicyTier0GatewayVrfConfigPtrOutput
}

type policyTier0GatewayVrfConfigPtrType PolicyTier0GatewayVrfConfigArgs

func PolicyTier0GatewayVrfConfigPtr(v *PolicyTier0GatewayVrfConfigArgs) PolicyTier0GatewayVrfConfigPtrInput {
	return (*policyTier0GatewayVrfConfigPtrType)(v)
}

func (*policyTier0GatewayVrfConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayVrfConfig)(nil)).Elem()
}

func (i *policyTier0GatewayVrfConfigPtrType) ToPolicyTier0GatewayVrfConfigPtrOutput() PolicyTier0GatewayVrfConfigPtrOutput {
	return i.ToPolicyTier0GatewayVrfConfigPtrOutputWithContext(context.Background())
}

func (i *policyTier0GatewayVrfConfigPtrType) ToPolicyTier0GatewayVrfConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayVrfConfigPtrOutput)
}

type PolicyTier0GatewayVrfConfigOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayVrfConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayVrfConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayVrfConfigOutput) ToPolicyTier0GatewayVrfConfigOutput() PolicyTier0GatewayVrfConfigOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigOutput) ToPolicyTier0GatewayVrfConfigOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigOutput) ToPolicyTier0GatewayVrfConfigPtrOutput() PolicyTier0GatewayVrfConfigPtrOutput {
	return o.ToPolicyTier0GatewayVrfConfigPtrOutputWithContext(context.Background())
}

func (o PolicyTier0GatewayVrfConfigOutput) ToPolicyTier0GatewayVrfConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfig) *PolicyTier0GatewayVrfConfig {
		return &v
	}).(PolicyTier0GatewayVrfConfigPtrOutput)
}
func (o PolicyTier0GatewayVrfConfigOutput) EvpnTransitVni() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfig) *int { return v.EvpnTransitVni }).(pulumi.IntPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigOutput) GatewayPath() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfig) string { return v.GatewayPath }).(pulumi.StringOutput)
}

func (o PolicyTier0GatewayVrfConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigOutput) RouteDistinguisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfig) *string { return v.RouteDistinguisher }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigOutput) RouteTarget() PolicyTier0GatewayVrfConfigRouteTargetPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfig) *PolicyTier0GatewayVrfConfigRouteTarget { return v.RouteTarget }).(PolicyTier0GatewayVrfConfigRouteTargetPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigOutput) Tags() PolicyTier0GatewayVrfConfigTagArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfig) []PolicyTier0GatewayVrfConfigTag { return v.Tags }).(PolicyTier0GatewayVrfConfigTagArrayOutput)
}

type PolicyTier0GatewayVrfConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayVrfConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayVrfConfig)(nil)).Elem()
}

func (o PolicyTier0GatewayVrfConfigPtrOutput) ToPolicyTier0GatewayVrfConfigPtrOutput() PolicyTier0GatewayVrfConfigPtrOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigPtrOutput) ToPolicyTier0GatewayVrfConfigPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigPtrOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigPtrOutput) Elem() PolicyTier0GatewayVrfConfigOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfig) PolicyTier0GatewayVrfConfig { return *v }).(PolicyTier0GatewayVrfConfigOutput)
}

func (o PolicyTier0GatewayVrfConfigPtrOutput) EvpnTransitVni() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfig) *int {
		if v == nil {
			return nil
		}
		return v.EvpnTransitVni
	}).(pulumi.IntPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigPtrOutput) GatewayPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfig) *string {
		if v == nil {
			return nil
		}
		return &v.GatewayPath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigPtrOutput) RouteDistinguisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfig) *string {
		if v == nil {
			return nil
		}
		return v.RouteDistinguisher
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigPtrOutput) RouteTarget() PolicyTier0GatewayVrfConfigRouteTargetPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfig) *PolicyTier0GatewayVrfConfigRouteTarget {
		if v == nil {
			return nil
		}
		return v.RouteTarget
	}).(PolicyTier0GatewayVrfConfigRouteTargetPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigPtrOutput) Tags() PolicyTier0GatewayVrfConfigTagArrayOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfig) []PolicyTier0GatewayVrfConfigTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(PolicyTier0GatewayVrfConfigTagArrayOutput)
}

type PolicyTier0GatewayVrfConfigRouteTarget struct {
	AddressFamily *string  `pulumi:"addressFamily"`
	AutoMode      *bool    `pulumi:"autoMode"`
	ExportTargets []string `pulumi:"exportTargets"`
	ImportTargets []string `pulumi:"importTargets"`
}

// PolicyTier0GatewayVrfConfigRouteTargetInput is an input type that accepts PolicyTier0GatewayVrfConfigRouteTargetArgs and PolicyTier0GatewayVrfConfigRouteTargetOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayVrfConfigRouteTargetInput` via:
//
//          PolicyTier0GatewayVrfConfigRouteTargetArgs{...}
type PolicyTier0GatewayVrfConfigRouteTargetInput interface {
	pulumi.Input

	ToPolicyTier0GatewayVrfConfigRouteTargetOutput() PolicyTier0GatewayVrfConfigRouteTargetOutput
	ToPolicyTier0GatewayVrfConfigRouteTargetOutputWithContext(context.Context) PolicyTier0GatewayVrfConfigRouteTargetOutput
}

type PolicyTier0GatewayVrfConfigRouteTargetArgs struct {
	AddressFamily pulumi.StringPtrInput   `pulumi:"addressFamily"`
	AutoMode      pulumi.BoolPtrInput     `pulumi:"autoMode"`
	ExportTargets pulumi.StringArrayInput `pulumi:"exportTargets"`
	ImportTargets pulumi.StringArrayInput `pulumi:"importTargets"`
}

func (PolicyTier0GatewayVrfConfigRouteTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayVrfConfigRouteTarget)(nil)).Elem()
}

func (i PolicyTier0GatewayVrfConfigRouteTargetArgs) ToPolicyTier0GatewayVrfConfigRouteTargetOutput() PolicyTier0GatewayVrfConfigRouteTargetOutput {
	return i.ToPolicyTier0GatewayVrfConfigRouteTargetOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayVrfConfigRouteTargetArgs) ToPolicyTier0GatewayVrfConfigRouteTargetOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigRouteTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayVrfConfigRouteTargetOutput)
}

func (i PolicyTier0GatewayVrfConfigRouteTargetArgs) ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutput() PolicyTier0GatewayVrfConfigRouteTargetPtrOutput {
	return i.ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayVrfConfigRouteTargetArgs) ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigRouteTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayVrfConfigRouteTargetOutput).ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutputWithContext(ctx)
}

// PolicyTier0GatewayVrfConfigRouteTargetPtrInput is an input type that accepts PolicyTier0GatewayVrfConfigRouteTargetArgs, PolicyTier0GatewayVrfConfigRouteTargetPtr and PolicyTier0GatewayVrfConfigRouteTargetPtrOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayVrfConfigRouteTargetPtrInput` via:
//
//          PolicyTier0GatewayVrfConfigRouteTargetArgs{...}
//
//  or:
//
//          nil
type PolicyTier0GatewayVrfConfigRouteTargetPtrInput interface {
	pulumi.Input

	ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutput() PolicyTier0GatewayVrfConfigRouteTargetPtrOutput
	ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutputWithContext(context.Context) PolicyTier0GatewayVrfConfigRouteTargetPtrOutput
}

type policyTier0GatewayVrfConfigRouteTargetPtrType PolicyTier0GatewayVrfConfigRouteTargetArgs

func PolicyTier0GatewayVrfConfigRouteTargetPtr(v *PolicyTier0GatewayVrfConfigRouteTargetArgs) PolicyTier0GatewayVrfConfigRouteTargetPtrInput {
	return (*policyTier0GatewayVrfConfigRouteTargetPtrType)(v)
}

func (*policyTier0GatewayVrfConfigRouteTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayVrfConfigRouteTarget)(nil)).Elem()
}

func (i *policyTier0GatewayVrfConfigRouteTargetPtrType) ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutput() PolicyTier0GatewayVrfConfigRouteTargetPtrOutput {
	return i.ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutputWithContext(context.Background())
}

func (i *policyTier0GatewayVrfConfigRouteTargetPtrType) ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigRouteTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayVrfConfigRouteTargetPtrOutput)
}

type PolicyTier0GatewayVrfConfigRouteTargetOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayVrfConfigRouteTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayVrfConfigRouteTarget)(nil)).Elem()
}

func (o PolicyTier0GatewayVrfConfigRouteTargetOutput) ToPolicyTier0GatewayVrfConfigRouteTargetOutput() PolicyTier0GatewayVrfConfigRouteTargetOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigRouteTargetOutput) ToPolicyTier0GatewayVrfConfigRouteTargetOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigRouteTargetOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigRouteTargetOutput) ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutput() PolicyTier0GatewayVrfConfigRouteTargetPtrOutput {
	return o.ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutputWithContext(context.Background())
}

func (o PolicyTier0GatewayVrfConfigRouteTargetOutput) ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigRouteTargetPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfigRouteTarget) *PolicyTier0GatewayVrfConfigRouteTarget {
		return &v
	}).(PolicyTier0GatewayVrfConfigRouteTargetPtrOutput)
}
func (o PolicyTier0GatewayVrfConfigRouteTargetOutput) AddressFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfigRouteTarget) *string { return v.AddressFamily }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigRouteTargetOutput) AutoMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfigRouteTarget) *bool { return v.AutoMode }).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigRouteTargetOutput) ExportTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfigRouteTarget) []string { return v.ExportTargets }).(pulumi.StringArrayOutput)
}

func (o PolicyTier0GatewayVrfConfigRouteTargetOutput) ImportTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfigRouteTarget) []string { return v.ImportTargets }).(pulumi.StringArrayOutput)
}

type PolicyTier0GatewayVrfConfigRouteTargetPtrOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayVrfConfigRouteTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier0GatewayVrfConfigRouteTarget)(nil)).Elem()
}

func (o PolicyTier0GatewayVrfConfigRouteTargetPtrOutput) ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutput() PolicyTier0GatewayVrfConfigRouteTargetPtrOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigRouteTargetPtrOutput) ToPolicyTier0GatewayVrfConfigRouteTargetPtrOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigRouteTargetPtrOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigRouteTargetPtrOutput) Elem() PolicyTier0GatewayVrfConfigRouteTargetOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfigRouteTarget) PolicyTier0GatewayVrfConfigRouteTarget { return *v }).(PolicyTier0GatewayVrfConfigRouteTargetOutput)
}

func (o PolicyTier0GatewayVrfConfigRouteTargetPtrOutput) AddressFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfigRouteTarget) *string {
		if v == nil {
			return nil
		}
		return v.AddressFamily
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigRouteTargetPtrOutput) AutoMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfigRouteTarget) *bool {
		if v == nil {
			return nil
		}
		return v.AutoMode
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigRouteTargetPtrOutput) ExportTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfigRouteTarget) []string {
		if v == nil {
			return nil
		}
		return v.ExportTargets
	}).(pulumi.StringArrayOutput)
}

func (o PolicyTier0GatewayVrfConfigRouteTargetPtrOutput) ImportTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyTier0GatewayVrfConfigRouteTarget) []string {
		if v == nil {
			return nil
		}
		return v.ImportTargets
	}).(pulumi.StringArrayOutput)
}

type PolicyTier0GatewayVrfConfigTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyTier0GatewayVrfConfigTagInput is an input type that accepts PolicyTier0GatewayVrfConfigTagArgs and PolicyTier0GatewayVrfConfigTagOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayVrfConfigTagInput` via:
//
//          PolicyTier0GatewayVrfConfigTagArgs{...}
type PolicyTier0GatewayVrfConfigTagInput interface {
	pulumi.Input

	ToPolicyTier0GatewayVrfConfigTagOutput() PolicyTier0GatewayVrfConfigTagOutput
	ToPolicyTier0GatewayVrfConfigTagOutputWithContext(context.Context) PolicyTier0GatewayVrfConfigTagOutput
}

type PolicyTier0GatewayVrfConfigTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyTier0GatewayVrfConfigTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayVrfConfigTag)(nil)).Elem()
}

func (i PolicyTier0GatewayVrfConfigTagArgs) ToPolicyTier0GatewayVrfConfigTagOutput() PolicyTier0GatewayVrfConfigTagOutput {
	return i.ToPolicyTier0GatewayVrfConfigTagOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayVrfConfigTagArgs) ToPolicyTier0GatewayVrfConfigTagOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayVrfConfigTagOutput)
}

// PolicyTier0GatewayVrfConfigTagArrayInput is an input type that accepts PolicyTier0GatewayVrfConfigTagArray and PolicyTier0GatewayVrfConfigTagArrayOutput values.
// You can construct a concrete instance of `PolicyTier0GatewayVrfConfigTagArrayInput` via:
//
//          PolicyTier0GatewayVrfConfigTagArray{ PolicyTier0GatewayVrfConfigTagArgs{...} }
type PolicyTier0GatewayVrfConfigTagArrayInput interface {
	pulumi.Input

	ToPolicyTier0GatewayVrfConfigTagArrayOutput() PolicyTier0GatewayVrfConfigTagArrayOutput
	ToPolicyTier0GatewayVrfConfigTagArrayOutputWithContext(context.Context) PolicyTier0GatewayVrfConfigTagArrayOutput
}

type PolicyTier0GatewayVrfConfigTagArray []PolicyTier0GatewayVrfConfigTagInput

func (PolicyTier0GatewayVrfConfigTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayVrfConfigTag)(nil)).Elem()
}

func (i PolicyTier0GatewayVrfConfigTagArray) ToPolicyTier0GatewayVrfConfigTagArrayOutput() PolicyTier0GatewayVrfConfigTagArrayOutput {
	return i.ToPolicyTier0GatewayVrfConfigTagArrayOutputWithContext(context.Background())
}

func (i PolicyTier0GatewayVrfConfigTagArray) ToPolicyTier0GatewayVrfConfigTagArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier0GatewayVrfConfigTagArrayOutput)
}

type PolicyTier0GatewayVrfConfigTagOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayVrfConfigTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier0GatewayVrfConfigTag)(nil)).Elem()
}

func (o PolicyTier0GatewayVrfConfigTagOutput) ToPolicyTier0GatewayVrfConfigTagOutput() PolicyTier0GatewayVrfConfigTagOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigTagOutput) ToPolicyTier0GatewayVrfConfigTagOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigTagOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfigTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyTier0GatewayVrfConfigTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier0GatewayVrfConfigTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyTier0GatewayVrfConfigTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier0GatewayVrfConfigTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier0GatewayVrfConfigTag)(nil)).Elem()
}

func (o PolicyTier0GatewayVrfConfigTagArrayOutput) ToPolicyTier0GatewayVrfConfigTagArrayOutput() PolicyTier0GatewayVrfConfigTagArrayOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigTagArrayOutput) ToPolicyTier0GatewayVrfConfigTagArrayOutputWithContext(ctx context.Context) PolicyTier0GatewayVrfConfigTagArrayOutput {
	return o
}

func (o PolicyTier0GatewayVrfConfigTagArrayOutput) Index(i pulumi.IntInput) PolicyTier0GatewayVrfConfigTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier0GatewayVrfConfigTag {
		return vs[0].([]PolicyTier0GatewayVrfConfigTag)[vs[1].(int)]
	}).(PolicyTier0GatewayVrfConfigTagOutput)
}

type PolicyTier1GatewayInterfaceTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyTier1GatewayInterfaceTagInput is an input type that accepts PolicyTier1GatewayInterfaceTagArgs and PolicyTier1GatewayInterfaceTagOutput values.
// You can construct a concrete instance of `PolicyTier1GatewayInterfaceTagInput` via:
//
//          PolicyTier1GatewayInterfaceTagArgs{...}
type PolicyTier1GatewayInterfaceTagInput interface {
	pulumi.Input

	ToPolicyTier1GatewayInterfaceTagOutput() PolicyTier1GatewayInterfaceTagOutput
	ToPolicyTier1GatewayInterfaceTagOutputWithContext(context.Context) PolicyTier1GatewayInterfaceTagOutput
}

type PolicyTier1GatewayInterfaceTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyTier1GatewayInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier1GatewayInterfaceTag)(nil)).Elem()
}

func (i PolicyTier1GatewayInterfaceTagArgs) ToPolicyTier1GatewayInterfaceTagOutput() PolicyTier1GatewayInterfaceTagOutput {
	return i.ToPolicyTier1GatewayInterfaceTagOutputWithContext(context.Background())
}

func (i PolicyTier1GatewayInterfaceTagArgs) ToPolicyTier1GatewayInterfaceTagOutputWithContext(ctx context.Context) PolicyTier1GatewayInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayInterfaceTagOutput)
}

// PolicyTier1GatewayInterfaceTagArrayInput is an input type that accepts PolicyTier1GatewayInterfaceTagArray and PolicyTier1GatewayInterfaceTagArrayOutput values.
// You can construct a concrete instance of `PolicyTier1GatewayInterfaceTagArrayInput` via:
//
//          PolicyTier1GatewayInterfaceTagArray{ PolicyTier1GatewayInterfaceTagArgs{...} }
type PolicyTier1GatewayInterfaceTagArrayInput interface {
	pulumi.Input

	ToPolicyTier1GatewayInterfaceTagArrayOutput() PolicyTier1GatewayInterfaceTagArrayOutput
	ToPolicyTier1GatewayInterfaceTagArrayOutputWithContext(context.Context) PolicyTier1GatewayInterfaceTagArrayOutput
}

type PolicyTier1GatewayInterfaceTagArray []PolicyTier1GatewayInterfaceTagInput

func (PolicyTier1GatewayInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier1GatewayInterfaceTag)(nil)).Elem()
}

func (i PolicyTier1GatewayInterfaceTagArray) ToPolicyTier1GatewayInterfaceTagArrayOutput() PolicyTier1GatewayInterfaceTagArrayOutput {
	return i.ToPolicyTier1GatewayInterfaceTagArrayOutputWithContext(context.Background())
}

func (i PolicyTier1GatewayInterfaceTagArray) ToPolicyTier1GatewayInterfaceTagArrayOutputWithContext(ctx context.Context) PolicyTier1GatewayInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayInterfaceTagArrayOutput)
}

type PolicyTier1GatewayInterfaceTagOutput struct{ *pulumi.OutputState }

func (PolicyTier1GatewayInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier1GatewayInterfaceTag)(nil)).Elem()
}

func (o PolicyTier1GatewayInterfaceTagOutput) ToPolicyTier1GatewayInterfaceTagOutput() PolicyTier1GatewayInterfaceTagOutput {
	return o
}

func (o PolicyTier1GatewayInterfaceTagOutput) ToPolicyTier1GatewayInterfaceTagOutputWithContext(ctx context.Context) PolicyTier1GatewayInterfaceTagOutput {
	return o
}

func (o PolicyTier1GatewayInterfaceTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayInterfaceTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyTier1GatewayInterfaceTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayInterfaceTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyTier1GatewayInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier1GatewayInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier1GatewayInterfaceTag)(nil)).Elem()
}

func (o PolicyTier1GatewayInterfaceTagArrayOutput) ToPolicyTier1GatewayInterfaceTagArrayOutput() PolicyTier1GatewayInterfaceTagArrayOutput {
	return o
}

func (o PolicyTier1GatewayInterfaceTagArrayOutput) ToPolicyTier1GatewayInterfaceTagArrayOutputWithContext(ctx context.Context) PolicyTier1GatewayInterfaceTagArrayOutput {
	return o
}

func (o PolicyTier1GatewayInterfaceTagArrayOutput) Index(i pulumi.IntInput) PolicyTier1GatewayInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier1GatewayInterfaceTag {
		return vs[0].([]PolicyTier1GatewayInterfaceTag)[vs[1].(int)]
	}).(PolicyTier1GatewayInterfaceTagOutput)
}

type PolicyTier1GatewayIntersiteConfig struct {
	FallbackSitePaths []string `pulumi:"fallbackSitePaths"`
	PrimarySitePath   *string  `pulumi:"primarySitePath"`
	TransitSubnet     *string  `pulumi:"transitSubnet"`
}

// PolicyTier1GatewayIntersiteConfigInput is an input type that accepts PolicyTier1GatewayIntersiteConfigArgs and PolicyTier1GatewayIntersiteConfigOutput values.
// You can construct a concrete instance of `PolicyTier1GatewayIntersiteConfigInput` via:
//
//          PolicyTier1GatewayIntersiteConfigArgs{...}
type PolicyTier1GatewayIntersiteConfigInput interface {
	pulumi.Input

	ToPolicyTier1GatewayIntersiteConfigOutput() PolicyTier1GatewayIntersiteConfigOutput
	ToPolicyTier1GatewayIntersiteConfigOutputWithContext(context.Context) PolicyTier1GatewayIntersiteConfigOutput
}

type PolicyTier1GatewayIntersiteConfigArgs struct {
	FallbackSitePaths pulumi.StringArrayInput `pulumi:"fallbackSitePaths"`
	PrimarySitePath   pulumi.StringPtrInput   `pulumi:"primarySitePath"`
	TransitSubnet     pulumi.StringPtrInput   `pulumi:"transitSubnet"`
}

func (PolicyTier1GatewayIntersiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier1GatewayIntersiteConfig)(nil)).Elem()
}

func (i PolicyTier1GatewayIntersiteConfigArgs) ToPolicyTier1GatewayIntersiteConfigOutput() PolicyTier1GatewayIntersiteConfigOutput {
	return i.ToPolicyTier1GatewayIntersiteConfigOutputWithContext(context.Background())
}

func (i PolicyTier1GatewayIntersiteConfigArgs) ToPolicyTier1GatewayIntersiteConfigOutputWithContext(ctx context.Context) PolicyTier1GatewayIntersiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayIntersiteConfigOutput)
}

func (i PolicyTier1GatewayIntersiteConfigArgs) ToPolicyTier1GatewayIntersiteConfigPtrOutput() PolicyTier1GatewayIntersiteConfigPtrOutput {
	return i.ToPolicyTier1GatewayIntersiteConfigPtrOutputWithContext(context.Background())
}

func (i PolicyTier1GatewayIntersiteConfigArgs) ToPolicyTier1GatewayIntersiteConfigPtrOutputWithContext(ctx context.Context) PolicyTier1GatewayIntersiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayIntersiteConfigOutput).ToPolicyTier1GatewayIntersiteConfigPtrOutputWithContext(ctx)
}

// PolicyTier1GatewayIntersiteConfigPtrInput is an input type that accepts PolicyTier1GatewayIntersiteConfigArgs, PolicyTier1GatewayIntersiteConfigPtr and PolicyTier1GatewayIntersiteConfigPtrOutput values.
// You can construct a concrete instance of `PolicyTier1GatewayIntersiteConfigPtrInput` via:
//
//          PolicyTier1GatewayIntersiteConfigArgs{...}
//
//  or:
//
//          nil
type PolicyTier1GatewayIntersiteConfigPtrInput interface {
	pulumi.Input

	ToPolicyTier1GatewayIntersiteConfigPtrOutput() PolicyTier1GatewayIntersiteConfigPtrOutput
	ToPolicyTier1GatewayIntersiteConfigPtrOutputWithContext(context.Context) PolicyTier1GatewayIntersiteConfigPtrOutput
}

type policyTier1GatewayIntersiteConfigPtrType PolicyTier1GatewayIntersiteConfigArgs

func PolicyTier1GatewayIntersiteConfigPtr(v *PolicyTier1GatewayIntersiteConfigArgs) PolicyTier1GatewayIntersiteConfigPtrInput {
	return (*policyTier1GatewayIntersiteConfigPtrType)(v)
}

func (*policyTier1GatewayIntersiteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier1GatewayIntersiteConfig)(nil)).Elem()
}

func (i *policyTier1GatewayIntersiteConfigPtrType) ToPolicyTier1GatewayIntersiteConfigPtrOutput() PolicyTier1GatewayIntersiteConfigPtrOutput {
	return i.ToPolicyTier1GatewayIntersiteConfigPtrOutputWithContext(context.Background())
}

func (i *policyTier1GatewayIntersiteConfigPtrType) ToPolicyTier1GatewayIntersiteConfigPtrOutputWithContext(ctx context.Context) PolicyTier1GatewayIntersiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayIntersiteConfigPtrOutput)
}

type PolicyTier1GatewayIntersiteConfigOutput struct{ *pulumi.OutputState }

func (PolicyTier1GatewayIntersiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier1GatewayIntersiteConfig)(nil)).Elem()
}

func (o PolicyTier1GatewayIntersiteConfigOutput) ToPolicyTier1GatewayIntersiteConfigOutput() PolicyTier1GatewayIntersiteConfigOutput {
	return o
}

func (o PolicyTier1GatewayIntersiteConfigOutput) ToPolicyTier1GatewayIntersiteConfigOutputWithContext(ctx context.Context) PolicyTier1GatewayIntersiteConfigOutput {
	return o
}

func (o PolicyTier1GatewayIntersiteConfigOutput) ToPolicyTier1GatewayIntersiteConfigPtrOutput() PolicyTier1GatewayIntersiteConfigPtrOutput {
	return o.ToPolicyTier1GatewayIntersiteConfigPtrOutputWithContext(context.Background())
}

func (o PolicyTier1GatewayIntersiteConfigOutput) ToPolicyTier1GatewayIntersiteConfigPtrOutputWithContext(ctx context.Context) PolicyTier1GatewayIntersiteConfigPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayIntersiteConfig) *PolicyTier1GatewayIntersiteConfig {
		return &v
	}).(PolicyTier1GatewayIntersiteConfigPtrOutput)
}
func (o PolicyTier1GatewayIntersiteConfigOutput) FallbackSitePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier1GatewayIntersiteConfig) []string { return v.FallbackSitePaths }).(pulumi.StringArrayOutput)
}

func (o PolicyTier1GatewayIntersiteConfigOutput) PrimarySitePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayIntersiteConfig) *string { return v.PrimarySitePath }).(pulumi.StringPtrOutput)
}

func (o PolicyTier1GatewayIntersiteConfigOutput) TransitSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayIntersiteConfig) *string { return v.TransitSubnet }).(pulumi.StringPtrOutput)
}

type PolicyTier1GatewayIntersiteConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyTier1GatewayIntersiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTier1GatewayIntersiteConfig)(nil)).Elem()
}

func (o PolicyTier1GatewayIntersiteConfigPtrOutput) ToPolicyTier1GatewayIntersiteConfigPtrOutput() PolicyTier1GatewayIntersiteConfigPtrOutput {
	return o
}

func (o PolicyTier1GatewayIntersiteConfigPtrOutput) ToPolicyTier1GatewayIntersiteConfigPtrOutputWithContext(ctx context.Context) PolicyTier1GatewayIntersiteConfigPtrOutput {
	return o
}

func (o PolicyTier1GatewayIntersiteConfigPtrOutput) Elem() PolicyTier1GatewayIntersiteConfigOutput {
	return o.ApplyT(func(v *PolicyTier1GatewayIntersiteConfig) PolicyTier1GatewayIntersiteConfig { return *v }).(PolicyTier1GatewayIntersiteConfigOutput)
}

func (o PolicyTier1GatewayIntersiteConfigPtrOutput) FallbackSitePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyTier1GatewayIntersiteConfig) []string {
		if v == nil {
			return nil
		}
		return v.FallbackSitePaths
	}).(pulumi.StringArrayOutput)
}

func (o PolicyTier1GatewayIntersiteConfigPtrOutput) PrimarySitePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier1GatewayIntersiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrimarySitePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTier1GatewayIntersiteConfigPtrOutput) TransitSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTier1GatewayIntersiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.TransitSubnet
	}).(pulumi.StringPtrOutput)
}

type PolicyTier1GatewayLocaleService struct {
	EdgeClusterPath    string   `pulumi:"edgeClusterPath"`
	Path               *string  `pulumi:"path"`
	PreferredEdgePaths []string `pulumi:"preferredEdgePaths"`
	Revision           *int     `pulumi:"revision"`
}

// PolicyTier1GatewayLocaleServiceInput is an input type that accepts PolicyTier1GatewayLocaleServiceArgs and PolicyTier1GatewayLocaleServiceOutput values.
// You can construct a concrete instance of `PolicyTier1GatewayLocaleServiceInput` via:
//
//          PolicyTier1GatewayLocaleServiceArgs{...}
type PolicyTier1GatewayLocaleServiceInput interface {
	pulumi.Input

	ToPolicyTier1GatewayLocaleServiceOutput() PolicyTier1GatewayLocaleServiceOutput
	ToPolicyTier1GatewayLocaleServiceOutputWithContext(context.Context) PolicyTier1GatewayLocaleServiceOutput
}

type PolicyTier1GatewayLocaleServiceArgs struct {
	EdgeClusterPath    pulumi.StringInput      `pulumi:"edgeClusterPath"`
	Path               pulumi.StringPtrInput   `pulumi:"path"`
	PreferredEdgePaths pulumi.StringArrayInput `pulumi:"preferredEdgePaths"`
	Revision           pulumi.IntPtrInput      `pulumi:"revision"`
}

func (PolicyTier1GatewayLocaleServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier1GatewayLocaleService)(nil)).Elem()
}

func (i PolicyTier1GatewayLocaleServiceArgs) ToPolicyTier1GatewayLocaleServiceOutput() PolicyTier1GatewayLocaleServiceOutput {
	return i.ToPolicyTier1GatewayLocaleServiceOutputWithContext(context.Background())
}

func (i PolicyTier1GatewayLocaleServiceArgs) ToPolicyTier1GatewayLocaleServiceOutputWithContext(ctx context.Context) PolicyTier1GatewayLocaleServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayLocaleServiceOutput)
}

// PolicyTier1GatewayLocaleServiceArrayInput is an input type that accepts PolicyTier1GatewayLocaleServiceArray and PolicyTier1GatewayLocaleServiceArrayOutput values.
// You can construct a concrete instance of `PolicyTier1GatewayLocaleServiceArrayInput` via:
//
//          PolicyTier1GatewayLocaleServiceArray{ PolicyTier1GatewayLocaleServiceArgs{...} }
type PolicyTier1GatewayLocaleServiceArrayInput interface {
	pulumi.Input

	ToPolicyTier1GatewayLocaleServiceArrayOutput() PolicyTier1GatewayLocaleServiceArrayOutput
	ToPolicyTier1GatewayLocaleServiceArrayOutputWithContext(context.Context) PolicyTier1GatewayLocaleServiceArrayOutput
}

type PolicyTier1GatewayLocaleServiceArray []PolicyTier1GatewayLocaleServiceInput

func (PolicyTier1GatewayLocaleServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier1GatewayLocaleService)(nil)).Elem()
}

func (i PolicyTier1GatewayLocaleServiceArray) ToPolicyTier1GatewayLocaleServiceArrayOutput() PolicyTier1GatewayLocaleServiceArrayOutput {
	return i.ToPolicyTier1GatewayLocaleServiceArrayOutputWithContext(context.Background())
}

func (i PolicyTier1GatewayLocaleServiceArray) ToPolicyTier1GatewayLocaleServiceArrayOutputWithContext(ctx context.Context) PolicyTier1GatewayLocaleServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayLocaleServiceArrayOutput)
}

type PolicyTier1GatewayLocaleServiceOutput struct{ *pulumi.OutputState }

func (PolicyTier1GatewayLocaleServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier1GatewayLocaleService)(nil)).Elem()
}

func (o PolicyTier1GatewayLocaleServiceOutput) ToPolicyTier1GatewayLocaleServiceOutput() PolicyTier1GatewayLocaleServiceOutput {
	return o
}

func (o PolicyTier1GatewayLocaleServiceOutput) ToPolicyTier1GatewayLocaleServiceOutputWithContext(ctx context.Context) PolicyTier1GatewayLocaleServiceOutput {
	return o
}

func (o PolicyTier1GatewayLocaleServiceOutput) EdgeClusterPath() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTier1GatewayLocaleService) string { return v.EdgeClusterPath }).(pulumi.StringOutput)
}

func (o PolicyTier1GatewayLocaleServiceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayLocaleService) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o PolicyTier1GatewayLocaleServiceOutput) PreferredEdgePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier1GatewayLocaleService) []string { return v.PreferredEdgePaths }).(pulumi.StringArrayOutput)
}

func (o PolicyTier1GatewayLocaleServiceOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayLocaleService) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

type PolicyTier1GatewayLocaleServiceArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier1GatewayLocaleServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier1GatewayLocaleService)(nil)).Elem()
}

func (o PolicyTier1GatewayLocaleServiceArrayOutput) ToPolicyTier1GatewayLocaleServiceArrayOutput() PolicyTier1GatewayLocaleServiceArrayOutput {
	return o
}

func (o PolicyTier1GatewayLocaleServiceArrayOutput) ToPolicyTier1GatewayLocaleServiceArrayOutputWithContext(ctx context.Context) PolicyTier1GatewayLocaleServiceArrayOutput {
	return o
}

func (o PolicyTier1GatewayLocaleServiceArrayOutput) Index(i pulumi.IntInput) PolicyTier1GatewayLocaleServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier1GatewayLocaleService {
		return vs[0].([]PolicyTier1GatewayLocaleService)[vs[1].(int)]
	}).(PolicyTier1GatewayLocaleServiceOutput)
}

type PolicyTier1GatewayRouteAdvertisementRule struct {
	Action                  *string  `pulumi:"action"`
	Name                    string   `pulumi:"name"`
	PrefixOperator          *string  `pulumi:"prefixOperator"`
	RouteAdvertisementTypes []string `pulumi:"routeAdvertisementTypes"`
	Subnets                 []string `pulumi:"subnets"`
}

// PolicyTier1GatewayRouteAdvertisementRuleInput is an input type that accepts PolicyTier1GatewayRouteAdvertisementRuleArgs and PolicyTier1GatewayRouteAdvertisementRuleOutput values.
// You can construct a concrete instance of `PolicyTier1GatewayRouteAdvertisementRuleInput` via:
//
//          PolicyTier1GatewayRouteAdvertisementRuleArgs{...}
type PolicyTier1GatewayRouteAdvertisementRuleInput interface {
	pulumi.Input

	ToPolicyTier1GatewayRouteAdvertisementRuleOutput() PolicyTier1GatewayRouteAdvertisementRuleOutput
	ToPolicyTier1GatewayRouteAdvertisementRuleOutputWithContext(context.Context) PolicyTier1GatewayRouteAdvertisementRuleOutput
}

type PolicyTier1GatewayRouteAdvertisementRuleArgs struct {
	Action                  pulumi.StringPtrInput   `pulumi:"action"`
	Name                    pulumi.StringInput      `pulumi:"name"`
	PrefixOperator          pulumi.StringPtrInput   `pulumi:"prefixOperator"`
	RouteAdvertisementTypes pulumi.StringArrayInput `pulumi:"routeAdvertisementTypes"`
	Subnets                 pulumi.StringArrayInput `pulumi:"subnets"`
}

func (PolicyTier1GatewayRouteAdvertisementRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier1GatewayRouteAdvertisementRule)(nil)).Elem()
}

func (i PolicyTier1GatewayRouteAdvertisementRuleArgs) ToPolicyTier1GatewayRouteAdvertisementRuleOutput() PolicyTier1GatewayRouteAdvertisementRuleOutput {
	return i.ToPolicyTier1GatewayRouteAdvertisementRuleOutputWithContext(context.Background())
}

func (i PolicyTier1GatewayRouteAdvertisementRuleArgs) ToPolicyTier1GatewayRouteAdvertisementRuleOutputWithContext(ctx context.Context) PolicyTier1GatewayRouteAdvertisementRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayRouteAdvertisementRuleOutput)
}

// PolicyTier1GatewayRouteAdvertisementRuleArrayInput is an input type that accepts PolicyTier1GatewayRouteAdvertisementRuleArray and PolicyTier1GatewayRouteAdvertisementRuleArrayOutput values.
// You can construct a concrete instance of `PolicyTier1GatewayRouteAdvertisementRuleArrayInput` via:
//
//          PolicyTier1GatewayRouteAdvertisementRuleArray{ PolicyTier1GatewayRouteAdvertisementRuleArgs{...} }
type PolicyTier1GatewayRouteAdvertisementRuleArrayInput interface {
	pulumi.Input

	ToPolicyTier1GatewayRouteAdvertisementRuleArrayOutput() PolicyTier1GatewayRouteAdvertisementRuleArrayOutput
	ToPolicyTier1GatewayRouteAdvertisementRuleArrayOutputWithContext(context.Context) PolicyTier1GatewayRouteAdvertisementRuleArrayOutput
}

type PolicyTier1GatewayRouteAdvertisementRuleArray []PolicyTier1GatewayRouteAdvertisementRuleInput

func (PolicyTier1GatewayRouteAdvertisementRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier1GatewayRouteAdvertisementRule)(nil)).Elem()
}

func (i PolicyTier1GatewayRouteAdvertisementRuleArray) ToPolicyTier1GatewayRouteAdvertisementRuleArrayOutput() PolicyTier1GatewayRouteAdvertisementRuleArrayOutput {
	return i.ToPolicyTier1GatewayRouteAdvertisementRuleArrayOutputWithContext(context.Background())
}

func (i PolicyTier1GatewayRouteAdvertisementRuleArray) ToPolicyTier1GatewayRouteAdvertisementRuleArrayOutputWithContext(ctx context.Context) PolicyTier1GatewayRouteAdvertisementRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayRouteAdvertisementRuleArrayOutput)
}

type PolicyTier1GatewayRouteAdvertisementRuleOutput struct{ *pulumi.OutputState }

func (PolicyTier1GatewayRouteAdvertisementRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier1GatewayRouteAdvertisementRule)(nil)).Elem()
}

func (o PolicyTier1GatewayRouteAdvertisementRuleOutput) ToPolicyTier1GatewayRouteAdvertisementRuleOutput() PolicyTier1GatewayRouteAdvertisementRuleOutput {
	return o
}

func (o PolicyTier1GatewayRouteAdvertisementRuleOutput) ToPolicyTier1GatewayRouteAdvertisementRuleOutputWithContext(ctx context.Context) PolicyTier1GatewayRouteAdvertisementRuleOutput {
	return o
}

func (o PolicyTier1GatewayRouteAdvertisementRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayRouteAdvertisementRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o PolicyTier1GatewayRouteAdvertisementRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTier1GatewayRouteAdvertisementRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o PolicyTier1GatewayRouteAdvertisementRuleOutput) PrefixOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayRouteAdvertisementRule) *string { return v.PrefixOperator }).(pulumi.StringPtrOutput)
}

func (o PolicyTier1GatewayRouteAdvertisementRuleOutput) RouteAdvertisementTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier1GatewayRouteAdvertisementRule) []string { return v.RouteAdvertisementTypes }).(pulumi.StringArrayOutput)
}

func (o PolicyTier1GatewayRouteAdvertisementRuleOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyTier1GatewayRouteAdvertisementRule) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type PolicyTier1GatewayRouteAdvertisementRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier1GatewayRouteAdvertisementRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier1GatewayRouteAdvertisementRule)(nil)).Elem()
}

func (o PolicyTier1GatewayRouteAdvertisementRuleArrayOutput) ToPolicyTier1GatewayRouteAdvertisementRuleArrayOutput() PolicyTier1GatewayRouteAdvertisementRuleArrayOutput {
	return o
}

func (o PolicyTier1GatewayRouteAdvertisementRuleArrayOutput) ToPolicyTier1GatewayRouteAdvertisementRuleArrayOutputWithContext(ctx context.Context) PolicyTier1GatewayRouteAdvertisementRuleArrayOutput {
	return o
}

func (o PolicyTier1GatewayRouteAdvertisementRuleArrayOutput) Index(i pulumi.IntInput) PolicyTier1GatewayRouteAdvertisementRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier1GatewayRouteAdvertisementRule {
		return vs[0].([]PolicyTier1GatewayRouteAdvertisementRule)[vs[1].(int)]
	}).(PolicyTier1GatewayRouteAdvertisementRuleOutput)
}

type PolicyTier1GatewayTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyTier1GatewayTagInput is an input type that accepts PolicyTier1GatewayTagArgs and PolicyTier1GatewayTagOutput values.
// You can construct a concrete instance of `PolicyTier1GatewayTagInput` via:
//
//          PolicyTier1GatewayTagArgs{...}
type PolicyTier1GatewayTagInput interface {
	pulumi.Input

	ToPolicyTier1GatewayTagOutput() PolicyTier1GatewayTagOutput
	ToPolicyTier1GatewayTagOutputWithContext(context.Context) PolicyTier1GatewayTagOutput
}

type PolicyTier1GatewayTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyTier1GatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier1GatewayTag)(nil)).Elem()
}

func (i PolicyTier1GatewayTagArgs) ToPolicyTier1GatewayTagOutput() PolicyTier1GatewayTagOutput {
	return i.ToPolicyTier1GatewayTagOutputWithContext(context.Background())
}

func (i PolicyTier1GatewayTagArgs) ToPolicyTier1GatewayTagOutputWithContext(ctx context.Context) PolicyTier1GatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayTagOutput)
}

// PolicyTier1GatewayTagArrayInput is an input type that accepts PolicyTier1GatewayTagArray and PolicyTier1GatewayTagArrayOutput values.
// You can construct a concrete instance of `PolicyTier1GatewayTagArrayInput` via:
//
//          PolicyTier1GatewayTagArray{ PolicyTier1GatewayTagArgs{...} }
type PolicyTier1GatewayTagArrayInput interface {
	pulumi.Input

	ToPolicyTier1GatewayTagArrayOutput() PolicyTier1GatewayTagArrayOutput
	ToPolicyTier1GatewayTagArrayOutputWithContext(context.Context) PolicyTier1GatewayTagArrayOutput
}

type PolicyTier1GatewayTagArray []PolicyTier1GatewayTagInput

func (PolicyTier1GatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier1GatewayTag)(nil)).Elem()
}

func (i PolicyTier1GatewayTagArray) ToPolicyTier1GatewayTagArrayOutput() PolicyTier1GatewayTagArrayOutput {
	return i.ToPolicyTier1GatewayTagArrayOutputWithContext(context.Background())
}

func (i PolicyTier1GatewayTagArray) ToPolicyTier1GatewayTagArrayOutputWithContext(ctx context.Context) PolicyTier1GatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTier1GatewayTagArrayOutput)
}

type PolicyTier1GatewayTagOutput struct{ *pulumi.OutputState }

func (PolicyTier1GatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTier1GatewayTag)(nil)).Elem()
}

func (o PolicyTier1GatewayTagOutput) ToPolicyTier1GatewayTagOutput() PolicyTier1GatewayTagOutput {
	return o
}

func (o PolicyTier1GatewayTagOutput) ToPolicyTier1GatewayTagOutputWithContext(ctx context.Context) PolicyTier1GatewayTagOutput {
	return o
}

func (o PolicyTier1GatewayTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyTier1GatewayTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTier1GatewayTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyTier1GatewayTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyTier1GatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTier1GatewayTag)(nil)).Elem()
}

func (o PolicyTier1GatewayTagArrayOutput) ToPolicyTier1GatewayTagArrayOutput() PolicyTier1GatewayTagArrayOutput {
	return o
}

func (o PolicyTier1GatewayTagArrayOutput) ToPolicyTier1GatewayTagArrayOutputWithContext(ctx context.Context) PolicyTier1GatewayTagArrayOutput {
	return o
}

func (o PolicyTier1GatewayTagArrayOutput) Index(i pulumi.IntInput) PolicyTier1GatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTier1GatewayTag {
		return vs[0].([]PolicyTier1GatewayTag)[vs[1].(int)]
	}).(PolicyTier1GatewayTagOutput)
}

type PolicyVMTagsPort struct {
	SegmentPath string                `pulumi:"segmentPath"`
	Tags        []PolicyVMTagsPortTag `pulumi:"tags"`
}

// PolicyVMTagsPortInput is an input type that accepts PolicyVMTagsPortArgs and PolicyVMTagsPortOutput values.
// You can construct a concrete instance of `PolicyVMTagsPortInput` via:
//
//          PolicyVMTagsPortArgs{...}
type PolicyVMTagsPortInput interface {
	pulumi.Input

	ToPolicyVMTagsPortOutput() PolicyVMTagsPortOutput
	ToPolicyVMTagsPortOutputWithContext(context.Context) PolicyVMTagsPortOutput
}

type PolicyVMTagsPortArgs struct {
	SegmentPath pulumi.StringInput            `pulumi:"segmentPath"`
	Tags        PolicyVMTagsPortTagArrayInput `pulumi:"tags"`
}

func (PolicyVMTagsPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMTagsPort)(nil)).Elem()
}

func (i PolicyVMTagsPortArgs) ToPolicyVMTagsPortOutput() PolicyVMTagsPortOutput {
	return i.ToPolicyVMTagsPortOutputWithContext(context.Background())
}

func (i PolicyVMTagsPortArgs) ToPolicyVMTagsPortOutputWithContext(ctx context.Context) PolicyVMTagsPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMTagsPortOutput)
}

// PolicyVMTagsPortArrayInput is an input type that accepts PolicyVMTagsPortArray and PolicyVMTagsPortArrayOutput values.
// You can construct a concrete instance of `PolicyVMTagsPortArrayInput` via:
//
//          PolicyVMTagsPortArray{ PolicyVMTagsPortArgs{...} }
type PolicyVMTagsPortArrayInput interface {
	pulumi.Input

	ToPolicyVMTagsPortArrayOutput() PolicyVMTagsPortArrayOutput
	ToPolicyVMTagsPortArrayOutputWithContext(context.Context) PolicyVMTagsPortArrayOutput
}

type PolicyVMTagsPortArray []PolicyVMTagsPortInput

func (PolicyVMTagsPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVMTagsPort)(nil)).Elem()
}

func (i PolicyVMTagsPortArray) ToPolicyVMTagsPortArrayOutput() PolicyVMTagsPortArrayOutput {
	return i.ToPolicyVMTagsPortArrayOutputWithContext(context.Background())
}

func (i PolicyVMTagsPortArray) ToPolicyVMTagsPortArrayOutputWithContext(ctx context.Context) PolicyVMTagsPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMTagsPortArrayOutput)
}

type PolicyVMTagsPortOutput struct{ *pulumi.OutputState }

func (PolicyVMTagsPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMTagsPort)(nil)).Elem()
}

func (o PolicyVMTagsPortOutput) ToPolicyVMTagsPortOutput() PolicyVMTagsPortOutput {
	return o
}

func (o PolicyVMTagsPortOutput) ToPolicyVMTagsPortOutputWithContext(ctx context.Context) PolicyVMTagsPortOutput {
	return o
}

func (o PolicyVMTagsPortOutput) SegmentPath() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyVMTagsPort) string { return v.SegmentPath }).(pulumi.StringOutput)
}

func (o PolicyVMTagsPortOutput) Tags() PolicyVMTagsPortTagArrayOutput {
	return o.ApplyT(func(v PolicyVMTagsPort) []PolicyVMTagsPortTag { return v.Tags }).(PolicyVMTagsPortTagArrayOutput)
}

type PolicyVMTagsPortArrayOutput struct{ *pulumi.OutputState }

func (PolicyVMTagsPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVMTagsPort)(nil)).Elem()
}

func (o PolicyVMTagsPortArrayOutput) ToPolicyVMTagsPortArrayOutput() PolicyVMTagsPortArrayOutput {
	return o
}

func (o PolicyVMTagsPortArrayOutput) ToPolicyVMTagsPortArrayOutputWithContext(ctx context.Context) PolicyVMTagsPortArrayOutput {
	return o
}

func (o PolicyVMTagsPortArrayOutput) Index(i pulumi.IntInput) PolicyVMTagsPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyVMTagsPort {
		return vs[0].([]PolicyVMTagsPort)[vs[1].(int)]
	}).(PolicyVMTagsPortOutput)
}

type PolicyVMTagsPortTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyVMTagsPortTagInput is an input type that accepts PolicyVMTagsPortTagArgs and PolicyVMTagsPortTagOutput values.
// You can construct a concrete instance of `PolicyVMTagsPortTagInput` via:
//
//          PolicyVMTagsPortTagArgs{...}
type PolicyVMTagsPortTagInput interface {
	pulumi.Input

	ToPolicyVMTagsPortTagOutput() PolicyVMTagsPortTagOutput
	ToPolicyVMTagsPortTagOutputWithContext(context.Context) PolicyVMTagsPortTagOutput
}

type PolicyVMTagsPortTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyVMTagsPortTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMTagsPortTag)(nil)).Elem()
}

func (i PolicyVMTagsPortTagArgs) ToPolicyVMTagsPortTagOutput() PolicyVMTagsPortTagOutput {
	return i.ToPolicyVMTagsPortTagOutputWithContext(context.Background())
}

func (i PolicyVMTagsPortTagArgs) ToPolicyVMTagsPortTagOutputWithContext(ctx context.Context) PolicyVMTagsPortTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMTagsPortTagOutput)
}

// PolicyVMTagsPortTagArrayInput is an input type that accepts PolicyVMTagsPortTagArray and PolicyVMTagsPortTagArrayOutput values.
// You can construct a concrete instance of `PolicyVMTagsPortTagArrayInput` via:
//
//          PolicyVMTagsPortTagArray{ PolicyVMTagsPortTagArgs{...} }
type PolicyVMTagsPortTagArrayInput interface {
	pulumi.Input

	ToPolicyVMTagsPortTagArrayOutput() PolicyVMTagsPortTagArrayOutput
	ToPolicyVMTagsPortTagArrayOutputWithContext(context.Context) PolicyVMTagsPortTagArrayOutput
}

type PolicyVMTagsPortTagArray []PolicyVMTagsPortTagInput

func (PolicyVMTagsPortTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVMTagsPortTag)(nil)).Elem()
}

func (i PolicyVMTagsPortTagArray) ToPolicyVMTagsPortTagArrayOutput() PolicyVMTagsPortTagArrayOutput {
	return i.ToPolicyVMTagsPortTagArrayOutputWithContext(context.Background())
}

func (i PolicyVMTagsPortTagArray) ToPolicyVMTagsPortTagArrayOutputWithContext(ctx context.Context) PolicyVMTagsPortTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMTagsPortTagArrayOutput)
}

type PolicyVMTagsPortTagOutput struct{ *pulumi.OutputState }

func (PolicyVMTagsPortTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMTagsPortTag)(nil)).Elem()
}

func (o PolicyVMTagsPortTagOutput) ToPolicyVMTagsPortTagOutput() PolicyVMTagsPortTagOutput {
	return o
}

func (o PolicyVMTagsPortTagOutput) ToPolicyVMTagsPortTagOutputWithContext(ctx context.Context) PolicyVMTagsPortTagOutput {
	return o
}

func (o PolicyVMTagsPortTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVMTagsPortTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyVMTagsPortTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVMTagsPortTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyVMTagsPortTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyVMTagsPortTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVMTagsPortTag)(nil)).Elem()
}

func (o PolicyVMTagsPortTagArrayOutput) ToPolicyVMTagsPortTagArrayOutput() PolicyVMTagsPortTagArrayOutput {
	return o
}

func (o PolicyVMTagsPortTagArrayOutput) ToPolicyVMTagsPortTagArrayOutputWithContext(ctx context.Context) PolicyVMTagsPortTagArrayOutput {
	return o
}

func (o PolicyVMTagsPortTagArrayOutput) Index(i pulumi.IntInput) PolicyVMTagsPortTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyVMTagsPortTag {
		return vs[0].([]PolicyVMTagsPortTag)[vs[1].(int)]
	}).(PolicyVMTagsPortTagOutput)
}

type PolicyVMTagsTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyVMTagsTagInput is an input type that accepts PolicyVMTagsTagArgs and PolicyVMTagsTagOutput values.
// You can construct a concrete instance of `PolicyVMTagsTagInput` via:
//
//          PolicyVMTagsTagArgs{...}
type PolicyVMTagsTagInput interface {
	pulumi.Input

	ToPolicyVMTagsTagOutput() PolicyVMTagsTagOutput
	ToPolicyVMTagsTagOutputWithContext(context.Context) PolicyVMTagsTagOutput
}

type PolicyVMTagsTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyVMTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMTagsTag)(nil)).Elem()
}

func (i PolicyVMTagsTagArgs) ToPolicyVMTagsTagOutput() PolicyVMTagsTagOutput {
	return i.ToPolicyVMTagsTagOutputWithContext(context.Background())
}

func (i PolicyVMTagsTagArgs) ToPolicyVMTagsTagOutputWithContext(ctx context.Context) PolicyVMTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMTagsTagOutput)
}

// PolicyVMTagsTagArrayInput is an input type that accepts PolicyVMTagsTagArray and PolicyVMTagsTagArrayOutput values.
// You can construct a concrete instance of `PolicyVMTagsTagArrayInput` via:
//
//          PolicyVMTagsTagArray{ PolicyVMTagsTagArgs{...} }
type PolicyVMTagsTagArrayInput interface {
	pulumi.Input

	ToPolicyVMTagsTagArrayOutput() PolicyVMTagsTagArrayOutput
	ToPolicyVMTagsTagArrayOutputWithContext(context.Context) PolicyVMTagsTagArrayOutput
}

type PolicyVMTagsTagArray []PolicyVMTagsTagInput

func (PolicyVMTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVMTagsTag)(nil)).Elem()
}

func (i PolicyVMTagsTagArray) ToPolicyVMTagsTagArrayOutput() PolicyVMTagsTagArrayOutput {
	return i.ToPolicyVMTagsTagArrayOutputWithContext(context.Background())
}

func (i PolicyVMTagsTagArray) ToPolicyVMTagsTagArrayOutputWithContext(ctx context.Context) PolicyVMTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMTagsTagArrayOutput)
}

type PolicyVMTagsTagOutput struct{ *pulumi.OutputState }

func (PolicyVMTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMTagsTag)(nil)).Elem()
}

func (o PolicyVMTagsTagOutput) ToPolicyVMTagsTagOutput() PolicyVMTagsTagOutput {
	return o
}

func (o PolicyVMTagsTagOutput) ToPolicyVMTagsTagOutputWithContext(ctx context.Context) PolicyVMTagsTagOutput {
	return o
}

func (o PolicyVMTagsTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVMTagsTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyVMTagsTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVMTagsTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyVMTagsTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyVMTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVMTagsTag)(nil)).Elem()
}

func (o PolicyVMTagsTagArrayOutput) ToPolicyVMTagsTagArrayOutput() PolicyVMTagsTagArrayOutput {
	return o
}

func (o PolicyVMTagsTagArrayOutput) ToPolicyVMTagsTagArrayOutputWithContext(ctx context.Context) PolicyVMTagsTagArrayOutput {
	return o
}

func (o PolicyVMTagsTagArrayOutput) Index(i pulumi.IntInput) PolicyVMTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyVMTagsTag {
		return vs[0].([]PolicyVMTagsTag)[vs[1].(int)]
	}).(PolicyVMTagsTagOutput)
}

type PolicyVlanSegmentAdvancedConfig struct {
	AddressPoolPath     *string `pulumi:"addressPoolPath"`
	Connectivity        *string `pulumi:"connectivity"`
	Hybrid              *bool   `pulumi:"hybrid"`
	LocalEgress         *bool   `pulumi:"localEgress"`
	UplinkTeamingPolicy *string `pulumi:"uplinkTeamingPolicy"`
}

// PolicyVlanSegmentAdvancedConfigInput is an input type that accepts PolicyVlanSegmentAdvancedConfigArgs and PolicyVlanSegmentAdvancedConfigOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentAdvancedConfigInput` via:
//
//          PolicyVlanSegmentAdvancedConfigArgs{...}
type PolicyVlanSegmentAdvancedConfigInput interface {
	pulumi.Input

	ToPolicyVlanSegmentAdvancedConfigOutput() PolicyVlanSegmentAdvancedConfigOutput
	ToPolicyVlanSegmentAdvancedConfigOutputWithContext(context.Context) PolicyVlanSegmentAdvancedConfigOutput
}

type PolicyVlanSegmentAdvancedConfigArgs struct {
	AddressPoolPath     pulumi.StringPtrInput `pulumi:"addressPoolPath"`
	Connectivity        pulumi.StringPtrInput `pulumi:"connectivity"`
	Hybrid              pulumi.BoolPtrInput   `pulumi:"hybrid"`
	LocalEgress         pulumi.BoolPtrInput   `pulumi:"localEgress"`
	UplinkTeamingPolicy pulumi.StringPtrInput `pulumi:"uplinkTeamingPolicy"`
}

func (PolicyVlanSegmentAdvancedConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentAdvancedConfig)(nil)).Elem()
}

func (i PolicyVlanSegmentAdvancedConfigArgs) ToPolicyVlanSegmentAdvancedConfigOutput() PolicyVlanSegmentAdvancedConfigOutput {
	return i.ToPolicyVlanSegmentAdvancedConfigOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentAdvancedConfigArgs) ToPolicyVlanSegmentAdvancedConfigOutputWithContext(ctx context.Context) PolicyVlanSegmentAdvancedConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentAdvancedConfigOutput)
}

func (i PolicyVlanSegmentAdvancedConfigArgs) ToPolicyVlanSegmentAdvancedConfigPtrOutput() PolicyVlanSegmentAdvancedConfigPtrOutput {
	return i.ToPolicyVlanSegmentAdvancedConfigPtrOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentAdvancedConfigArgs) ToPolicyVlanSegmentAdvancedConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentAdvancedConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentAdvancedConfigOutput).ToPolicyVlanSegmentAdvancedConfigPtrOutputWithContext(ctx)
}

// PolicyVlanSegmentAdvancedConfigPtrInput is an input type that accepts PolicyVlanSegmentAdvancedConfigArgs, PolicyVlanSegmentAdvancedConfigPtr and PolicyVlanSegmentAdvancedConfigPtrOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentAdvancedConfigPtrInput` via:
//
//          PolicyVlanSegmentAdvancedConfigArgs{...}
//
//  or:
//
//          nil
type PolicyVlanSegmentAdvancedConfigPtrInput interface {
	pulumi.Input

	ToPolicyVlanSegmentAdvancedConfigPtrOutput() PolicyVlanSegmentAdvancedConfigPtrOutput
	ToPolicyVlanSegmentAdvancedConfigPtrOutputWithContext(context.Context) PolicyVlanSegmentAdvancedConfigPtrOutput
}

type policyVlanSegmentAdvancedConfigPtrType PolicyVlanSegmentAdvancedConfigArgs

func PolicyVlanSegmentAdvancedConfigPtr(v *PolicyVlanSegmentAdvancedConfigArgs) PolicyVlanSegmentAdvancedConfigPtrInput {
	return (*policyVlanSegmentAdvancedConfigPtrType)(v)
}

func (*policyVlanSegmentAdvancedConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentAdvancedConfig)(nil)).Elem()
}

func (i *policyVlanSegmentAdvancedConfigPtrType) ToPolicyVlanSegmentAdvancedConfigPtrOutput() PolicyVlanSegmentAdvancedConfigPtrOutput {
	return i.ToPolicyVlanSegmentAdvancedConfigPtrOutputWithContext(context.Background())
}

func (i *policyVlanSegmentAdvancedConfigPtrType) ToPolicyVlanSegmentAdvancedConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentAdvancedConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentAdvancedConfigPtrOutput)
}

type PolicyVlanSegmentAdvancedConfigOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentAdvancedConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentAdvancedConfig)(nil)).Elem()
}

func (o PolicyVlanSegmentAdvancedConfigOutput) ToPolicyVlanSegmentAdvancedConfigOutput() PolicyVlanSegmentAdvancedConfigOutput {
	return o
}

func (o PolicyVlanSegmentAdvancedConfigOutput) ToPolicyVlanSegmentAdvancedConfigOutputWithContext(ctx context.Context) PolicyVlanSegmentAdvancedConfigOutput {
	return o
}

func (o PolicyVlanSegmentAdvancedConfigOutput) ToPolicyVlanSegmentAdvancedConfigPtrOutput() PolicyVlanSegmentAdvancedConfigPtrOutput {
	return o.ToPolicyVlanSegmentAdvancedConfigPtrOutputWithContext(context.Background())
}

func (o PolicyVlanSegmentAdvancedConfigOutput) ToPolicyVlanSegmentAdvancedConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentAdvancedConfigPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentAdvancedConfig) *PolicyVlanSegmentAdvancedConfig {
		return &v
	}).(PolicyVlanSegmentAdvancedConfigPtrOutput)
}
func (o PolicyVlanSegmentAdvancedConfigOutput) AddressPoolPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentAdvancedConfig) *string { return v.AddressPoolPath }).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentAdvancedConfigOutput) Connectivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentAdvancedConfig) *string { return v.Connectivity }).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentAdvancedConfigOutput) Hybrid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentAdvancedConfig) *bool { return v.Hybrid }).(pulumi.BoolPtrOutput)
}

func (o PolicyVlanSegmentAdvancedConfigOutput) LocalEgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentAdvancedConfig) *bool { return v.LocalEgress }).(pulumi.BoolPtrOutput)
}

func (o PolicyVlanSegmentAdvancedConfigOutput) UplinkTeamingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentAdvancedConfig) *string { return v.UplinkTeamingPolicy }).(pulumi.StringPtrOutput)
}

type PolicyVlanSegmentAdvancedConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentAdvancedConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentAdvancedConfig)(nil)).Elem()
}

func (o PolicyVlanSegmentAdvancedConfigPtrOutput) ToPolicyVlanSegmentAdvancedConfigPtrOutput() PolicyVlanSegmentAdvancedConfigPtrOutput {
	return o
}

func (o PolicyVlanSegmentAdvancedConfigPtrOutput) ToPolicyVlanSegmentAdvancedConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentAdvancedConfigPtrOutput {
	return o
}

func (o PolicyVlanSegmentAdvancedConfigPtrOutput) Elem() PolicyVlanSegmentAdvancedConfigOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentAdvancedConfig) PolicyVlanSegmentAdvancedConfig { return *v }).(PolicyVlanSegmentAdvancedConfigOutput)
}

func (o PolicyVlanSegmentAdvancedConfigPtrOutput) AddressPoolPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentAdvancedConfig) *string {
		if v == nil {
			return nil
		}
		return v.AddressPoolPath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentAdvancedConfigPtrOutput) Connectivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentAdvancedConfig) *string {
		if v == nil {
			return nil
		}
		return v.Connectivity
	}).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentAdvancedConfigPtrOutput) Hybrid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentAdvancedConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Hybrid
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyVlanSegmentAdvancedConfigPtrOutput) LocalEgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentAdvancedConfig) *bool {
		if v == nil {
			return nil
		}
		return v.LocalEgress
	}).(pulumi.BoolPtrOutput)
}

func (o PolicyVlanSegmentAdvancedConfigPtrOutput) UplinkTeamingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentAdvancedConfig) *string {
		if v == nil {
			return nil
		}
		return v.UplinkTeamingPolicy
	}).(pulumi.StringPtrOutput)
}

type PolicyVlanSegmentDiscoveryProfile struct {
	BindingMapPath          *string `pulumi:"bindingMapPath"`
	IpDiscoveryProfilePath  *string `pulumi:"ipDiscoveryProfilePath"`
	MacDiscoveryProfilePath *string `pulumi:"macDiscoveryProfilePath"`
	Revision                *int    `pulumi:"revision"`
}

// PolicyVlanSegmentDiscoveryProfileInput is an input type that accepts PolicyVlanSegmentDiscoveryProfileArgs and PolicyVlanSegmentDiscoveryProfileOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentDiscoveryProfileInput` via:
//
//          PolicyVlanSegmentDiscoveryProfileArgs{...}
type PolicyVlanSegmentDiscoveryProfileInput interface {
	pulumi.Input

	ToPolicyVlanSegmentDiscoveryProfileOutput() PolicyVlanSegmentDiscoveryProfileOutput
	ToPolicyVlanSegmentDiscoveryProfileOutputWithContext(context.Context) PolicyVlanSegmentDiscoveryProfileOutput
}

type PolicyVlanSegmentDiscoveryProfileArgs struct {
	BindingMapPath          pulumi.StringPtrInput `pulumi:"bindingMapPath"`
	IpDiscoveryProfilePath  pulumi.StringPtrInput `pulumi:"ipDiscoveryProfilePath"`
	MacDiscoveryProfilePath pulumi.StringPtrInput `pulumi:"macDiscoveryProfilePath"`
	Revision                pulumi.IntPtrInput    `pulumi:"revision"`
}

func (PolicyVlanSegmentDiscoveryProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentDiscoveryProfile)(nil)).Elem()
}

func (i PolicyVlanSegmentDiscoveryProfileArgs) ToPolicyVlanSegmentDiscoveryProfileOutput() PolicyVlanSegmentDiscoveryProfileOutput {
	return i.ToPolicyVlanSegmentDiscoveryProfileOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentDiscoveryProfileArgs) ToPolicyVlanSegmentDiscoveryProfileOutputWithContext(ctx context.Context) PolicyVlanSegmentDiscoveryProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentDiscoveryProfileOutput)
}

func (i PolicyVlanSegmentDiscoveryProfileArgs) ToPolicyVlanSegmentDiscoveryProfilePtrOutput() PolicyVlanSegmentDiscoveryProfilePtrOutput {
	return i.ToPolicyVlanSegmentDiscoveryProfilePtrOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentDiscoveryProfileArgs) ToPolicyVlanSegmentDiscoveryProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentDiscoveryProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentDiscoveryProfileOutput).ToPolicyVlanSegmentDiscoveryProfilePtrOutputWithContext(ctx)
}

// PolicyVlanSegmentDiscoveryProfilePtrInput is an input type that accepts PolicyVlanSegmentDiscoveryProfileArgs, PolicyVlanSegmentDiscoveryProfilePtr and PolicyVlanSegmentDiscoveryProfilePtrOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentDiscoveryProfilePtrInput` via:
//
//          PolicyVlanSegmentDiscoveryProfileArgs{...}
//
//  or:
//
//          nil
type PolicyVlanSegmentDiscoveryProfilePtrInput interface {
	pulumi.Input

	ToPolicyVlanSegmentDiscoveryProfilePtrOutput() PolicyVlanSegmentDiscoveryProfilePtrOutput
	ToPolicyVlanSegmentDiscoveryProfilePtrOutputWithContext(context.Context) PolicyVlanSegmentDiscoveryProfilePtrOutput
}

type policyVlanSegmentDiscoveryProfilePtrType PolicyVlanSegmentDiscoveryProfileArgs

func PolicyVlanSegmentDiscoveryProfilePtr(v *PolicyVlanSegmentDiscoveryProfileArgs) PolicyVlanSegmentDiscoveryProfilePtrInput {
	return (*policyVlanSegmentDiscoveryProfilePtrType)(v)
}

func (*policyVlanSegmentDiscoveryProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentDiscoveryProfile)(nil)).Elem()
}

func (i *policyVlanSegmentDiscoveryProfilePtrType) ToPolicyVlanSegmentDiscoveryProfilePtrOutput() PolicyVlanSegmentDiscoveryProfilePtrOutput {
	return i.ToPolicyVlanSegmentDiscoveryProfilePtrOutputWithContext(context.Background())
}

func (i *policyVlanSegmentDiscoveryProfilePtrType) ToPolicyVlanSegmentDiscoveryProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentDiscoveryProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentDiscoveryProfilePtrOutput)
}

type PolicyVlanSegmentDiscoveryProfileOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentDiscoveryProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentDiscoveryProfile)(nil)).Elem()
}

func (o PolicyVlanSegmentDiscoveryProfileOutput) ToPolicyVlanSegmentDiscoveryProfileOutput() PolicyVlanSegmentDiscoveryProfileOutput {
	return o
}

func (o PolicyVlanSegmentDiscoveryProfileOutput) ToPolicyVlanSegmentDiscoveryProfileOutputWithContext(ctx context.Context) PolicyVlanSegmentDiscoveryProfileOutput {
	return o
}

func (o PolicyVlanSegmentDiscoveryProfileOutput) ToPolicyVlanSegmentDiscoveryProfilePtrOutput() PolicyVlanSegmentDiscoveryProfilePtrOutput {
	return o.ToPolicyVlanSegmentDiscoveryProfilePtrOutputWithContext(context.Background())
}

func (o PolicyVlanSegmentDiscoveryProfileOutput) ToPolicyVlanSegmentDiscoveryProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentDiscoveryProfilePtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentDiscoveryProfile) *PolicyVlanSegmentDiscoveryProfile {
		return &v
	}).(PolicyVlanSegmentDiscoveryProfilePtrOutput)
}
func (o PolicyVlanSegmentDiscoveryProfileOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentDiscoveryProfile) *string { return v.BindingMapPath }).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentDiscoveryProfileOutput) IpDiscoveryProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentDiscoveryProfile) *string { return v.IpDiscoveryProfilePath }).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentDiscoveryProfileOutput) MacDiscoveryProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentDiscoveryProfile) *string { return v.MacDiscoveryProfilePath }).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentDiscoveryProfileOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentDiscoveryProfile) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

type PolicyVlanSegmentDiscoveryProfilePtrOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentDiscoveryProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentDiscoveryProfile)(nil)).Elem()
}

func (o PolicyVlanSegmentDiscoveryProfilePtrOutput) ToPolicyVlanSegmentDiscoveryProfilePtrOutput() PolicyVlanSegmentDiscoveryProfilePtrOutput {
	return o
}

func (o PolicyVlanSegmentDiscoveryProfilePtrOutput) ToPolicyVlanSegmentDiscoveryProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentDiscoveryProfilePtrOutput {
	return o
}

func (o PolicyVlanSegmentDiscoveryProfilePtrOutput) Elem() PolicyVlanSegmentDiscoveryProfileOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentDiscoveryProfile) PolicyVlanSegmentDiscoveryProfile { return *v }).(PolicyVlanSegmentDiscoveryProfileOutput)
}

func (o PolicyVlanSegmentDiscoveryProfilePtrOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentDiscoveryProfile) *string {
		if v == nil {
			return nil
		}
		return v.BindingMapPath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentDiscoveryProfilePtrOutput) IpDiscoveryProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentDiscoveryProfile) *string {
		if v == nil {
			return nil
		}
		return v.IpDiscoveryProfilePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentDiscoveryProfilePtrOutput) MacDiscoveryProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentDiscoveryProfile) *string {
		if v == nil {
			return nil
		}
		return v.MacDiscoveryProfilePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentDiscoveryProfilePtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentDiscoveryProfile) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

type PolicyVlanSegmentL2Extension struct {
	L2vpnPaths []string `pulumi:"l2vpnPaths"`
	TunnelId   *int     `pulumi:"tunnelId"`
}

// PolicyVlanSegmentL2ExtensionInput is an input type that accepts PolicyVlanSegmentL2ExtensionArgs and PolicyVlanSegmentL2ExtensionOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentL2ExtensionInput` via:
//
//          PolicyVlanSegmentL2ExtensionArgs{...}
type PolicyVlanSegmentL2ExtensionInput interface {
	pulumi.Input

	ToPolicyVlanSegmentL2ExtensionOutput() PolicyVlanSegmentL2ExtensionOutput
	ToPolicyVlanSegmentL2ExtensionOutputWithContext(context.Context) PolicyVlanSegmentL2ExtensionOutput
}

type PolicyVlanSegmentL2ExtensionArgs struct {
	L2vpnPaths pulumi.StringArrayInput `pulumi:"l2vpnPaths"`
	TunnelId   pulumi.IntPtrInput      `pulumi:"tunnelId"`
}

func (PolicyVlanSegmentL2ExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentL2Extension)(nil)).Elem()
}

func (i PolicyVlanSegmentL2ExtensionArgs) ToPolicyVlanSegmentL2ExtensionOutput() PolicyVlanSegmentL2ExtensionOutput {
	return i.ToPolicyVlanSegmentL2ExtensionOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentL2ExtensionArgs) ToPolicyVlanSegmentL2ExtensionOutputWithContext(ctx context.Context) PolicyVlanSegmentL2ExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentL2ExtensionOutput)
}

func (i PolicyVlanSegmentL2ExtensionArgs) ToPolicyVlanSegmentL2ExtensionPtrOutput() PolicyVlanSegmentL2ExtensionPtrOutput {
	return i.ToPolicyVlanSegmentL2ExtensionPtrOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentL2ExtensionArgs) ToPolicyVlanSegmentL2ExtensionPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentL2ExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentL2ExtensionOutput).ToPolicyVlanSegmentL2ExtensionPtrOutputWithContext(ctx)
}

// PolicyVlanSegmentL2ExtensionPtrInput is an input type that accepts PolicyVlanSegmentL2ExtensionArgs, PolicyVlanSegmentL2ExtensionPtr and PolicyVlanSegmentL2ExtensionPtrOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentL2ExtensionPtrInput` via:
//
//          PolicyVlanSegmentL2ExtensionArgs{...}
//
//  or:
//
//          nil
type PolicyVlanSegmentL2ExtensionPtrInput interface {
	pulumi.Input

	ToPolicyVlanSegmentL2ExtensionPtrOutput() PolicyVlanSegmentL2ExtensionPtrOutput
	ToPolicyVlanSegmentL2ExtensionPtrOutputWithContext(context.Context) PolicyVlanSegmentL2ExtensionPtrOutput
}

type policyVlanSegmentL2ExtensionPtrType PolicyVlanSegmentL2ExtensionArgs

func PolicyVlanSegmentL2ExtensionPtr(v *PolicyVlanSegmentL2ExtensionArgs) PolicyVlanSegmentL2ExtensionPtrInput {
	return (*policyVlanSegmentL2ExtensionPtrType)(v)
}

func (*policyVlanSegmentL2ExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentL2Extension)(nil)).Elem()
}

func (i *policyVlanSegmentL2ExtensionPtrType) ToPolicyVlanSegmentL2ExtensionPtrOutput() PolicyVlanSegmentL2ExtensionPtrOutput {
	return i.ToPolicyVlanSegmentL2ExtensionPtrOutputWithContext(context.Background())
}

func (i *policyVlanSegmentL2ExtensionPtrType) ToPolicyVlanSegmentL2ExtensionPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentL2ExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentL2ExtensionPtrOutput)
}

type PolicyVlanSegmentL2ExtensionOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentL2ExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentL2Extension)(nil)).Elem()
}

func (o PolicyVlanSegmentL2ExtensionOutput) ToPolicyVlanSegmentL2ExtensionOutput() PolicyVlanSegmentL2ExtensionOutput {
	return o
}

func (o PolicyVlanSegmentL2ExtensionOutput) ToPolicyVlanSegmentL2ExtensionOutputWithContext(ctx context.Context) PolicyVlanSegmentL2ExtensionOutput {
	return o
}

func (o PolicyVlanSegmentL2ExtensionOutput) ToPolicyVlanSegmentL2ExtensionPtrOutput() PolicyVlanSegmentL2ExtensionPtrOutput {
	return o.ToPolicyVlanSegmentL2ExtensionPtrOutputWithContext(context.Background())
}

func (o PolicyVlanSegmentL2ExtensionOutput) ToPolicyVlanSegmentL2ExtensionPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentL2ExtensionPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentL2Extension) *PolicyVlanSegmentL2Extension {
		return &v
	}).(PolicyVlanSegmentL2ExtensionPtrOutput)
}
func (o PolicyVlanSegmentL2ExtensionOutput) L2vpnPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVlanSegmentL2Extension) []string { return v.L2vpnPaths }).(pulumi.StringArrayOutput)
}

func (o PolicyVlanSegmentL2ExtensionOutput) TunnelId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentL2Extension) *int { return v.TunnelId }).(pulumi.IntPtrOutput)
}

type PolicyVlanSegmentL2ExtensionPtrOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentL2ExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentL2Extension)(nil)).Elem()
}

func (o PolicyVlanSegmentL2ExtensionPtrOutput) ToPolicyVlanSegmentL2ExtensionPtrOutput() PolicyVlanSegmentL2ExtensionPtrOutput {
	return o
}

func (o PolicyVlanSegmentL2ExtensionPtrOutput) ToPolicyVlanSegmentL2ExtensionPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentL2ExtensionPtrOutput {
	return o
}

func (o PolicyVlanSegmentL2ExtensionPtrOutput) Elem() PolicyVlanSegmentL2ExtensionOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentL2Extension) PolicyVlanSegmentL2Extension { return *v }).(PolicyVlanSegmentL2ExtensionOutput)
}

func (o PolicyVlanSegmentL2ExtensionPtrOutput) L2vpnPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentL2Extension) []string {
		if v == nil {
			return nil
		}
		return v.L2vpnPaths
	}).(pulumi.StringArrayOutput)
}

func (o PolicyVlanSegmentL2ExtensionPtrOutput) TunnelId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentL2Extension) *int {
		if v == nil {
			return nil
		}
		return v.TunnelId
	}).(pulumi.IntPtrOutput)
}

type PolicyVlanSegmentQosProfile struct {
	BindingMapPath *string `pulumi:"bindingMapPath"`
	QosProfilePath string  `pulumi:"qosProfilePath"`
	Revision       *int    `pulumi:"revision"`
}

// PolicyVlanSegmentQosProfileInput is an input type that accepts PolicyVlanSegmentQosProfileArgs and PolicyVlanSegmentQosProfileOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentQosProfileInput` via:
//
//          PolicyVlanSegmentQosProfileArgs{...}
type PolicyVlanSegmentQosProfileInput interface {
	pulumi.Input

	ToPolicyVlanSegmentQosProfileOutput() PolicyVlanSegmentQosProfileOutput
	ToPolicyVlanSegmentQosProfileOutputWithContext(context.Context) PolicyVlanSegmentQosProfileOutput
}

type PolicyVlanSegmentQosProfileArgs struct {
	BindingMapPath pulumi.StringPtrInput `pulumi:"bindingMapPath"`
	QosProfilePath pulumi.StringInput    `pulumi:"qosProfilePath"`
	Revision       pulumi.IntPtrInput    `pulumi:"revision"`
}

func (PolicyVlanSegmentQosProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentQosProfile)(nil)).Elem()
}

func (i PolicyVlanSegmentQosProfileArgs) ToPolicyVlanSegmentQosProfileOutput() PolicyVlanSegmentQosProfileOutput {
	return i.ToPolicyVlanSegmentQosProfileOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentQosProfileArgs) ToPolicyVlanSegmentQosProfileOutputWithContext(ctx context.Context) PolicyVlanSegmentQosProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentQosProfileOutput)
}

func (i PolicyVlanSegmentQosProfileArgs) ToPolicyVlanSegmentQosProfilePtrOutput() PolicyVlanSegmentQosProfilePtrOutput {
	return i.ToPolicyVlanSegmentQosProfilePtrOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentQosProfileArgs) ToPolicyVlanSegmentQosProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentQosProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentQosProfileOutput).ToPolicyVlanSegmentQosProfilePtrOutputWithContext(ctx)
}

// PolicyVlanSegmentQosProfilePtrInput is an input type that accepts PolicyVlanSegmentQosProfileArgs, PolicyVlanSegmentQosProfilePtr and PolicyVlanSegmentQosProfilePtrOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentQosProfilePtrInput` via:
//
//          PolicyVlanSegmentQosProfileArgs{...}
//
//  or:
//
//          nil
type PolicyVlanSegmentQosProfilePtrInput interface {
	pulumi.Input

	ToPolicyVlanSegmentQosProfilePtrOutput() PolicyVlanSegmentQosProfilePtrOutput
	ToPolicyVlanSegmentQosProfilePtrOutputWithContext(context.Context) PolicyVlanSegmentQosProfilePtrOutput
}

type policyVlanSegmentQosProfilePtrType PolicyVlanSegmentQosProfileArgs

func PolicyVlanSegmentQosProfilePtr(v *PolicyVlanSegmentQosProfileArgs) PolicyVlanSegmentQosProfilePtrInput {
	return (*policyVlanSegmentQosProfilePtrType)(v)
}

func (*policyVlanSegmentQosProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentQosProfile)(nil)).Elem()
}

func (i *policyVlanSegmentQosProfilePtrType) ToPolicyVlanSegmentQosProfilePtrOutput() PolicyVlanSegmentQosProfilePtrOutput {
	return i.ToPolicyVlanSegmentQosProfilePtrOutputWithContext(context.Background())
}

func (i *policyVlanSegmentQosProfilePtrType) ToPolicyVlanSegmentQosProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentQosProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentQosProfilePtrOutput)
}

type PolicyVlanSegmentQosProfileOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentQosProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentQosProfile)(nil)).Elem()
}

func (o PolicyVlanSegmentQosProfileOutput) ToPolicyVlanSegmentQosProfileOutput() PolicyVlanSegmentQosProfileOutput {
	return o
}

func (o PolicyVlanSegmentQosProfileOutput) ToPolicyVlanSegmentQosProfileOutputWithContext(ctx context.Context) PolicyVlanSegmentQosProfileOutput {
	return o
}

func (o PolicyVlanSegmentQosProfileOutput) ToPolicyVlanSegmentQosProfilePtrOutput() PolicyVlanSegmentQosProfilePtrOutput {
	return o.ToPolicyVlanSegmentQosProfilePtrOutputWithContext(context.Background())
}

func (o PolicyVlanSegmentQosProfileOutput) ToPolicyVlanSegmentQosProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentQosProfilePtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentQosProfile) *PolicyVlanSegmentQosProfile {
		return &v
	}).(PolicyVlanSegmentQosProfilePtrOutput)
}
func (o PolicyVlanSegmentQosProfileOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentQosProfile) *string { return v.BindingMapPath }).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentQosProfileOutput) QosProfilePath() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyVlanSegmentQosProfile) string { return v.QosProfilePath }).(pulumi.StringOutput)
}

func (o PolicyVlanSegmentQosProfileOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentQosProfile) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

type PolicyVlanSegmentQosProfilePtrOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentQosProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentQosProfile)(nil)).Elem()
}

func (o PolicyVlanSegmentQosProfilePtrOutput) ToPolicyVlanSegmentQosProfilePtrOutput() PolicyVlanSegmentQosProfilePtrOutput {
	return o
}

func (o PolicyVlanSegmentQosProfilePtrOutput) ToPolicyVlanSegmentQosProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentQosProfilePtrOutput {
	return o
}

func (o PolicyVlanSegmentQosProfilePtrOutput) Elem() PolicyVlanSegmentQosProfileOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentQosProfile) PolicyVlanSegmentQosProfile { return *v }).(PolicyVlanSegmentQosProfileOutput)
}

func (o PolicyVlanSegmentQosProfilePtrOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentQosProfile) *string {
		if v == nil {
			return nil
		}
		return v.BindingMapPath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentQosProfilePtrOutput) QosProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentQosProfile) *string {
		if v == nil {
			return nil
		}
		return &v.QosProfilePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentQosProfilePtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentQosProfile) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

type PolicyVlanSegmentSecurityProfile struct {
	BindingMapPath        *string `pulumi:"bindingMapPath"`
	Revision              *int    `pulumi:"revision"`
	SecurityProfilePath   *string `pulumi:"securityProfilePath"`
	SpoofguardProfilePath *string `pulumi:"spoofguardProfilePath"`
}

// PolicyVlanSegmentSecurityProfileInput is an input type that accepts PolicyVlanSegmentSecurityProfileArgs and PolicyVlanSegmentSecurityProfileOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSecurityProfileInput` via:
//
//          PolicyVlanSegmentSecurityProfileArgs{...}
type PolicyVlanSegmentSecurityProfileInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSecurityProfileOutput() PolicyVlanSegmentSecurityProfileOutput
	ToPolicyVlanSegmentSecurityProfileOutputWithContext(context.Context) PolicyVlanSegmentSecurityProfileOutput
}

type PolicyVlanSegmentSecurityProfileArgs struct {
	BindingMapPath        pulumi.StringPtrInput `pulumi:"bindingMapPath"`
	Revision              pulumi.IntPtrInput    `pulumi:"revision"`
	SecurityProfilePath   pulumi.StringPtrInput `pulumi:"securityProfilePath"`
	SpoofguardProfilePath pulumi.StringPtrInput `pulumi:"spoofguardProfilePath"`
}

func (PolicyVlanSegmentSecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSecurityProfile)(nil)).Elem()
}

func (i PolicyVlanSegmentSecurityProfileArgs) ToPolicyVlanSegmentSecurityProfileOutput() PolicyVlanSegmentSecurityProfileOutput {
	return i.ToPolicyVlanSegmentSecurityProfileOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSecurityProfileArgs) ToPolicyVlanSegmentSecurityProfileOutputWithContext(ctx context.Context) PolicyVlanSegmentSecurityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSecurityProfileOutput)
}

func (i PolicyVlanSegmentSecurityProfileArgs) ToPolicyVlanSegmentSecurityProfilePtrOutput() PolicyVlanSegmentSecurityProfilePtrOutput {
	return i.ToPolicyVlanSegmentSecurityProfilePtrOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSecurityProfileArgs) ToPolicyVlanSegmentSecurityProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSecurityProfileOutput).ToPolicyVlanSegmentSecurityProfilePtrOutputWithContext(ctx)
}

// PolicyVlanSegmentSecurityProfilePtrInput is an input type that accepts PolicyVlanSegmentSecurityProfileArgs, PolicyVlanSegmentSecurityProfilePtr and PolicyVlanSegmentSecurityProfilePtrOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSecurityProfilePtrInput` via:
//
//          PolicyVlanSegmentSecurityProfileArgs{...}
//
//  or:
//
//          nil
type PolicyVlanSegmentSecurityProfilePtrInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSecurityProfilePtrOutput() PolicyVlanSegmentSecurityProfilePtrOutput
	ToPolicyVlanSegmentSecurityProfilePtrOutputWithContext(context.Context) PolicyVlanSegmentSecurityProfilePtrOutput
}

type policyVlanSegmentSecurityProfilePtrType PolicyVlanSegmentSecurityProfileArgs

func PolicyVlanSegmentSecurityProfilePtr(v *PolicyVlanSegmentSecurityProfileArgs) PolicyVlanSegmentSecurityProfilePtrInput {
	return (*policyVlanSegmentSecurityProfilePtrType)(v)
}

func (*policyVlanSegmentSecurityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentSecurityProfile)(nil)).Elem()
}

func (i *policyVlanSegmentSecurityProfilePtrType) ToPolicyVlanSegmentSecurityProfilePtrOutput() PolicyVlanSegmentSecurityProfilePtrOutput {
	return i.ToPolicyVlanSegmentSecurityProfilePtrOutputWithContext(context.Background())
}

func (i *policyVlanSegmentSecurityProfilePtrType) ToPolicyVlanSegmentSecurityProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSecurityProfilePtrOutput)
}

type PolicyVlanSegmentSecurityProfileOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSecurityProfile)(nil)).Elem()
}

func (o PolicyVlanSegmentSecurityProfileOutput) ToPolicyVlanSegmentSecurityProfileOutput() PolicyVlanSegmentSecurityProfileOutput {
	return o
}

func (o PolicyVlanSegmentSecurityProfileOutput) ToPolicyVlanSegmentSecurityProfileOutputWithContext(ctx context.Context) PolicyVlanSegmentSecurityProfileOutput {
	return o
}

func (o PolicyVlanSegmentSecurityProfileOutput) ToPolicyVlanSegmentSecurityProfilePtrOutput() PolicyVlanSegmentSecurityProfilePtrOutput {
	return o.ToPolicyVlanSegmentSecurityProfilePtrOutputWithContext(context.Background())
}

func (o PolicyVlanSegmentSecurityProfileOutput) ToPolicyVlanSegmentSecurityProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSecurityProfilePtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSecurityProfile) *PolicyVlanSegmentSecurityProfile {
		return &v
	}).(PolicyVlanSegmentSecurityProfilePtrOutput)
}
func (o PolicyVlanSegmentSecurityProfileOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSecurityProfile) *string { return v.BindingMapPath }).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentSecurityProfileOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSecurityProfile) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

func (o PolicyVlanSegmentSecurityProfileOutput) SecurityProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSecurityProfile) *string { return v.SecurityProfilePath }).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentSecurityProfileOutput) SpoofguardProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSecurityProfile) *string { return v.SpoofguardProfilePath }).(pulumi.StringPtrOutput)
}

type PolicyVlanSegmentSecurityProfilePtrOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSecurityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentSecurityProfile)(nil)).Elem()
}

func (o PolicyVlanSegmentSecurityProfilePtrOutput) ToPolicyVlanSegmentSecurityProfilePtrOutput() PolicyVlanSegmentSecurityProfilePtrOutput {
	return o
}

func (o PolicyVlanSegmentSecurityProfilePtrOutput) ToPolicyVlanSegmentSecurityProfilePtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSecurityProfilePtrOutput {
	return o
}

func (o PolicyVlanSegmentSecurityProfilePtrOutput) Elem() PolicyVlanSegmentSecurityProfileOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSecurityProfile) PolicyVlanSegmentSecurityProfile { return *v }).(PolicyVlanSegmentSecurityProfileOutput)
}

func (o PolicyVlanSegmentSecurityProfilePtrOutput) BindingMapPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.BindingMapPath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentSecurityProfilePtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSecurityProfile) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

func (o PolicyVlanSegmentSecurityProfilePtrOutput) SecurityProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.SecurityProfilePath
	}).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentSecurityProfilePtrOutput) SpoofguardProfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.SpoofguardProfilePath
	}).(pulumi.StringPtrOutput)
}

type PolicyVlanSegmentSubnet struct {
	Cidr         string                               `pulumi:"cidr"`
	DhcpRanges   []string                             `pulumi:"dhcpRanges"`
	DhcpV4Config *PolicyVlanSegmentSubnetDhcpV4Config `pulumi:"dhcpV4Config"`
	DhcpV6Config *PolicyVlanSegmentSubnetDhcpV6Config `pulumi:"dhcpV6Config"`
	Network      *string                              `pulumi:"network"`
}

// PolicyVlanSegmentSubnetInput is an input type that accepts PolicyVlanSegmentSubnetArgs and PolicyVlanSegmentSubnetOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetInput` via:
//
//          PolicyVlanSegmentSubnetArgs{...}
type PolicyVlanSegmentSubnetInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetOutput() PolicyVlanSegmentSubnetOutput
	ToPolicyVlanSegmentSubnetOutputWithContext(context.Context) PolicyVlanSegmentSubnetOutput
}

type PolicyVlanSegmentSubnetArgs struct {
	Cidr         pulumi.StringInput                          `pulumi:"cidr"`
	DhcpRanges   pulumi.StringArrayInput                     `pulumi:"dhcpRanges"`
	DhcpV4Config PolicyVlanSegmentSubnetDhcpV4ConfigPtrInput `pulumi:"dhcpV4Config"`
	DhcpV6Config PolicyVlanSegmentSubnetDhcpV6ConfigPtrInput `pulumi:"dhcpV6Config"`
	Network      pulumi.StringPtrInput                       `pulumi:"network"`
}

func (PolicyVlanSegmentSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnet)(nil)).Elem()
}

func (i PolicyVlanSegmentSubnetArgs) ToPolicyVlanSegmentSubnetOutput() PolicyVlanSegmentSubnetOutput {
	return i.ToPolicyVlanSegmentSubnetOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetArgs) ToPolicyVlanSegmentSubnetOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetOutput)
}

// PolicyVlanSegmentSubnetArrayInput is an input type that accepts PolicyVlanSegmentSubnetArray and PolicyVlanSegmentSubnetArrayOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetArrayInput` via:
//
//          PolicyVlanSegmentSubnetArray{ PolicyVlanSegmentSubnetArgs{...} }
type PolicyVlanSegmentSubnetArrayInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetArrayOutput() PolicyVlanSegmentSubnetArrayOutput
	ToPolicyVlanSegmentSubnetArrayOutputWithContext(context.Context) PolicyVlanSegmentSubnetArrayOutput
}

type PolicyVlanSegmentSubnetArray []PolicyVlanSegmentSubnetInput

func (PolicyVlanSegmentSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVlanSegmentSubnet)(nil)).Elem()
}

func (i PolicyVlanSegmentSubnetArray) ToPolicyVlanSegmentSubnetArrayOutput() PolicyVlanSegmentSubnetArrayOutput {
	return i.ToPolicyVlanSegmentSubnetArrayOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetArray) ToPolicyVlanSegmentSubnetArrayOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetArrayOutput)
}

type PolicyVlanSegmentSubnetOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnet)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetOutput) ToPolicyVlanSegmentSubnetOutput() PolicyVlanSegmentSubnetOutput {
	return o
}

func (o PolicyVlanSegmentSubnetOutput) ToPolicyVlanSegmentSubnetOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetOutput {
	return o
}

func (o PolicyVlanSegmentSubnetOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnet) string { return v.Cidr }).(pulumi.StringOutput)
}

func (o PolicyVlanSegmentSubnetOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnet) []string { return v.DhcpRanges }).(pulumi.StringArrayOutput)
}

func (o PolicyVlanSegmentSubnetOutput) DhcpV4Config() PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnet) *PolicyVlanSegmentSubnetDhcpV4Config { return v.DhcpV4Config }).(PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput)
}

func (o PolicyVlanSegmentSubnetOutput) DhcpV6Config() PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnet) *PolicyVlanSegmentSubnetDhcpV6Config { return v.DhcpV6Config }).(PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput)
}

func (o PolicyVlanSegmentSubnetOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnet) *string { return v.Network }).(pulumi.StringPtrOutput)
}

type PolicyVlanSegmentSubnetArrayOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVlanSegmentSubnet)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetArrayOutput) ToPolicyVlanSegmentSubnetArrayOutput() PolicyVlanSegmentSubnetArrayOutput {
	return o
}

func (o PolicyVlanSegmentSubnetArrayOutput) ToPolicyVlanSegmentSubnetArrayOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetArrayOutput {
	return o
}

func (o PolicyVlanSegmentSubnetArrayOutput) Index(i pulumi.IntInput) PolicyVlanSegmentSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyVlanSegmentSubnet {
		return vs[0].([]PolicyVlanSegmentSubnet)[vs[1].(int)]
	}).(PolicyVlanSegmentSubnetOutput)
}

type PolicyVlanSegmentSubnetDhcpV4Config struct {
	DhcpGenericOptions []PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption `pulumi:"dhcpGenericOptions"`
	DhcpOption121s     []PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121     `pulumi:"dhcpOption121s"`
	DnsServers         []string                                               `pulumi:"dnsServers"`
	LeaseTime          *int                                                   `pulumi:"leaseTime"`
	ServerAddress      *string                                                `pulumi:"serverAddress"`
}

// PolicyVlanSegmentSubnetDhcpV4ConfigInput is an input type that accepts PolicyVlanSegmentSubnetDhcpV4ConfigArgs and PolicyVlanSegmentSubnetDhcpV4ConfigOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetDhcpV4ConfigInput` via:
//
//          PolicyVlanSegmentSubnetDhcpV4ConfigArgs{...}
type PolicyVlanSegmentSubnetDhcpV4ConfigInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetDhcpV4ConfigOutput() PolicyVlanSegmentSubnetDhcpV4ConfigOutput
	ToPolicyVlanSegmentSubnetDhcpV4ConfigOutputWithContext(context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigOutput
}

type PolicyVlanSegmentSubnetDhcpV4ConfigArgs struct {
	DhcpGenericOptions PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayInput `pulumi:"dhcpGenericOptions"`
	DhcpOption121s     PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayInput     `pulumi:"dhcpOption121s"`
	DnsServers         pulumi.StringArrayInput                                        `pulumi:"dnsServers"`
	LeaseTime          pulumi.IntPtrInput                                             `pulumi:"leaseTime"`
	ServerAddress      pulumi.StringPtrInput                                          `pulumi:"serverAddress"`
}

func (PolicyVlanSegmentSubnetDhcpV4ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnetDhcpV4Config)(nil)).Elem()
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigArgs) ToPolicyVlanSegmentSubnetDhcpV4ConfigOutput() PolicyVlanSegmentSubnetDhcpV4ConfigOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV4ConfigOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigArgs) ToPolicyVlanSegmentSubnetDhcpV4ConfigOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV4ConfigOutput)
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigArgs) ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput() PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigArgs) ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV4ConfigOutput).ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutputWithContext(ctx)
}

// PolicyVlanSegmentSubnetDhcpV4ConfigPtrInput is an input type that accepts PolicyVlanSegmentSubnetDhcpV4ConfigArgs, PolicyVlanSegmentSubnetDhcpV4ConfigPtr and PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetDhcpV4ConfigPtrInput` via:
//
//          PolicyVlanSegmentSubnetDhcpV4ConfigArgs{...}
//
//  or:
//
//          nil
type PolicyVlanSegmentSubnetDhcpV4ConfigPtrInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput() PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput
	ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutputWithContext(context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput
}

type policyVlanSegmentSubnetDhcpV4ConfigPtrType PolicyVlanSegmentSubnetDhcpV4ConfigArgs

func PolicyVlanSegmentSubnetDhcpV4ConfigPtr(v *PolicyVlanSegmentSubnetDhcpV4ConfigArgs) PolicyVlanSegmentSubnetDhcpV4ConfigPtrInput {
	return (*policyVlanSegmentSubnetDhcpV4ConfigPtrType)(v)
}

func (*policyVlanSegmentSubnetDhcpV4ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentSubnetDhcpV4Config)(nil)).Elem()
}

func (i *policyVlanSegmentSubnetDhcpV4ConfigPtrType) ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput() PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutputWithContext(context.Background())
}

func (i *policyVlanSegmentSubnetDhcpV4ConfigPtrType) ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput)
}

type PolicyVlanSegmentSubnetDhcpV4ConfigOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetDhcpV4ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnetDhcpV4Config)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigOutput() PolicyVlanSegmentSubnetDhcpV4ConfigOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput() PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput {
	return o.ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutputWithContext(context.Background())
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV4Config) *PolicyVlanSegmentSubnetDhcpV4Config {
		return &v
	}).(PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput)
}
func (o PolicyVlanSegmentSubnetDhcpV4ConfigOutput) DhcpGenericOptions() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV4Config) []PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption {
		return v.DhcpGenericOptions
	}).(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigOutput) DhcpOption121s() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV4Config) []PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121 {
		return v.DhcpOption121s
	}).(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV4Config) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV4Config) *int { return v.LeaseTime }).(pulumi.IntPtrOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV4Config) *string { return v.ServerAddress }).(pulumi.StringPtrOutput)
}

type PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentSubnetDhcpV4Config)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput() PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput) Elem() PolicyVlanSegmentSubnetDhcpV4ConfigOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV4Config) PolicyVlanSegmentSubnetDhcpV4Config { return *v }).(PolicyVlanSegmentSubnetDhcpV4ConfigOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput) DhcpGenericOptions() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV4Config) []PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption {
		if v == nil {
			return nil
		}
		return v.DhcpGenericOptions
	}).(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput) DhcpOption121s() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV4Config) []PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121 {
		if v == nil {
			return nil
		}
		return v.DhcpOption121s
	}).(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV4Config) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV4Config) *int {
		if v == nil {
			return nil
		}
		return v.LeaseTime
	}).(pulumi.IntPtrOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV4Config) *string {
		if v == nil {
			return nil
		}
		return v.ServerAddress
	}).(pulumi.StringPtrOutput)
}

type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption struct {
	Code   int      `pulumi:"code"`
	Values []string `pulumi:"values"`
}

// PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionInput is an input type that accepts PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs and PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionInput` via:
//
//          PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs{...}
type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput
	ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutputWithContext(context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput
}

type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs struct {
	Code   pulumi.IntInput         `pulumi:"code"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption)(nil)).Elem()
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput)
}

// PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayInput is an input type that accepts PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArray and PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayInput` via:
//
//          PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArray{ PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArgs{...} }
type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput
	ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutputWithContext(context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput
}

type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArray []PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionInput

func (PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption)(nil)).Elem()
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArray) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArray) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput)
}

type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption) int { return v.Code }).(pulumi.IntOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput) Index(i pulumi.IntInput) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption {
		return vs[0].([]PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOption)[vs[1].(int)]
	}).(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput)
}

type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121 struct {
	Network string `pulumi:"network"`
	NextHop string `pulumi:"nextHop"`
}

// PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Input is an input type that accepts PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Args and PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Input` via:
//
//          PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Args{...}
type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Input interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output
	ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121OutputWithContext(context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output
}

type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Args struct {
	Network pulumi.StringInput `pulumi:"network"`
	NextHop pulumi.StringInput `pulumi:"nextHop"`
}

func (PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121)(nil)).Elem()
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Args) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output {
	return i.ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121OutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Args) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121OutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output)
}

// PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayInput is an input type that accepts PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Array and PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayInput` via:
//
//          PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Array{ PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Args{...} }
type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput
	ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutputWithContext(context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput
}

type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Array []PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Input

func (PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121)(nil)).Elem()
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Array) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Array) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput)
}

type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121OutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output) Network() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121) string { return v.Network }).(pulumi.StringOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121) string { return v.NextHop }).(pulumi.StringOutput)
}

type PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput() PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput) ToPolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput) Index(i pulumi.IntInput) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121 {
		return vs[0].([]PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121)[vs[1].(int)]
	}).(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output)
}

type PolicyVlanSegmentSubnetDhcpV6Config struct {
	DnsServers     []string                                           `pulumi:"dnsServers"`
	DomainNames    []string                                           `pulumi:"domainNames"`
	ExcludedRanges []PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange `pulumi:"excludedRanges"`
	LeaseTime      *int                                               `pulumi:"leaseTime"`
	PreferredTime  *int                                               `pulumi:"preferredTime"`
	ServerAddress  *string                                            `pulumi:"serverAddress"`
	SntpServers    []string                                           `pulumi:"sntpServers"`
}

// PolicyVlanSegmentSubnetDhcpV6ConfigInput is an input type that accepts PolicyVlanSegmentSubnetDhcpV6ConfigArgs and PolicyVlanSegmentSubnetDhcpV6ConfigOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetDhcpV6ConfigInput` via:
//
//          PolicyVlanSegmentSubnetDhcpV6ConfigArgs{...}
type PolicyVlanSegmentSubnetDhcpV6ConfigInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetDhcpV6ConfigOutput() PolicyVlanSegmentSubnetDhcpV6ConfigOutput
	ToPolicyVlanSegmentSubnetDhcpV6ConfigOutputWithContext(context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigOutput
}

type PolicyVlanSegmentSubnetDhcpV6ConfigArgs struct {
	DnsServers     pulumi.StringArrayInput                                    `pulumi:"dnsServers"`
	DomainNames    pulumi.StringArrayInput                                    `pulumi:"domainNames"`
	ExcludedRanges PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayInput `pulumi:"excludedRanges"`
	LeaseTime      pulumi.IntPtrInput                                         `pulumi:"leaseTime"`
	PreferredTime  pulumi.IntPtrInput                                         `pulumi:"preferredTime"`
	ServerAddress  pulumi.StringPtrInput                                      `pulumi:"serverAddress"`
	SntpServers    pulumi.StringArrayInput                                    `pulumi:"sntpServers"`
}

func (PolicyVlanSegmentSubnetDhcpV6ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnetDhcpV6Config)(nil)).Elem()
}

func (i PolicyVlanSegmentSubnetDhcpV6ConfigArgs) ToPolicyVlanSegmentSubnetDhcpV6ConfigOutput() PolicyVlanSegmentSubnetDhcpV6ConfigOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV6ConfigOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetDhcpV6ConfigArgs) ToPolicyVlanSegmentSubnetDhcpV6ConfigOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV6ConfigOutput)
}

func (i PolicyVlanSegmentSubnetDhcpV6ConfigArgs) ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput() PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetDhcpV6ConfigArgs) ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV6ConfigOutput).ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutputWithContext(ctx)
}

// PolicyVlanSegmentSubnetDhcpV6ConfigPtrInput is an input type that accepts PolicyVlanSegmentSubnetDhcpV6ConfigArgs, PolicyVlanSegmentSubnetDhcpV6ConfigPtr and PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetDhcpV6ConfigPtrInput` via:
//
//          PolicyVlanSegmentSubnetDhcpV6ConfigArgs{...}
//
//  or:
//
//          nil
type PolicyVlanSegmentSubnetDhcpV6ConfigPtrInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput() PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput
	ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutputWithContext(context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput
}

type policyVlanSegmentSubnetDhcpV6ConfigPtrType PolicyVlanSegmentSubnetDhcpV6ConfigArgs

func PolicyVlanSegmentSubnetDhcpV6ConfigPtr(v *PolicyVlanSegmentSubnetDhcpV6ConfigArgs) PolicyVlanSegmentSubnetDhcpV6ConfigPtrInput {
	return (*policyVlanSegmentSubnetDhcpV6ConfigPtrType)(v)
}

func (*policyVlanSegmentSubnetDhcpV6ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentSubnetDhcpV6Config)(nil)).Elem()
}

func (i *policyVlanSegmentSubnetDhcpV6ConfigPtrType) ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput() PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutputWithContext(context.Background())
}

func (i *policyVlanSegmentSubnetDhcpV6ConfigPtrType) ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput)
}

type PolicyVlanSegmentSubnetDhcpV6ConfigOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetDhcpV6ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnetDhcpV6Config)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) ToPolicyVlanSegmentSubnetDhcpV6ConfigOutput() PolicyVlanSegmentSubnetDhcpV6ConfigOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) ToPolicyVlanSegmentSubnetDhcpV6ConfigOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput() PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput {
	return o.ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutputWithContext(context.Background())
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV6Config) *PolicyVlanSegmentSubnetDhcpV6Config {
		return &v
	}).(PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput)
}
func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV6Config) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV6Config) []string { return v.DomainNames }).(pulumi.StringArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) ExcludedRanges() PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV6Config) []PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange {
		return v.ExcludedRanges
	}).(PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV6Config) *int { return v.LeaseTime }).(pulumi.IntPtrOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) PreferredTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV6Config) *int { return v.PreferredTime }).(pulumi.IntPtrOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV6Config) *string { return v.ServerAddress }).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigOutput) SntpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV6Config) []string { return v.SntpServers }).(pulumi.StringArrayOutput)
}

type PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVlanSegmentSubnetDhcpV6Config)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput() PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) ToPolicyVlanSegmentSubnetDhcpV6ConfigPtrOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) Elem() PolicyVlanSegmentSubnetDhcpV6ConfigOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV6Config) PolicyVlanSegmentSubnetDhcpV6Config { return *v }).(PolicyVlanSegmentSubnetDhcpV6ConfigOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV6Config) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV6Config) []string {
		if v == nil {
			return nil
		}
		return v.DomainNames
	}).(pulumi.StringArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) ExcludedRanges() PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV6Config) []PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange {
		if v == nil {
			return nil
		}
		return v.ExcludedRanges
	}).(PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) LeaseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV6Config) *int {
		if v == nil {
			return nil
		}
		return v.LeaseTime
	}).(pulumi.IntPtrOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) PreferredTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV6Config) *int {
		if v == nil {
			return nil
		}
		return v.PreferredTime
	}).(pulumi.IntPtrOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) ServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV6Config) *string {
		if v == nil {
			return nil
		}
		return v.ServerAddress
	}).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput) SntpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVlanSegmentSubnetDhcpV6Config) []string {
		if v == nil {
			return nil
		}
		return v.SntpServers
	}).(pulumi.StringArrayOutput)
}

type PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange struct {
	End   string `pulumi:"end"`
	Start string `pulumi:"start"`
}

// PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeInput is an input type that accepts PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArgs and PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeInput` via:
//
//          PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArgs{...}
type PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput() PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput
	ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutputWithContext(context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput
}

type PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArgs struct {
	End   pulumi.StringInput `pulumi:"end"`
	Start pulumi.StringInput `pulumi:"start"`
}

func (PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange)(nil)).Elem()
}

func (i PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArgs) ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput() PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArgs) ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput)
}

// PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayInput is an input type that accepts PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArray and PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayInput` via:
//
//          PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArray{ PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArgs{...} }
type PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayInput interface {
	pulumi.Input

	ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput() PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput
	ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutputWithContext(context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput
}

type PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArray []PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeInput

func (PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange)(nil)).Elem()
}

func (i PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArray) ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput() PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return i.ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArray) ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput)
}

type PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput) ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput() PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput) ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange) string { return v.End }).(pulumi.StringOutput)
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange) string { return v.Start }).(pulumi.StringOutput)
}

type PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange)(nil)).Elem()
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput) ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput() PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput) ToPolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutputWithContext(ctx context.Context) PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput {
	return o
}

func (o PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput) Index(i pulumi.IntInput) PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange {
		return vs[0].([]PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRange)[vs[1].(int)]
	}).(PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput)
}

type PolicyVlanSegmentTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// PolicyVlanSegmentTagInput is an input type that accepts PolicyVlanSegmentTagArgs and PolicyVlanSegmentTagOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentTagInput` via:
//
//          PolicyVlanSegmentTagArgs{...}
type PolicyVlanSegmentTagInput interface {
	pulumi.Input

	ToPolicyVlanSegmentTagOutput() PolicyVlanSegmentTagOutput
	ToPolicyVlanSegmentTagOutputWithContext(context.Context) PolicyVlanSegmentTagOutput
}

type PolicyVlanSegmentTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (PolicyVlanSegmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentTag)(nil)).Elem()
}

func (i PolicyVlanSegmentTagArgs) ToPolicyVlanSegmentTagOutput() PolicyVlanSegmentTagOutput {
	return i.ToPolicyVlanSegmentTagOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentTagArgs) ToPolicyVlanSegmentTagOutputWithContext(ctx context.Context) PolicyVlanSegmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentTagOutput)
}

// PolicyVlanSegmentTagArrayInput is an input type that accepts PolicyVlanSegmentTagArray and PolicyVlanSegmentTagArrayOutput values.
// You can construct a concrete instance of `PolicyVlanSegmentTagArrayInput` via:
//
//          PolicyVlanSegmentTagArray{ PolicyVlanSegmentTagArgs{...} }
type PolicyVlanSegmentTagArrayInput interface {
	pulumi.Input

	ToPolicyVlanSegmentTagArrayOutput() PolicyVlanSegmentTagArrayOutput
	ToPolicyVlanSegmentTagArrayOutputWithContext(context.Context) PolicyVlanSegmentTagArrayOutput
}

type PolicyVlanSegmentTagArray []PolicyVlanSegmentTagInput

func (PolicyVlanSegmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVlanSegmentTag)(nil)).Elem()
}

func (i PolicyVlanSegmentTagArray) ToPolicyVlanSegmentTagArrayOutput() PolicyVlanSegmentTagArrayOutput {
	return i.ToPolicyVlanSegmentTagArrayOutputWithContext(context.Background())
}

func (i PolicyVlanSegmentTagArray) ToPolicyVlanSegmentTagArrayOutputWithContext(ctx context.Context) PolicyVlanSegmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVlanSegmentTagArrayOutput)
}

type PolicyVlanSegmentTagOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVlanSegmentTag)(nil)).Elem()
}

func (o PolicyVlanSegmentTagOutput) ToPolicyVlanSegmentTagOutput() PolicyVlanSegmentTagOutput {
	return o
}

func (o PolicyVlanSegmentTagOutput) ToPolicyVlanSegmentTagOutputWithContext(ctx context.Context) PolicyVlanSegmentTagOutput {
	return o
}

func (o PolicyVlanSegmentTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o PolicyVlanSegmentTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyVlanSegmentTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PolicyVlanSegmentTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyVlanSegmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyVlanSegmentTag)(nil)).Elem()
}

func (o PolicyVlanSegmentTagArrayOutput) ToPolicyVlanSegmentTagArrayOutput() PolicyVlanSegmentTagArrayOutput {
	return o
}

func (o PolicyVlanSegmentTagArrayOutput) ToPolicyVlanSegmentTagArrayOutputWithContext(ctx context.Context) PolicyVlanSegmentTagArrayOutput {
	return o
}

func (o PolicyVlanSegmentTagArrayOutput) Index(i pulumi.IntInput) PolicyVlanSegmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyVlanSegmentTag {
		return vs[0].([]PolicyVlanSegmentTag)[vs[1].(int)]
	}).(PolicyVlanSegmentTagOutput)
}

type QOSSwitchingProfileEgressRateShaper struct {
	AverageBwMbps *int  `pulumi:"averageBwMbps"`
	BurstSize     *int  `pulumi:"burstSize"`
	Enabled       *bool `pulumi:"enabled"`
	PeakBwMbps    *int  `pulumi:"peakBwMbps"`
}

// QOSSwitchingProfileEgressRateShaperInput is an input type that accepts QOSSwitchingProfileEgressRateShaperArgs and QOSSwitchingProfileEgressRateShaperOutput values.
// You can construct a concrete instance of `QOSSwitchingProfileEgressRateShaperInput` via:
//
//          QOSSwitchingProfileEgressRateShaperArgs{...}
type QOSSwitchingProfileEgressRateShaperInput interface {
	pulumi.Input

	ToQOSSwitchingProfileEgressRateShaperOutput() QOSSwitchingProfileEgressRateShaperOutput
	ToQOSSwitchingProfileEgressRateShaperOutputWithContext(context.Context) QOSSwitchingProfileEgressRateShaperOutput
}

type QOSSwitchingProfileEgressRateShaperArgs struct {
	AverageBwMbps pulumi.IntPtrInput  `pulumi:"averageBwMbps"`
	BurstSize     pulumi.IntPtrInput  `pulumi:"burstSize"`
	Enabled       pulumi.BoolPtrInput `pulumi:"enabled"`
	PeakBwMbps    pulumi.IntPtrInput  `pulumi:"peakBwMbps"`
}

func (QOSSwitchingProfileEgressRateShaperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QOSSwitchingProfileEgressRateShaper)(nil)).Elem()
}

func (i QOSSwitchingProfileEgressRateShaperArgs) ToQOSSwitchingProfileEgressRateShaperOutput() QOSSwitchingProfileEgressRateShaperOutput {
	return i.ToQOSSwitchingProfileEgressRateShaperOutputWithContext(context.Background())
}

func (i QOSSwitchingProfileEgressRateShaperArgs) ToQOSSwitchingProfileEgressRateShaperOutputWithContext(ctx context.Context) QOSSwitchingProfileEgressRateShaperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileEgressRateShaperOutput)
}

func (i QOSSwitchingProfileEgressRateShaperArgs) ToQOSSwitchingProfileEgressRateShaperPtrOutput() QOSSwitchingProfileEgressRateShaperPtrOutput {
	return i.ToQOSSwitchingProfileEgressRateShaperPtrOutputWithContext(context.Background())
}

func (i QOSSwitchingProfileEgressRateShaperArgs) ToQOSSwitchingProfileEgressRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileEgressRateShaperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileEgressRateShaperOutput).ToQOSSwitchingProfileEgressRateShaperPtrOutputWithContext(ctx)
}

// QOSSwitchingProfileEgressRateShaperPtrInput is an input type that accepts QOSSwitchingProfileEgressRateShaperArgs, QOSSwitchingProfileEgressRateShaperPtr and QOSSwitchingProfileEgressRateShaperPtrOutput values.
// You can construct a concrete instance of `QOSSwitchingProfileEgressRateShaperPtrInput` via:
//
//          QOSSwitchingProfileEgressRateShaperArgs{...}
//
//  or:
//
//          nil
type QOSSwitchingProfileEgressRateShaperPtrInput interface {
	pulumi.Input

	ToQOSSwitchingProfileEgressRateShaperPtrOutput() QOSSwitchingProfileEgressRateShaperPtrOutput
	ToQOSSwitchingProfileEgressRateShaperPtrOutputWithContext(context.Context) QOSSwitchingProfileEgressRateShaperPtrOutput
}

type qosswitchingProfileEgressRateShaperPtrType QOSSwitchingProfileEgressRateShaperArgs

func QOSSwitchingProfileEgressRateShaperPtr(v *QOSSwitchingProfileEgressRateShaperArgs) QOSSwitchingProfileEgressRateShaperPtrInput {
	return (*qosswitchingProfileEgressRateShaperPtrType)(v)
}

func (*qosswitchingProfileEgressRateShaperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QOSSwitchingProfileEgressRateShaper)(nil)).Elem()
}

func (i *qosswitchingProfileEgressRateShaperPtrType) ToQOSSwitchingProfileEgressRateShaperPtrOutput() QOSSwitchingProfileEgressRateShaperPtrOutput {
	return i.ToQOSSwitchingProfileEgressRateShaperPtrOutputWithContext(context.Background())
}

func (i *qosswitchingProfileEgressRateShaperPtrType) ToQOSSwitchingProfileEgressRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileEgressRateShaperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileEgressRateShaperPtrOutput)
}

type QOSSwitchingProfileEgressRateShaperOutput struct{ *pulumi.OutputState }

func (QOSSwitchingProfileEgressRateShaperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QOSSwitchingProfileEgressRateShaper)(nil)).Elem()
}

func (o QOSSwitchingProfileEgressRateShaperOutput) ToQOSSwitchingProfileEgressRateShaperOutput() QOSSwitchingProfileEgressRateShaperOutput {
	return o
}

func (o QOSSwitchingProfileEgressRateShaperOutput) ToQOSSwitchingProfileEgressRateShaperOutputWithContext(ctx context.Context) QOSSwitchingProfileEgressRateShaperOutput {
	return o
}

func (o QOSSwitchingProfileEgressRateShaperOutput) ToQOSSwitchingProfileEgressRateShaperPtrOutput() QOSSwitchingProfileEgressRateShaperPtrOutput {
	return o.ToQOSSwitchingProfileEgressRateShaperPtrOutputWithContext(context.Background())
}

func (o QOSSwitchingProfileEgressRateShaperOutput) ToQOSSwitchingProfileEgressRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileEgressRateShaperPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileEgressRateShaper) *QOSSwitchingProfileEgressRateShaper {
		return &v
	}).(QOSSwitchingProfileEgressRateShaperPtrOutput)
}
func (o QOSSwitchingProfileEgressRateShaperOutput) AverageBwMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileEgressRateShaper) *int { return v.AverageBwMbps }).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileEgressRateShaperOutput) BurstSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileEgressRateShaper) *int { return v.BurstSize }).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileEgressRateShaperOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileEgressRateShaper) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o QOSSwitchingProfileEgressRateShaperOutput) PeakBwMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileEgressRateShaper) *int { return v.PeakBwMbps }).(pulumi.IntPtrOutput)
}

type QOSSwitchingProfileEgressRateShaperPtrOutput struct{ *pulumi.OutputState }

func (QOSSwitchingProfileEgressRateShaperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QOSSwitchingProfileEgressRateShaper)(nil)).Elem()
}

func (o QOSSwitchingProfileEgressRateShaperPtrOutput) ToQOSSwitchingProfileEgressRateShaperPtrOutput() QOSSwitchingProfileEgressRateShaperPtrOutput {
	return o
}

func (o QOSSwitchingProfileEgressRateShaperPtrOutput) ToQOSSwitchingProfileEgressRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileEgressRateShaperPtrOutput {
	return o
}

func (o QOSSwitchingProfileEgressRateShaperPtrOutput) Elem() QOSSwitchingProfileEgressRateShaperOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileEgressRateShaper) QOSSwitchingProfileEgressRateShaper { return *v }).(QOSSwitchingProfileEgressRateShaperOutput)
}

func (o QOSSwitchingProfileEgressRateShaperPtrOutput) AverageBwMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileEgressRateShaper) *int {
		if v == nil {
			return nil
		}
		return v.AverageBwMbps
	}).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileEgressRateShaperPtrOutput) BurstSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileEgressRateShaper) *int {
		if v == nil {
			return nil
		}
		return v.BurstSize
	}).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileEgressRateShaperPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileEgressRateShaper) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o QOSSwitchingProfileEgressRateShaperPtrOutput) PeakBwMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileEgressRateShaper) *int {
		if v == nil {
			return nil
		}
		return v.PeakBwMbps
	}).(pulumi.IntPtrOutput)
}

type QOSSwitchingProfileIngressBroadcastRateShaper struct {
	AverageBwKbps *int  `pulumi:"averageBwKbps"`
	BurstSize     *int  `pulumi:"burstSize"`
	Enabled       *bool `pulumi:"enabled"`
	PeakBwKbps    *int  `pulumi:"peakBwKbps"`
}

// QOSSwitchingProfileIngressBroadcastRateShaperInput is an input type that accepts QOSSwitchingProfileIngressBroadcastRateShaperArgs and QOSSwitchingProfileIngressBroadcastRateShaperOutput values.
// You can construct a concrete instance of `QOSSwitchingProfileIngressBroadcastRateShaperInput` via:
//
//          QOSSwitchingProfileIngressBroadcastRateShaperArgs{...}
type QOSSwitchingProfileIngressBroadcastRateShaperInput interface {
	pulumi.Input

	ToQOSSwitchingProfileIngressBroadcastRateShaperOutput() QOSSwitchingProfileIngressBroadcastRateShaperOutput
	ToQOSSwitchingProfileIngressBroadcastRateShaperOutputWithContext(context.Context) QOSSwitchingProfileIngressBroadcastRateShaperOutput
}

type QOSSwitchingProfileIngressBroadcastRateShaperArgs struct {
	AverageBwKbps pulumi.IntPtrInput  `pulumi:"averageBwKbps"`
	BurstSize     pulumi.IntPtrInput  `pulumi:"burstSize"`
	Enabled       pulumi.BoolPtrInput `pulumi:"enabled"`
	PeakBwKbps    pulumi.IntPtrInput  `pulumi:"peakBwKbps"`
}

func (QOSSwitchingProfileIngressBroadcastRateShaperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QOSSwitchingProfileIngressBroadcastRateShaper)(nil)).Elem()
}

func (i QOSSwitchingProfileIngressBroadcastRateShaperArgs) ToQOSSwitchingProfileIngressBroadcastRateShaperOutput() QOSSwitchingProfileIngressBroadcastRateShaperOutput {
	return i.ToQOSSwitchingProfileIngressBroadcastRateShaperOutputWithContext(context.Background())
}

func (i QOSSwitchingProfileIngressBroadcastRateShaperArgs) ToQOSSwitchingProfileIngressBroadcastRateShaperOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressBroadcastRateShaperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileIngressBroadcastRateShaperOutput)
}

func (i QOSSwitchingProfileIngressBroadcastRateShaperArgs) ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutput() QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput {
	return i.ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutputWithContext(context.Background())
}

func (i QOSSwitchingProfileIngressBroadcastRateShaperArgs) ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileIngressBroadcastRateShaperOutput).ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutputWithContext(ctx)
}

// QOSSwitchingProfileIngressBroadcastRateShaperPtrInput is an input type that accepts QOSSwitchingProfileIngressBroadcastRateShaperArgs, QOSSwitchingProfileIngressBroadcastRateShaperPtr and QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput values.
// You can construct a concrete instance of `QOSSwitchingProfileIngressBroadcastRateShaperPtrInput` via:
//
//          QOSSwitchingProfileIngressBroadcastRateShaperArgs{...}
//
//  or:
//
//          nil
type QOSSwitchingProfileIngressBroadcastRateShaperPtrInput interface {
	pulumi.Input

	ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutput() QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput
	ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutputWithContext(context.Context) QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput
}

type qosswitchingProfileIngressBroadcastRateShaperPtrType QOSSwitchingProfileIngressBroadcastRateShaperArgs

func QOSSwitchingProfileIngressBroadcastRateShaperPtr(v *QOSSwitchingProfileIngressBroadcastRateShaperArgs) QOSSwitchingProfileIngressBroadcastRateShaperPtrInput {
	return (*qosswitchingProfileIngressBroadcastRateShaperPtrType)(v)
}

func (*qosswitchingProfileIngressBroadcastRateShaperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QOSSwitchingProfileIngressBroadcastRateShaper)(nil)).Elem()
}

func (i *qosswitchingProfileIngressBroadcastRateShaperPtrType) ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutput() QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput {
	return i.ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutputWithContext(context.Background())
}

func (i *qosswitchingProfileIngressBroadcastRateShaperPtrType) ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput)
}

type QOSSwitchingProfileIngressBroadcastRateShaperOutput struct{ *pulumi.OutputState }

func (QOSSwitchingProfileIngressBroadcastRateShaperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QOSSwitchingProfileIngressBroadcastRateShaper)(nil)).Elem()
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperOutput) ToQOSSwitchingProfileIngressBroadcastRateShaperOutput() QOSSwitchingProfileIngressBroadcastRateShaperOutput {
	return o
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperOutput) ToQOSSwitchingProfileIngressBroadcastRateShaperOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressBroadcastRateShaperOutput {
	return o
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperOutput) ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutput() QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput {
	return o.ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutputWithContext(context.Background())
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperOutput) ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileIngressBroadcastRateShaper) *QOSSwitchingProfileIngressBroadcastRateShaper {
		return &v
	}).(QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput)
}
func (o QOSSwitchingProfileIngressBroadcastRateShaperOutput) AverageBwKbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileIngressBroadcastRateShaper) *int { return v.AverageBwKbps }).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperOutput) BurstSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileIngressBroadcastRateShaper) *int { return v.BurstSize }).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileIngressBroadcastRateShaper) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperOutput) PeakBwKbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileIngressBroadcastRateShaper) *int { return v.PeakBwKbps }).(pulumi.IntPtrOutput)
}

type QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput struct{ *pulumi.OutputState }

func (QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QOSSwitchingProfileIngressBroadcastRateShaper)(nil)).Elem()
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput) ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutput() QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput {
	return o
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput) ToQOSSwitchingProfileIngressBroadcastRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput {
	return o
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput) Elem() QOSSwitchingProfileIngressBroadcastRateShaperOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileIngressBroadcastRateShaper) QOSSwitchingProfileIngressBroadcastRateShaper {
		return *v
	}).(QOSSwitchingProfileIngressBroadcastRateShaperOutput)
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput) AverageBwKbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileIngressBroadcastRateShaper) *int {
		if v == nil {
			return nil
		}
		return v.AverageBwKbps
	}).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput) BurstSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileIngressBroadcastRateShaper) *int {
		if v == nil {
			return nil
		}
		return v.BurstSize
	}).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileIngressBroadcastRateShaper) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput) PeakBwKbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileIngressBroadcastRateShaper) *int {
		if v == nil {
			return nil
		}
		return v.PeakBwKbps
	}).(pulumi.IntPtrOutput)
}

type QOSSwitchingProfileIngressRateShaper struct {
	AverageBwMbps *int  `pulumi:"averageBwMbps"`
	BurstSize     *int  `pulumi:"burstSize"`
	Enabled       *bool `pulumi:"enabled"`
	PeakBwMbps    *int  `pulumi:"peakBwMbps"`
}

// QOSSwitchingProfileIngressRateShaperInput is an input type that accepts QOSSwitchingProfileIngressRateShaperArgs and QOSSwitchingProfileIngressRateShaperOutput values.
// You can construct a concrete instance of `QOSSwitchingProfileIngressRateShaperInput` via:
//
//          QOSSwitchingProfileIngressRateShaperArgs{...}
type QOSSwitchingProfileIngressRateShaperInput interface {
	pulumi.Input

	ToQOSSwitchingProfileIngressRateShaperOutput() QOSSwitchingProfileIngressRateShaperOutput
	ToQOSSwitchingProfileIngressRateShaperOutputWithContext(context.Context) QOSSwitchingProfileIngressRateShaperOutput
}

type QOSSwitchingProfileIngressRateShaperArgs struct {
	AverageBwMbps pulumi.IntPtrInput  `pulumi:"averageBwMbps"`
	BurstSize     pulumi.IntPtrInput  `pulumi:"burstSize"`
	Enabled       pulumi.BoolPtrInput `pulumi:"enabled"`
	PeakBwMbps    pulumi.IntPtrInput  `pulumi:"peakBwMbps"`
}

func (QOSSwitchingProfileIngressRateShaperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QOSSwitchingProfileIngressRateShaper)(nil)).Elem()
}

func (i QOSSwitchingProfileIngressRateShaperArgs) ToQOSSwitchingProfileIngressRateShaperOutput() QOSSwitchingProfileIngressRateShaperOutput {
	return i.ToQOSSwitchingProfileIngressRateShaperOutputWithContext(context.Background())
}

func (i QOSSwitchingProfileIngressRateShaperArgs) ToQOSSwitchingProfileIngressRateShaperOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressRateShaperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileIngressRateShaperOutput)
}

func (i QOSSwitchingProfileIngressRateShaperArgs) ToQOSSwitchingProfileIngressRateShaperPtrOutput() QOSSwitchingProfileIngressRateShaperPtrOutput {
	return i.ToQOSSwitchingProfileIngressRateShaperPtrOutputWithContext(context.Background())
}

func (i QOSSwitchingProfileIngressRateShaperArgs) ToQOSSwitchingProfileIngressRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressRateShaperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileIngressRateShaperOutput).ToQOSSwitchingProfileIngressRateShaperPtrOutputWithContext(ctx)
}

// QOSSwitchingProfileIngressRateShaperPtrInput is an input type that accepts QOSSwitchingProfileIngressRateShaperArgs, QOSSwitchingProfileIngressRateShaperPtr and QOSSwitchingProfileIngressRateShaperPtrOutput values.
// You can construct a concrete instance of `QOSSwitchingProfileIngressRateShaperPtrInput` via:
//
//          QOSSwitchingProfileIngressRateShaperArgs{...}
//
//  or:
//
//          nil
type QOSSwitchingProfileIngressRateShaperPtrInput interface {
	pulumi.Input

	ToQOSSwitchingProfileIngressRateShaperPtrOutput() QOSSwitchingProfileIngressRateShaperPtrOutput
	ToQOSSwitchingProfileIngressRateShaperPtrOutputWithContext(context.Context) QOSSwitchingProfileIngressRateShaperPtrOutput
}

type qosswitchingProfileIngressRateShaperPtrType QOSSwitchingProfileIngressRateShaperArgs

func QOSSwitchingProfileIngressRateShaperPtr(v *QOSSwitchingProfileIngressRateShaperArgs) QOSSwitchingProfileIngressRateShaperPtrInput {
	return (*qosswitchingProfileIngressRateShaperPtrType)(v)
}

func (*qosswitchingProfileIngressRateShaperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QOSSwitchingProfileIngressRateShaper)(nil)).Elem()
}

func (i *qosswitchingProfileIngressRateShaperPtrType) ToQOSSwitchingProfileIngressRateShaperPtrOutput() QOSSwitchingProfileIngressRateShaperPtrOutput {
	return i.ToQOSSwitchingProfileIngressRateShaperPtrOutputWithContext(context.Background())
}

func (i *qosswitchingProfileIngressRateShaperPtrType) ToQOSSwitchingProfileIngressRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressRateShaperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileIngressRateShaperPtrOutput)
}

type QOSSwitchingProfileIngressRateShaperOutput struct{ *pulumi.OutputState }

func (QOSSwitchingProfileIngressRateShaperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QOSSwitchingProfileIngressRateShaper)(nil)).Elem()
}

func (o QOSSwitchingProfileIngressRateShaperOutput) ToQOSSwitchingProfileIngressRateShaperOutput() QOSSwitchingProfileIngressRateShaperOutput {
	return o
}

func (o QOSSwitchingProfileIngressRateShaperOutput) ToQOSSwitchingProfileIngressRateShaperOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressRateShaperOutput {
	return o
}

func (o QOSSwitchingProfileIngressRateShaperOutput) ToQOSSwitchingProfileIngressRateShaperPtrOutput() QOSSwitchingProfileIngressRateShaperPtrOutput {
	return o.ToQOSSwitchingProfileIngressRateShaperPtrOutputWithContext(context.Background())
}

func (o QOSSwitchingProfileIngressRateShaperOutput) ToQOSSwitchingProfileIngressRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressRateShaperPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileIngressRateShaper) *QOSSwitchingProfileIngressRateShaper {
		return &v
	}).(QOSSwitchingProfileIngressRateShaperPtrOutput)
}
func (o QOSSwitchingProfileIngressRateShaperOutput) AverageBwMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileIngressRateShaper) *int { return v.AverageBwMbps }).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileIngressRateShaperOutput) BurstSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileIngressRateShaper) *int { return v.BurstSize }).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileIngressRateShaperOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileIngressRateShaper) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o QOSSwitchingProfileIngressRateShaperOutput) PeakBwMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileIngressRateShaper) *int { return v.PeakBwMbps }).(pulumi.IntPtrOutput)
}

type QOSSwitchingProfileIngressRateShaperPtrOutput struct{ *pulumi.OutputState }

func (QOSSwitchingProfileIngressRateShaperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QOSSwitchingProfileIngressRateShaper)(nil)).Elem()
}

func (o QOSSwitchingProfileIngressRateShaperPtrOutput) ToQOSSwitchingProfileIngressRateShaperPtrOutput() QOSSwitchingProfileIngressRateShaperPtrOutput {
	return o
}

func (o QOSSwitchingProfileIngressRateShaperPtrOutput) ToQOSSwitchingProfileIngressRateShaperPtrOutputWithContext(ctx context.Context) QOSSwitchingProfileIngressRateShaperPtrOutput {
	return o
}

func (o QOSSwitchingProfileIngressRateShaperPtrOutput) Elem() QOSSwitchingProfileIngressRateShaperOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileIngressRateShaper) QOSSwitchingProfileIngressRateShaper { return *v }).(QOSSwitchingProfileIngressRateShaperOutput)
}

func (o QOSSwitchingProfileIngressRateShaperPtrOutput) AverageBwMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileIngressRateShaper) *int {
		if v == nil {
			return nil
		}
		return v.AverageBwMbps
	}).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileIngressRateShaperPtrOutput) BurstSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileIngressRateShaper) *int {
		if v == nil {
			return nil
		}
		return v.BurstSize
	}).(pulumi.IntPtrOutput)
}

func (o QOSSwitchingProfileIngressRateShaperPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileIngressRateShaper) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o QOSSwitchingProfileIngressRateShaperPtrOutput) PeakBwMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QOSSwitchingProfileIngressRateShaper) *int {
		if v == nil {
			return nil
		}
		return v.PeakBwMbps
	}).(pulumi.IntPtrOutput)
}

type QOSSwitchingProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// QOSSwitchingProfileTagInput is an input type that accepts QOSSwitchingProfileTagArgs and QOSSwitchingProfileTagOutput values.
// You can construct a concrete instance of `QOSSwitchingProfileTagInput` via:
//
//          QOSSwitchingProfileTagArgs{...}
type QOSSwitchingProfileTagInput interface {
	pulumi.Input

	ToQOSSwitchingProfileTagOutput() QOSSwitchingProfileTagOutput
	ToQOSSwitchingProfileTagOutputWithContext(context.Context) QOSSwitchingProfileTagOutput
}

type QOSSwitchingProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (QOSSwitchingProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QOSSwitchingProfileTag)(nil)).Elem()
}

func (i QOSSwitchingProfileTagArgs) ToQOSSwitchingProfileTagOutput() QOSSwitchingProfileTagOutput {
	return i.ToQOSSwitchingProfileTagOutputWithContext(context.Background())
}

func (i QOSSwitchingProfileTagArgs) ToQOSSwitchingProfileTagOutputWithContext(ctx context.Context) QOSSwitchingProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileTagOutput)
}

// QOSSwitchingProfileTagArrayInput is an input type that accepts QOSSwitchingProfileTagArray and QOSSwitchingProfileTagArrayOutput values.
// You can construct a concrete instance of `QOSSwitchingProfileTagArrayInput` via:
//
//          QOSSwitchingProfileTagArray{ QOSSwitchingProfileTagArgs{...} }
type QOSSwitchingProfileTagArrayInput interface {
	pulumi.Input

	ToQOSSwitchingProfileTagArrayOutput() QOSSwitchingProfileTagArrayOutput
	ToQOSSwitchingProfileTagArrayOutputWithContext(context.Context) QOSSwitchingProfileTagArrayOutput
}

type QOSSwitchingProfileTagArray []QOSSwitchingProfileTagInput

func (QOSSwitchingProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QOSSwitchingProfileTag)(nil)).Elem()
}

func (i QOSSwitchingProfileTagArray) ToQOSSwitchingProfileTagArrayOutput() QOSSwitchingProfileTagArrayOutput {
	return i.ToQOSSwitchingProfileTagArrayOutputWithContext(context.Background())
}

func (i QOSSwitchingProfileTagArray) ToQOSSwitchingProfileTagArrayOutputWithContext(ctx context.Context) QOSSwitchingProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QOSSwitchingProfileTagArrayOutput)
}

type QOSSwitchingProfileTagOutput struct{ *pulumi.OutputState }

func (QOSSwitchingProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QOSSwitchingProfileTag)(nil)).Elem()
}

func (o QOSSwitchingProfileTagOutput) ToQOSSwitchingProfileTagOutput() QOSSwitchingProfileTagOutput {
	return o
}

func (o QOSSwitchingProfileTagOutput) ToQOSSwitchingProfileTagOutputWithContext(ctx context.Context) QOSSwitchingProfileTagOutput {
	return o
}

func (o QOSSwitchingProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o QOSSwitchingProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QOSSwitchingProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type QOSSwitchingProfileTagArrayOutput struct{ *pulumi.OutputState }

func (QOSSwitchingProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QOSSwitchingProfileTag)(nil)).Elem()
}

func (o QOSSwitchingProfileTagArrayOutput) ToQOSSwitchingProfileTagArrayOutput() QOSSwitchingProfileTagArrayOutput {
	return o
}

func (o QOSSwitchingProfileTagArrayOutput) ToQOSSwitchingProfileTagArrayOutputWithContext(ctx context.Context) QOSSwitchingProfileTagArrayOutput {
	return o
}

func (o QOSSwitchingProfileTagArrayOutput) Index(i pulumi.IntInput) QOSSwitchingProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QOSSwitchingProfileTag {
		return vs[0].([]QOSSwitchingProfileTag)[vs[1].(int)]
	}).(QOSSwitchingProfileTagOutput)
}

type SpoofguardSwitchingProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// SpoofguardSwitchingProfileTagInput is an input type that accepts SpoofguardSwitchingProfileTagArgs and SpoofguardSwitchingProfileTagOutput values.
// You can construct a concrete instance of `SpoofguardSwitchingProfileTagInput` via:
//
//          SpoofguardSwitchingProfileTagArgs{...}
type SpoofguardSwitchingProfileTagInput interface {
	pulumi.Input

	ToSpoofguardSwitchingProfileTagOutput() SpoofguardSwitchingProfileTagOutput
	ToSpoofguardSwitchingProfileTagOutputWithContext(context.Context) SpoofguardSwitchingProfileTagOutput
}

type SpoofguardSwitchingProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (SpoofguardSwitchingProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpoofguardSwitchingProfileTag)(nil)).Elem()
}

func (i SpoofguardSwitchingProfileTagArgs) ToSpoofguardSwitchingProfileTagOutput() SpoofguardSwitchingProfileTagOutput {
	return i.ToSpoofguardSwitchingProfileTagOutputWithContext(context.Background())
}

func (i SpoofguardSwitchingProfileTagArgs) ToSpoofguardSwitchingProfileTagOutputWithContext(ctx context.Context) SpoofguardSwitchingProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpoofguardSwitchingProfileTagOutput)
}

// SpoofguardSwitchingProfileTagArrayInput is an input type that accepts SpoofguardSwitchingProfileTagArray and SpoofguardSwitchingProfileTagArrayOutput values.
// You can construct a concrete instance of `SpoofguardSwitchingProfileTagArrayInput` via:
//
//          SpoofguardSwitchingProfileTagArray{ SpoofguardSwitchingProfileTagArgs{...} }
type SpoofguardSwitchingProfileTagArrayInput interface {
	pulumi.Input

	ToSpoofguardSwitchingProfileTagArrayOutput() SpoofguardSwitchingProfileTagArrayOutput
	ToSpoofguardSwitchingProfileTagArrayOutputWithContext(context.Context) SpoofguardSwitchingProfileTagArrayOutput
}

type SpoofguardSwitchingProfileTagArray []SpoofguardSwitchingProfileTagInput

func (SpoofguardSwitchingProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpoofguardSwitchingProfileTag)(nil)).Elem()
}

func (i SpoofguardSwitchingProfileTagArray) ToSpoofguardSwitchingProfileTagArrayOutput() SpoofguardSwitchingProfileTagArrayOutput {
	return i.ToSpoofguardSwitchingProfileTagArrayOutputWithContext(context.Background())
}

func (i SpoofguardSwitchingProfileTagArray) ToSpoofguardSwitchingProfileTagArrayOutputWithContext(ctx context.Context) SpoofguardSwitchingProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpoofguardSwitchingProfileTagArrayOutput)
}

type SpoofguardSwitchingProfileTagOutput struct{ *pulumi.OutputState }

func (SpoofguardSwitchingProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpoofguardSwitchingProfileTag)(nil)).Elem()
}

func (o SpoofguardSwitchingProfileTagOutput) ToSpoofguardSwitchingProfileTagOutput() SpoofguardSwitchingProfileTagOutput {
	return o
}

func (o SpoofguardSwitchingProfileTagOutput) ToSpoofguardSwitchingProfileTagOutputWithContext(ctx context.Context) SpoofguardSwitchingProfileTagOutput {
	return o
}

func (o SpoofguardSwitchingProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpoofguardSwitchingProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o SpoofguardSwitchingProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpoofguardSwitchingProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type SpoofguardSwitchingProfileTagArrayOutput struct{ *pulumi.OutputState }

func (SpoofguardSwitchingProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpoofguardSwitchingProfileTag)(nil)).Elem()
}

func (o SpoofguardSwitchingProfileTagArrayOutput) ToSpoofguardSwitchingProfileTagArrayOutput() SpoofguardSwitchingProfileTagArrayOutput {
	return o
}

func (o SpoofguardSwitchingProfileTagArrayOutput) ToSpoofguardSwitchingProfileTagArrayOutputWithContext(ctx context.Context) SpoofguardSwitchingProfileTagArrayOutput {
	return o
}

func (o SpoofguardSwitchingProfileTagArrayOutput) Index(i pulumi.IntInput) SpoofguardSwitchingProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpoofguardSwitchingProfileTag {
		return vs[0].([]SpoofguardSwitchingProfileTag)[vs[1].(int)]
	}).(SpoofguardSwitchingProfileTagOutput)
}

type StaticRouteNextHop struct {
	AdministrativeDistance *int    `pulumi:"administrativeDistance"`
	BfdEnabled             *bool   `pulumi:"bfdEnabled"`
	BlackholeAction        *string `pulumi:"blackholeAction"`
	IpAddress              *string `pulumi:"ipAddress"`
	LogicalRouterPortId    *string `pulumi:"logicalRouterPortId"`
}

// StaticRouteNextHopInput is an input type that accepts StaticRouteNextHopArgs and StaticRouteNextHopOutput values.
// You can construct a concrete instance of `StaticRouteNextHopInput` via:
//
//          StaticRouteNextHopArgs{...}
type StaticRouteNextHopInput interface {
	pulumi.Input

	ToStaticRouteNextHopOutput() StaticRouteNextHopOutput
	ToStaticRouteNextHopOutputWithContext(context.Context) StaticRouteNextHopOutput
}

type StaticRouteNextHopArgs struct {
	AdministrativeDistance pulumi.IntPtrInput    `pulumi:"administrativeDistance"`
	BfdEnabled             pulumi.BoolPtrInput   `pulumi:"bfdEnabled"`
	BlackholeAction        pulumi.StringPtrInput `pulumi:"blackholeAction"`
	IpAddress              pulumi.StringPtrInput `pulumi:"ipAddress"`
	LogicalRouterPortId    pulumi.StringPtrInput `pulumi:"logicalRouterPortId"`
}

func (StaticRouteNextHopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteNextHop)(nil)).Elem()
}

func (i StaticRouteNextHopArgs) ToStaticRouteNextHopOutput() StaticRouteNextHopOutput {
	return i.ToStaticRouteNextHopOutputWithContext(context.Background())
}

func (i StaticRouteNextHopArgs) ToStaticRouteNextHopOutputWithContext(ctx context.Context) StaticRouteNextHopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteNextHopOutput)
}

// StaticRouteNextHopArrayInput is an input type that accepts StaticRouteNextHopArray and StaticRouteNextHopArrayOutput values.
// You can construct a concrete instance of `StaticRouteNextHopArrayInput` via:
//
//          StaticRouteNextHopArray{ StaticRouteNextHopArgs{...} }
type StaticRouteNextHopArrayInput interface {
	pulumi.Input

	ToStaticRouteNextHopArrayOutput() StaticRouteNextHopArrayOutput
	ToStaticRouteNextHopArrayOutputWithContext(context.Context) StaticRouteNextHopArrayOutput
}

type StaticRouteNextHopArray []StaticRouteNextHopInput

func (StaticRouteNextHopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRouteNextHop)(nil)).Elem()
}

func (i StaticRouteNextHopArray) ToStaticRouteNextHopArrayOutput() StaticRouteNextHopArrayOutput {
	return i.ToStaticRouteNextHopArrayOutputWithContext(context.Background())
}

func (i StaticRouteNextHopArray) ToStaticRouteNextHopArrayOutputWithContext(ctx context.Context) StaticRouteNextHopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteNextHopArrayOutput)
}

type StaticRouteNextHopOutput struct{ *pulumi.OutputState }

func (StaticRouteNextHopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteNextHop)(nil)).Elem()
}

func (o StaticRouteNextHopOutput) ToStaticRouteNextHopOutput() StaticRouteNextHopOutput {
	return o
}

func (o StaticRouteNextHopOutput) ToStaticRouteNextHopOutputWithContext(ctx context.Context) StaticRouteNextHopOutput {
	return o
}

func (o StaticRouteNextHopOutput) AdministrativeDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StaticRouteNextHop) *int { return v.AdministrativeDistance }).(pulumi.IntPtrOutput)
}

func (o StaticRouteNextHopOutput) BfdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StaticRouteNextHop) *bool { return v.BfdEnabled }).(pulumi.BoolPtrOutput)
}

func (o StaticRouteNextHopOutput) BlackholeAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteNextHop) *string { return v.BlackholeAction }).(pulumi.StringPtrOutput)
}

func (o StaticRouteNextHopOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteNextHop) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o StaticRouteNextHopOutput) LogicalRouterPortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteNextHop) *string { return v.LogicalRouterPortId }).(pulumi.StringPtrOutput)
}

type StaticRouteNextHopArrayOutput struct{ *pulumi.OutputState }

func (StaticRouteNextHopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRouteNextHop)(nil)).Elem()
}

func (o StaticRouteNextHopArrayOutput) ToStaticRouteNextHopArrayOutput() StaticRouteNextHopArrayOutput {
	return o
}

func (o StaticRouteNextHopArrayOutput) ToStaticRouteNextHopArrayOutputWithContext(ctx context.Context) StaticRouteNextHopArrayOutput {
	return o
}

func (o StaticRouteNextHopArrayOutput) Index(i pulumi.IntInput) StaticRouteNextHopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRouteNextHop {
		return vs[0].([]StaticRouteNextHop)[vs[1].(int)]
	}).(StaticRouteNextHopOutput)
}

type StaticRouteTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// StaticRouteTagInput is an input type that accepts StaticRouteTagArgs and StaticRouteTagOutput values.
// You can construct a concrete instance of `StaticRouteTagInput` via:
//
//          StaticRouteTagArgs{...}
type StaticRouteTagInput interface {
	pulumi.Input

	ToStaticRouteTagOutput() StaticRouteTagOutput
	ToStaticRouteTagOutputWithContext(context.Context) StaticRouteTagOutput
}

type StaticRouteTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (StaticRouteTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteTag)(nil)).Elem()
}

func (i StaticRouteTagArgs) ToStaticRouteTagOutput() StaticRouteTagOutput {
	return i.ToStaticRouteTagOutputWithContext(context.Background())
}

func (i StaticRouteTagArgs) ToStaticRouteTagOutputWithContext(ctx context.Context) StaticRouteTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteTagOutput)
}

// StaticRouteTagArrayInput is an input type that accepts StaticRouteTagArray and StaticRouteTagArrayOutput values.
// You can construct a concrete instance of `StaticRouteTagArrayInput` via:
//
//          StaticRouteTagArray{ StaticRouteTagArgs{...} }
type StaticRouteTagArrayInput interface {
	pulumi.Input

	ToStaticRouteTagArrayOutput() StaticRouteTagArrayOutput
	ToStaticRouteTagArrayOutputWithContext(context.Context) StaticRouteTagArrayOutput
}

type StaticRouteTagArray []StaticRouteTagInput

func (StaticRouteTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRouteTag)(nil)).Elem()
}

func (i StaticRouteTagArray) ToStaticRouteTagArrayOutput() StaticRouteTagArrayOutput {
	return i.ToStaticRouteTagArrayOutputWithContext(context.Background())
}

func (i StaticRouteTagArray) ToStaticRouteTagArrayOutputWithContext(ctx context.Context) StaticRouteTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteTagArrayOutput)
}

type StaticRouteTagOutput struct{ *pulumi.OutputState }

func (StaticRouteTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteTag)(nil)).Elem()
}

func (o StaticRouteTagOutput) ToStaticRouteTagOutput() StaticRouteTagOutput {
	return o
}

func (o StaticRouteTagOutput) ToStaticRouteTagOutputWithContext(ctx context.Context) StaticRouteTagOutput {
	return o
}

func (o StaticRouteTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o StaticRouteTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type StaticRouteTagArrayOutput struct{ *pulumi.OutputState }

func (StaticRouteTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRouteTag)(nil)).Elem()
}

func (o StaticRouteTagArrayOutput) ToStaticRouteTagArrayOutput() StaticRouteTagArrayOutput {
	return o
}

func (o StaticRouteTagArrayOutput) ToStaticRouteTagArrayOutputWithContext(ctx context.Context) StaticRouteTagArrayOutput {
	return o
}

func (o StaticRouteTagArrayOutput) Index(i pulumi.IntInput) StaticRouteTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRouteTag {
		return vs[0].([]StaticRouteTag)[vs[1].(int)]
	}).(StaticRouteTagOutput)
}

type SwitchSecuritySwitchingProfileRateLimits struct {
	Enabled     *bool `pulumi:"enabled"`
	RxBroadcast *int  `pulumi:"rxBroadcast"`
	RxMulticast *int  `pulumi:"rxMulticast"`
	TxBroadcast *int  `pulumi:"txBroadcast"`
	TxMulticast *int  `pulumi:"txMulticast"`
}

// SwitchSecuritySwitchingProfileRateLimitsInput is an input type that accepts SwitchSecuritySwitchingProfileRateLimitsArgs and SwitchSecuritySwitchingProfileRateLimitsOutput values.
// You can construct a concrete instance of `SwitchSecuritySwitchingProfileRateLimitsInput` via:
//
//          SwitchSecuritySwitchingProfileRateLimitsArgs{...}
type SwitchSecuritySwitchingProfileRateLimitsInput interface {
	pulumi.Input

	ToSwitchSecuritySwitchingProfileRateLimitsOutput() SwitchSecuritySwitchingProfileRateLimitsOutput
	ToSwitchSecuritySwitchingProfileRateLimitsOutputWithContext(context.Context) SwitchSecuritySwitchingProfileRateLimitsOutput
}

type SwitchSecuritySwitchingProfileRateLimitsArgs struct {
	Enabled     pulumi.BoolPtrInput `pulumi:"enabled"`
	RxBroadcast pulumi.IntPtrInput  `pulumi:"rxBroadcast"`
	RxMulticast pulumi.IntPtrInput  `pulumi:"rxMulticast"`
	TxBroadcast pulumi.IntPtrInput  `pulumi:"txBroadcast"`
	TxMulticast pulumi.IntPtrInput  `pulumi:"txMulticast"`
}

func (SwitchSecuritySwitchingProfileRateLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSecuritySwitchingProfileRateLimits)(nil)).Elem()
}

func (i SwitchSecuritySwitchingProfileRateLimitsArgs) ToSwitchSecuritySwitchingProfileRateLimitsOutput() SwitchSecuritySwitchingProfileRateLimitsOutput {
	return i.ToSwitchSecuritySwitchingProfileRateLimitsOutputWithContext(context.Background())
}

func (i SwitchSecuritySwitchingProfileRateLimitsArgs) ToSwitchSecuritySwitchingProfileRateLimitsOutputWithContext(ctx context.Context) SwitchSecuritySwitchingProfileRateLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSecuritySwitchingProfileRateLimitsOutput)
}

func (i SwitchSecuritySwitchingProfileRateLimitsArgs) ToSwitchSecuritySwitchingProfileRateLimitsPtrOutput() SwitchSecuritySwitchingProfileRateLimitsPtrOutput {
	return i.ToSwitchSecuritySwitchingProfileRateLimitsPtrOutputWithContext(context.Background())
}

func (i SwitchSecuritySwitchingProfileRateLimitsArgs) ToSwitchSecuritySwitchingProfileRateLimitsPtrOutputWithContext(ctx context.Context) SwitchSecuritySwitchingProfileRateLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSecuritySwitchingProfileRateLimitsOutput).ToSwitchSecuritySwitchingProfileRateLimitsPtrOutputWithContext(ctx)
}

// SwitchSecuritySwitchingProfileRateLimitsPtrInput is an input type that accepts SwitchSecuritySwitchingProfileRateLimitsArgs, SwitchSecuritySwitchingProfileRateLimitsPtr and SwitchSecuritySwitchingProfileRateLimitsPtrOutput values.
// You can construct a concrete instance of `SwitchSecuritySwitchingProfileRateLimitsPtrInput` via:
//
//          SwitchSecuritySwitchingProfileRateLimitsArgs{...}
//
//  or:
//
//          nil
type SwitchSecuritySwitchingProfileRateLimitsPtrInput interface {
	pulumi.Input

	ToSwitchSecuritySwitchingProfileRateLimitsPtrOutput() SwitchSecuritySwitchingProfileRateLimitsPtrOutput
	ToSwitchSecuritySwitchingProfileRateLimitsPtrOutputWithContext(context.Context) SwitchSecuritySwitchingProfileRateLimitsPtrOutput
}

type switchSecuritySwitchingProfileRateLimitsPtrType SwitchSecuritySwitchingProfileRateLimitsArgs

func SwitchSecuritySwitchingProfileRateLimitsPtr(v *SwitchSecuritySwitchingProfileRateLimitsArgs) SwitchSecuritySwitchingProfileRateLimitsPtrInput {
	return (*switchSecuritySwitchingProfileRateLimitsPtrType)(v)
}

func (*switchSecuritySwitchingProfileRateLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSecuritySwitchingProfileRateLimits)(nil)).Elem()
}

func (i *switchSecuritySwitchingProfileRateLimitsPtrType) ToSwitchSecuritySwitchingProfileRateLimitsPtrOutput() SwitchSecuritySwitchingProfileRateLimitsPtrOutput {
	return i.ToSwitchSecuritySwitchingProfileRateLimitsPtrOutputWithContext(context.Background())
}

func (i *switchSecuritySwitchingProfileRateLimitsPtrType) ToSwitchSecuritySwitchingProfileRateLimitsPtrOutputWithContext(ctx context.Context) SwitchSecuritySwitchingProfileRateLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSecuritySwitchingProfileRateLimitsPtrOutput)
}

type SwitchSecuritySwitchingProfileRateLimitsOutput struct{ *pulumi.OutputState }

func (SwitchSecuritySwitchingProfileRateLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSecuritySwitchingProfileRateLimits)(nil)).Elem()
}

func (o SwitchSecuritySwitchingProfileRateLimitsOutput) ToSwitchSecuritySwitchingProfileRateLimitsOutput() SwitchSecuritySwitchingProfileRateLimitsOutput {
	return o
}

func (o SwitchSecuritySwitchingProfileRateLimitsOutput) ToSwitchSecuritySwitchingProfileRateLimitsOutputWithContext(ctx context.Context) SwitchSecuritySwitchingProfileRateLimitsOutput {
	return o
}

func (o SwitchSecuritySwitchingProfileRateLimitsOutput) ToSwitchSecuritySwitchingProfileRateLimitsPtrOutput() SwitchSecuritySwitchingProfileRateLimitsPtrOutput {
	return o.ToSwitchSecuritySwitchingProfileRateLimitsPtrOutputWithContext(context.Background())
}

func (o SwitchSecuritySwitchingProfileRateLimitsOutput) ToSwitchSecuritySwitchingProfileRateLimitsPtrOutputWithContext(ctx context.Context) SwitchSecuritySwitchingProfileRateLimitsPtrOutput {
	return o.ApplyT(func(v SwitchSecuritySwitchingProfileRateLimits) *SwitchSecuritySwitchingProfileRateLimits {
		return &v
	}).(SwitchSecuritySwitchingProfileRateLimitsPtrOutput)
}
func (o SwitchSecuritySwitchingProfileRateLimitsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SwitchSecuritySwitchingProfileRateLimits) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o SwitchSecuritySwitchingProfileRateLimitsOutput) RxBroadcast() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchSecuritySwitchingProfileRateLimits) *int { return v.RxBroadcast }).(pulumi.IntPtrOutput)
}

func (o SwitchSecuritySwitchingProfileRateLimitsOutput) RxMulticast() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchSecuritySwitchingProfileRateLimits) *int { return v.RxMulticast }).(pulumi.IntPtrOutput)
}

func (o SwitchSecuritySwitchingProfileRateLimitsOutput) TxBroadcast() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchSecuritySwitchingProfileRateLimits) *int { return v.TxBroadcast }).(pulumi.IntPtrOutput)
}

func (o SwitchSecuritySwitchingProfileRateLimitsOutput) TxMulticast() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SwitchSecuritySwitchingProfileRateLimits) *int { return v.TxMulticast }).(pulumi.IntPtrOutput)
}

type SwitchSecuritySwitchingProfileRateLimitsPtrOutput struct{ *pulumi.OutputState }

func (SwitchSecuritySwitchingProfileRateLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchSecuritySwitchingProfileRateLimits)(nil)).Elem()
}

func (o SwitchSecuritySwitchingProfileRateLimitsPtrOutput) ToSwitchSecuritySwitchingProfileRateLimitsPtrOutput() SwitchSecuritySwitchingProfileRateLimitsPtrOutput {
	return o
}

func (o SwitchSecuritySwitchingProfileRateLimitsPtrOutput) ToSwitchSecuritySwitchingProfileRateLimitsPtrOutputWithContext(ctx context.Context) SwitchSecuritySwitchingProfileRateLimitsPtrOutput {
	return o
}

func (o SwitchSecuritySwitchingProfileRateLimitsPtrOutput) Elem() SwitchSecuritySwitchingProfileRateLimitsOutput {
	return o.ApplyT(func(v *SwitchSecuritySwitchingProfileRateLimits) SwitchSecuritySwitchingProfileRateLimits { return *v }).(SwitchSecuritySwitchingProfileRateLimitsOutput)
}

func (o SwitchSecuritySwitchingProfileRateLimitsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SwitchSecuritySwitchingProfileRateLimits) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o SwitchSecuritySwitchingProfileRateLimitsPtrOutput) RxBroadcast() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchSecuritySwitchingProfileRateLimits) *int {
		if v == nil {
			return nil
		}
		return v.RxBroadcast
	}).(pulumi.IntPtrOutput)
}

func (o SwitchSecuritySwitchingProfileRateLimitsPtrOutput) RxMulticast() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchSecuritySwitchingProfileRateLimits) *int {
		if v == nil {
			return nil
		}
		return v.RxMulticast
	}).(pulumi.IntPtrOutput)
}

func (o SwitchSecuritySwitchingProfileRateLimitsPtrOutput) TxBroadcast() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchSecuritySwitchingProfileRateLimits) *int {
		if v == nil {
			return nil
		}
		return v.TxBroadcast
	}).(pulumi.IntPtrOutput)
}

func (o SwitchSecuritySwitchingProfileRateLimitsPtrOutput) TxMulticast() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SwitchSecuritySwitchingProfileRateLimits) *int {
		if v == nil {
			return nil
		}
		return v.TxMulticast
	}).(pulumi.IntPtrOutput)
}

type SwitchSecuritySwitchingProfileTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// SwitchSecuritySwitchingProfileTagInput is an input type that accepts SwitchSecuritySwitchingProfileTagArgs and SwitchSecuritySwitchingProfileTagOutput values.
// You can construct a concrete instance of `SwitchSecuritySwitchingProfileTagInput` via:
//
//          SwitchSecuritySwitchingProfileTagArgs{...}
type SwitchSecuritySwitchingProfileTagInput interface {
	pulumi.Input

	ToSwitchSecuritySwitchingProfileTagOutput() SwitchSecuritySwitchingProfileTagOutput
	ToSwitchSecuritySwitchingProfileTagOutputWithContext(context.Context) SwitchSecuritySwitchingProfileTagOutput
}

type SwitchSecuritySwitchingProfileTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (SwitchSecuritySwitchingProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSecuritySwitchingProfileTag)(nil)).Elem()
}

func (i SwitchSecuritySwitchingProfileTagArgs) ToSwitchSecuritySwitchingProfileTagOutput() SwitchSecuritySwitchingProfileTagOutput {
	return i.ToSwitchSecuritySwitchingProfileTagOutputWithContext(context.Background())
}

func (i SwitchSecuritySwitchingProfileTagArgs) ToSwitchSecuritySwitchingProfileTagOutputWithContext(ctx context.Context) SwitchSecuritySwitchingProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSecuritySwitchingProfileTagOutput)
}

// SwitchSecuritySwitchingProfileTagArrayInput is an input type that accepts SwitchSecuritySwitchingProfileTagArray and SwitchSecuritySwitchingProfileTagArrayOutput values.
// You can construct a concrete instance of `SwitchSecuritySwitchingProfileTagArrayInput` via:
//
//          SwitchSecuritySwitchingProfileTagArray{ SwitchSecuritySwitchingProfileTagArgs{...} }
type SwitchSecuritySwitchingProfileTagArrayInput interface {
	pulumi.Input

	ToSwitchSecuritySwitchingProfileTagArrayOutput() SwitchSecuritySwitchingProfileTagArrayOutput
	ToSwitchSecuritySwitchingProfileTagArrayOutputWithContext(context.Context) SwitchSecuritySwitchingProfileTagArrayOutput
}

type SwitchSecuritySwitchingProfileTagArray []SwitchSecuritySwitchingProfileTagInput

func (SwitchSecuritySwitchingProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSecuritySwitchingProfileTag)(nil)).Elem()
}

func (i SwitchSecuritySwitchingProfileTagArray) ToSwitchSecuritySwitchingProfileTagArrayOutput() SwitchSecuritySwitchingProfileTagArrayOutput {
	return i.ToSwitchSecuritySwitchingProfileTagArrayOutputWithContext(context.Background())
}

func (i SwitchSecuritySwitchingProfileTagArray) ToSwitchSecuritySwitchingProfileTagArrayOutputWithContext(ctx context.Context) SwitchSecuritySwitchingProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchSecuritySwitchingProfileTagArrayOutput)
}

type SwitchSecuritySwitchingProfileTagOutput struct{ *pulumi.OutputState }

func (SwitchSecuritySwitchingProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchSecuritySwitchingProfileTag)(nil)).Elem()
}

func (o SwitchSecuritySwitchingProfileTagOutput) ToSwitchSecuritySwitchingProfileTagOutput() SwitchSecuritySwitchingProfileTagOutput {
	return o
}

func (o SwitchSecuritySwitchingProfileTagOutput) ToSwitchSecuritySwitchingProfileTagOutputWithContext(ctx context.Context) SwitchSecuritySwitchingProfileTagOutput {
	return o
}

func (o SwitchSecuritySwitchingProfileTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSecuritySwitchingProfileTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o SwitchSecuritySwitchingProfileTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SwitchSecuritySwitchingProfileTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type SwitchSecuritySwitchingProfileTagArrayOutput struct{ *pulumi.OutputState }

func (SwitchSecuritySwitchingProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchSecuritySwitchingProfileTag)(nil)).Elem()
}

func (o SwitchSecuritySwitchingProfileTagArrayOutput) ToSwitchSecuritySwitchingProfileTagArrayOutput() SwitchSecuritySwitchingProfileTagArrayOutput {
	return o
}

func (o SwitchSecuritySwitchingProfileTagArrayOutput) ToSwitchSecuritySwitchingProfileTagArrayOutputWithContext(ctx context.Context) SwitchSecuritySwitchingProfileTagArrayOutput {
	return o
}

func (o SwitchSecuritySwitchingProfileTagArrayOutput) Index(i pulumi.IntInput) SwitchSecuritySwitchingProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchSecuritySwitchingProfileTag {
		return vs[0].([]SwitchSecuritySwitchingProfileTag)[vs[1].(int)]
	}).(SwitchSecuritySwitchingProfileTagOutput)
}

type VMTagsLogicalPortTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// VMTagsLogicalPortTagInput is an input type that accepts VMTagsLogicalPortTagArgs and VMTagsLogicalPortTagOutput values.
// You can construct a concrete instance of `VMTagsLogicalPortTagInput` via:
//
//          VMTagsLogicalPortTagArgs{...}
type VMTagsLogicalPortTagInput interface {
	pulumi.Input

	ToVMTagsLogicalPortTagOutput() VMTagsLogicalPortTagOutput
	ToVMTagsLogicalPortTagOutputWithContext(context.Context) VMTagsLogicalPortTagOutput
}

type VMTagsLogicalPortTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (VMTagsLogicalPortTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMTagsLogicalPortTag)(nil)).Elem()
}

func (i VMTagsLogicalPortTagArgs) ToVMTagsLogicalPortTagOutput() VMTagsLogicalPortTagOutput {
	return i.ToVMTagsLogicalPortTagOutputWithContext(context.Background())
}

func (i VMTagsLogicalPortTagArgs) ToVMTagsLogicalPortTagOutputWithContext(ctx context.Context) VMTagsLogicalPortTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMTagsLogicalPortTagOutput)
}

// VMTagsLogicalPortTagArrayInput is an input type that accepts VMTagsLogicalPortTagArray and VMTagsLogicalPortTagArrayOutput values.
// You can construct a concrete instance of `VMTagsLogicalPortTagArrayInput` via:
//
//          VMTagsLogicalPortTagArray{ VMTagsLogicalPortTagArgs{...} }
type VMTagsLogicalPortTagArrayInput interface {
	pulumi.Input

	ToVMTagsLogicalPortTagArrayOutput() VMTagsLogicalPortTagArrayOutput
	ToVMTagsLogicalPortTagArrayOutputWithContext(context.Context) VMTagsLogicalPortTagArrayOutput
}

type VMTagsLogicalPortTagArray []VMTagsLogicalPortTagInput

func (VMTagsLogicalPortTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMTagsLogicalPortTag)(nil)).Elem()
}

func (i VMTagsLogicalPortTagArray) ToVMTagsLogicalPortTagArrayOutput() VMTagsLogicalPortTagArrayOutput {
	return i.ToVMTagsLogicalPortTagArrayOutputWithContext(context.Background())
}

func (i VMTagsLogicalPortTagArray) ToVMTagsLogicalPortTagArrayOutputWithContext(ctx context.Context) VMTagsLogicalPortTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMTagsLogicalPortTagArrayOutput)
}

type VMTagsLogicalPortTagOutput struct{ *pulumi.OutputState }

func (VMTagsLogicalPortTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMTagsLogicalPortTag)(nil)).Elem()
}

func (o VMTagsLogicalPortTagOutput) ToVMTagsLogicalPortTagOutput() VMTagsLogicalPortTagOutput {
	return o
}

func (o VMTagsLogicalPortTagOutput) ToVMTagsLogicalPortTagOutputWithContext(ctx context.Context) VMTagsLogicalPortTagOutput {
	return o
}

func (o VMTagsLogicalPortTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMTagsLogicalPortTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o VMTagsLogicalPortTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMTagsLogicalPortTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type VMTagsLogicalPortTagArrayOutput struct{ *pulumi.OutputState }

func (VMTagsLogicalPortTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMTagsLogicalPortTag)(nil)).Elem()
}

func (o VMTagsLogicalPortTagArrayOutput) ToVMTagsLogicalPortTagArrayOutput() VMTagsLogicalPortTagArrayOutput {
	return o
}

func (o VMTagsLogicalPortTagArrayOutput) ToVMTagsLogicalPortTagArrayOutputWithContext(ctx context.Context) VMTagsLogicalPortTagArrayOutput {
	return o
}

func (o VMTagsLogicalPortTagArrayOutput) Index(i pulumi.IntInput) VMTagsLogicalPortTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMTagsLogicalPortTag {
		return vs[0].([]VMTagsLogicalPortTag)[vs[1].(int)]
	}).(VMTagsLogicalPortTagOutput)
}

type VMTagsTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// VMTagsTagInput is an input type that accepts VMTagsTagArgs and VMTagsTagOutput values.
// You can construct a concrete instance of `VMTagsTagInput` via:
//
//          VMTagsTagArgs{...}
type VMTagsTagInput interface {
	pulumi.Input

	ToVMTagsTagOutput() VMTagsTagOutput
	ToVMTagsTagOutputWithContext(context.Context) VMTagsTagOutput
}

type VMTagsTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (VMTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMTagsTag)(nil)).Elem()
}

func (i VMTagsTagArgs) ToVMTagsTagOutput() VMTagsTagOutput {
	return i.ToVMTagsTagOutputWithContext(context.Background())
}

func (i VMTagsTagArgs) ToVMTagsTagOutputWithContext(ctx context.Context) VMTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMTagsTagOutput)
}

// VMTagsTagArrayInput is an input type that accepts VMTagsTagArray and VMTagsTagArrayOutput values.
// You can construct a concrete instance of `VMTagsTagArrayInput` via:
//
//          VMTagsTagArray{ VMTagsTagArgs{...} }
type VMTagsTagArrayInput interface {
	pulumi.Input

	ToVMTagsTagArrayOutput() VMTagsTagArrayOutput
	ToVMTagsTagArrayOutputWithContext(context.Context) VMTagsTagArrayOutput
}

type VMTagsTagArray []VMTagsTagInput

func (VMTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMTagsTag)(nil)).Elem()
}

func (i VMTagsTagArray) ToVMTagsTagArrayOutput() VMTagsTagArrayOutput {
	return i.ToVMTagsTagArrayOutputWithContext(context.Background())
}

func (i VMTagsTagArray) ToVMTagsTagArrayOutputWithContext(ctx context.Context) VMTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMTagsTagArrayOutput)
}

type VMTagsTagOutput struct{ *pulumi.OutputState }

func (VMTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMTagsTag)(nil)).Elem()
}

func (o VMTagsTagOutput) ToVMTagsTagOutput() VMTagsTagOutput {
	return o
}

func (o VMTagsTagOutput) ToVMTagsTagOutputWithContext(ctx context.Context) VMTagsTagOutput {
	return o
}

func (o VMTagsTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMTagsTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o VMTagsTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMTagsTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type VMTagsTagArrayOutput struct{ *pulumi.OutputState }

func (VMTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMTagsTag)(nil)).Elem()
}

func (o VMTagsTagArrayOutput) ToVMTagsTagArrayOutput() VMTagsTagArrayOutput {
	return o
}

func (o VMTagsTagArrayOutput) ToVMTagsTagArrayOutputWithContext(ctx context.Context) VMTagsTagArrayOutput {
	return o
}

func (o VMTagsTagArrayOutput) Index(i pulumi.IntInput) VMTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMTagsTag {
		return vs[0].([]VMTagsTag)[vs[1].(int)]
	}).(VMTagsTagOutput)
}

type VlanLogicalSwitchAddressBinding struct {
	IpAddress  *string `pulumi:"ipAddress"`
	MacAddress *string `pulumi:"macAddress"`
	Vlan       *int    `pulumi:"vlan"`
}

// VlanLogicalSwitchAddressBindingInput is an input type that accepts VlanLogicalSwitchAddressBindingArgs and VlanLogicalSwitchAddressBindingOutput values.
// You can construct a concrete instance of `VlanLogicalSwitchAddressBindingInput` via:
//
//          VlanLogicalSwitchAddressBindingArgs{...}
type VlanLogicalSwitchAddressBindingInput interface {
	pulumi.Input

	ToVlanLogicalSwitchAddressBindingOutput() VlanLogicalSwitchAddressBindingOutput
	ToVlanLogicalSwitchAddressBindingOutputWithContext(context.Context) VlanLogicalSwitchAddressBindingOutput
}

type VlanLogicalSwitchAddressBindingArgs struct {
	IpAddress  pulumi.StringPtrInput `pulumi:"ipAddress"`
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	Vlan       pulumi.IntPtrInput    `pulumi:"vlan"`
}

func (VlanLogicalSwitchAddressBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VlanLogicalSwitchAddressBinding)(nil)).Elem()
}

func (i VlanLogicalSwitchAddressBindingArgs) ToVlanLogicalSwitchAddressBindingOutput() VlanLogicalSwitchAddressBindingOutput {
	return i.ToVlanLogicalSwitchAddressBindingOutputWithContext(context.Background())
}

func (i VlanLogicalSwitchAddressBindingArgs) ToVlanLogicalSwitchAddressBindingOutputWithContext(ctx context.Context) VlanLogicalSwitchAddressBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VlanLogicalSwitchAddressBindingOutput)
}

// VlanLogicalSwitchAddressBindingArrayInput is an input type that accepts VlanLogicalSwitchAddressBindingArray and VlanLogicalSwitchAddressBindingArrayOutput values.
// You can construct a concrete instance of `VlanLogicalSwitchAddressBindingArrayInput` via:
//
//          VlanLogicalSwitchAddressBindingArray{ VlanLogicalSwitchAddressBindingArgs{...} }
type VlanLogicalSwitchAddressBindingArrayInput interface {
	pulumi.Input

	ToVlanLogicalSwitchAddressBindingArrayOutput() VlanLogicalSwitchAddressBindingArrayOutput
	ToVlanLogicalSwitchAddressBindingArrayOutputWithContext(context.Context) VlanLogicalSwitchAddressBindingArrayOutput
}

type VlanLogicalSwitchAddressBindingArray []VlanLogicalSwitchAddressBindingInput

func (VlanLogicalSwitchAddressBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VlanLogicalSwitchAddressBinding)(nil)).Elem()
}

func (i VlanLogicalSwitchAddressBindingArray) ToVlanLogicalSwitchAddressBindingArrayOutput() VlanLogicalSwitchAddressBindingArrayOutput {
	return i.ToVlanLogicalSwitchAddressBindingArrayOutputWithContext(context.Background())
}

func (i VlanLogicalSwitchAddressBindingArray) ToVlanLogicalSwitchAddressBindingArrayOutputWithContext(ctx context.Context) VlanLogicalSwitchAddressBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VlanLogicalSwitchAddressBindingArrayOutput)
}

type VlanLogicalSwitchAddressBindingOutput struct{ *pulumi.OutputState }

func (VlanLogicalSwitchAddressBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VlanLogicalSwitchAddressBinding)(nil)).Elem()
}

func (o VlanLogicalSwitchAddressBindingOutput) ToVlanLogicalSwitchAddressBindingOutput() VlanLogicalSwitchAddressBindingOutput {
	return o
}

func (o VlanLogicalSwitchAddressBindingOutput) ToVlanLogicalSwitchAddressBindingOutputWithContext(ctx context.Context) VlanLogicalSwitchAddressBindingOutput {
	return o
}

func (o VlanLogicalSwitchAddressBindingOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VlanLogicalSwitchAddressBinding) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o VlanLogicalSwitchAddressBindingOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VlanLogicalSwitchAddressBinding) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

func (o VlanLogicalSwitchAddressBindingOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VlanLogicalSwitchAddressBinding) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type VlanLogicalSwitchAddressBindingArrayOutput struct{ *pulumi.OutputState }

func (VlanLogicalSwitchAddressBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VlanLogicalSwitchAddressBinding)(nil)).Elem()
}

func (o VlanLogicalSwitchAddressBindingArrayOutput) ToVlanLogicalSwitchAddressBindingArrayOutput() VlanLogicalSwitchAddressBindingArrayOutput {
	return o
}

func (o VlanLogicalSwitchAddressBindingArrayOutput) ToVlanLogicalSwitchAddressBindingArrayOutputWithContext(ctx context.Context) VlanLogicalSwitchAddressBindingArrayOutput {
	return o
}

func (o VlanLogicalSwitchAddressBindingArrayOutput) Index(i pulumi.IntInput) VlanLogicalSwitchAddressBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VlanLogicalSwitchAddressBinding {
		return vs[0].([]VlanLogicalSwitchAddressBinding)[vs[1].(int)]
	}).(VlanLogicalSwitchAddressBindingOutput)
}

type VlanLogicalSwitchSwitchingProfileId struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// VlanLogicalSwitchSwitchingProfileIdInput is an input type that accepts VlanLogicalSwitchSwitchingProfileIdArgs and VlanLogicalSwitchSwitchingProfileIdOutput values.
// You can construct a concrete instance of `VlanLogicalSwitchSwitchingProfileIdInput` via:
//
//          VlanLogicalSwitchSwitchingProfileIdArgs{...}
type VlanLogicalSwitchSwitchingProfileIdInput interface {
	pulumi.Input

	ToVlanLogicalSwitchSwitchingProfileIdOutput() VlanLogicalSwitchSwitchingProfileIdOutput
	ToVlanLogicalSwitchSwitchingProfileIdOutputWithContext(context.Context) VlanLogicalSwitchSwitchingProfileIdOutput
}

type VlanLogicalSwitchSwitchingProfileIdArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (VlanLogicalSwitchSwitchingProfileIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VlanLogicalSwitchSwitchingProfileId)(nil)).Elem()
}

func (i VlanLogicalSwitchSwitchingProfileIdArgs) ToVlanLogicalSwitchSwitchingProfileIdOutput() VlanLogicalSwitchSwitchingProfileIdOutput {
	return i.ToVlanLogicalSwitchSwitchingProfileIdOutputWithContext(context.Background())
}

func (i VlanLogicalSwitchSwitchingProfileIdArgs) ToVlanLogicalSwitchSwitchingProfileIdOutputWithContext(ctx context.Context) VlanLogicalSwitchSwitchingProfileIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VlanLogicalSwitchSwitchingProfileIdOutput)
}

// VlanLogicalSwitchSwitchingProfileIdArrayInput is an input type that accepts VlanLogicalSwitchSwitchingProfileIdArray and VlanLogicalSwitchSwitchingProfileIdArrayOutput values.
// You can construct a concrete instance of `VlanLogicalSwitchSwitchingProfileIdArrayInput` via:
//
//          VlanLogicalSwitchSwitchingProfileIdArray{ VlanLogicalSwitchSwitchingProfileIdArgs{...} }
type VlanLogicalSwitchSwitchingProfileIdArrayInput interface {
	pulumi.Input

	ToVlanLogicalSwitchSwitchingProfileIdArrayOutput() VlanLogicalSwitchSwitchingProfileIdArrayOutput
	ToVlanLogicalSwitchSwitchingProfileIdArrayOutputWithContext(context.Context) VlanLogicalSwitchSwitchingProfileIdArrayOutput
}

type VlanLogicalSwitchSwitchingProfileIdArray []VlanLogicalSwitchSwitchingProfileIdInput

func (VlanLogicalSwitchSwitchingProfileIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VlanLogicalSwitchSwitchingProfileId)(nil)).Elem()
}

func (i VlanLogicalSwitchSwitchingProfileIdArray) ToVlanLogicalSwitchSwitchingProfileIdArrayOutput() VlanLogicalSwitchSwitchingProfileIdArrayOutput {
	return i.ToVlanLogicalSwitchSwitchingProfileIdArrayOutputWithContext(context.Background())
}

func (i VlanLogicalSwitchSwitchingProfileIdArray) ToVlanLogicalSwitchSwitchingProfileIdArrayOutputWithContext(ctx context.Context) VlanLogicalSwitchSwitchingProfileIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VlanLogicalSwitchSwitchingProfileIdArrayOutput)
}

type VlanLogicalSwitchSwitchingProfileIdOutput struct{ *pulumi.OutputState }

func (VlanLogicalSwitchSwitchingProfileIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VlanLogicalSwitchSwitchingProfileId)(nil)).Elem()
}

func (o VlanLogicalSwitchSwitchingProfileIdOutput) ToVlanLogicalSwitchSwitchingProfileIdOutput() VlanLogicalSwitchSwitchingProfileIdOutput {
	return o
}

func (o VlanLogicalSwitchSwitchingProfileIdOutput) ToVlanLogicalSwitchSwitchingProfileIdOutputWithContext(ctx context.Context) VlanLogicalSwitchSwitchingProfileIdOutput {
	return o
}

func (o VlanLogicalSwitchSwitchingProfileIdOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VlanLogicalSwitchSwitchingProfileId) string { return v.Key }).(pulumi.StringOutput)
}

func (o VlanLogicalSwitchSwitchingProfileIdOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VlanLogicalSwitchSwitchingProfileId) string { return v.Value }).(pulumi.StringOutput)
}

type VlanLogicalSwitchSwitchingProfileIdArrayOutput struct{ *pulumi.OutputState }

func (VlanLogicalSwitchSwitchingProfileIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VlanLogicalSwitchSwitchingProfileId)(nil)).Elem()
}

func (o VlanLogicalSwitchSwitchingProfileIdArrayOutput) ToVlanLogicalSwitchSwitchingProfileIdArrayOutput() VlanLogicalSwitchSwitchingProfileIdArrayOutput {
	return o
}

func (o VlanLogicalSwitchSwitchingProfileIdArrayOutput) ToVlanLogicalSwitchSwitchingProfileIdArrayOutputWithContext(ctx context.Context) VlanLogicalSwitchSwitchingProfileIdArrayOutput {
	return o
}

func (o VlanLogicalSwitchSwitchingProfileIdArrayOutput) Index(i pulumi.IntInput) VlanLogicalSwitchSwitchingProfileIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VlanLogicalSwitchSwitchingProfileId {
		return vs[0].([]VlanLogicalSwitchSwitchingProfileId)[vs[1].(int)]
	}).(VlanLogicalSwitchSwitchingProfileIdOutput)
}

type VlanLogicalSwitchTag struct {
	Scope *string `pulumi:"scope"`
	Tag   *string `pulumi:"tag"`
}

// VlanLogicalSwitchTagInput is an input type that accepts VlanLogicalSwitchTagArgs and VlanLogicalSwitchTagOutput values.
// You can construct a concrete instance of `VlanLogicalSwitchTagInput` via:
//
//          VlanLogicalSwitchTagArgs{...}
type VlanLogicalSwitchTagInput interface {
	pulumi.Input

	ToVlanLogicalSwitchTagOutput() VlanLogicalSwitchTagOutput
	ToVlanLogicalSwitchTagOutputWithContext(context.Context) VlanLogicalSwitchTagOutput
}

type VlanLogicalSwitchTagArgs struct {
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	Tag   pulumi.StringPtrInput `pulumi:"tag"`
}

func (VlanLogicalSwitchTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VlanLogicalSwitchTag)(nil)).Elem()
}

func (i VlanLogicalSwitchTagArgs) ToVlanLogicalSwitchTagOutput() VlanLogicalSwitchTagOutput {
	return i.ToVlanLogicalSwitchTagOutputWithContext(context.Background())
}

func (i VlanLogicalSwitchTagArgs) ToVlanLogicalSwitchTagOutputWithContext(ctx context.Context) VlanLogicalSwitchTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VlanLogicalSwitchTagOutput)
}

// VlanLogicalSwitchTagArrayInput is an input type that accepts VlanLogicalSwitchTagArray and VlanLogicalSwitchTagArrayOutput values.
// You can construct a concrete instance of `VlanLogicalSwitchTagArrayInput` via:
//
//          VlanLogicalSwitchTagArray{ VlanLogicalSwitchTagArgs{...} }
type VlanLogicalSwitchTagArrayInput interface {
	pulumi.Input

	ToVlanLogicalSwitchTagArrayOutput() VlanLogicalSwitchTagArrayOutput
	ToVlanLogicalSwitchTagArrayOutputWithContext(context.Context) VlanLogicalSwitchTagArrayOutput
}

type VlanLogicalSwitchTagArray []VlanLogicalSwitchTagInput

func (VlanLogicalSwitchTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VlanLogicalSwitchTag)(nil)).Elem()
}

func (i VlanLogicalSwitchTagArray) ToVlanLogicalSwitchTagArrayOutput() VlanLogicalSwitchTagArrayOutput {
	return i.ToVlanLogicalSwitchTagArrayOutputWithContext(context.Background())
}

func (i VlanLogicalSwitchTagArray) ToVlanLogicalSwitchTagArrayOutputWithContext(ctx context.Context) VlanLogicalSwitchTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VlanLogicalSwitchTagArrayOutput)
}

type VlanLogicalSwitchTagOutput struct{ *pulumi.OutputState }

func (VlanLogicalSwitchTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VlanLogicalSwitchTag)(nil)).Elem()
}

func (o VlanLogicalSwitchTagOutput) ToVlanLogicalSwitchTagOutput() VlanLogicalSwitchTagOutput {
	return o
}

func (o VlanLogicalSwitchTagOutput) ToVlanLogicalSwitchTagOutputWithContext(ctx context.Context) VlanLogicalSwitchTagOutput {
	return o
}

func (o VlanLogicalSwitchTagOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VlanLogicalSwitchTag) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o VlanLogicalSwitchTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VlanLogicalSwitchTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type VlanLogicalSwitchTagArrayOutput struct{ *pulumi.OutputState }

func (VlanLogicalSwitchTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VlanLogicalSwitchTag)(nil)).Elem()
}

func (o VlanLogicalSwitchTagArrayOutput) ToVlanLogicalSwitchTagArrayOutput() VlanLogicalSwitchTagArrayOutput {
	return o
}

func (o VlanLogicalSwitchTagArrayOutput) ToVlanLogicalSwitchTagArrayOutputWithContext(ctx context.Context) VlanLogicalSwitchTagArrayOutput {
	return o
}

func (o VlanLogicalSwitchTagArrayOutput) Index(i pulumi.IntInput) VlanLogicalSwitchTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VlanLogicalSwitchTag {
		return vs[0].([]VlanLogicalSwitchTag)[vs[1].(int)]
	}).(VlanLogicalSwitchTagOutput)
}

func init() {
	pulumi.RegisterOutputType(AlgorithmTypeNSServiceTagOutput{})
	pulumi.RegisterOutputType(AlgorithmTypeNSServiceTagArrayOutput{})
	pulumi.RegisterOutputType(DHCPRelayProfileTagOutput{})
	pulumi.RegisterOutputType(DHCPRelayProfileTagArrayOutput{})
	pulumi.RegisterOutputType(DHCPRelayServiceTagOutput{})
	pulumi.RegisterOutputType(DHCPRelayServiceTagArrayOutput{})
	pulumi.RegisterOutputType(DHCPServerIPPoolDhcpGenericOptionOutput{})
	pulumi.RegisterOutputType(DHCPServerIPPoolDhcpGenericOptionArrayOutput{})
	pulumi.RegisterOutputType(DHCPServerIPPoolDhcpOption121Output{})
	pulumi.RegisterOutputType(DHCPServerIPPoolDhcpOption121ArrayOutput{})
	pulumi.RegisterOutputType(DHCPServerIPPoolIpRangeOutput{})
	pulumi.RegisterOutputType(DHCPServerIPPoolIpRangeArrayOutput{})
	pulumi.RegisterOutputType(DHCPServerIPPoolTagOutput{})
	pulumi.RegisterOutputType(DHCPServerIPPoolTagArrayOutput{})
	pulumi.RegisterOutputType(DHCPServerProfileTagOutput{})
	pulumi.RegisterOutputType(DHCPServerProfileTagArrayOutput{})
	pulumi.RegisterOutputType(EtherTypeNSServiceTagOutput{})
	pulumi.RegisterOutputType(EtherTypeNSServiceTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallSectionAppliedToOutput{})
	pulumi.RegisterOutputType(FirewallSectionAppliedToArrayOutput{})
	pulumi.RegisterOutputType(FirewallSectionRuleOutput{})
	pulumi.RegisterOutputType(FirewallSectionRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallSectionRuleAppliedToOutput{})
	pulumi.RegisterOutputType(FirewallSectionRuleAppliedToArrayOutput{})
	pulumi.RegisterOutputType(FirewallSectionRuleDestinationOutput{})
	pulumi.RegisterOutputType(FirewallSectionRuleDestinationArrayOutput{})
	pulumi.RegisterOutputType(FirewallSectionRuleServiceOutput{})
	pulumi.RegisterOutputType(FirewallSectionRuleServiceArrayOutput{})
	pulumi.RegisterOutputType(FirewallSectionRuleSourceOutput{})
	pulumi.RegisterOutputType(FirewallSectionRuleSourceArrayOutput{})
	pulumi.RegisterOutputType(FirewallSectionTagOutput{})
	pulumi.RegisterOutputType(FirewallSectionTagArrayOutput{})
	pulumi.RegisterOutputType(ICMPTypeNSServiceTagOutput{})
	pulumi.RegisterOutputType(ICMPTypeNSServiceTagArrayOutput{})
	pulumi.RegisterOutputType(IGMPTypeNSServiceTagOutput{})
	pulumi.RegisterOutputType(IGMPTypeNSServiceTagArrayOutput{})
	pulumi.RegisterOutputType(IPBlockSubnetAllocationRangeOutput{})
	pulumi.RegisterOutputType(IPBlockSubnetAllocationRangeArrayOutput{})
	pulumi.RegisterOutputType(IPBlockSubnetTagOutput{})
	pulumi.RegisterOutputType(IPBlockSubnetTagArrayOutput{})
	pulumi.RegisterOutputType(IPBlockTagOutput{})
	pulumi.RegisterOutputType(IPBlockTagArrayOutput{})
	pulumi.RegisterOutputType(IPDiscoverySwitchingProfileTagOutput{})
	pulumi.RegisterOutputType(IPDiscoverySwitchingProfileTagArrayOutput{})
	pulumi.RegisterOutputType(IPPoolSubnetOutput{})
	pulumi.RegisterOutputType(IPPoolSubnetArrayOutput{})
	pulumi.RegisterOutputType(IPPoolTagOutput{})
	pulumi.RegisterOutputType(IPPoolTagArrayOutput{})
	pulumi.RegisterOutputType(IPProtocolNSServiceTagOutput{})
	pulumi.RegisterOutputType(IPProtocolNSServiceTagArrayOutput{})
	pulumi.RegisterOutputType(IPSetTagOutput{})
	pulumi.RegisterOutputType(IPSetTagArrayOutput{})
	pulumi.RegisterOutputType(L4PortSetNSServiceTagOutput{})
	pulumi.RegisterOutputType(L4PortSetNSServiceTagArrayOutput{})
	pulumi.RegisterOutputType(LBClientSSLProfileTagOutput{})
	pulumi.RegisterOutputType(LBClientSSLProfileTagArrayOutput{})
	pulumi.RegisterOutputType(LBCookiePersistenceProfileInsertModeParamsOutput{})
	pulumi.RegisterOutputType(LBCookiePersistenceProfileInsertModeParamsPtrOutput{})
	pulumi.RegisterOutputType(LBCookiePersistenceProfileTagOutput{})
	pulumi.RegisterOutputType(LBCookiePersistenceProfileTagArrayOutput{})
	pulumi.RegisterOutputType(LBFastTCPApplicationProfileTagOutput{})
	pulumi.RegisterOutputType(LBFastTCPApplicationProfileTagArrayOutput{})
	pulumi.RegisterOutputType(LBFastUDPApplicationProfileTagOutput{})
	pulumi.RegisterOutputType(LBFastUDPApplicationProfileTagArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPApplicationProfileTagOutput{})
	pulumi.RegisterOutputType(LBHTTPApplicationProfileTagArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleBodyConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleBodyConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleCookieConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleCookieConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleHeaderConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleHeaderConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleHttpRedirectActionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleHttpRedirectActionPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleHttpRejectActionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleHttpRejectActionPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleIpConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleIpConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleMethodConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleMethodConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleSelectPoolActionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleSelectPoolActionPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleTagOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleTagArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleTcpConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleTcpConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleUriConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleUriConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleVersionConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPForwardingRuleVersionConditionPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPMonitorRequestHeaderOutput{})
	pulumi.RegisterOutputType(LBHTTPMonitorRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPMonitorTagOutput{})
	pulumi.RegisterOutputType(LBHTTPMonitorTagArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleBodyConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleBodyConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleCookieConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleCookieConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleHeaderConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleHeaderConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleHeaderRewriteActionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleHeaderRewriteActionPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleIpConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleIpConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleMethodConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleMethodConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleTagOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleTagArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleTcpConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleTcpConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleUriArgumentsConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleUriArgumentsConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleUriConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleUriConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleUriRewriteActionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleUriRewriteActionPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleVersionConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPRequestRewriteRuleVersionConditionPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleCookieConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleCookieConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleHeaderRewriteActionOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleHeaderRewriteActionPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleIpConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleIpConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleMethodConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleMethodConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleRequestHeaderConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleRequestHeaderConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleResponseHeaderConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleResponseHeaderConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleTagOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleTagArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleTcpConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleTcpConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleUriArgumentsConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleUriArgumentsConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleUriConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleUriConditionArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleVersionConditionOutput{})
	pulumi.RegisterOutputType(LBHTTPResponseRewriteRuleVersionConditionPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPSMonitorRequestHeaderOutput{})
	pulumi.RegisterOutputType(LBHTTPSMonitorRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPSMonitorTagOutput{})
	pulumi.RegisterOutputType(LBHTTPSMonitorTagArrayOutput{})
	pulumi.RegisterOutputType(LBHTTPVirtualServerClientSslOutput{})
	pulumi.RegisterOutputType(LBHTTPVirtualServerClientSslPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPVirtualServerServerSslOutput{})
	pulumi.RegisterOutputType(LBHTTPVirtualServerServerSslPtrOutput{})
	pulumi.RegisterOutputType(LBHTTPVirtualServerTagOutput{})
	pulumi.RegisterOutputType(LBHTTPVirtualServerTagArrayOutput{})
	pulumi.RegisterOutputType(LBICMPMonitorTagOutput{})
	pulumi.RegisterOutputType(LBICMPMonitorTagArrayOutput{})
	pulumi.RegisterOutputType(LBPassiveMonitorTagOutput{})
	pulumi.RegisterOutputType(LBPassiveMonitorTagArrayOutput{})
	pulumi.RegisterOutputType(LBPoolMemberOutput{})
	pulumi.RegisterOutputType(LBPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(LBPoolMemberGroupOutput{})
	pulumi.RegisterOutputType(LBPoolMemberGroupPtrOutput{})
	pulumi.RegisterOutputType(LBPoolMemberGroupGroupingObjectOutput{})
	pulumi.RegisterOutputType(LBPoolMemberGroupGroupingObjectPtrOutput{})
	pulumi.RegisterOutputType(LBPoolSnatTranslationOutput{})
	pulumi.RegisterOutputType(LBPoolSnatTranslationPtrOutput{})
	pulumi.RegisterOutputType(LBPoolTagOutput{})
	pulumi.RegisterOutputType(LBPoolTagArrayOutput{})
	pulumi.RegisterOutputType(LBServerSSLProfileTagOutput{})
	pulumi.RegisterOutputType(LBServerSSLProfileTagArrayOutput{})
	pulumi.RegisterOutputType(LBServiceTagOutput{})
	pulumi.RegisterOutputType(LBServiceTagArrayOutput{})
	pulumi.RegisterOutputType(LBSourceIPPersistenceProfileTagOutput{})
	pulumi.RegisterOutputType(LBSourceIPPersistenceProfileTagArrayOutput{})
	pulumi.RegisterOutputType(LBTCPMonitorTagOutput{})
	pulumi.RegisterOutputType(LBTCPMonitorTagArrayOutput{})
	pulumi.RegisterOutputType(LBTCPVirtualServerTagOutput{})
	pulumi.RegisterOutputType(LBTCPVirtualServerTagArrayOutput{})
	pulumi.RegisterOutputType(LBUDPMonitorTagOutput{})
	pulumi.RegisterOutputType(LBUDPMonitorTagArrayOutput{})
	pulumi.RegisterOutputType(LBUDPVirtualServerTagOutput{})
	pulumi.RegisterOutputType(LBUDPVirtualServerTagArrayOutput{})
	pulumi.RegisterOutputType(LogicalDHCPPortTagOutput{})
	pulumi.RegisterOutputType(LogicalDHCPPortTagArrayOutput{})
	pulumi.RegisterOutputType(LogicalDHCPerverDhcpGenericOptionOutput{})
	pulumi.RegisterOutputType(LogicalDHCPerverDhcpGenericOptionArrayOutput{})
	pulumi.RegisterOutputType(LogicalDHCPerverDhcpOption121Output{})
	pulumi.RegisterOutputType(LogicalDHCPerverDhcpOption121ArrayOutput{})
	pulumi.RegisterOutputType(LogicalDHCPerverTagOutput{})
	pulumi.RegisterOutputType(LogicalDHCPerverTagArrayOutput{})
	pulumi.RegisterOutputType(LogicalPortSwitchingProfileIdOutput{})
	pulumi.RegisterOutputType(LogicalPortSwitchingProfileIdArrayOutput{})
	pulumi.RegisterOutputType(LogicalPortTagOutput{})
	pulumi.RegisterOutputType(LogicalPortTagArrayOutput{})
	pulumi.RegisterOutputType(LogicalRouterCentralizedServicePortTagOutput{})
	pulumi.RegisterOutputType(LogicalRouterCentralizedServicePortTagArrayOutput{})
	pulumi.RegisterOutputType(LogicalRouterDownlinkPortServiceBindingOutput{})
	pulumi.RegisterOutputType(LogicalRouterDownlinkPortServiceBindingArrayOutput{})
	pulumi.RegisterOutputType(LogicalRouterDownlinkPortTagOutput{})
	pulumi.RegisterOutputType(LogicalRouterDownlinkPortTagArrayOutput{})
	pulumi.RegisterOutputType(LogicalRouterLinkPortOnTier0TagOutput{})
	pulumi.RegisterOutputType(LogicalRouterLinkPortOnTier0TagArrayOutput{})
	pulumi.RegisterOutputType(LogicalRouterLinkPortOnTier1TagOutput{})
	pulumi.RegisterOutputType(LogicalRouterLinkPortOnTier1TagArrayOutput{})
	pulumi.RegisterOutputType(LogicalSwitchAddressBindingOutput{})
	pulumi.RegisterOutputType(LogicalSwitchAddressBindingArrayOutput{})
	pulumi.RegisterOutputType(LogicalSwitchSwitchingProfileIdOutput{})
	pulumi.RegisterOutputType(LogicalSwitchSwitchingProfileIdArrayOutput{})
	pulumi.RegisterOutputType(LogicalSwitchTagOutput{})
	pulumi.RegisterOutputType(LogicalSwitchTagArrayOutput{})
	pulumi.RegisterOutputType(LogicalTier0RouterFirewallSectionOutput{})
	pulumi.RegisterOutputType(LogicalTier0RouterFirewallSectionArrayOutput{})
	pulumi.RegisterOutputType(LogicalTier0RouterTagOutput{})
	pulumi.RegisterOutputType(LogicalTier0RouterTagArrayOutput{})
	pulumi.RegisterOutputType(LogicalTier1RouterFirewallSectionOutput{})
	pulumi.RegisterOutputType(LogicalTier1RouterFirewallSectionArrayOutput{})
	pulumi.RegisterOutputType(LogicalTier1RouterTagOutput{})
	pulumi.RegisterOutputType(LogicalTier1RouterTagArrayOutput{})
	pulumi.RegisterOutputType(MACManagementSwitchingProfileMacLearningOutput{})
	pulumi.RegisterOutputType(MACManagementSwitchingProfileMacLearningPtrOutput{})
	pulumi.RegisterOutputType(MACManagementSwitchingProfileTagOutput{})
	pulumi.RegisterOutputType(MACManagementSwitchingProfileTagArrayOutput{})
	pulumi.RegisterOutputType(NATRuleTagOutput{})
	pulumi.RegisterOutputType(NATRuleTagArrayOutput{})
	pulumi.RegisterOutputType(NSServiceGroupTagOutput{})
	pulumi.RegisterOutputType(NSServiceGroupTagArrayOutput{})
	pulumi.RegisterOutputType(NSroupMemberOutput{})
	pulumi.RegisterOutputType(NSroupMemberArrayOutput{})
	pulumi.RegisterOutputType(NSroupMembershipCriteriaOutput{})
	pulumi.RegisterOutputType(NSroupMembershipCriteriaArrayOutput{})
	pulumi.RegisterOutputType(NSroupTagOutput{})
	pulumi.RegisterOutputType(NSroupTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyBGPConfigRouteAggregationOutput{})
	pulumi.RegisterOutputType(PolicyBGPConfigRouteAggregationArrayOutput{})
	pulumi.RegisterOutputType(PolicyBGPConfigTagOutput{})
	pulumi.RegisterOutputType(PolicyBGPConfigTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyBGPNeighborBfdConfigOutput{})
	pulumi.RegisterOutputType(PolicyBGPNeighborBfdConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyBGPNeighborRouteFilteringOutput{})
	pulumi.RegisterOutputType(PolicyBGPNeighborRouteFilteringArrayOutput{})
	pulumi.RegisterOutputType(PolicyBGPNeighborTagOutput{})
	pulumi.RegisterOutputType(PolicyBGPNeighborTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyContextProfileAppIdOutput{})
	pulumi.RegisterOutputType(PolicyContextProfileAppIdArrayOutput{})
	pulumi.RegisterOutputType(PolicyContextProfileAppIdSubAttributeOutput{})
	pulumi.RegisterOutputType(PolicyContextProfileAppIdSubAttributePtrOutput{})
	pulumi.RegisterOutputType(PolicyContextProfileDomainNameOutput{})
	pulumi.RegisterOutputType(PolicyContextProfileDomainNamePtrOutput{})
	pulumi.RegisterOutputType(PolicyContextProfileTagOutput{})
	pulumi.RegisterOutputType(PolicyContextProfileTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyContextProfileUrlCategoryOutput{})
	pulumi.RegisterOutputType(PolicyContextProfileUrlCategoryPtrOutput{})
	pulumi.RegisterOutputType(PolicyDHCPRelayTagOutput{})
	pulumi.RegisterOutputType(PolicyDHCPRelayTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyDHCPServerTagOutput{})
	pulumi.RegisterOutputType(PolicyDHCPServerTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyGatewayPolicyRuleOutput{})
	pulumi.RegisterOutputType(PolicyGatewayPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyGatewayPolicyRuleTagOutput{})
	pulumi.RegisterOutputType(PolicyGatewayPolicyRuleTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyGatewayPolicyTagOutput{})
	pulumi.RegisterOutputType(PolicyGatewayPolicyTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyGatewayPrefixListPrefixOutput{})
	pulumi.RegisterOutputType(PolicyGatewayPrefixListPrefixArrayOutput{})
	pulumi.RegisterOutputType(PolicyGatewayPrefixListTagOutput{})
	pulumi.RegisterOutputType(PolicyGatewayPrefixListTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupConjunctionOutput{})
	pulumi.RegisterOutputType(PolicyGroupConjunctionArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupCriteriaOutput{})
	pulumi.RegisterOutputType(PolicyGroupCriteriaArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupCriteriaConditionOutput{})
	pulumi.RegisterOutputType(PolicyGroupCriteriaConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupCriteriaIpaddressExpressionOutput{})
	pulumi.RegisterOutputType(PolicyGroupCriteriaIpaddressExpressionPtrOutput{})
	pulumi.RegisterOutputType(PolicyGroupCriteriaMacaddressExpressionOutput{})
	pulumi.RegisterOutputType(PolicyGroupCriteriaMacaddressExpressionPtrOutput{})
	pulumi.RegisterOutputType(PolicyGroupCriteriaPathExpressionOutput{})
	pulumi.RegisterOutputType(PolicyGroupCriteriaPathExpressionPtrOutput{})
	pulumi.RegisterOutputType(PolicyGroupExtendedCriteriaOutput{})
	pulumi.RegisterOutputType(PolicyGroupExtendedCriteriaPtrOutput{})
	pulumi.RegisterOutputType(PolicyGroupExtendedCriteriaIdentityGroupOutput{})
	pulumi.RegisterOutputType(PolicyGroupExtendedCriteriaIdentityGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupTagOutput{})
	pulumi.RegisterOutputType(PolicyGroupTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyIPAddressAllocationTagOutput{})
	pulumi.RegisterOutputType(PolicyIPAddressAllocationTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyIPBlockTagOutput{})
	pulumi.RegisterOutputType(PolicyIPBlockTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyIPPoolBlockSubnetTagOutput{})
	pulumi.RegisterOutputType(PolicyIPPoolBlockSubnetTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyIPPoolStaticSubnetAllocationRangeOutput{})
	pulumi.RegisterOutputType(PolicyIPPoolStaticSubnetAllocationRangeArrayOutput{})
	pulumi.RegisterOutputType(PolicyIPPoolStaticSubnetTagOutput{})
	pulumi.RegisterOutputType(PolicyIPPoolStaticSubnetTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyIPPoolTagOutput{})
	pulumi.RegisterOutputType(PolicyIPPoolTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyLBPoolMemberOutput{})
	pulumi.RegisterOutputType(PolicyLBPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(PolicyLBPoolMemberGroupOutput{})
	pulumi.RegisterOutputType(PolicyLBPoolMemberGroupPtrOutput{})
	pulumi.RegisterOutputType(PolicyLBPoolSnatOutput{})
	pulumi.RegisterOutputType(PolicyLBPoolSnatPtrOutput{})
	pulumi.RegisterOutputType(PolicyLBPoolTagOutput{})
	pulumi.RegisterOutputType(PolicyLBPoolTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyLBServiceTagOutput{})
	pulumi.RegisterOutputType(PolicyLBServiceTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyLBVirtualServerAccessListControlOutput{})
	pulumi.RegisterOutputType(PolicyLBVirtualServerAccessListControlPtrOutput{})
	pulumi.RegisterOutputType(PolicyLBVirtualServerClientSslOutput{})
	pulumi.RegisterOutputType(PolicyLBVirtualServerClientSslPtrOutput{})
	pulumi.RegisterOutputType(PolicyLBVirtualServerServerSslOutput{})
	pulumi.RegisterOutputType(PolicyLBVirtualServerServerSslPtrOutput{})
	pulumi.RegisterOutputType(PolicyLBVirtualServerTagOutput{})
	pulumi.RegisterOutputType(PolicyLBVirtualServerTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyNatRuleTagOutput{})
	pulumi.RegisterOutputType(PolicyNatRuleTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedGatewayPolicyDefaultRuleOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedGatewayPolicyDefaultRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedGatewayPolicyDefaultRuleTagOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedGatewayPolicyDefaultRuleTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedGatewayPolicyRuleOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedGatewayPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedGatewayPolicyRuleTagOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedGatewayPolicyRuleTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedGatewayPolicyTagOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedGatewayPolicyTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedSecurityPolicyDefaultRuleOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedSecurityPolicyDefaultRulePtrOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedSecurityPolicyDefaultRuleTagOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedSecurityPolicyDefaultRuleTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedSecurityPolicyRuleOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedSecurityPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedSecurityPolicyRuleTagOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedSecurityPolicyRuleTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedSecurityPolicyTagOutput{})
	pulumi.RegisterOutputType(PolicyPredefinedSecurityPolicyTagArrayOutput{})
	pulumi.RegisterOutputType(PolicySecurityPolicyRuleOutput{})
	pulumi.RegisterOutputType(PolicySecurityPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicySecurityPolicyRuleTagOutput{})
	pulumi.RegisterOutputType(PolicySecurityPolicyRuleTagArrayOutput{})
	pulumi.RegisterOutputType(PolicySecurityPolicyTagOutput{})
	pulumi.RegisterOutputType(PolicySecurityPolicyTagArrayOutput{})
	pulumi.RegisterOutputType(PolicySegmentAdvancedConfigOutput{})
	pulumi.RegisterOutputType(PolicySegmentAdvancedConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicySegmentDiscoveryProfileOutput{})
	pulumi.RegisterOutputType(PolicySegmentDiscoveryProfilePtrOutput{})
	pulumi.RegisterOutputType(PolicySegmentL2ExtensionOutput{})
	pulumi.RegisterOutputType(PolicySegmentL2ExtensionPtrOutput{})
	pulumi.RegisterOutputType(PolicySegmentQosProfileOutput{})
	pulumi.RegisterOutputType(PolicySegmentQosProfilePtrOutput{})
	pulumi.RegisterOutputType(PolicySegmentSecurityProfileOutput{})
	pulumi.RegisterOutputType(PolicySegmentSecurityProfilePtrOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetArrayOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetDhcpV4ConfigOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetDhcpV4ConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetDhcpV4ConfigDhcpOption121Output{})
	pulumi.RegisterOutputType(PolicySegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetDhcpV6ConfigOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetDhcpV6ConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetDhcpV6ConfigExcludedRangeOutput{})
	pulumi.RegisterOutputType(PolicySegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput{})
	pulumi.RegisterOutputType(PolicySegmentTagOutput{})
	pulumi.RegisterOutputType(PolicySegmentTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyServiceAlgorithmEntryOutput{})
	pulumi.RegisterOutputType(PolicyServiceAlgorithmEntryArrayOutput{})
	pulumi.RegisterOutputType(PolicyServiceEtherTypeEntryOutput{})
	pulumi.RegisterOutputType(PolicyServiceEtherTypeEntryArrayOutput{})
	pulumi.RegisterOutputType(PolicyServiceIcmpEntryOutput{})
	pulumi.RegisterOutputType(PolicyServiceIcmpEntryArrayOutput{})
	pulumi.RegisterOutputType(PolicyServiceIgmpEntryOutput{})
	pulumi.RegisterOutputType(PolicyServiceIgmpEntryArrayOutput{})
	pulumi.RegisterOutputType(PolicyServiceIpProtocolEntryOutput{})
	pulumi.RegisterOutputType(PolicyServiceIpProtocolEntryArrayOutput{})
	pulumi.RegisterOutputType(PolicyServiceL4PortSetEntryOutput{})
	pulumi.RegisterOutputType(PolicyServiceL4PortSetEntryArrayOutput{})
	pulumi.RegisterOutputType(PolicyServiceTagOutput{})
	pulumi.RegisterOutputType(PolicyServiceTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyStaticRouteNextHopOutput{})
	pulumi.RegisterOutputType(PolicyStaticRouteNextHopArrayOutput{})
	pulumi.RegisterOutputType(PolicyStaticRouteTagOutput{})
	pulumi.RegisterOutputType(PolicyStaticRouteTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayBgpConfigOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayBgpConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayBgpConfigRouteAggregationOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayBgpConfigRouteAggregationArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayBgpConfigTagOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayBgpConfigTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayHAVIPConfigConfigOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayHAVIPConfigConfigArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayInterfaceTagOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayIntersiteConfigOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayIntersiteConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayLocaleServiceOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayLocaleServiceArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayLocaleServiceRedistributionConfigOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayLocaleServiceRedistributionConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayLocaleServiceRedistributionConfigRuleOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayLocaleServiceRedistributionConfigRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayRedistributionConfigOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayRedistributionConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayRedistributionConfigRuleOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayRedistributionConfigRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayTagOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayVrfConfigOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayVrfConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayVrfConfigRouteTargetOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayVrfConfigRouteTargetPtrOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayVrfConfigTagOutput{})
	pulumi.RegisterOutputType(PolicyTier0GatewayVrfConfigTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier1GatewayInterfaceTagOutput{})
	pulumi.RegisterOutputType(PolicyTier1GatewayInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier1GatewayIntersiteConfigOutput{})
	pulumi.RegisterOutputType(PolicyTier1GatewayIntersiteConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyTier1GatewayLocaleServiceOutput{})
	pulumi.RegisterOutputType(PolicyTier1GatewayLocaleServiceArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier1GatewayRouteAdvertisementRuleOutput{})
	pulumi.RegisterOutputType(PolicyTier1GatewayRouteAdvertisementRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyTier1GatewayTagOutput{})
	pulumi.RegisterOutputType(PolicyTier1GatewayTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyVMTagsPortOutput{})
	pulumi.RegisterOutputType(PolicyVMTagsPortArrayOutput{})
	pulumi.RegisterOutputType(PolicyVMTagsPortTagOutput{})
	pulumi.RegisterOutputType(PolicyVMTagsPortTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyVMTagsTagOutput{})
	pulumi.RegisterOutputType(PolicyVMTagsTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentAdvancedConfigOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentAdvancedConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentDiscoveryProfileOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentDiscoveryProfilePtrOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentL2ExtensionOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentL2ExtensionPtrOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentQosProfileOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentQosProfilePtrOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSecurityProfileOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSecurityProfilePtrOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetArrayOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetDhcpV4ConfigOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetDhcpV4ConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpGenericOptionArrayOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121Output{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetDhcpV4ConfigDhcpOption121ArrayOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetDhcpV6ConfigOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetDhcpV6ConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentSubnetDhcpV6ConfigExcludedRangeArrayOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentTagOutput{})
	pulumi.RegisterOutputType(PolicyVlanSegmentTagArrayOutput{})
	pulumi.RegisterOutputType(QOSSwitchingProfileEgressRateShaperOutput{})
	pulumi.RegisterOutputType(QOSSwitchingProfileEgressRateShaperPtrOutput{})
	pulumi.RegisterOutputType(QOSSwitchingProfileIngressBroadcastRateShaperOutput{})
	pulumi.RegisterOutputType(QOSSwitchingProfileIngressBroadcastRateShaperPtrOutput{})
	pulumi.RegisterOutputType(QOSSwitchingProfileIngressRateShaperOutput{})
	pulumi.RegisterOutputType(QOSSwitchingProfileIngressRateShaperPtrOutput{})
	pulumi.RegisterOutputType(QOSSwitchingProfileTagOutput{})
	pulumi.RegisterOutputType(QOSSwitchingProfileTagArrayOutput{})
	pulumi.RegisterOutputType(SpoofguardSwitchingProfileTagOutput{})
	pulumi.RegisterOutputType(SpoofguardSwitchingProfileTagArrayOutput{})
	pulumi.RegisterOutputType(StaticRouteNextHopOutput{})
	pulumi.RegisterOutputType(StaticRouteNextHopArrayOutput{})
	pulumi.RegisterOutputType(StaticRouteTagOutput{})
	pulumi.RegisterOutputType(StaticRouteTagArrayOutput{})
	pulumi.RegisterOutputType(SwitchSecuritySwitchingProfileRateLimitsOutput{})
	pulumi.RegisterOutputType(SwitchSecuritySwitchingProfileRateLimitsPtrOutput{})
	pulumi.RegisterOutputType(SwitchSecuritySwitchingProfileTagOutput{})
	pulumi.RegisterOutputType(SwitchSecuritySwitchingProfileTagArrayOutput{})
	pulumi.RegisterOutputType(VMTagsLogicalPortTagOutput{})
	pulumi.RegisterOutputType(VMTagsLogicalPortTagArrayOutput{})
	pulumi.RegisterOutputType(VMTagsTagOutput{})
	pulumi.RegisterOutputType(VMTagsTagArrayOutput{})
	pulumi.RegisterOutputType(VlanLogicalSwitchAddressBindingOutput{})
	pulumi.RegisterOutputType(VlanLogicalSwitchAddressBindingArrayOutput{})
	pulumi.RegisterOutputType(VlanLogicalSwitchSwitchingProfileIdOutput{})
	pulumi.RegisterOutputType(VlanLogicalSwitchSwitchingProfileIdArrayOutput{})
	pulumi.RegisterOutputType(VlanLogicalSwitchTagOutput{})
	pulumi.RegisterOutputType(VlanLogicalSwitchTagArrayOutput{})
}
