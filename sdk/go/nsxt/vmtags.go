// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VMTags struct {
	pulumi.CustomResourceState

	// Instance id
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Set of opaque identifiers meaningful to the user
	LogicalPortTags VMTagsLogicalPortTagArrayOutput `pulumi:"logicalPortTags"`
	// Set of opaque identifiers meaningful to the user
	Tags VMTagsTagArrayOutput `pulumi:"tags"`
}

// NewVMTags registers a new resource with the given unique name, arguments, and options.
func NewVMTags(ctx *pulumi.Context,
	name string, args *VMTagsArgs, opts ...pulumi.ResourceOption) (*VMTags, error) {
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	if args == nil {
		args = &VMTagsArgs{}
	}
	var resource VMTags
	err := ctx.RegisterResource("nsxt:index/vMTags:VMTags", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVMTags gets an existing VMTags resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVMTags(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VMTagsState, opts ...pulumi.ResourceOption) (*VMTags, error) {
	var resource VMTags
	err := ctx.ReadResource("nsxt:index/vMTags:VMTags", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VMTags resources.
type vmtagsState struct {
	// Instance id
	InstanceId *string `pulumi:"instanceId"`
	// Set of opaque identifiers meaningful to the user
	LogicalPortTags []VMTagsLogicalPortTag `pulumi:"logicalPortTags"`
	// Set of opaque identifiers meaningful to the user
	Tags []VMTagsTag `pulumi:"tags"`
}

type VMTagsState struct {
	// Instance id
	InstanceId pulumi.StringPtrInput
	// Set of opaque identifiers meaningful to the user
	LogicalPortTags VMTagsLogicalPortTagArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags VMTagsTagArrayInput
}

func (VMTagsState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmtagsState)(nil)).Elem()
}

type vmtagsArgs struct {
	// Instance id
	InstanceId string `pulumi:"instanceId"`
	// Set of opaque identifiers meaningful to the user
	LogicalPortTags []VMTagsLogicalPortTag `pulumi:"logicalPortTags"`
	// Set of opaque identifiers meaningful to the user
	Tags []VMTagsTag `pulumi:"tags"`
}

// The set of arguments for constructing a VMTags resource.
type VMTagsArgs struct {
	// Instance id
	InstanceId pulumi.StringInput
	// Set of opaque identifiers meaningful to the user
	LogicalPortTags VMTagsLogicalPortTagArrayInput
	// Set of opaque identifiers meaningful to the user
	Tags VMTagsTagArrayInput
}

func (VMTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmtagsArgs)(nil)).Elem()
}
