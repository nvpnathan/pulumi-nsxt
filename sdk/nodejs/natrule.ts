// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NATRule extends pulumi.CustomResource {
    /**
     * Get an existing NATRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NATRuleState, opts?: pulumi.CustomResourceOptions): NATRule {
        return new NATRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/nATRule:NATRule';

    /**
     * Returns true if the given object is an instance of NATRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NATRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NATRule.__pulumiType;
    }

    /**
     * The action for the NAT Rule
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * Description of this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * enable/disable the rule
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * enable/disable the logging of rule
     */
    public readonly logging!: pulumi.Output<boolean | undefined>;
    /**
     * Logical router id
     */
    public readonly logicalRouterId!: pulumi.Output<string>;
    /**
     * IP Address | CIDR
     */
    public readonly matchDestinationNetwork!: pulumi.Output<string | undefined>;
    /**
     * IP Address | CIDR
     */
    public readonly matchSourceNetwork!: pulumi.Output<string | undefined>;
    /**
     * A boolean flag which reflects whether the following firewall stage will be skipped
     */
    public readonly natPass!: pulumi.Output<boolean | undefined>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * The priority of the rule (ascending). Valid range [0-2147483647]
     */
    public readonly rulePriority!: pulumi.Output<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.NATRuleTag[] | undefined>;
    /**
     * IP Address | IP Range | CIDR
     */
    public readonly translatedNetwork!: pulumi.Output<string | undefined>;
    /**
     * port number or port range. DNAT only
     */
    public readonly translatedPorts!: pulumi.Output<string | undefined>;

    /**
     * Create a NATRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NATRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NATRuleArgs | NATRuleState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as NATRuleState | undefined;
            inputs["action"] = state ? state.action : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["logging"] = state ? state.logging : undefined;
            inputs["logicalRouterId"] = state ? state.logicalRouterId : undefined;
            inputs["matchDestinationNetwork"] = state ? state.matchDestinationNetwork : undefined;
            inputs["matchSourceNetwork"] = state ? state.matchSourceNetwork : undefined;
            inputs["natPass"] = state ? state.natPass : undefined;
            inputs["revision"] = state ? state.revision : undefined;
            inputs["rulePriority"] = state ? state.rulePriority : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["translatedNetwork"] = state ? state.translatedNetwork : undefined;
            inputs["translatedPorts"] = state ? state.translatedPorts : undefined;
        } else {
            const args = argsOrState as NATRuleArgs | undefined;
            if (!args || args.action === undefined) {
                throw new Error("Missing required property 'action'");
            }
            if (!args || args.logicalRouterId === undefined) {
                throw new Error("Missing required property 'logicalRouterId'");
            }
            inputs["action"] = args ? args.action : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["logging"] = args ? args.logging : undefined;
            inputs["logicalRouterId"] = args ? args.logicalRouterId : undefined;
            inputs["matchDestinationNetwork"] = args ? args.matchDestinationNetwork : undefined;
            inputs["matchSourceNetwork"] = args ? args.matchSourceNetwork : undefined;
            inputs["natPass"] = args ? args.natPass : undefined;
            inputs["rulePriority"] = args ? args.rulePriority : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["translatedNetwork"] = args ? args.translatedNetwork : undefined;
            inputs["translatedPorts"] = args ? args.translatedPorts : undefined;
            inputs["revision"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(NATRule.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NATRule resources.
 */
export interface NATRuleState {
    /**
     * The action for the NAT Rule
     */
    readonly action?: pulumi.Input<string>;
    /**
     * Description of this resource
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * enable/disable the rule
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * enable/disable the logging of rule
     */
    readonly logging?: pulumi.Input<boolean>;
    /**
     * Logical router id
     */
    readonly logicalRouterId?: pulumi.Input<string>;
    /**
     * IP Address | CIDR
     */
    readonly matchDestinationNetwork?: pulumi.Input<string>;
    /**
     * IP Address | CIDR
     */
    readonly matchSourceNetwork?: pulumi.Input<string>;
    /**
     * A boolean flag which reflects whether the following firewall stage will be skipped
     */
    readonly natPass?: pulumi.Input<boolean>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    readonly revision?: pulumi.Input<number>;
    /**
     * The priority of the rule (ascending). Valid range [0-2147483647]
     */
    readonly rulePriority?: pulumi.Input<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.NATRuleTag>[]>;
    /**
     * IP Address | IP Range | CIDR
     */
    readonly translatedNetwork?: pulumi.Input<string>;
    /**
     * port number or port range. DNAT only
     */
    readonly translatedPorts?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NATRule resource.
 */
export interface NATRuleArgs {
    /**
     * The action for the NAT Rule
     */
    readonly action: pulumi.Input<string>;
    /**
     * Description of this resource
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * enable/disable the rule
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * enable/disable the logging of rule
     */
    readonly logging?: pulumi.Input<boolean>;
    /**
     * Logical router id
     */
    readonly logicalRouterId: pulumi.Input<string>;
    /**
     * IP Address | CIDR
     */
    readonly matchDestinationNetwork?: pulumi.Input<string>;
    /**
     * IP Address | CIDR
     */
    readonly matchSourceNetwork?: pulumi.Input<string>;
    /**
     * A boolean flag which reflects whether the following firewall stage will be skipped
     */
    readonly natPass?: pulumi.Input<boolean>;
    /**
     * The priority of the rule (ascending). Valid range [0-2147483647]
     */
    readonly rulePriority?: pulumi.Input<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.NATRuleTag>[]>;
    /**
     * IP Address | IP Range | CIDR
     */
    readonly translatedNetwork?: pulumi.Input<string>;
    /**
     * port number or port range. DNAT only
     */
    readonly translatedPorts?: pulumi.Input<string>;
}
