// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PolicyBGPNeighbor extends pulumi.CustomResource {
    /**
     * Get an existing PolicyBGPNeighbor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyBGPNeighborState, opts?: pulumi.CustomResourceOptions): PolicyBGPNeighbor {
        return new PolicyBGPNeighbor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/policyBGPNeighbor:PolicyBGPNeighbor';

    /**
     * Returns true if the given object is an instance of PolicyBGPNeighbor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyBGPNeighbor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyBGPNeighbor.__pulumiType;
    }

    /**
     * Flag to enable allowas_in option for BGP neighbor
     */
    public readonly allowAsIn!: pulumi.Output<boolean | undefined>;
    /**
     * BFD configuration for failure detection
     */
    public readonly bfdConfig!: pulumi.Output<outputs.PolicyBGPNeighborBfdConfig | undefined>;
    /**
     * Policy path to the BGP for this neighbor
     */
    public readonly bgpPath!: pulumi.Output<string>;
    /**
     * Description for this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Display name for this resource
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * BGP Graceful Restart Configuration Mode
     */
    public readonly gracefulRestartMode!: pulumi.Output<string | undefined>;
    /**
     * Wait time in seconds before declaring peer dead
     */
    public readonly holdDownTime!: pulumi.Output<number | undefined>;
    /**
     * Interval between keep alive messages sent to peer
     */
    public readonly keepAliveTime!: pulumi.Output<number | undefined>;
    /**
     * Maximum number of hops allowed to reach BGP neighbor
     */
    public readonly maximumHopLimit!: pulumi.Output<number | undefined>;
    /**
     * Neighbor IP Address
     */
    public readonly neighborAddress!: pulumi.Output<string>;
    /**
     * NSX ID for this resource
     */
    public readonly nsxId!: pulumi.Output<string>;
    /**
     * Password for BGP neighbor authentication
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Policy path for this resource
     */
    public /*out*/ readonly path!: pulumi.Output<string>;
    /**
     * ASN of the neighbor in ASPLAIN or ASDOT Format
     */
    public readonly remoteAsNum!: pulumi.Output<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * Enable address families and route filtering in each direction
     */
    public readonly routeFilterings!: pulumi.Output<outputs.PolicyBGPNeighborRouteFiltering[]>;
    /**
     * Source IP Addresses for BGP peering
     */
    public readonly sourceAddresses!: pulumi.Output<string[] | undefined>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.PolicyBGPNeighborTag[] | undefined>;

    /**
     * Create a PolicyBGPNeighbor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyBGPNeighborArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyBGPNeighborArgs | PolicyBGPNeighborState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as PolicyBGPNeighborState | undefined;
            inputs["allowAsIn"] = state ? state.allowAsIn : undefined;
            inputs["bfdConfig"] = state ? state.bfdConfig : undefined;
            inputs["bgpPath"] = state ? state.bgpPath : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["gracefulRestartMode"] = state ? state.gracefulRestartMode : undefined;
            inputs["holdDownTime"] = state ? state.holdDownTime : undefined;
            inputs["keepAliveTime"] = state ? state.keepAliveTime : undefined;
            inputs["maximumHopLimit"] = state ? state.maximumHopLimit : undefined;
            inputs["neighborAddress"] = state ? state.neighborAddress : undefined;
            inputs["nsxId"] = state ? state.nsxId : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["path"] = state ? state.path : undefined;
            inputs["remoteAsNum"] = state ? state.remoteAsNum : undefined;
            inputs["revision"] = state ? state.revision : undefined;
            inputs["routeFilterings"] = state ? state.routeFilterings : undefined;
            inputs["sourceAddresses"] = state ? state.sourceAddresses : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as PolicyBGPNeighborArgs | undefined;
            if (!args || args.bgpPath === undefined) {
                throw new Error("Missing required property 'bgpPath'");
            }
            if (!args || args.displayName === undefined) {
                throw new Error("Missing required property 'displayName'");
            }
            if (!args || args.neighborAddress === undefined) {
                throw new Error("Missing required property 'neighborAddress'");
            }
            if (!args || args.remoteAsNum === undefined) {
                throw new Error("Missing required property 'remoteAsNum'");
            }
            inputs["allowAsIn"] = args ? args.allowAsIn : undefined;
            inputs["bfdConfig"] = args ? args.bfdConfig : undefined;
            inputs["bgpPath"] = args ? args.bgpPath : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["gracefulRestartMode"] = args ? args.gracefulRestartMode : undefined;
            inputs["holdDownTime"] = args ? args.holdDownTime : undefined;
            inputs["keepAliveTime"] = args ? args.keepAliveTime : undefined;
            inputs["maximumHopLimit"] = args ? args.maximumHopLimit : undefined;
            inputs["neighborAddress"] = args ? args.neighborAddress : undefined;
            inputs["nsxId"] = args ? args.nsxId : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["remoteAsNum"] = args ? args.remoteAsNum : undefined;
            inputs["routeFilterings"] = args ? args.routeFilterings : undefined;
            inputs["sourceAddresses"] = args ? args.sourceAddresses : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["path"] = undefined /*out*/;
            inputs["revision"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(PolicyBGPNeighbor.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PolicyBGPNeighbor resources.
 */
export interface PolicyBGPNeighborState {
    /**
     * Flag to enable allowas_in option for BGP neighbor
     */
    readonly allowAsIn?: pulumi.Input<boolean>;
    /**
     * BFD configuration for failure detection
     */
    readonly bfdConfig?: pulumi.Input<inputs.PolicyBGPNeighborBfdConfig>;
    /**
     * Policy path to the BGP for this neighbor
     */
    readonly bgpPath?: pulumi.Input<string>;
    /**
     * Description for this resource
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * BGP Graceful Restart Configuration Mode
     */
    readonly gracefulRestartMode?: pulumi.Input<string>;
    /**
     * Wait time in seconds before declaring peer dead
     */
    readonly holdDownTime?: pulumi.Input<number>;
    /**
     * Interval between keep alive messages sent to peer
     */
    readonly keepAliveTime?: pulumi.Input<number>;
    /**
     * Maximum number of hops allowed to reach BGP neighbor
     */
    readonly maximumHopLimit?: pulumi.Input<number>;
    /**
     * Neighbor IP Address
     */
    readonly neighborAddress?: pulumi.Input<string>;
    /**
     * NSX ID for this resource
     */
    readonly nsxId?: pulumi.Input<string>;
    /**
     * Password for BGP neighbor authentication
     */
    readonly password?: pulumi.Input<string>;
    /**
     * Policy path for this resource
     */
    readonly path?: pulumi.Input<string>;
    /**
     * ASN of the neighbor in ASPLAIN or ASDOT Format
     */
    readonly remoteAsNum?: pulumi.Input<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    readonly revision?: pulumi.Input<number>;
    /**
     * Enable address families and route filtering in each direction
     */
    readonly routeFilterings?: pulumi.Input<pulumi.Input<inputs.PolicyBGPNeighborRouteFiltering>[]>;
    /**
     * Source IP Addresses for BGP peering
     */
    readonly sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.PolicyBGPNeighborTag>[]>;
}

/**
 * The set of arguments for constructing a PolicyBGPNeighbor resource.
 */
export interface PolicyBGPNeighborArgs {
    /**
     * Flag to enable allowas_in option for BGP neighbor
     */
    readonly allowAsIn?: pulumi.Input<boolean>;
    /**
     * BFD configuration for failure detection
     */
    readonly bfdConfig?: pulumi.Input<inputs.PolicyBGPNeighborBfdConfig>;
    /**
     * Policy path to the BGP for this neighbor
     */
    readonly bgpPath: pulumi.Input<string>;
    /**
     * Description for this resource
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    readonly displayName: pulumi.Input<string>;
    /**
     * BGP Graceful Restart Configuration Mode
     */
    readonly gracefulRestartMode?: pulumi.Input<string>;
    /**
     * Wait time in seconds before declaring peer dead
     */
    readonly holdDownTime?: pulumi.Input<number>;
    /**
     * Interval between keep alive messages sent to peer
     */
    readonly keepAliveTime?: pulumi.Input<number>;
    /**
     * Maximum number of hops allowed to reach BGP neighbor
     */
    readonly maximumHopLimit?: pulumi.Input<number>;
    /**
     * Neighbor IP Address
     */
    readonly neighborAddress: pulumi.Input<string>;
    /**
     * NSX ID for this resource
     */
    readonly nsxId?: pulumi.Input<string>;
    /**
     * Password for BGP neighbor authentication
     */
    readonly password?: pulumi.Input<string>;
    /**
     * ASN of the neighbor in ASPLAIN or ASDOT Format
     */
    readonly remoteAsNum: pulumi.Input<string>;
    /**
     * Enable address families and route filtering in each direction
     */
    readonly routeFilterings?: pulumi.Input<pulumi.Input<inputs.PolicyBGPNeighborRouteFiltering>[]>;
    /**
     * Source IP Addresses for BGP peering
     */
    readonly sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.PolicyBGPNeighborTag>[]>;
}
