// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VMTags extends pulumi.CustomResource {
    /**
     * Get an existing VMTags resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VMTagsState, opts?: pulumi.CustomResourceOptions): VMTags {
        return new VMTags(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/vMTags:VMTags';

    /**
     * Returns true if the given object is an instance of VMTags.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VMTags {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VMTags.__pulumiType;
    }

    /**
     * Instance id
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly logicalPortTags!: pulumi.Output<outputs.VMTagsLogicalPortTag[] | undefined>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.VMTagsTag[] | undefined>;

    /**
     * Create a VMTags resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VMTagsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VMTagsArgs | VMTagsState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as VMTagsState | undefined;
            inputs["instanceId"] = state ? state.instanceId : undefined;
            inputs["logicalPortTags"] = state ? state.logicalPortTags : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as VMTagsArgs | undefined;
            if (!args || args.instanceId === undefined) {
                throw new Error("Missing required property 'instanceId'");
            }
            inputs["instanceId"] = args ? args.instanceId : undefined;
            inputs["logicalPortTags"] = args ? args.logicalPortTags : undefined;
            inputs["tags"] = args ? args.tags : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(VMTags.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VMTags resources.
 */
export interface VMTagsState {
    /**
     * Instance id
     */
    readonly instanceId?: pulumi.Input<string>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    readonly logicalPortTags?: pulumi.Input<pulumi.Input<inputs.VMTagsLogicalPortTag>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.VMTagsTag>[]>;
}

/**
 * The set of arguments for constructing a VMTags resource.
 */
export interface VMTagsArgs {
    /**
     * Instance id
     */
    readonly instanceId: pulumi.Input<string>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    readonly logicalPortTags?: pulumi.Input<pulumi.Input<inputs.VMTagsLogicalPortTag>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.VMTagsTag>[]>;
}
