# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetLogicalTier0RouterResult:
    """
    A collection of values returned by getLogicalTier0Router.
    """
    def __init__(__self__, description=None, display_name=None, edge_cluster_id=None, high_availability_mode=None, id=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        __self__.display_name = display_name
        if edge_cluster_id and not isinstance(edge_cluster_id, str):
            raise TypeError("Expected argument 'edge_cluster_id' to be a str")
        __self__.edge_cluster_id = edge_cluster_id
        if high_availability_mode and not isinstance(high_availability_mode, str):
            raise TypeError("Expected argument 'high_availability_mode' to be a str")
        __self__.high_availability_mode = high_availability_mode
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
class AwaitableGetLogicalTier0RouterResult(GetLogicalTier0RouterResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLogicalTier0RouterResult(
            description=self.description,
            display_name=self.display_name,
            edge_cluster_id=self.edge_cluster_id,
            high_availability_mode=self.high_availability_mode,
            id=self.id)

def get_logical_tier0_router(description=None,display_name=None,edge_cluster_id=None,high_availability_mode=None,id=None,opts=None):
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()


    __args__['description'] = description
    __args__['displayName'] = display_name
    __args__['edgeClusterId'] = edge_cluster_id
    __args__['highAvailabilityMode'] = high_availability_mode
    __args__['id'] = id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('nsxt:index/getLogicalTier0Router:getLogicalTier0Router', __args__, opts=opts).value

    return AwaitableGetLogicalTier0RouterResult(
        description=__ret__.get('description'),
        display_name=__ret__.get('displayName'),
        edge_cluster_id=__ret__.get('edgeClusterId'),
        high_availability_mode=__ret__.get('highAvailabilityMode'),
        id=__ret__.get('id'))
