# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class PolicyBGPConfig(pulumi.CustomResource):
    ecmp: pulumi.Output[bool]
    """
    Flag to enable ECMP
    """
    enabled: pulumi.Output[bool]
    """
    Flag to enable BGP configuration
    """
    gateway_path: pulumi.Output[str]
    """
    Gateway for this BGP config
    """
    graceful_restart_mode: pulumi.Output[str]
    """
    BGP Graceful Restart Configuration Mode
    """
    graceful_restart_stale_route_timer: pulumi.Output[float]
    """
    BGP Stale Route Timer
    """
    graceful_restart_timer: pulumi.Output[float]
    """
    BGP Graceful Restart Timer
    """
    inter_sr_ibgp: pulumi.Output[bool]
    """
    Enable inter SR IBGP configuration
    """
    local_as_num: pulumi.Output[str]
    """
    BGP AS number in ASPLAIN/ASDOT Format
    """
    multipath_relax: pulumi.Output[bool]
    """
    Flag to enable BGP multipath relax option
    """
    path: pulumi.Output[str]
    """
    Policy path for this resource
    """
    revision: pulumi.Output[float]
    """
    The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
    changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
    operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
    """
    route_aggregations: pulumi.Output[list]
    """
    List of routes to be aggregated

      * `prefix` (`str`)
      * `summaryOnly` (`bool`)
    """
    site_path: pulumi.Output[str]
    """
    Site Path for this BGP config
    """
    tags: pulumi.Output[list]
    """
    Set of opaque identifiers meaningful to the user

      * `scope` (`str`)
      * `tag` (`str`)
    """
    def __init__(__self__, resource_name, opts=None, ecmp=None, enabled=None, gateway_path=None, graceful_restart_mode=None, graceful_restart_stale_route_timer=None, graceful_restart_timer=None, inter_sr_ibgp=None, local_as_num=None, multipath_relax=None, route_aggregations=None, site_path=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a PolicyBGPConfig resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] ecmp: Flag to enable ECMP
        :param pulumi.Input[bool] enabled: Flag to enable BGP configuration
        :param pulumi.Input[str] gateway_path: Gateway for this BGP config
        :param pulumi.Input[str] graceful_restart_mode: BGP Graceful Restart Configuration Mode
        :param pulumi.Input[float] graceful_restart_stale_route_timer: BGP Stale Route Timer
        :param pulumi.Input[float] graceful_restart_timer: BGP Graceful Restart Timer
        :param pulumi.Input[bool] inter_sr_ibgp: Enable inter SR IBGP configuration
        :param pulumi.Input[str] local_as_num: BGP AS number in ASPLAIN/ASDOT Format
        :param pulumi.Input[bool] multipath_relax: Flag to enable BGP multipath relax option
        :param pulumi.Input[list] route_aggregations: List of routes to be aggregated
        :param pulumi.Input[str] site_path: Site Path for this BGP config
        :param pulumi.Input[list] tags: Set of opaque identifiers meaningful to the user

        The **route_aggregations** object supports the following:

          * `prefix` (`pulumi.Input[str]`)
          * `summaryOnly` (`pulumi.Input[bool]`)

        The **tags** object supports the following:

          * `scope` (`pulumi.Input[str]`)
          * `tag` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['ecmp'] = ecmp
            __props__['enabled'] = enabled
            if gateway_path is None:
                raise TypeError("Missing required property 'gateway_path'")
            __props__['gateway_path'] = gateway_path
            __props__['graceful_restart_mode'] = graceful_restart_mode
            __props__['graceful_restart_stale_route_timer'] = graceful_restart_stale_route_timer
            __props__['graceful_restart_timer'] = graceful_restart_timer
            __props__['inter_sr_ibgp'] = inter_sr_ibgp
            __props__['local_as_num'] = local_as_num
            __props__['multipath_relax'] = multipath_relax
            __props__['route_aggregations'] = route_aggregations
            if site_path is None:
                raise TypeError("Missing required property 'site_path'")
            __props__['site_path'] = site_path
            __props__['tags'] = tags
            __props__['path'] = None
            __props__['revision'] = None
        super(PolicyBGPConfig, __self__).__init__(
            'nsxt:index/policyBGPConfig:PolicyBGPConfig',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, ecmp=None, enabled=None, gateway_path=None, graceful_restart_mode=None, graceful_restart_stale_route_timer=None, graceful_restart_timer=None, inter_sr_ibgp=None, local_as_num=None, multipath_relax=None, path=None, revision=None, route_aggregations=None, site_path=None, tags=None):
        """
        Get an existing PolicyBGPConfig resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] ecmp: Flag to enable ECMP
        :param pulumi.Input[bool] enabled: Flag to enable BGP configuration
        :param pulumi.Input[str] gateway_path: Gateway for this BGP config
        :param pulumi.Input[str] graceful_restart_mode: BGP Graceful Restart Configuration Mode
        :param pulumi.Input[float] graceful_restart_stale_route_timer: BGP Stale Route Timer
        :param pulumi.Input[float] graceful_restart_timer: BGP Graceful Restart Timer
        :param pulumi.Input[bool] inter_sr_ibgp: Enable inter SR IBGP configuration
        :param pulumi.Input[str] local_as_num: BGP AS number in ASPLAIN/ASDOT Format
        :param pulumi.Input[bool] multipath_relax: Flag to enable BGP multipath relax option
        :param pulumi.Input[str] path: Policy path for this resource
        :param pulumi.Input[float] revision: The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
               changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
               operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        :param pulumi.Input[list] route_aggregations: List of routes to be aggregated
        :param pulumi.Input[str] site_path: Site Path for this BGP config
        :param pulumi.Input[list] tags: Set of opaque identifiers meaningful to the user

        The **route_aggregations** object supports the following:

          * `prefix` (`pulumi.Input[str]`)
          * `summaryOnly` (`pulumi.Input[bool]`)

        The **tags** object supports the following:

          * `scope` (`pulumi.Input[str]`)
          * `tag` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["ecmp"] = ecmp
        __props__["enabled"] = enabled
        __props__["gateway_path"] = gateway_path
        __props__["graceful_restart_mode"] = graceful_restart_mode
        __props__["graceful_restart_stale_route_timer"] = graceful_restart_stale_route_timer
        __props__["graceful_restart_timer"] = graceful_restart_timer
        __props__["inter_sr_ibgp"] = inter_sr_ibgp
        __props__["local_as_num"] = local_as_num
        __props__["multipath_relax"] = multipath_relax
        __props__["path"] = path
        __props__["revision"] = revision
        __props__["route_aggregations"] = route_aggregations
        __props__["site_path"] = site_path
        __props__["tags"] = tags
        return PolicyBGPConfig(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
