# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class PolicyTier1Gateway(pulumi.CustomResource):
    default_rule_logging: pulumi.Output[bool]
    """
    Default rule logging
    """
    description: pulumi.Output[str]
    """
    Description for this resource
    """
    dhcp_config_path: pulumi.Output[str]
    """
    Policy path to DHCP server or relay configuration to use for this Tier1
    """
    display_name: pulumi.Output[str]
    """
    Display name for this resource
    """
    edge_cluster_path: pulumi.Output[str]
    """
    The path of the edge cluster connected to this gateway
    """
    egress_qos_profile_path: pulumi.Output[str]
    """
    Policy path to gateway QoS profile in egress direction
    """
    enable_firewall: pulumi.Output[bool]
    """
    Enable edge firewall
    """
    enable_standby_relocation: pulumi.Output[bool]
    """
    Enable standby relocation
    """
    failover_mode: pulumi.Output[str]
    """
    Failover mode
    """
    force_whitelisting: pulumi.Output[bool]
    """
    Force whitelisting
    """
    ingress_qos_profile_path: pulumi.Output[str]
    """
    Policy path to gateway QoS profile in ingress direction
    """
    intersite_config: pulumi.Output[dict]
    """
    Locale Service for the gateway

      * `fallbackSitePaths` (`list`)
      * `primarySitePath` (`str`)
      * `transitSubnet` (`str`)
    """
    ipv6_dad_profile_path: pulumi.Output[str]
    """
    The path of an IPv6 DAD profile
    """
    ipv6_ndra_profile_path: pulumi.Output[str]
    """
    The path of an IPv6 NDRA profile
    """
    locale_services: pulumi.Output[list]
    """
    Locale Service for the gateway

      * `edge_cluster_path` (`str`)
      * `path` (`str`)
      * `preferred_edge_paths` (`list`)
      * `revision` (`float`)
    """
    nsx_id: pulumi.Output[str]
    """
    NSX ID for this resource
    """
    path: pulumi.Output[str]
    """
    Policy path for this resource
    """
    pool_allocation: pulumi.Output[str]
    """
    Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability
    requirements
    """
    revision: pulumi.Output[float]
    """
    The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
    changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
    operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
    """
    route_advertisement_rules: pulumi.Output[list]
    """
    List of route advertisement rules

      * `action` (`str`)
      * `name` (`str`)
      * `prefixOperator` (`str`)
      * `route_advertisement_types` (`list`)
      * `subnets` (`list`)
    """
    route_advertisement_types: pulumi.Output[list]
    """
    Enable different types of route advertisements
    """
    tags: pulumi.Output[list]
    """
    Set of opaque identifiers meaningful to the user

      * `scope` (`str`)
      * `tag` (`str`)
    """
    tier0_path: pulumi.Output[str]
    """
    The path of the connected Tier0
    """
    def __init__(__self__, resource_name, opts=None, default_rule_logging=None, description=None, dhcp_config_path=None, display_name=None, edge_cluster_path=None, egress_qos_profile_path=None, enable_firewall=None, enable_standby_relocation=None, failover_mode=None, force_whitelisting=None, ingress_qos_profile_path=None, intersite_config=None, ipv6_dad_profile_path=None, ipv6_ndra_profile_path=None, locale_services=None, nsx_id=None, pool_allocation=None, route_advertisement_rules=None, route_advertisement_types=None, tags=None, tier0_path=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a PolicyTier1Gateway resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] default_rule_logging: Default rule logging
        :param pulumi.Input[str] description: Description for this resource
        :param pulumi.Input[str] dhcp_config_path: Policy path to DHCP server or relay configuration to use for this Tier1
        :param pulumi.Input[str] display_name: Display name for this resource
        :param pulumi.Input[str] edge_cluster_path: The path of the edge cluster connected to this gateway
        :param pulumi.Input[str] egress_qos_profile_path: Policy path to gateway QoS profile in egress direction
        :param pulumi.Input[bool] enable_firewall: Enable edge firewall
        :param pulumi.Input[bool] enable_standby_relocation: Enable standby relocation
        :param pulumi.Input[str] failover_mode: Failover mode
        :param pulumi.Input[bool] force_whitelisting: Force whitelisting
        :param pulumi.Input[str] ingress_qos_profile_path: Policy path to gateway QoS profile in ingress direction
        :param pulumi.Input[dict] intersite_config: Locale Service for the gateway
        :param pulumi.Input[str] ipv6_dad_profile_path: The path of an IPv6 DAD profile
        :param pulumi.Input[str] ipv6_ndra_profile_path: The path of an IPv6 NDRA profile
        :param pulumi.Input[list] locale_services: Locale Service for the gateway
        :param pulumi.Input[str] nsx_id: NSX ID for this resource
        :param pulumi.Input[str] pool_allocation: Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability
               requirements
        :param pulumi.Input[list] route_advertisement_rules: List of route advertisement rules
        :param pulumi.Input[list] route_advertisement_types: Enable different types of route advertisements
        :param pulumi.Input[list] tags: Set of opaque identifiers meaningful to the user
        :param pulumi.Input[str] tier0_path: The path of the connected Tier0

        The **intersite_config** object supports the following:

          * `fallbackSitePaths` (`pulumi.Input[list]`)
          * `primarySitePath` (`pulumi.Input[str]`)
          * `transitSubnet` (`pulumi.Input[str]`)

        The **locale_services** object supports the following:

          * `edge_cluster_path` (`pulumi.Input[str]`)
          * `path` (`pulumi.Input[str]`)
          * `preferred_edge_paths` (`pulumi.Input[list]`)
          * `revision` (`pulumi.Input[float]`)

        The **route_advertisement_rules** object supports the following:

          * `action` (`pulumi.Input[str]`)
          * `name` (`pulumi.Input[str]`)
          * `prefixOperator` (`pulumi.Input[str]`)
          * `route_advertisement_types` (`pulumi.Input[list]`)
          * `subnets` (`pulumi.Input[list]`)

        The **tags** object supports the following:

          * `scope` (`pulumi.Input[str]`)
          * `tag` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['default_rule_logging'] = default_rule_logging
            __props__['description'] = description
            __props__['dhcp_config_path'] = dhcp_config_path
            if display_name is None:
                raise TypeError("Missing required property 'display_name'")
            __props__['display_name'] = display_name
            __props__['edge_cluster_path'] = edge_cluster_path
            __props__['egress_qos_profile_path'] = egress_qos_profile_path
            __props__['enable_firewall'] = enable_firewall
            __props__['enable_standby_relocation'] = enable_standby_relocation
            __props__['failover_mode'] = failover_mode
            if force_whitelisting is not None:
                warnings.warn("Use nsxt_policy_predefined_gateway_policy resource to control default action", DeprecationWarning)
                pulumi.log.warn("force_whitelisting is deprecated: Use nsxt_policy_predefined_gateway_policy resource to control default action")
            __props__['force_whitelisting'] = force_whitelisting
            __props__['ingress_qos_profile_path'] = ingress_qos_profile_path
            __props__['intersite_config'] = intersite_config
            __props__['ipv6_dad_profile_path'] = ipv6_dad_profile_path
            __props__['ipv6_ndra_profile_path'] = ipv6_ndra_profile_path
            __props__['locale_services'] = locale_services
            __props__['nsx_id'] = nsx_id
            __props__['pool_allocation'] = pool_allocation
            __props__['route_advertisement_rules'] = route_advertisement_rules
            __props__['route_advertisement_types'] = route_advertisement_types
            __props__['tags'] = tags
            __props__['tier0_path'] = tier0_path
            __props__['path'] = None
            __props__['revision'] = None
        super(PolicyTier1Gateway, __self__).__init__(
            'nsxt:index/policyTier1Gateway:PolicyTier1Gateway',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, default_rule_logging=None, description=None, dhcp_config_path=None, display_name=None, edge_cluster_path=None, egress_qos_profile_path=None, enable_firewall=None, enable_standby_relocation=None, failover_mode=None, force_whitelisting=None, ingress_qos_profile_path=None, intersite_config=None, ipv6_dad_profile_path=None, ipv6_ndra_profile_path=None, locale_services=None, nsx_id=None, path=None, pool_allocation=None, revision=None, route_advertisement_rules=None, route_advertisement_types=None, tags=None, tier0_path=None):
        """
        Get an existing PolicyTier1Gateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] default_rule_logging: Default rule logging
        :param pulumi.Input[str] description: Description for this resource
        :param pulumi.Input[str] dhcp_config_path: Policy path to DHCP server or relay configuration to use for this Tier1
        :param pulumi.Input[str] display_name: Display name for this resource
        :param pulumi.Input[str] edge_cluster_path: The path of the edge cluster connected to this gateway
        :param pulumi.Input[str] egress_qos_profile_path: Policy path to gateway QoS profile in egress direction
        :param pulumi.Input[bool] enable_firewall: Enable edge firewall
        :param pulumi.Input[bool] enable_standby_relocation: Enable standby relocation
        :param pulumi.Input[str] failover_mode: Failover mode
        :param pulumi.Input[bool] force_whitelisting: Force whitelisting
        :param pulumi.Input[str] ingress_qos_profile_path: Policy path to gateway QoS profile in ingress direction
        :param pulumi.Input[dict] intersite_config: Locale Service for the gateway
        :param pulumi.Input[str] ipv6_dad_profile_path: The path of an IPv6 DAD profile
        :param pulumi.Input[str] ipv6_ndra_profile_path: The path of an IPv6 NDRA profile
        :param pulumi.Input[list] locale_services: Locale Service for the gateway
        :param pulumi.Input[str] nsx_id: NSX ID for this resource
        :param pulumi.Input[str] path: Policy path for this resource
        :param pulumi.Input[str] pool_allocation: Edge node allocation at different sizes for routing and load balancer service to meet performance and scalability
               requirements
        :param pulumi.Input[float] revision: The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
               changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
               operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        :param pulumi.Input[list] route_advertisement_rules: List of route advertisement rules
        :param pulumi.Input[list] route_advertisement_types: Enable different types of route advertisements
        :param pulumi.Input[list] tags: Set of opaque identifiers meaningful to the user
        :param pulumi.Input[str] tier0_path: The path of the connected Tier0

        The **intersite_config** object supports the following:

          * `fallbackSitePaths` (`pulumi.Input[list]`)
          * `primarySitePath` (`pulumi.Input[str]`)
          * `transitSubnet` (`pulumi.Input[str]`)

        The **locale_services** object supports the following:

          * `edge_cluster_path` (`pulumi.Input[str]`)
          * `path` (`pulumi.Input[str]`)
          * `preferred_edge_paths` (`pulumi.Input[list]`)
          * `revision` (`pulumi.Input[float]`)

        The **route_advertisement_rules** object supports the following:

          * `action` (`pulumi.Input[str]`)
          * `name` (`pulumi.Input[str]`)
          * `prefixOperator` (`pulumi.Input[str]`)
          * `route_advertisement_types` (`pulumi.Input[list]`)
          * `subnets` (`pulumi.Input[list]`)

        The **tags** object supports the following:

          * `scope` (`pulumi.Input[str]`)
          * `tag` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["default_rule_logging"] = default_rule_logging
        __props__["description"] = description
        __props__["dhcp_config_path"] = dhcp_config_path
        __props__["display_name"] = display_name
        __props__["edge_cluster_path"] = edge_cluster_path
        __props__["egress_qos_profile_path"] = egress_qos_profile_path
        __props__["enable_firewall"] = enable_firewall
        __props__["enable_standby_relocation"] = enable_standby_relocation
        __props__["failover_mode"] = failover_mode
        __props__["force_whitelisting"] = force_whitelisting
        __props__["ingress_qos_profile_path"] = ingress_qos_profile_path
        __props__["intersite_config"] = intersite_config
        __props__["ipv6_dad_profile_path"] = ipv6_dad_profile_path
        __props__["ipv6_ndra_profile_path"] = ipv6_ndra_profile_path
        __props__["locale_services"] = locale_services
        __props__["nsx_id"] = nsx_id
        __props__["path"] = path
        __props__["pool_allocation"] = pool_allocation
        __props__["revision"] = revision
        __props__["route_advertisement_rules"] = route_advertisement_rules
        __props__["route_advertisement_types"] = route_advertisement_types
        __props__["tags"] = tags
        __props__["tier0_path"] = tier0_path
        return PolicyTier1Gateway(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
