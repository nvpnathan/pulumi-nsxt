# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class PolicyTier1GatewayInterface(pulumi.CustomResource):
    description: pulumi.Output[str]
    """
    Description for this resource
    """
    display_name: pulumi.Output[str]
    """
    Display name for this resource
    """
    gateway_path: pulumi.Output[str]
    """
    Policy path for tier1 gateway
    """
    ipv6_ndra_profile_path: pulumi.Output[str]
    """
    The path of an IPv6 NDRA profile
    """
    locale_service_id: pulumi.Output[str]
    """
    Locale Service ID for this interface
    """
    mtu: pulumi.Output[float]
    """
    Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit
    """
    nsx_id: pulumi.Output[str]
    """
    NSX ID for this resource
    """
    path: pulumi.Output[str]
    """
    Policy path for this resource
    """
    revision: pulumi.Output[float]
    """
    The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
    changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
    operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
    """
    segment_path: pulumi.Output[str]
    """
    Policy path for connected segment
    """
    site_path: pulumi.Output[str]
    """
    Path of the site the Tier1 edge cluster belongs to
    """
    subnets: pulumi.Output[list]
    """
    List of IP addresses and network prefixes for this interface
    """
    tags: pulumi.Output[list]
    """
    Set of opaque identifiers meaningful to the user

      * `scope` (`str`)
      * `tag` (`str`)
    """
    urpf_mode: pulumi.Output[str]
    """
    Unicast Reverse Path Forwarding mode
    """
    def __init__(__self__, resource_name, opts=None, description=None, display_name=None, gateway_path=None, ipv6_ndra_profile_path=None, mtu=None, nsx_id=None, segment_path=None, site_path=None, subnets=None, tags=None, urpf_mode=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a PolicyTier1GatewayInterface resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: Description for this resource
        :param pulumi.Input[str] display_name: Display name for this resource
        :param pulumi.Input[str] gateway_path: Policy path for tier1 gateway
        :param pulumi.Input[str] ipv6_ndra_profile_path: The path of an IPv6 NDRA profile
        :param pulumi.Input[float] mtu: Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit
        :param pulumi.Input[str] nsx_id: NSX ID for this resource
        :param pulumi.Input[str] segment_path: Policy path for connected segment
        :param pulumi.Input[str] site_path: Path of the site the Tier1 edge cluster belongs to
        :param pulumi.Input[list] subnets: List of IP addresses and network prefixes for this interface
        :param pulumi.Input[list] tags: Set of opaque identifiers meaningful to the user
        :param pulumi.Input[str] urpf_mode: Unicast Reverse Path Forwarding mode

        The **tags** object supports the following:

          * `scope` (`pulumi.Input[str]`)
          * `tag` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['description'] = description
            if display_name is None:
                raise TypeError("Missing required property 'display_name'")
            __props__['display_name'] = display_name
            if gateway_path is None:
                raise TypeError("Missing required property 'gateway_path'")
            __props__['gateway_path'] = gateway_path
            __props__['ipv6_ndra_profile_path'] = ipv6_ndra_profile_path
            __props__['mtu'] = mtu
            __props__['nsx_id'] = nsx_id
            if segment_path is None:
                raise TypeError("Missing required property 'segment_path'")
            __props__['segment_path'] = segment_path
            __props__['site_path'] = site_path
            if subnets is None:
                raise TypeError("Missing required property 'subnets'")
            __props__['subnets'] = subnets
            __props__['tags'] = tags
            __props__['urpf_mode'] = urpf_mode
            __props__['locale_service_id'] = None
            __props__['path'] = None
            __props__['revision'] = None
        super(PolicyTier1GatewayInterface, __self__).__init__(
            'nsxt:index/policyTier1GatewayInterface:PolicyTier1GatewayInterface',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, description=None, display_name=None, gateway_path=None, ipv6_ndra_profile_path=None, locale_service_id=None, mtu=None, nsx_id=None, path=None, revision=None, segment_path=None, site_path=None, subnets=None, tags=None, urpf_mode=None):
        """
        Get an existing PolicyTier1GatewayInterface resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: Description for this resource
        :param pulumi.Input[str] display_name: Display name for this resource
        :param pulumi.Input[str] gateway_path: Policy path for tier1 gateway
        :param pulumi.Input[str] ipv6_ndra_profile_path: The path of an IPv6 NDRA profile
        :param pulumi.Input[str] locale_service_id: Locale Service ID for this interface
        :param pulumi.Input[float] mtu: Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit
        :param pulumi.Input[str] nsx_id: NSX ID for this resource
        :param pulumi.Input[str] path: Policy path for this resource
        :param pulumi.Input[float] revision: The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
               changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
               operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        :param pulumi.Input[str] segment_path: Policy path for connected segment
        :param pulumi.Input[str] site_path: Path of the site the Tier1 edge cluster belongs to
        :param pulumi.Input[list] subnets: List of IP addresses and network prefixes for this interface
        :param pulumi.Input[list] tags: Set of opaque identifiers meaningful to the user
        :param pulumi.Input[str] urpf_mode: Unicast Reverse Path Forwarding mode

        The **tags** object supports the following:

          * `scope` (`pulumi.Input[str]`)
          * `tag` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["description"] = description
        __props__["display_name"] = display_name
        __props__["gateway_path"] = gateway_path
        __props__["ipv6_ndra_profile_path"] = ipv6_ndra_profile_path
        __props__["locale_service_id"] = locale_service_id
        __props__["mtu"] = mtu
        __props__["nsx_id"] = nsx_id
        __props__["path"] = path
        __props__["revision"] = revision
        __props__["segment_path"] = segment_path
        __props__["site_path"] = site_path
        __props__["subnets"] = subnets
        __props__["tags"] = tags
        __props__["urpf_mode"] = urpf_mode
        return PolicyTier1GatewayInterface(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
