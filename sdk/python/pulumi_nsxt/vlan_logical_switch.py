# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class VlanLogicalSwitch(pulumi.CustomResource):
    address_bindings: pulumi.Output[list]
    """
    Address bindings for the Logical switch

      * `ip_address` (`str`)
      * `mac_address` (`str`)
      * `vlan` (`float`)
    """
    admin_state: pulumi.Output[str]
    """
    Represents Desired state of the object
    """
    description: pulumi.Output[str]
    """
    Description of this resource
    """
    display_name: pulumi.Output[str]
    """
    The display name of this resource. Defaults to ID if not set
    """
    ip_pool_id: pulumi.Output[str]
    """
    IP pool id that associated with a LogicalSwitch
    """
    mac_pool_id: pulumi.Output[str]
    """
    Mac pool id that associated with a LogicalSwitch
    """
    revision: pulumi.Output[float]
    """
    The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
    changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
    operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
    """
    switching_profile_ids: pulumi.Output[list]
    """
    List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
    be used if not specified

      * `key` (`str`)
      * `value` (`str`)
    """
    tags: pulumi.Output[list]
    """
    Set of opaque identifiers meaningful to the user

      * `scope` (`str`)
      * `tag` (`str`)
    """
    transport_zone_id: pulumi.Output[str]
    """
    Id of the TransportZone to which this LogicalSwitch is associated
    """
    vlan: pulumi.Output[float]
    """
    VLAN Id
    """
    def __init__(__self__, resource_name, opts=None, address_bindings=None, admin_state=None, description=None, display_name=None, ip_pool_id=None, mac_pool_id=None, switching_profile_ids=None, tags=None, transport_zone_id=None, vlan=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a VlanLogicalSwitch resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] address_bindings: Address bindings for the Logical switch
        :param pulumi.Input[str] admin_state: Represents Desired state of the object
        :param pulumi.Input[str] description: Description of this resource
        :param pulumi.Input[str] display_name: The display name of this resource. Defaults to ID if not set
        :param pulumi.Input[str] ip_pool_id: IP pool id that associated with a LogicalSwitch
        :param pulumi.Input[str] mac_pool_id: Mac pool id that associated with a LogicalSwitch
        :param pulumi.Input[list] switching_profile_ids: List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
               be used if not specified
        :param pulumi.Input[list] tags: Set of opaque identifiers meaningful to the user
        :param pulumi.Input[str] transport_zone_id: Id of the TransportZone to which this LogicalSwitch is associated
        :param pulumi.Input[float] vlan: VLAN Id

        The **address_bindings** object supports the following:

          * `ip_address` (`pulumi.Input[str]`)
          * `mac_address` (`pulumi.Input[str]`)
          * `vlan` (`pulumi.Input[float]`)

        The **switching_profile_ids** object supports the following:

          * `key` (`pulumi.Input[str]`)
          * `value` (`pulumi.Input[str]`)

        The **tags** object supports the following:

          * `scope` (`pulumi.Input[str]`)
          * `tag` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['address_bindings'] = address_bindings
            __props__['admin_state'] = admin_state
            __props__['description'] = description
            __props__['display_name'] = display_name
            __props__['ip_pool_id'] = ip_pool_id
            __props__['mac_pool_id'] = mac_pool_id
            __props__['switching_profile_ids'] = switching_profile_ids
            __props__['tags'] = tags
            if transport_zone_id is None:
                raise TypeError("Missing required property 'transport_zone_id'")
            __props__['transport_zone_id'] = transport_zone_id
            if vlan is None:
                raise TypeError("Missing required property 'vlan'")
            __props__['vlan'] = vlan
            __props__['revision'] = None
        super(VlanLogicalSwitch, __self__).__init__(
            'nsxt:index/vlanLogicalSwitch:VlanLogicalSwitch',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, address_bindings=None, admin_state=None, description=None, display_name=None, ip_pool_id=None, mac_pool_id=None, revision=None, switching_profile_ids=None, tags=None, transport_zone_id=None, vlan=None):
        """
        Get an existing VlanLogicalSwitch resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] address_bindings: Address bindings for the Logical switch
        :param pulumi.Input[str] admin_state: Represents Desired state of the object
        :param pulumi.Input[str] description: Description of this resource
        :param pulumi.Input[str] display_name: The display name of this resource. Defaults to ID if not set
        :param pulumi.Input[str] ip_pool_id: IP pool id that associated with a LogicalSwitch
        :param pulumi.Input[str] mac_pool_id: Mac pool id that associated with a LogicalSwitch
        :param pulumi.Input[float] revision: The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
               changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
               operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
        :param pulumi.Input[list] switching_profile_ids: List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
               be used if not specified
        :param pulumi.Input[list] tags: Set of opaque identifiers meaningful to the user
        :param pulumi.Input[str] transport_zone_id: Id of the TransportZone to which this LogicalSwitch is associated
        :param pulumi.Input[float] vlan: VLAN Id

        The **address_bindings** object supports the following:

          * `ip_address` (`pulumi.Input[str]`)
          * `mac_address` (`pulumi.Input[str]`)
          * `vlan` (`pulumi.Input[float]`)

        The **switching_profile_ids** object supports the following:

          * `key` (`pulumi.Input[str]`)
          * `value` (`pulumi.Input[str]`)

        The **tags** object supports the following:

          * `scope` (`pulumi.Input[str]`)
          * `tag` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["address_bindings"] = address_bindings
        __props__["admin_state"] = admin_state
        __props__["description"] = description
        __props__["display_name"] = display_name
        __props__["ip_pool_id"] = ip_pool_id
        __props__["mac_pool_id"] = mac_pool_id
        __props__["revision"] = revision
        __props__["switching_profile_ids"] = switching_profile_ids
        __props__["tags"] = tags
        __props__["transport_zone_id"] = transport_zone_id
        __props__["vlan"] = vlan
        return VlanLogicalSwitch(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
